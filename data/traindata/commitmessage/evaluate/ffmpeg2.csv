content,label
" http: cosmetics: reformat reconnect check for better readability The condition was a bit too long, and most editors will break the line&&&&and turn it into an unreadable mess. Move out some of the conditions.&&&&&&&&This should not change the behavior.&&&& ",0
 avcodec/nvenc: add some more error case checks Signed-off-by: Timo Rothenpieler <timo@rothenpieler.org>&&&& ,0
 hevc: Add hevc_get_pixel_4/8/12/16/24/32/48/64 Checkasm timings:&&&&block size bitdepth  C       NEON&&&&4           8 bit:    146.7   48.7&&&&           10 bit:    146.7   52.7&&&&8           8 bit:    430.3   84.4&&&&           10 bit:    430.4  119.5&&&&12          8 bit:    812.8  141.0&&&&           10 bit:    812.8  195.0&&&&16          8 bit:   1499.1  268.0&&&&           10 bit:   1498.9  368.4&&&&24          8 bit:   4394.2  574.8&&&&           10 bit:   3696.3  804.8&&&&32          8 bit:   5108.6  568.9&&&&           10 bit:   4249.6  918.8&&&&48          8 bit:  16819.6 2304.9&&&&           10 bit:  13882.0 3178.5&&&&64          8 bit:  13490.8 1799.5&&&&           10 bit:  11018.5 2519.4&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,0
" x86inc: Enable AVX emulation for floating-point pseudo-instructions There are 32 pseudo-instructions for each floating-point comparison&&&&instruction, but only 8 of them are actually valid in legacy-encoded mode.&&&&The remaining 24 requires the use of VEX-encoded (v-prefixed) instructions&&&&and can therefore be disregarded for this purpose.&&&& ",0
" avformat/hlsenc: Check that data is set If codecpar->extradata is not set (for example, when the stream goes&&&&through the 'tee' muxer), then a segfault occurs.&&&&This patch ensures the data variable is not null before attempting&&&&to access it&&&&Before the var_stream_map option was available - I was using the tee&&&&muxer to create each resolution as an individual stream.&&&&When running this configuration after the most recent hlsenc change&&&&I hit a segfault&&&&The most simple command which recreates the segfault is:&&&&ffmpeg -i in.ts -map 0:a -map 0:v -c:a aac -c:v h264 -f tee [select=\'a,v\':f=hls]tv_hls_hd.m3u8&&&&&&&&Signed-off-by: Brendan McGrath <redmcg@redmandi.dyndns.org>&&&& ",0
 libavcodec/h264_sei: Don't log random user data. This prevents terminal junk.  ,0
" ffmpeg: use explicitly requested hwaccel only With there being two hwaccels that use the CUDA pix_fmt now, just&&&&relying on the pix_fmt to identify the selected hwaccel is not enough&&&&anymore.&&&&&&&&So this checks if the user explicitly selected a hwaccel, and only&&&&accepts that one.&&&& ",0
" avconv.c: fix calculation of input file duration in seek_to_start() Fixes looping files without audio or when using stream_copy, where&&&&ist->nb_samples is not set since no decoding is done.&&&&&&&&Signed-off-by: Diego Biurrun <diego@biurrun.de>&&&& ",0
 avcodec/dca_core: always limit frame size to data size Silences pointless error message when decoding DTS-in-WAV stream with&&&&excessive frame size stored in header.&&&& ,0
" Don't use _tzcnt instrinics with clang for windows w/o BMI. Technically _tzcnt* intrinsics are only available when the BMI&&&&instruction set is present. However the instruction encoding&&&&degrades to ""rep bsf"" on older processors.&&&&&&&&Clang for Windows debatably restricts the _tzcnt* instrinics behind&&&&the __BMI__ architecture define, so check for its presence or&&&&exclude the usage of these intrinics when clang is present.&&&&&&&&See also:&&&&https://ffmpeg.org/pipermail/ffmpeg-devel/2015-November/183404.html&&&&https://bugs.llvm.org/show_bug.cgi?id=30506&&&&http://lists.llvm.org/pipermail/cfe-dev/2016-October/051034.html&&&&&&&&Signed-off-by: Dale Curtis <dalecurtis@chromium.org>&&&&Reviewed-by: Matt Oliver <protogonoi@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 avcodec/mips: Unrolled loops and expanded functions in avc put mc 10 & 30 msa functions Signed-off-by: Kaustubh Raste <kaustubh.raste@imgtec.com>&&&&Reviewed-by: Manojkumar Bhosale <Manojkumar.Bhosale@imgtec.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" lavf/tls_gnutls: fix warnings from version check The GnuTLS version is checked through the macro GNUTLS_VERSION_NUMBER,&&&&but this wasn't introduced before 2.7.2. Building with older versions&&&&of GnuTLS (using icc) warns:&&&&&&&&src/libavformat/tls_gnutls.c(38): warning #193: zero used for undefined preprocessing identifier ""GNUTLS_VERSION_NUMBER""&&&&  #if HAVE_THREADS && GNUTLS_VERSION_NUMBER <= 0x020b00&&&&&&&&This adds a fallback to the older, deprecated LIBGNUTLS_VERSION_NUMBER&&&&macro.&&&&&&&&Signed-off-by: Moritz Barsnick <barsnick@gmx.net>&&&& ",0
 avcodec/mips: Improve avc mc copy msa functions Remove loops and unroll as block sizes are known.&&&&&&&&Signed-off-by: Kaustubh Raste <kaustubh.raste@imgtec.com>&&&&Reviewed-by: Manojkumar Bhosale <Manojkumar.Bhosale@imgtec.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" build: cleanup videotoolbox - there is no need for kCVImageBufferColorPrimaries_ITU_R_2020 checks,&&&&  it's done at runtime&&&&- VideoToolbox presence is now checked with check_apple_framework()&&&&- link to CoreServices is only done when videotoolbox is enabled&&&& ",0
" avformat/concatdec: add fallback for calculating file duration If a file does not have a known duration, this leads to the timestamps&&&&starting over for the next file, causing non-monotonic timestamps.&&&&To prevent this, track the duration during demuxing and use it to&&&&determine the current file duration before opening the next file.&&&&&&&&Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&& ",0
" d3d11va: Check WINAPI_FAMILY instead of HAVE_LOADLIBRARY If using the winstore compat library, a fallback LoadLibrary&&&&function does exist, that only calls LoadPackagedLibrary though&&&&(which doesn't work for dynamically loading d3d11 DLLs).&&&&&&&&Therefore explicitly check the targeted API family instead.&&&&&&&&Make this check a reusable HAVE_* component which other parts&&&&of the libraries can check when necessary as well.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&&&&&&Merged from Libav commit 4d330da006fe48178.&&&& ",0
 avformat/s337m: fix potentially undefined pointer arithmetic Use integer position instead of pointer for loop variable. Also only&&&&skip header fields after header has been fully validated.&&&& ,0
" vp9: add mxext versions of the single-block (w=4,npx=8) h/v loopfilters. Each takes about 0.5% of runtime in my profiles, and they didn't have&&&&any SIMD yet so far (we only had simd for npx=16 double-block versions).&&&& ",0
 checkasm: add AAC PS tests This includes various fixes and improvements from James Almer.&&&&&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&& ,0
" avformat/hlsenc: copy codec_tag when stream copy when use fmp4 segment type in hls and use codec copy,&&&&there have an error message.&&&&error message:&&&&   [mp4 @ 0x25df020] Tag avc1 incompatible with output codec id '28' ([33][0][0][0])&&&&   [hls @ 0x2615c80] Some of the provided format options in '(null)' are not recognized&&&&   Could not write header for output file #0 (incorrect codec parameters ?): Invalid argument&&&&this patch can fix it.&&&&&&&&Signed-off-by: Liu Qi <w_liuqi@kingsoft.com>&&&&Signed-off-by: Steven Liu <lq@onvideo.cn>&&&& ",0
 checkasm: add missing checks to float_dsp's butterflies_float test  ,0
 avcodec/x86/mpegenc: check IDCT permutation type is a valid value  ,0
 Convert all AVClass struct declarations to designated initializers.  ,0
 checkasm/aarch64: fix tests returning a float Avoids overriding the v0 register (which containins the result of the&&&&tested function) in checkasm_call_checked.&&&& ,0
" Interplay MVE: Implement frame format 0x06 This implements the 0x06 frame format for Interplay MVE movies. The&&&&format is relatively simple. The video data consists of two parts:&&&&&&&&16 bits per 8x8 block movement data&&&&a number of 8x8 blocks of pixel data&&&&&&&&For each 8x8 block of pixel data the movement data is consulted. There&&&&are 3 possible meanings of the movement data:&&&&* zero     : copy the 8x8 block from the pixel data&&&&* negative : copy the 8x8 block from the previous frame from an offset&&&&             determined by the actual value of the entry -0xC000.&&&&* positive : copy the 8x8 block from the current frame from an offset&&&&             determined by the actual value of the entry -0x4000&&&&&&&&Decoding happens in two passes, in the fist pass only new pixeldata is&&&&copied, during the second pass data is copied from the previous and&&&&current frames.&&&&&&&&The codec expects that the current frame being decoded to still has the&&&&data from 2 frames ago on it when decoding starts.&&&&&&&&Signed-off-by: Hein-Pieter van Braam <hp@tmm.cx>&&&& ",0
" dxva: preparations for new hwaccel API The actual hwaccel code will need to access an internal context instead&&&&of avctx->hwaccel_context, so add a new DXVA_CONTEXT() macro, that will&&&&dispatch between the ""old"" external and the new internal context.&&&&&&&&Also, the new API requires a new D3D11 pixfmt, so all places which check&&&&for the pixfmt need to be adjusted. Introduce a ff_dxva2_is_d3d11()&&&&function, which does the check.&&&&&&&&Signed-off-by: Diego Biurrun <diego@biurrun.de>&&&& ",0
 avcodec/jpeg2000dec: Check tile offsets more completely Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" img2dec: add support for piped SVG demuxing Only checks the extension and MIME type, since determining whether&&&&a file is SVG is difficult since they're just XML files.&&&&&&&&Signed-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>&&&& ",0
 flv: Validate the packet size Size can be negative at that point.&&&&&&&&Bug-Id: 1041&&&&CC: libav-stable@libav.org&&&& ,0
" fate/exr : add test for negative float value the tested sample contain negative value in the red channel&&&&need to be clip to zero, and not set to MAX_RED&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 fate/checkasm: use LOCAL_ALINGED_32 on hevc_add_res tests  ,0
 checkasm: add fixed_dsp tests Tested-by: Michael Niedermayer <michael@niedermayer.cc>&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&& ,0
 golomb: Simplify get_ur_golomb_jpegls The loop always consumes the bit read and the new bitstream reader&&&&can read 0 bits just fine.&&&& ,0
 rtsp: Move the pollfd setup out of the for loop  ,0
" lavc: Add hwaccel_flags field to AVCodecContext This ""reuses"" the flags introduced for the av_vdpau_bind_context() API&&&&function, and makes them available to all hwaccels. This does not affect&&&&the current vdpau API, as av_vdpau_bind_context() should obviously&&&&override the AVCodecContext.hwaccel_flags flags for the sake of&&&&compatibility.&&&&&&&&Cherry-picked from Libav commit 16a163b5.&&&&&&&&Reviewed-by: Mark Thompson <sw@jkqxz.net>&&&& ",0
" avcodec: consider an error during decoder draining as EOF There is no reason that draining couldn't return an error or two. But&&&&some decoders don't handle this very well, and might always return an&&&&error. This can lead to API users getting into an infinite loop and&&&&burning CPU, because no progress is made and EOF is never returned.&&&&&&&&In fact, ffmpeg.c contains a hack against such a case. It is made&&&&unnecessary with this commit, and removed with the next one. (This&&&&particular error case seems to have been fixed since the hack was&&&&added, though.)&&&&&&&&This might lose frames if decoding returns errors during draining.&&&& ",0
 swscale/swscale: Fix dereference of stride array before null check Fixes: CID1396263&&&&Fixes: CID1396271&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
 build: Add name parameter to check_lib() helper function This allows enabling or disabling the library-related variables from&&&&within the function instead of doing it manually outside of it.&&&& ,0
 mov: Fix identity matrix boolean logic This prevented the code from correctly exporting the rotation matrix&&&&which caused a few samples to be displayed wrong.&&&&Introduced in ecd2ec69ce10e13f6ede353d2def7c.&&&&&&&&Signed-off-by: Vittorio Giovara <vittorio.giovara@gmail.com>&&&& ,0
" avformat/ac3dec: Fix to prevent runaway ac3 detection by looking at the actual frame rather than the first detected frame. When detecting a swapped AC3 marker the data of the frame is swapped. However, in subsequent frames the data swapped is taken from the first frame rather than the current frame.&&&&&&&&Signed-off-by: Marijn Meijles <marijn@bitpit.net>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 avcodec/movtextdec: Add error message for tsmb_size check Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" tests/ffserver.regression.ref: Update ffserver checksums They have changed due to 122190392b297b7cd9783641d880df887fd80d07&&&&&&&&Reviewed-by: ""Reynaldo H. Verdejo Pinochet"" <reynaldo@osg.samsung.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 checkasm: Read the unsigned value as it should Reading a value larger than int using atoi() may give the wrong result.&&&& ,0
" af_hdcd: check return value of av_frame_copy_props() Anton Khirnov:&&&&""[av_frame_copy_props()] potentially contains memory allocation,&&&&so the return value needs to be checked.""&&&&&&&&Signed-off-by: Burt P <pburt0@gmail.com>&&&& ",0
 tiffenc: Check av_pix_fmt_desc_get() return value  ,0
 avconv: buffer the packets written while the muxer is not initialized  ,0
" diracdec: fix maximum quantization index checks Found by Coverity, fixes CID1363961 and CID1363962&&&&&&&&Signed-off-by: Rostislav Pehlivanov <atomnuker@gmail.com>&&&& ",0
 vf_scale_vaapi: Crop input surface to active region If the input has been decoded from a stream which uses edge cropping&&&&then the whole surface need not be valid.  This defines an input&&&&region for the scaler so we only use the active area of the frame.&&&& ,0
 lavc/get_bits: add a logging context to check_marker() Based on d338abb664febbc2c7266af7818aab1f12dbc161&&&& ,0
 ffmpeg_dxva2: add a profile check for hevc  ,0
" fate/source-check.sh: Use ""git show"" instead of git --version to test for git This fixes fate with non git source trees&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 avformat/dsfdec: check if number of channels is <= 0 Fixes FPE bellow.&&&&&&&&Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,0
 avfilter/vf_zoompan: Initialize ret Silences: CID1351394&&&&&&&&Reviewed-by: Paul B Mahol <onemda@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" all: move ff_exp10, ff_exp10f, ff_fast_powf to lavu/ffmath.h The idea is to use ffmath.h for internal implementations of math functions.&&&&Currently, it is used for variants of libm functions, but is by no means&&&&limited to such things.&&&&&&&&Note that this is not exported; use lavu/mathematics for such purposes.&&&&&&&&Reviewed-by: Ronald S. Bultje <rsbultje@gmail.com>&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanag@gmail.com>&&&& ",0
 checkasm: add fmtconvert tests  ,0
 avcodec/mpegvideo_enc: Clip bits_per_raw_sample within valid range Fixes out of array read&&&&Fixes: test_case-mdc.264 (b47be15a120979f5a1a945c938cbef33)&&&&&&&&Found-by: Tyson Smith <twsmith@mozilla.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
 avfilter/af_stereotools: check s->length size Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,0
" avcodec/aacenc: Fix NAN check All MDCT outputs must be checked in case of 128point MDCTs&&&&Fixes: out of array read&&&&Fixes: 04442da73d935b776d2236282588d4f9/signal_sigsegv_2625a69_351_52ca6226eb83547a2d26e322ce84ed84.mov&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
" g723_1: Handle values at the ends of the table in lsp2lpc() Fixes out of array reads.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&Signed-off-by: Vittorio Giovara <vittorio.giovara@gmail.com>&&&& ",0
" lavf: allow custom IO for all files Some (de)muxers open additional files beyond the main IO context.&&&&Currently, they call avio_open() directly, which prevents the caller&&&&from using custom IO for such streams.&&&&&&&&This commit adds callbacks to AVFormatContext that default to&&&&avio_open2()/avio_close(), but can be overridden by the caller. All&&&&muxers and demuxers using AVIO are switched to using those callbacks&&&&instead of calling avio_open()/avio_close() directly.&&&&&&&&(de)muxers that use the URLProtocol layer directly instead of AVIO&&&&remain unconverted for now. This should be fixed in later commits.&&&& ",0
 avcodec/aacsbr: Replace a noise_facs_q check by an av_assert0 The replaced check should have become redundant&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" avcodec/hevc: Check entry_point_offsets Fixes out of array read&&&&Fixes: 007c4a36608ebdf27ee260ad60a81184/asan_heap-oob_32076b4_2243_116b1cb29d91cc4974d6680e3d10bd91.bit&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
" avcodec/mpegaudio_tablegen: more dynamic table creation speedups This further speeds up runtime initialization, with identical generated tables.&&&&&&&&Sample benchmark (x86-64, Haswell, GNU/Linux):&&&&&&&&old:&&&&34441423 decicycles in mpegaudio_tableinit,    8192 runs,      0 skips&&&&&&&&new:&&&&10776291 decicycles in mpegaudio_tableinit,    8192 runs,      0 skips&&&&&&&&Most low hanging fruit is taken care of here. For some idea, note that&&&&83,064 array elements totalling 233,722 bytes need to be initialized.&&&&Thus, with this patch, we average ~ 12.9 cycles per element or ~ 4.6&&&&cycles per byte.&&&&&&&&Reviewed-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanagadde@gmail.com>&&&& ",0
" aviflter/vf_waveform: speed up non-color filters Remove loops, output is also more interesting.&&&&&&&&Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ",0
 lavfi/vf_select: remove looping on request_frame().  ,0
 avfilter/showcqt: remove yuv offset this makes draw_bar faster&&&&slightly different result with old version&&&&&&&&check result (with ~3 minutes audio file):&&&&old:&&&&    real    0m49.611s&&&&    user    0m49.260s&&&&    sys     0m0.073s&&&&new:&&&&    real    0m47.606s&&&&    user    0m47.378s&&&&    sys     0m0.068s&&&&PSNR between old and new:&&&&yuv444p PSNR&&&&    y:109.519298 u:107.506485 v:104.746878&&&&    average:106.816074 min:99.167305 max:inf&&&&yuv422p PSNR&&&&    y:109.519298 u:108.025801 v:104.489734&&&&    average:107.279817 min:98.007467 max:inf&&&&yuv420p PSNR&&&&    y:109.519298 u:108.363875 v:105.290200&&&&    average:108.261511 min:97.461812 max:inf&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
 lavfi/vf_fps: remove looping on request_frame().  ,0
" aacenc_tns: rework TNS descision logic Changes:&&&& - strongly prefer dual filters to a single filter&&&& - less strict about using 2 filters w.r.t. energy&&&& - scrap the usage of threshold and spread, useless&&&& - use odd-shaped windows to set the filter direction&&&& - use 4 bits instead of 3 bits for short windows&&&& - simplify and reduce the main loop to a single level&&&& - add stricter regulations for short windows&&&&&&&&All of this now makes the TNS implementation operate&&&&as good as it can and it definitely shows. The frequency&&&&thresholds are now even better defined by looking at&&&&the spectrals and the overall sound has been improved at&&&&the price of just a few bits that are well worth it.&&&& ",0
" dnxhddec: initialize with mb-aligned dimensions The coded size is a multiple of the macroblock size, which is 16.&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 lavc: Simplify checking quant bias option  ,0
 checkasm/Makefile: add missing testclean target Reviewed-by: Henrik Gramner <henrik@gramner.com>&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&& ,0
" avcodec/x86/mpegaudiodsp: silence -Wunused-variable on --disable-mmx This silences -Wunused-variable when compiled with --disable-mmx, e.g&&&&http://fate.ffmpeg.org/log.cgi?time=20150919094617&log=compile&slot=x86_64-archlinux-gcc-disable-mmx.&&&&The alternative of header guards will make it far too ugly.&&&&&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanagadde@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
" checkasm: add VP9 loopfilter tests. The randomize_buffer() implementation assures that ""most of the time"",&&&&we'll do a good mix of wide16/wide8/hev/regular/no filters for complete&&&&code coverage. However, this is not mathematically assured because that&&&&would make the code either much more complex, or much less random.&&&& ",0
" avcodec/x86/hpeldsp_rnd_template: silence -Wunused-function on --disable-mmx This silences some of the -Wunused-function warnings when compiled with --disable-mmx, e.g&&&&http://fate.ffmpeg.org/log.cgi?time=20150919094617&log=compile&slot=x86_64-archlinux-gcc-disable-mmx.&&&&Header guards are too brittle and ugly for this case.&&&&&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanagadde@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 checkasm: add flacdsp decorrelate tests Reviewed-by: Henrik Gramner <henrik@gramner.com>&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&& ,0
 ADPCM: Bump THP channel limit to 14 Reviewed-by: Paul B Mahol <onemda@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" avcodec/jpeg2000dec: Assert that step_x/y are valid Fixes CID1322304, CID1322305&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 avformat/hlsenc: Initialize vtt_oc to help static analyzers This is also more robust in case it ever is used&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" avcodec/gsmdec_template: avoid undefined negative left shifts Fixes: unknown_unknown_338_824_cov_1045285351_sample-gsm-8000.mov&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 lavf/mpegenc: provide better feedback in case of invalid media type  ,0
 api-seek-test: first version Works only with video stream.&&&&First pass without seeking -- counts crcs of a frames and store it in an array.&&&&After that it seeks a lot in different places and checks if crcs of these frames and crcs of frames in array are the same.&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
" avcodec/x86/hpeldsp_rnd_template: silence -Wunused-function on --disable-mmx This silences some of the -Wunused-function warnings when compiled with --disable-mmx, e.g&&&&http://fate.ffmpeg.org/log.cgi?time=20150919094617&log=compile&slot=x86_64-archlinux-gcc-disable-mmx.&&&&Header guards are too brittle and ugly for this case.&&&&&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanagadde@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",0
 checkasm: Explicitly declare function prototypes Now we no longer have to rely on function pointers intentionally&&&&declared without specified argument types.&&&&&&&&This makes it easier to support functions with floating point parameters&&&&or return values as well as functions returning 64-bit values on 32-bit&&&&architectures. It also avoids having to explicitly cast strides to&&&&ptrdiff_t for example.&&&&&&&&Signed-off-by: Anton Khirnov <anton@khirnov.net>&&&& ,0
 configure: check for erf() and copysign() They are not available on some compilers.&&&&&&&&Reviewed-by: Michael Niedermayer <michaelni@gmx.at>&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&& ,0
 hls: Save and forward avio options Make possible to send the custom headers and override the user agent.&&&&&&&&Reported-by: BenWonder&&&& ,0
" libx265: Bump version requirement Build 13 has a crucial fix which makes x265_encode_headers work&&&&as its always been documented.&&&&&&&&Previous to this, the check was incorrect.&&&&&&&&Also allows for use of the repeat headers flag.&&&&&&&&Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&& ",0
 lavf/file: check for dirent.h support Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,0
 avutil/mem_internal: add missing header includes Fixes make checkheaders&&&&&&&&Reviewed-by: Michael Niedermayer <michaelni@gmx.at>&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&& ,0
 hevc: check slice address length It is used as get_bits argument and reading 0 bits doesn't make sense.&&&&&&&&Signed-off-by: Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>&&&&Signed-off-by: Anton Khirnov <anton@khirnov.net>&&&& ,0
 avcodec/utils: Check values in apply_param_change() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" bytestream2: set the reader to the end when reading more than available This prevents possible infinite loops with the calling code along the&&&&lines of while (bytestream2_get_bytes_left()) { ... }, where the reader&&&&does not advance.&&&&&&&&CC: libav-stable@libav.org&&&& ",0
 mpjpeg: Check stream allocation Bug-Id: CID 1308152&&&& ,0
 avformat/asfdec: Print packet_obj_size in case it is invalid Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/texturedsp: Add protective () to RGBA() macro Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 x86: check for AV_CPU_FLAG_AVXSLOW where useful Signed-off-by: James Almer <jamrial@gmail.com>&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ,0
 x86: Add helper macros to check for slow cpuflags Signed-off-by: James Almer <jamrial@gmail.com>&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ,0
 avformat/h264dec: Fix detection of invalid h264 with 0x100 startcodes Fies Ticket4325&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/jpeg2000dec: Check for mismatching per expected termination not just at the end&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/svq1dec: Remove duplicate buf_size check Fixes CID1297573&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/cavsdec: Check frame_rate_code Fixes CID1239111 part1&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" avfilter/vf_hqdn3d: Initialize the whole LUT With bps > 8 more than 255..255 are used&&&&The initialized table content is left unchanged,&&&&But it could also be adjusted for the slight difference of&&&&the maximum&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 avcodec/hevc: Check offset_len Fixes CID1239099 part 1&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/g2meet: Check init_get_bits8() return value Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" nutdec: fix infinite resync loops nut->last_syncpoint_pos doesn't necessarily change between resync&&&&attempts, so find_any_startcode can return the same startcode again.&&&&&&&&Thus remember where the last resync happened and don't try to resync&&&&before that.&&&&&&&&This can't be done locally in nut_read_packet, because this wouldn't&&&&prevent infinite resync loops, where after the resync a packet is&&&&returned and while reading a following packet the resync happens again.&&&&&&&&Reviewed-by: Michael Niedermayer <michaelni@gmx.at>&&&&Signed-off-by: Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>&&&& ",0
 aacsbr: break infinite loop in sbr_hf_calc_npatches Signed-off-by: Andreas Cadhalpun <Andreas.Cadhalpun@googlemail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" vp9: invert order of two conditions. This makes it equal to row-based loopfilter code, and also makes the&&&&chroma/luma code identical.&&&& ",0
 avcodec/ffv1dec: Check chroma shift parameters Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" tls: Use custom IO to read from the URLContext This avoids hijacking the fd, by reading using the normal&&&&URLContext functions instead. This allowing reading data that has&&&&been buffered in the underlying URLContext.&&&&&&&&This avoids using the libraries own send functions that can&&&&cause SIGPIPE.&&&&&&&&The fd is still used for polling the lowlevel socket, for&&&&waiting for retries.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",0
 avcodec/j2kenc: Initialize variable to silence compiler warnings Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 configure: remove old libdcadec check It's obsolete after the addition of the pkg-config check.&&&&See http://comments.gmane.org/gmane.comp.video.ffmpeg.devel/191983 for the&&&&relevant discussion&&&&&&&&Reviewed-by: Hendrik Leppkes <h.leppkes@gmail.com>&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&& ,0
 swresample: Check channel layouts and channels against each other and print human readable error messages Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 matroskadec: Check memory allocations CC: libav-stable@libav.org&&&& ,0
 avformat/flvenc: check that the codec_tag fits in the available bits flags is later written with avio_w8 and if it doesn't fit in one byte it&&&&triggers an av_assert2.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" quickdraw: Switch to greedy parsing Quickdraw packs data as a series of codes that the application is supposed&&&&to handle, but it does not define any order in which they might appear.&&&&Since it's unfeasible to support *all* opcodes defined by the spec,&&&&only handle well-known blocks containing video data and ignore any unknown&&&&or unsupported ones.&&&&&&&&Move palette loading and rle decoding to separate functions to resue them&&&&in other blocks and drop format initialization in init since it can&&&&support more formats than pal8.&&&&&&&&Validate width and height.&&&& ",0
 libschroedinger: Check memory allocations  ,0
 movenc: Check memory allocations Signed-off-by: Vittorio Giovara <vittorio.giovara@gmail.com>&&&& ,0
 avfilter/vf_removelogo: Add () to protect the argument of apply_mask_fudge_factor() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 rmdec: Check memory allocations from ff_rm_alloc_rmstream() Bug-Id: CID 1257835&&&& ,0
" avcodec/h264: Clear last_pic_for_ec on seeks and reinits Fixes out of array read&&&&Fixes: asan_heap-oob_2ff30d2_3479_cov_3803648058_src13_hrc7_525_420_2.264&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 avutil/murmur3: Add () to protect the ROT() arguments Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avformat/tls: add () to protect macro arguments Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 dv: Drop a spurious check The buffer is always valid.&&&&&&&&Bug-Id: CID 700682&&&& ,0
 avcodec/xsubdec: Check av_mallocz() return codes Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" avcodec/mjpegdec: Check number of components for JPEG-LS Fixes out of array accesses&&&&Fixes: asan_heap-oob_1c1a4ea_1242_cov_2274415971_TESTcmyk.jpg&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 avformat/rmdec: Check the return value of av_get_packet() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 lavfi: check av_strdup() return value Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,0
 avfilter/vf_cropdetect: Unroll 3 & 4 bytes per sample loop 19484 -> 10266 decicycles&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 aea: Return proper error code on invalid header  ,0
 avutil/rational: Check that av_reduce() returns values within the requested max Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 indeo3: check ff_set_dimensions return value CC: libav-stable@libav.org&&&&Bug-Id: CID 1135740&&&& ,0
 avformat/mp3dec: avoid seeking to negative positions Fixes Ticket4038&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 vp8: initialize color space and range properties  ,0
 x11grab: Check for XFixes availability at runtime  ,0
 avcodec/srtdec: add some memory checks  ,0
" avcodec/dnxhddec: treat pix_fmt like width/height Fixes out of array accesses&&&&Fixes: asan_heap-oob_22c9a39_16_015.mxf&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 lavu/avstring: check for overlong encodings in av_utf8_decode() Fix reopened trac ticket #1163.&&&& ,0
" h261dec, ituh263dec: Avoid unnecessary -1 inside inner loop. 3646 -> 3597 decicycles in inner loop when decoding&&&&vsynth1-flv.&&&&&&&&Signed-off-by: Reimar D枚ffinger <Reimar.Doeffinger@gmx.de>&&&& ",0
 avcodec/fft-test: fix memory alloc checks Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 fft-test: Check memory allocations  ,0
" lavfi/apad: fix logic when whole_len or pad_len options are specified In particular, allow pad_len and whole_len to have value set to 0, which&&&&means that no padding will be added. Previously a value set to 0 meant&&&&that that the filter had to pad forever.&&&&&&&&The new semantics is clearer, also simplifies scripting since the option&&&&value might be automatically computed, so that no checks need to be done&&&&in case it is 0.&&&&&&&&The old semantics was never documented and the logic was broken (the&&&&filter was always adding samples indefinitely), so this should not break&&&&backward compatibility.&&&& ",0
 swscale/x86/hscale_fast_bilinear_simd: add inline asm guards Should fix MSVC build&&&&&&&&Found-by: jamrial&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 hevcdsp: remove an unneeded variable in the loop filter beta0 and beta1 will always be the same within a CU Signed-off-by: Micka毛l Raulet <mraulet@insa-rennes.fr>&&&&&&&&cherry picked from commit 4a23d824741a289c7d2d2f2871d1e2621b63fa1b&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 hevc: reorder loops iterate over memory in a more continuous order&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avformat/nutenc: cleaner version check Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avformat/movenc: check that the video resolution is supported Resolutions are stored as 16bit integers&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avformat/utils: Check end time in avpriv_new_chapter() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avfilter/vf_lut3d: check size in parse_dat() Fixes CID1212261&&&&Reviewed-by: Cl茅ment B艙sch <u@pkh.me>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 Initialize riff and wav size fields to -1 instead of 0. WMP doess not play the output files if the fields are&&&&set to 0 and not overwritten (using pipe output).&&&&&&&&Fixes ticket #3346.&&&& ,0
 avformat/mpegtsenc: check avformat_new_stream() return Fixes CID1206645&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 libx265: Only set the SAR if it is valid Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&& ,0
 oggparsevorbis: export replaygain tags from Vorbis comments Signed-off-by: Anton Khirnov <anton@khirnov.net>&&&& ,0
 vf_frei0r: prevent a segfault when filter parameters are not set  ,0
 avi: Improve non-interleaved detection Additional fixes by Nigel Touati-Evans <nigel.touatievans@gmail.com>.&&&&&&&&Check the index for streams with a time drift of 2s or a buffer drift&&&&of 64MB.&&&&&&&&Bug-Id: 666&&&&CC: libav-stable@libav.org&&&&Sample-Id: yet-another-broken-interleaved-avi.avi&&&&&&&&Signed-off-by: Vittorio Giovara <vittorio.giovara@gmail.com>&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&&Signed-off-by: Diego Biurrun <diego@biurrun.de>&&&& ,0
" avformat/hls: do not use sequence numbers for packet ordering As per spec 3.4.3 (""A client MUST NOT assume that segments with the same&&&&sequence number in different Media Playlists contain matching content."")&&&&we cannot use sequence numbers for packet ordering.&&&&&&&&This can be seen e.g. in the subtitle streams of&&&&bipbop_16x9_variant.m3u8 that have considerably longer segments and&&&&therefore different numbering.&&&&&&&&Since the code now exclusively syncs using timestamps that may wrap, add&&&&some additional checking for that.&&&&&&&&According to the HLS spec all the timestamps should be in 33-bit MPEG&&&&format and synced together.&&&&&&&&v2: cleaner wrap detection&&&&v3: further wrap detection improvements&&&&&&&&Signed-off-by: Anssi Hannula <anssi.hannula@iki.fi>&&&& ",0
 Set Tiertex Limited SEQ palette opaque.  ,0
" avcodec/msrle: use av_image_get_linesize() to calculate the linesize Fixes out of array access&&&&Fixes: 14a74a0a2dc67ede543f0e35d834fbbe-asan_heap-oob_49572c_556_cov_215466444_44_001_engine_room.mov&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 http: Always allow no-op seek This also allows checking stream position as per ffurl_seek() doxy.&&&&&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ,0
 avformat/mxfdec: fix typo in error check of mxf_edit_unit_absolute_offset() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 pcmdec: replace a reachable assert with an error check Libavformat should not make any assumptions about values returned from&&&&other libraries. This assert is easily reachable by using a non-raw&&&&codec id.&&&& ,0
 avformat/id3v2: Check avio_read() return value in read_chapter() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avformat/utils: Check avcodec_open2() return code in av_find_stream_info() Fixes CID1135750&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 lavc: remove a pointless check in decode_audio4() av_frame_unref() works fine on unallocated frames.&&&& ,0
" hevc: Bound check slice_qp The T-REC-H.265-2013044 page 79 states they have to be into the range&&&&[-s->sps->qp_bd_offset, 51].&&&&&&&&Fixes: asan_stack-oob_eae8e3_9522_WP_MAIN10_B_Toshiba_3.bit&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 lavc: use buf[0] instead of data[0] as the indicator of an allocated frame data[0] may be NULL for valid frames with hwaccel pixel formats.&&&& ,0
" Revert ""Merge remote-tracking branch 'qatar/master'"" (43dec5ef9a360c9ffac3278f464832bd99af0cb0) Fixes out of array accesses&&&&Fixes asan_static-oob_eb9812_5961_iv41.avi&&&&This reverts the merge of c9ef6b09326a24010bf86d6b0d19cfa42df4d546&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&& ",0
 http: Expose the content location via an AVOption Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,0
 avfilter/af_aresample: Calculate output buffer size more precisely. Fixes accumulation of data in case of significant silence injections&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/h261dec: make while get_bits loop more robust by checking bits left Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/flvdec: make while get_bits loop more robust by checking bits left Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 oggparsevorbis: check allocations Signed-off-by: Anton Khirnov <anton@khirnov.net>&&&& ,0
 avcodec/flacdec: also do crc check when er compliant is set Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" alac: Do bounds checking of lpc_order read from the bitstream In lpc_prediction(), we write up to array element 'lpc_order' in&&&&an array allocated to hold 'max_samples_per_frame' elements.&&&&&&&&Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",0
 avcodec/flacdec: make while get_bits loop more robust by checking bits left Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" avcodec/hnm4video: fix write offset checks in decode_interframe_v4() Fixes: asan_heap-oob_e76a51_1244_CASSE.HNM&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 avformat/wavdec: check smv_frames_per_jpeg Values outside would not be possible due to limitations of jpeg itself&&&&&&&&Fixes very long running loop&&&&Fixes Ticket2977&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avformat/smacker: use av_malloc_array() and check for allocation error Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,0
" matroskaenc: Write muxingapp and writingapp elements when using bitexact flag Files won't validate with mkvalidtor if these two elements are missing.&&&&Use a const ""Lavf"" string that wont change with library version bumps.&&&&&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 smacker: Check malloc return values Also try to free local allocations on errors.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,0
 mov: Prevent segfaults on mov_write_hdlr_tag Do not segfault when writing tracks such as tmcd by writing them down&&&&as generic DataHandlers if not known.&&&& ,0
 avfilter/graphparser: remove 256 char limit from create_filter() Fixes Ticket2803&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" vc1: check the source buffer in vc1_mc functions Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",0
" doc: Explain that the default RTMP user agent is different when publishing The fact that a different user agent is used is cruicial for getting&&&&publishing authentication working. (When using librtmp, this other&&&&user agent has to be specified manually, but that's not needed&&&&with the libavformat internal RTMP support.)&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",0
 configure: Check for GCC diagnostic pragma support inside of functions The actual usage of the pragma is within functions and older versions&&&&of gcc only support the pragma outside of functions.&&&& ,0
 h264: move 444 border xchg under if (deblock_top) Fixes out of array access&&&&Fixes Ticket2668&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" indeo5: reject negative motion vectors Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",0
" wmapro: check the min_samples_per_subframe Must be at least WMAPRO_BLOCK_MIN_SIZE.&&&&&&&&Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",0
" flac: don't check the number of channels before setting the channel layout. This is unnecessary, as ff_flac_set_channel_layout can handle any number of channels.&&&&&&&&Signed-off-by: Anton Khirnov <anton@khirnov.net>&&&& ",0
 lavfi/noise: fix out of array access Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,0
" apedec: do not buffer decoded samples over AVPackets Only consume an AVPacket when all the samples have been read.&&&&&&&&When the rate of samples output is limited (by the default value&&&&of max_samples), consuming the first packet immediately will cause&&&&timing problems:&&&&&&&&- The first packet with PTS 0 will output 4608 samples and be&&&&consumed entirely&&&&- The second packet with PTS 64 will output the remaining samples&&&&(typically, a lot, that's why max_samples exist) until the decoded&&&&samples of the first packet have been exhausted, at which point the&&&&samples of the second packet will be decoded and output when&&&&av_decode_frame is called with the next packet).&&&&&&&&That means there's a PTS jump since the first packet is 'decoded'&&&&immediately, which can be seen with avplay or mplayer: the timing&&&&jumps immediately to 6.2s (which is the size of a packet).&&&&&&&&Sample: http://streams.videolan.org/issues/6348/Goldwave-MAClib.ape&&&&Signed-off-by: Justin Ruggles <justin.ruggles@gmail.com>&&&& ",0
" jpeg2000dec: dont set ncomponents to an invalid value Fixes out of array accesses&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
" j2k/jpeg2000: merge float DWT and related code the float conditions are largely changed to check the DWT&&&&instead of the bitexact flag, which previously was wrong&&&&(DWT53 is always int)&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 lavfi/trim: remove request frame hack Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,0
 af_channelmap: ensure the output channel layout is valid.  ,0
" mmvideo/mm_decode_inter: check horizontal coordinate too Fixes out of array accesses&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 lavu/opencl: add check version and platform Reviewed-by: Hanspeter Niederstrasser <niederstrasser@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 avcodec/bitstream: check codes in ff_init_vlc_sparse() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" avformat: Dont stop probing before the whole id3 tag is read When a file appears to start with a id3 tag and appears to&&&&also be something else, then try to increase the probe buffer&&&&size if its below its limit.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 lavfi/buffersink: factor checks for lists sizes.  ,0
" indeo3: check motion vectors. Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC:libav-stable@libav.org&&&& ",0
 lavfi/overlay: improve feedback in case of invalid expression Based on vf_hue.c code.&&&& ,0
" avformat/rt*p: Joining a SSM multicast group using an SDP (Issue #2171) Passes Source-Specific Multicast parameters read from an sdp file through to the UDP socket code,&&&&allowing source-specific multicast streams to be correctly received. As an integral part of this&&&&change, additional checking (currently only enabled in the case of SSM streams, but probably&&&&useful in similar scenarios) has been added to the RTP protocol handler to distinguish UDP packets&&&&arriving from multiple sources to the same port and process only the expected packets&&&&(those transmitted from the expected UDP source address). This resolves an issue identified&&&&when multiple instances of FFmpeg subscribe to different Source-Specific Multicast streams&&&&but with each sharing the same destination port.&&&&&&&&Signed-off-by: Edward Torbett <ed.torbett@simulation-systems.co.uk>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 avutil/opencl: add check for the program number to create kernel Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
" aacps: correct opdipd code to match spec This fixes out of array reads&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
" lavfi: always check return value of ff_get_{audio,video}_buffer() Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ",0
" h264: Integrate clear_blocks calls with IDCT The non-intra-pcm branch in hl_decode_mb (simple, 8bpp) goes from 700&&&&to 672 cycles, and the complete loop of decode_mb_cabac and hl_decode_mb&&&&(in the decode_slice loop) goes from 1759 to 1733 cycles on the clip&&&&tested (cathedral), i.e. almost 30 cycles per mb faster.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",0
 ffplay: use NAN to signal invalid external clock Signed-off-by: Marton Balint <cus@passwd.hu>&&&& ,0
" atomic: Add include guards to the implementation headers This makes them pass standalone compilation tests. Previously,&&&&they included atomic.h which included themselves again, leading to&&&&double definitions.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",0
" lavfi/unsharp: directly access in-loop variables in apply_unsharp() Increase performance, to match mp=unsharp.&&&& ",0
 swscale: check flags instead of nb_components to find if pixel format have alpha Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,0
" gifdec: check that w,h is not zero Fixes out of array access&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
" roqvideodec: check dimensions validity Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&(cherry picked from commit 3ae610451170cd5a28b33950006ff0bd23036845)&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&(cherry picked from commit fee26d352a52eb9f7fcd8d9167fb4a5ba015b612)&&&&&&&&CC: libav-stable@libav.org&&&&&&&&Signed-off-by: Reinhard Tartler <siretart@tauware.de>&&&& ",0
" mpeg4videoenc: check w,h to be within the supported range. Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",0
 mpeg12: print invalid cbp value Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,0
 msnwc_tcp: Correctly report failure And prevent a memory leak&&&&&&&&CC: libav-stable@libav.org&&&&&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ,1
" avutil/attributes: add av_warn_unused_result GCC 3.4 introduced an attribute warn_unused_result to warn when a programmer&&&&discards the return value. Applying this judiciously across the codebase can help&&&&in fixing a lot of problems. At a high level, functions which return error codes&&&&should always be checked. More concretely, consider the functions ff_add_format&&&&and the like in avfilter/formats.h. A quick examination shows that a large portion&&&&of libavfilter fails to handle the associated errors, usually AVERROR(ENOMEM).&&&&The above example was where I observed the utility of this, but it should be&&&&useful in many places across the code base.&&&&&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanagadde@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
" libavformat/flvdec.c: free always the packet after a resync. In case of resync, always free the packet, but retry only if the resync&&&&did not get to the end of the file. Otherwise, there is a memory leak when the&&&&last packet in the file is corrupted.&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
" avcodec/dvdsubdec: reject some broken packets If cmd_pos is broken, this would just keep accumulating packets in the&&&&reassembly buffer, until it fails and flushes the buffer on overflow.&&&&Since packets are usually rather small, this will take a lot of subtitle&&&&packets. The perceived effect is that subtitles are not displayed&&&&anymore after the faulty packet was passed to the decoder.&&&&&&&&I'm not terribly sure about this, but on the other hand this code is&&&&active only when fragmented packets need to be reassembled.&&&&&&&&Fixes sample file in trac issue #4872.&&&& ",1
" avcodec/mpegvideoenc: fix undefined negative left shift This should fix the first undefined behavior reported in:&&&&https://trac.ffmpeg.org/ticket/4727.&&&&&&&&I can't reproduce the runtime behavior reported in the ticket, hence I&&&&can't confirm that this actually fixes the exact issue reported in the&&&&ticket.&&&&&&&&Regardless, I can confirm that this is a genuine issue, and that&&&&negative shifts can (and do) occur, fixed by this.&&&&&&&&Tested with FATE.&&&&&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanagadde@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
" avformat/tcp: TCP Protocol: fix descriptor leak on listen and interrupt If we try to listen on TCP port and ff_listen() fails on&&&&interrupt callback socket (bind) descriptor overwrites and&&&&does not closed at all.&&&&&&&&As a result, we can't rebind to the same port.&&&&&&&&Reviewed-by: Stephan Holljes <klaxa1337@googlemail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
" vp9: fix overflow in 8x8 topleft 32x32 idct ssse3 version. Also disable the mmx/iwht optimization when the bitexact flag is set.&&&&With synthetically coded coefficients (i.e. these that lead to a&&&&residual well outside the [-255,255] range), our optimizations will&&&&overflow. It doesn't make sense to fix the overflows, since they can&&&&only occur on synthetic input, not on real fwht-generated input. Thus,&&&&add a bitexact flag that disables this optimization.&&&& ",1
 vp9: fix integer overflows in sse2 version of iadst4.  ,1
 avcodec/eatgq: Check init_get_bits8() for failure Fixes CID1322315&&&&&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ,1
" checkasm/x86: Correctly handle variadic functions The System V ABI on x86-64 specifies that the al register contains an upper&&&&bound of the number of arguments passed in vector registers when calling&&&&variadic functions, so we aren't allowed to clobber it.&&&&&&&&checkasm_fail_func() is a variadic function so also zero al before calling it.&&&& ",1
" avformat/webmdashenc: fix uninitialized variable Fixes -Wsometimes-uninitialized from&&&&http://fate.ffmpeg.org/report.cgi?time=20150820031140&slot=arm64-darwin-clang-apple-5.1&&&&&&&&Signed-off-by: Ganesh Ajjanagadde <gajjanagadde@gmail.com>&&&&Reviewed-by: ""Ronald S. Bultje"" <rsbultje@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
" qsvdec: fix a memleak of async_fifo init() is called whenever format changes, so current code would leak the&&&&fifo in this case.&&&& ",1
 avfilter/vf_reverse: check also pts_size when reallocating Fixes crash of x32.&&&&&&&&Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,1
" avcodec/vp8: Check buffer size in vp8_decode_frame_header() avoids null pointer dereference&&&&Fixes: signal_sigsegv_d5de40_964_vp80-00-comprehensive-010.ivf with memlimit of 1048576&&&&&&&&Found-by: Samuel Gro脽, Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
" avcodec/mpegvideo: Fix null pointer dereference of picture array Fixes: 0d0a2bace067d09c08f0fa5340496c23_signal_sigsegv_7ffff713351a_342_WobblyWindowsIntro.avi with memlimit of 67108864&&&&&&&&Found-by: Samuel Gro脽, Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
 avcodec/smvjpegdec: assert that the pixel format that has been set by our decoder is valid If we do check av_pix_fmt_desc_get() then we should fail and&&&&not continue with an invalid pix_fmt&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" avcodec/mpeg4videodec: Check P cbpy Fixes undefined behavior&&&&Fixes: signal_sigsegv_c3097a_991_xtrem_e2_m64q15_a32sxx.3gp&&&&&&&&Found-by: Samuel Gro脽, Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>&&&& ",1
" mpjpegdec: don't try to alloc an AVIOContext when probe is guaranteed to fail The first check is done without the AVIOContext, so alloc it only if said check succeeds&&&&&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&&Signed-off-by: Janne Grunau <janne-libav@jannau.net>&&&& ",1
 avcodec/put_bits: Assert that size in set_put_bits_buffer_size() does not cause integer overflows Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" swr: fix alignment issue caused by 8ch sse functions Fix crash when doing 8 ch conversion from apps compiled with MSVS&&&&Thanks to Ronald for giving this hint:&&&&https://ffmpeg.org/pipermail/ffmpeg-devel/2015-May/173049.html&&&&&&&&Reviewed-by: ""Ronald S. Bultje"" <rsbultje@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" vp9: remove one optimization branch in iadst16 which causes overflows. See sample vp90-2-14-resize-fp-tiles-16-8-4-2-1.webm from the vp9 test&&&&vector set which reproduces the issue. This probably costs a few cycles,&&&&but I don't think there's an easy way to workaround that.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avformat/img2dec: do not rewind custom io buffers Fixes double free with some applications&&&&&&&&Fixes vlc ticket14121&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avdevice/decklink_common: fix heap corruption run time error Signed-off-by: Jonathan Baecker <jonbae77@gmail.com>&&&&Reviewed-by: Ramiro Polla <ramiro.polla@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 libavformat/mxfdec: fix MXFPackage->comment_refs memory leak Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" fate-aac-aref-encode: increase FUZZ to 5, needed for ppc64be Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avformat/mp3dec: properly allocate dummy AVCodecContext Fixes (harmless) use of uninitialized variable&&&&&&&&Found-by: jamrial&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 lavfi/fade: Do not overread input buffer.  ,1
 avfilter/palettegen: fix leak in case of error  ,1
 mdec: check for out of bounds read Bug-Id: CID 1257501&&&&CC: libav-stable@libav.org&&&&&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ,1
" avcodec/h264: Only reinit quant tables if a new PPS is allowed Fixes null pointer dereference&&&&Fixes: signal_sigsegv_3042097_3007_cov_1741463594_non_monotone_timestamps1.mkv&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avcodec/libvpxenc: Check for av_malloc() failure Fixes CID1271045&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" rtpdec: Free depacketizers if the init function failed This is different from how it is handled in codecs/demuxers/muxers&&&&though (where the close function isn't called if the open function&&&&failed), but since the number of depacketizers that have an .init&&&&function is quite limited, this is easy to change.&&&&&&&&The main point is that if the init function failed, we shouldn't&&&&try to use that depacketizer at all - this makes sure that the&&&&parse function doesn't need to check for the things that were&&&&initialized in the init function.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",1
 avformat/asfdec: Use 64bit ret to avoid overflow Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 ape: Use the proper variable type Avoid an unsigned underflow.&&&&&&&&Bug-Id: 1041122&&&&CC: libav-stable@libav.org&&&& ,1
" avformat/thp: Check av_get_packet() for failure not only for partial output Fixes null pointer dereference&&&&Fixes: signal_sigsegv_db2c1f_3108_cov_163322880_pikmin2_opening1_partial.thp&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avcodec/dvbsubdec: Add some av_malloc() failure checks Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avfilter/vf_uspp: clear AVPacket to not leave uninitialized memory Fixes CID1260707&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" jvdec: check frame dimensions The frame size must be set by the caller and each dimension must be a&&&&multiple of 8.&&&&&&&&CC: libav-stable@libav.org&&&&Bug-ID: CVE-2014-8542&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&& ",1
" avcodec/dcadec: Check that the added xch channel isnt already there Fixes null pointer dereference&&&&Fixes: signal_sigsegv_369609d_623_cov_2008234281_ES_6.1_16bit.dts&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" vp9/x86: sse2 MC assembly. Also a slight change to the ssse3 code, which prevents a theoretical&&&&overflow in the sharp filter.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" avformat/yuv4mpegdec: fix ""warning: field_order may be used uninitialized in this function"" Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avformat/dashenc: make durations 64bit Fix potential integer overflow&&&&Fix CID1254944&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avformat/utils: check for malloc failure Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 lavc/smvjpegdec: fix mem leak in case of init failure Signed-off-by: Lukasz Marek <lukasz.m.luki2@gmail.com>&&&& ,1
 lavc/libxvid: fix mem leak in case of init failure Signed-off-by: Lukasz Marek <lukasz.m.luki2@gmail.com>&&&& ,1
 ffv1: fix out-of-bounds read CC: libav-stable@libav.org&&&&Bug-Id: CID 1047234&&&& ,1
" avcodec/lagarith: fix integer overflow Fixes: asan_heap-oob_1bf48fa_2513_lag-yuy2.avi&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" avcodec/g2meet: check tile dimensions to avoid integer overflow Fixes out of array access&&&&Fixes: asan_heap-oob_12a55d3_30_029.wmv&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" avcodec/dirac_arith: fix integer overflow Fixes: asan_heap-oob_1078676_9_008.drc&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" ffplay: Separate AVFrame from AVSubtitle This is more robust and should avoid false positives in coverity&&&&That is if the type is ever mixed up, after this patch that would&&&&just be a null pointer dereference instead of a random possibly&&&&out of array access&&&&&&&&Reviewed-by: Marton Balint <cus@passwd.hu>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avformat/vobsub: fix NULL dereference  ,1
 avcodec/vc1dec: fix null pointer dereference Fixes Ticket3860&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avcodec/tiff: Make pixel format checks tighter Fixes assertion failure with imgsrc001-lzma.tiff&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" hevc_ps: verify P/T/L information This makes the SPS parsing a little, but barely, safer.&&&&&&&&Reviewed-by: Micka毛l Raulet <mraulet@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 mpegts: Fix memory leaks and related crashes in mpegs_write_header()  ,1
" delay removial of FF_API_CODEC_ID, FF_API_OLD_AVOPTIONS and FF_API_OLD_ENCODE_VIDEO This prevents a build failure when bumping.&&&&the uses could easily be updated / removed, if people prefer.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 smoothstreamingenc: Fix a memory leak on errors Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,1
 Check if an mp3 header is using a reserved sample rate. Fixes an invalid read past the end of avpriv_mpa_freq_tab.&&&&Fixes divide-by-zero due to sample_rate being set to 0.&&&&&&&&Bug-Id: 705&&&&&&&&CC:libav-stable@libav.org&&&& ,1
 swscale/x86/input: prevent RGB32_TO_Y_FN from reading into the padding This avoids reading uninitialized bytes and confusing valgrind&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avcodec/alsdec: Clear MPEG4AudioConfig so that no use of uninitialized memory is possible Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avformat/matroskadec: fix off by 1 error in matroska_read_seek() Fixes out of array read&&&&&&&&Fixes: vp9-opus-crash.webm&&&&&&&&Found-by: Dale Curtis <dalecurtis@google.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" avcodec/cinepakenc: Zero AVPictures, silence ""may be used uninitialized"" warnings Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avcodec/eamad: silence uninitialized variable warnings Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" avfilter/aeval: silence ""may be used uninitialized"" warning Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avcodec/mpegvideo: fix null pointer dereference Fixes: 111342.ogm with ffplay&&&&Found-by: Dale Curtis <dalecurtis@google.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 Do not overwrite VDPAU structures in ff_MPV_frame_start(). Fixes crashes with VDR and MPlayer as reported by irc user crow.&&&& ,1
 avcodec/mpegaudiodec_template: make shift unsigned to avoid undefined behavior Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avformat/mp3enc: drop redundant and uninitialized variable Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" avcodec/apedec: tmpk==32 is not supported, prevent undefined behavior Fixes CID1206639&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 x86/synth_filter: add missing HAVE_YASM guard Should fix compilation failures with --disable-yasm on some compilers&&&&&&&&Signed-off-by: James Almer <jamrial@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avcodec/fic: fix slice checks fix integer overflows&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" avcodec/hevc: Simplify get_qPy_pred() Fixes use of uninitialized memory&&&&Fixes: 93728afd9aa074ba14a09bfd93a632fd-asan_static-oob_124a17d_1445_cov_1021181966_DBLK_D_VIXS_1.bit&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 truehd: add hand-scheduled ARM asm version of ff_mlp_rematrix_channel. Profiling results for overall audio decode and the rematrix_channels function&&&&in particular are as follows:&&&&&&&&              Before          After&&&&              Mean   StdDev   Mean   StdDev  Confidence  Change&&&&6:2 total     370.8  17.0     348.8  20.1    99.9%       +6.3%&&&&6:2 function  46.4   8.4      45.8   6.6     18.0%       +1.2%  (insignificant)&&&&8:2 total     343.2  19.0     339.1  15.4    54.7%       +1.2%  (insignificant)&&&&8:2 function  38.9   3.9      40.2   6.9     52.4%       -3.2%  (insignificant)&&&&6:6 total     658.4  15.7     604.6  20.8    100.0%      +8.9%&&&&6:6 function  109.0  8.7      59.5   5.4     100.0%      +83.3%&&&&8:8 total     896.2  24.5     766.4  17.6    100.0%      +16.9%&&&&8:8 function  223.4  12.8     93.8   5.0     100.0%      +138.3%&&&&&&&&The assembly version has also been tested with a fuzz tester to ensure that&&&&any combinations of inputs not exercised by my available test streams still&&&&generate mathematically identical results to the C version.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 avfilter: fix leaks on error in ff_filter_frame  ,1
 avcodec/mpeg4videodec: use av_fast_padded_malloc() for bitstream buffer Fixes use of uninitialized memory with vlc (sample from ticket3277)&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" avcodec/hevc: Fix modulo operations Fixes qp fields becoming out of range&&&&Fixes: asan_static-oob_e393a3_6998_WPP_A_ericsson_MAIN10_2.bit&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 sgidec: fix buffer size check in expand_rle_row() Right now it will spuriously fail if the linesize is exactly equal to&&&&the data width.&&&&&&&&CC:libav-stable@libav.org&&&& ,1
" avcodec/apedec: use av_fast_padded_malloc() Fixes use of uninitialized memory&&&&Fixes part of msan_uninit-mem_7fa0d8c8bd58_8417_sh3.ape&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" avformat/iss: check sscanf() return code Fixes use of uninitialized data&&&&Fixes: msan_uninit-mem_7f883205ce82_15_0001010100.iss&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 sdp: Check theora colorspace before producing the configuration string This avoids a memory leak (or having to worry about freeing the&&&&config string) if the colorspace isn't accepted.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,1
" avformat/nistspheredec: check sscanf() success before using the result Fixes use of uninitialized memory&&&&Fixes: msan_uninit-mem_7f935c3c6c1a_7413_nist_pcms8.nist&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" avcodec/iff: warn about truncated input to decode_byterun() and clear remaining output Fixes use of uninitialized memory&&&&Fixes: msan_uninit-mem_7fe205e395ed_8988_test.iff&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" avcodec/vc1dec: dont calculate unused values from uninitialized sprites Fixes use of uninitialized data&&&&Fixes part of msan_uninit-mem_7f51a8b0b3b0_1009_Arlington.wmv&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 avio: Check for memory allocation failure of private data Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&& ,1
 lavf/tee: fix leak of strdup/strtoked buffer. Fix CID 1108606.&&&& ,1
 avformat/mpegenc: improve field names in underflow error message Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" avfilter/vf_psnr: Prevent integer overflow. The 32-bit integer accumulator in MSE computation can overflow for 8-bit frame data.&&&&(e.g., for 1080p white frame compared to a black frame can give sum of 255*255*1080*1920 > 2^32).&&&&&&&&Signed-off-by: Neil Birkbeck <neil.birkbeck@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" wtv: Add more sanity checks for a length read from the file Also make sure the existing length check can't overflow.&&&&&&&&Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",1
 avutil/pixdesc: dont try to use av_read_image_line() with bayer formats It has undefined behavior ATM as its not supported.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 movenc: Check for allocation failures in mov_create_chapter_track Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,1
 lavf/tee: initialize ret in parse_bsfs() Fix spurious failures.&&&& ,1
 ogg: Fix potential infinite discard loop Seeking in certain broken files would cause ogg_read_timestamp&&&&to fail because ogg_packet would go into a state where all packets&&&&of stream 1 would be discarded until the end of the stream.&&&&&&&&Bug-Id: 553&&&&CC: libav-stable@libav.org&&&&&&&&Signed-off-by: Jan Gerber <j@v2v.cc>&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ,1
 ape: check avio_read() return value This sets pkt->size to absurd values on failure otherwise.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" mov: Seek back if overreading an individual atom Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Cc: libav-stable@libav.org&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",1
" jpeg2000: Check that we have enough components for MCT Avoid overread.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ",1
 Avoid a null pointer dereference on oom in the aac encoder. Fixes ticket #2732.&&&& ,1
" wtv: Mark attachment with a negative stream id A sid 0 would be mismatched to the attachment.&&&&&&&&Prevent NULL pointer dereference.&&&&&&&&Reported-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",1
" snow: Fix off by 1 error in reference picture management Fixes out of array accesses&&&&No release is affected by this bug&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 init_vlc_sparse: fix leak on error Fixes CID1005312&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 fate: dont try to filter partial frames with yadif. The partial frames leak a few uninitialized pixels through&&&&due to incomplete interlaced error concealment support.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" xxan: fix invalid memory access in xan_decode_frame_type0() The loop a few lines below the xan_unpack() call accesses up to&&&&dec_size * 2 bytes into y_buffer, so dec_size must be limited to&&&&buffer_size / 2.&&&&&&&&CC:libav-stable@libav.org&&&& ",1
" lavf: sanity check size in av_get/append_packet(). To avoid allocating ridiculous amounts of memory for corrupted files,&&&&read the input in chunks limited to filesize or an arbitrary large&&&&amount when that is not known (chosen to be 50M).&&&& ",1
" rtpdec: Initialize some variables to silence compiler warnings The warnings are false positives, older gcc versions (such as 4.5)&&&&think the variables can be used uninitialized while they in&&&&practice can't, while newer (4.6) gets it right.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",1
 exr: fix overflow check in lineoffset processing Also read data size for raw compressions too and&&&&make sure its value is sane.&&&&&&&&Remove code that fills missing blocks with zeroes.&&&&It is marginally useful and make implementation&&&&of actually useful features harder.&&&&&&&&Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,1
 cafenc: do not leak caf->pkt_sizes Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&& ,1
" Fix division by 0 due to audio frame size Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" mjpegdec: check for packed rgb mjpeg. Fixes null pointer dereference&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 huffyuvdec: check for and propagate failures from inside generate_joint_tables() Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 swr: limit phase_shift to a less insane value. This prevents potential crashes and out of memory issues if&&&&the user manually sets such insane values.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" truemotion2: clear the token array if its initialization fails. Fixes use of uninitialized and half initialized values, which&&&&can occur on several error pathes&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 lavc/movtextdec: keep the min size instead of max to fix overread. Fixes Ticket #2087.&&&& ,1
" doc: Mention memory allocation in the fuzz testing section It's obviously undesireable to blindly allocate memory based on&&&&a damaged 'size' value, for example.&&&&&&&&Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&& ",1
 ffplay: fix type of time_diff in waveform display Fixes time diff overflow visible as showing the same few waveforms in a loop at&&&&the end of file.&&&&&&&&Signed-off-by: Marton Balint <cus@passwd.hu>&&&& ,1
" lavu: test for broken binutils on ARM Some old gnu assemblers fail to assemble qdadd correctly&&&&Ideally we should check this at build time, but better to&&&&check at run time than mysteriously failing.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" yop: simplify/sanitize the decoding loop Do not overwrite linesize set by get_buffer().&&&&&&&&The last frame in the FATE test is not decoded anymore, since the file&&&&is cut and a part of it is missing.&&&& ",1
" h264: avoid calling idr() twice Fixes rare race condition leading to null pointer dereferences.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" doc: Mention zzuf in the fuzz testing section It's pretty much the best tool for the job, and it's what we&&&&all use now anyway.&&&&&&&&Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&& ",1
" vmnc: Check for integer overflow Fixes null pointer dereference and potential out of array accesses.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 af_aresample: check ff_get_audio_buffer() failure Fixes null pointer dereference&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 lavu/imgutils: add consistency checks to av_image_copy_plane() Add assertions and abort in case of invalid |dst_linesize| < bytewidth or&&&&|src_linesize| < bytewidth.&&&&&&&&Avoid to silently corrupt memory.&&&& ,1
" h264: fix integer overflow, assert failure Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" flashsv: reallocate block array independant of frame type. Fixes NULL pointer dereference&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 h264: set Picture.owner2 to the current thread This does not seem to have an effect currently. Fate-h264 passes with&&&&THREADS=1..16 and both threading types as before. It fixes however a&&&&segfault during error resilience with my adaptive-frame-mt patchset.&&&&A picture in use during error resilience gets realloced in another&&&&thread in the fuzzed sample sample_varPAR.avi_s226019.&&&& ,1
" xmv: Fix integer overflow Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" ffprobe: fix potential NULL pointer dereference Found by Coverity, should fix CID 733741.&&&& ",1
 twinvq: validate that channels is not <= 0 This could occur due to integer overflow when reading the channel count from&&&&the extradata.&&&& ,1
 cmdutils: avoid using cpp directives within printf macro arguments Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&&&&&It appears such construct has undefined behavior&&&& ,1
" lavr: handle clipping in the float to s32 conversion We cannot clip to INT_MAX because that value cannot be exactly&&&&represented by a float value and ends up overflowing during conversion&&&&anyway. We need to use a slightly smaller float value, which ends up&&&&with slightly inaccurate results for samples which clip or nearly clip,&&&&but it is close enough. Using doubles as intermediates in the conversion&&&&would be more accurate, but it takes about twice as much time.&&&&&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&& ",1
" dv: zero dsp before init, this fixes use of uninitialized dct_bits Fixes CID732292&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 ff_choose_timebase: only try factors upto 14 otherwise a unexpected timebase could be choosen&&&&that is one that is thousand times more precisse than requested&&&&which can have sideeffects.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" ffserver: fix potential buffer overflow, based on wrong fscanf format indentifier. Fixed Ticket1780&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 ffprobe: print format long_name only if non-NULL Fix possible crash when long_name is not defined (for example if&&&&--enable-small).&&&& ,1
" lavfi/hue: fix crash when resetting the saturation expression Previously when saturation was reinited, the old value was freed when&&&&setting options, and freed again in PARSE_EXPRESSION().&&&& ",1
 pthread: Avoid crashes/odd behavior caused by spurious wakeups pthread_wait_cond can wake up for no reason (Wikipedia: Spurious_wakeup).&&&&The FF_THREAD_SLICE thread mechanism could spontaneously execute jobs or&&&&allow the caller of avctx->execute to return before all jobs were complete.&&&&This adds tests to both cases to ensure the wakeup is real.&&&&&&&&Signed-off-by: Ben Jackson <ben@ben.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 lavfi/asyncts: Fix compilation with GCC 4.7 Compilation failed since commit 42d621d131a45fb63571ca6029c2fc4f02811c10&&&&Error messages:&&&&libavfilter/af_asyncts.c:249:5: error: initializer element is not&&&&computable at load time&&&&libavfilter/af_asyncts.c:249:5: error: (near initialization for&&&&鈥榓vfilter_af_asyncts.priv_size鈥?&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" g723.1: simplify and fix multiplication overflow In 16-bit arithmetic, x * 0xffffc is simply x * -4 with extra overflows,&&&&(and the constant was probably meant to be 0xfffc).  Combined with the&&&&shift, this simplifies to -x >> 1.  Finally, clearing the low two bits&&&&with a 32-bit mask and switching to a 32-bit type allows more efficient&&&&code on 32-bit machines.&&&&&&&&Signed-off-by: Mans Rullgard <mans@mansr.com>&&&& ",1
 zerocodec: fix direct rendering. Set picture type before calling get_buffer.&&&&This allows the DR application to make better decisions.&&&&It also fixes a resource leak in case of missing reference frames&&&&since it would call get_buffer but never release_buffer.&&&&Also use FFSWAP to ensure that the AVFrame is properly initialized&&&&in the next get_buffer (in particular that data[0] is NULL).&&&&&&&&Signed-off-by: Reimar D枚ffinger <Reimar.Doeffinger@gmx.de>&&&&Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&& ,1
 8svx: fix crash Fixes Ticket1377&&&&&&&&Found-by: Piotr Bandurski <ami_stuff@o2.pl>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" h264: increase scantable sizes to avoid overread We could also check the index but this would slow speed critical code&&&&down.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" aacdec: fix ""may be used uninitialized"" warning Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" ape: Fix null ptr dereference with files missing a seekatable. Such files are currently not supported as the table is used at several points&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" h263: more strictly forbid frame size changes with frame-mt. Prevents crashes because the old check was incomplete.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",1
 ivi_common: Initialize a variable at declaration in ff_ivi_decode_blocks(). This simplifies the code a bit and avoids an uninitialized variable warning.&&&& ,1
 Print unexpected length of flicvideo extradata.  ,1
 allcodecs: move libaacplus down. We choose the first encoder by default and libaccplus has a&&&&quite limited set of supported bitrates/sample rates.&&&&Thus leading to failure by default in many cases when it is&&&&enabled at compile time.&&&&Moving it down means that the other aac encoders are favored&&&&by default which avoids this issue.&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" mov: don't overwrite existing indexes. Prevents all kind of badness if files contain multiple&&&&indexes.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",1
" indeo4: Fix global array overread. Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 j2kdec: convert to bytestream2 API Protects against overreads.&&&&&&&&Signed-off-by: Paul B Mahol <onemda@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" ralf: read Huffman code lengths without GetBitContext Those descriptions are stored in nibbles, so they are easy to extract.&&&&And this way we don't need to pad tables for possible bit reader overreads.&&&& ",1
" mov: fix global unicode convertion array overflow. Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" eatqi: replace break by goto. This fixes some heap overread.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" oma: Fix out of array read. Input: 01-Untitled-partial.oma&&&&ZZUF params: zzuf[s=7157,r=0.001]&&&&&&&&Fixes Bugzilla #106&&&&&&&&Bug-found-by: darkshikari&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&Signed-off-by: Ronald S. Bultje <rsbultje@gmail.com>&&&& ",1
" xa_adpcm: limit filter to prevent xa_adpcm_table[] array bounds overruns. Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",1
" http: Retry auth if it failed due to being stale Allow up to 4 retries for normal requests, where both the&&&&proxy and the target server might need to authenticate.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",1
 rtsp: Retry authentication if failed due to being stale Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,1
" cook: expand dither_tab[], and make sure indexes into it don't overflow. Fixes overflows in accessing dither_tab[].&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",1
" xxan: convert to bytestream2 API. Protects against overreads.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",1
" tgq: convert to bytestream2 API. This protects against input buffer overreads.&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&CC: libav-stable@libav.org&&&& ",1
 cook: silence some signed overflow warnings. Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" h263: fix zygo debug printing overreading. Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
" wmaenc: remove bit-exact hack It may have improved cross-platform stability, but wasn't the only place in&&&&the encoder with bitexact issues. It is no longer needed because we have FATE&&&&tests for float encoders using fuzzy comparison.&&&& ",1
" kgv1dec: Increase offsets array size so it is large enough. Fixes CVE-2011-3945&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&(cherry picked from commit 807a045ab7f51993a2c1b3116016cbbd4f3d20d6)&&&&&&&&Signed-off-by: Alex Converse <alex.converse@gmail.com>&&&& ",1
" h263dec: Disallow width/height changing with frame threads. Fixes CVE-2011-3937&&&&&&&&Found-by: Mateusz ""j00ru"" Jurczyk and Gynvael Coldwind&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ",1
 mxfdec: Parse IndexTableSegments and convert them into AVIndexEntry arrays. Based on patch from Tomas H盲rdin <tomas.hardin@codemill.se>&&&&and work by Georg Lippitsch <georg.lippitsch@gmx.at>&&&&&&&&Changed av_calloc to av_mallocz and added overflow checks.&&&& ,1
 sgidec: Use bytestream2 functions to prevent buffer overreads. The patch also adds several bytestream macros to deal with native endian.&&&&&&&&Signed-off-by: Justin Ruggles <justin.ruggles@gmail.com>&&&& ,1
 aacsbr: prevent out of bounds memcpy(). Fixes Libav Bug 195.&&&&&&&&This doesn't make the code handle sample rate or upsample/downsample&&&&change properly but this is still a good sanity check.&&&&&&&&Based on change by Michael Niedermayer.&&&&&&&&Signed-off-by: Alex Converse <alex.converse@gmail.com>&&&& ,1
 vorbis: An additional defense in the Vorbis codec. Fixes Bug: #190&&&&Chromium Bug: #100543&&&&Related to CVE-2011-3893&&&&&&&&Signed-off-by: Reinhard Tartler <siretart@tauware.de>&&&& ,1
 ogg: Avoid the possibility to read out-of-bounds of a static global array in Vorbis decoding. BUG=100543&&&&Review URL: http://codereview.chromium.org/8365014&&&&This fixes 25% of CVE-2011-3893&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 electronicarts: Fix division by zero. Fixes Ticket #793 Signed-off-by: Oana Stratulat <oanaandreeastratulat@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 ffmpeg: fix compiler warning for uninitialized variables Signed-off-by: Jean First <jeanfirst@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" lavc: Relax API strictness in avcodec_decode_audio3 with a custom get_buffer() Do not fail audio decoding with avcodec_decode_audio3 if user has set a&&&&custom get_buffer. Strictly speaking, this was never allowed by the API,&&&&but it seems that some software packages did so anyways. In order to&&&&unbreak applications (cf. http://bugs.debian.org/655890), this change&&&&clarifies the API and overrides the custom get_buffer() with the defaults.&&&&&&&&This change is inspired by a similar&&&&commit (c3846e3ebab610be691adb8b40d376dc2f675dc4) in FFmpeg.&&&&&&&&Signed-off-by: Reinhard Tartler <siretart@tauware.de>&&&& ",1
 qpeg: Check for overread in qpeg_decode_intra. Reviewed-by: Paul B Mahol <onemda@gmail.com>&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 v410dec: Check for sufficient input data. Fixes crash Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&&Signed-off-by: Ronald S. Bultje <rsbultje@gmail.com>&&&& ,1
 Fix possible endless loop when decoding amr. Fixes bug 151.&&&&&&&&Reviewed-by: Vitor Sessak&&&& ,1
" swscale: fix integer overflows in RGB pixel writing. We're shifting individual components (8-bit, unsigned) left by 24,&&&&so making them unsigned should give the same results without the&&&&overflow.&&&&&&&&Signed-off-by: Ronald S. Bultje <rsbultje@gmail.com>&&&& ",1
 swscale: fix overflows in RGB rounding constants. Signed-off-by: Mans Rullgard <mans@mansr.com>&&&& ,1
 aacdec: Fix null pointer crash Fixes bug170 Bug found by: Gautam Gupta Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" wavpack: Fix 32-bit clipping In the case that (frame_flags & 0x03) == 3, hybrid_maxclip&&&&may have had a signed integer overflow.&&&&&&&&Signed-off-by: Derek Buitenhuis <derek.buitenhuis@gmail.com>&&&&Signed-off-by: Anton Khirnov <anton@khirnov.net>&&&& ",1
 ffmpeg: check return code from av_vsrc_buffer_add_frame() Fixed Ticket770 Bug found by: Diana Elena Muscalu Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 segafilm: fail earlier in case theres not enough bytestream left for a audio packet. This prevents a potentially large memory allocation. Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 ttadec: check channel count as read from extradata. fixes floating-point exception due to channels being set to 0.&&&&fixes Bug 128.&&&&&&&&Signed-off-by: Justin Ruggles <justin.ruggles@gmail.com>&&&& ,1
 apedec: fix signed integer overflows This bit manipulation is equivalent but avoids undefined&&&&shifts and overflows.&&&&&&&&Signed-off-by: Mans Rullgard <mans@mansr.com>&&&& ,1
 fraps: check for overread. Signed-off-by: Anton Khirnov <anton@khirnov.net>&&&& ,1
 pthread: add some malloc failure checks  ,1
 matroskadec: Fix a buffer overread Originally committed as revision 22271 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" ffmpeg: Fix regression where various fields where not initialized leading to segfaults Bug introduced by: commit f12f40b31aa7f030393cfc756e83f4aa4265e448 Author: Anton Khirnov <anton@khirnov.net> Date:   Tue Aug 30 04:05:20 2011 +0200     ffmpeg: get rid of new* options.&&&&&&&&    They are confusing, irregular and redundant -- -map already contains all&&&&    the information.  Stream maps can now be parsed in opt_output_file().&&&&&&&&    Add a more user-friendly default behavior in case no maps are present.&&&&&&&&    Breaks -programid for now, but it never worked properly anyway. A better&&&&    solution will be written soon.&&&& ",1
" http: Don't use the normal http proxy mechanism for https The tls protocol handles connections via proxies internally.&&&&&&&&With TLS/SSL, the peer verification requires that the client&&&&speaks directly with the server, since the proxy doesn't have&&&&the remote server's private key.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ",1
 mathops: remove undefined behaviour from sign_extend() This function intentionally overflows the signed range on&&&&the left shift.  Using this type-punning avoids errors from&&&&the overflow checker without disabling this test globally.&&&&&&&&Signed-off-by: Mans Rullgard <mans@mansr.com>&&&& ,1
 tiffdec: fix out of bound reads/writes Signed-off-by: Janne Grunau <janne-libav@jannau.net>&&&& ,1
" lavf: fix signed overflow in avformat_find_stream_info() On the first iteration through this code, last_dts is always&&&&INT64_MIN (AV_NOPTS_VALUE) and the subtraction overflows in&&&&an invalid manner.  Although the result is only used if the&&&&input values are valid, performing the subtraction is still&&&&not allowed in a strict environment.&&&&&&&&Signed-off-by: Mans Rullgard <mans@mansr.com>&&&& ",1
 xan: Prevent NULL dereferences with missing reference frame Signed-off-by: Janne Grunau <janne-libav@jannau.net>&&&& ,1
 nuv: do not use data not initialized by LZO decompression. This fixes visible corruption in the incomplete last frame&&&&of the FATE sample.&&&&&&&&Signed-off-by: Reimar D枚ffinger <Reimar.Doeffinger@gmx.de>&&&& ,1
 Fix potential pointer arithmetic overflows in lz_unpack of vmd video decoder. Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 Fixed NULL pointer dereference in id3v2 parser. Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
 [mxfdec] Check return value of avio_seek and avoid modifying state if it fails  ,1
 sol: return error if av_get_packet() fails. This prevents sending a packet with data=NULL size=AVERROR_EOF.&&&& ,1
 [jvd] Check return value of avio_seek and avoid modifying state if it fails  ,1
 ffmpeg: Replace goto redo on decode fail with continue. This checks for sigterm but otherwise is identical to the previous&&&&behavior.&&&& ,1
" Fix possible crash when decoding mpeg streams. This reverts 2cf8355f98681bdd726b739008acd5483f82f8d7,&&&&fixes ticket 329.&&&& ",1
" opt: do not crash in av_set_options_string() if opts == NULL Add missing NULL check, and update documentation accordingly.&&&& ",1
 crypto: Use av_freep instead of av_free This fixes a potential double free.&&&&&&&&Signed-off-by: Martin Storsj枚 <martin@martin.st>&&&& ,1
 lavfi: add avfilter_link_free() function Allow to free the buffers cached in each AVFilterLink pool.&&&&Fix leak.&&&& ,1
 Fix crash of interlaced MPEG2 decoding  ,1
" mpeg12: terminate mpeg2_video_profiles arrays Make av_get_profile_name() return NULL if no profile is detected.&&&&&&&&Fix trac issue #130, fix crash reading file tek3.m2v.&&&& ",1
 Reduce max lowres from 5 to 3 in sp5x decoder lowres higher than 3 crashes ffmpeg/ffplay here&&&&&&&&Signed-off-by: Michael Niedermayer <michaelni@gmx.at>&&&& ,1
" In libx264 wrapper, do not set pic quality if no frame is output, avoids uninitialized reads.  ",1
" cmdutils: add OPT_INT check in parse_number_or_die() Check that the value passed for an OPT_INT option is an int, fail&&&&otherwise.&&&& ",1
" ac3enc: simplify sym_quant() These expressions are equivalent since levels is always odd, and&&&&overflow is impossible due to the constraints set by the assert().&&&&&&&&Signed-off-by: Mans Rullgard <mans@mansr.com>&&&& ",1
" ffplay: Don't assume ic->pb is non-null This fixes crashes on exit when plaing some RealRTSP streams&&&&(among other), e.g.&&&&rtsp://dl.lib.brown.edu:554/areserves/1093545294660883.mp3.&&&&These crashes have been present since 3e68b3ba7b015cf21.&&&&&&&&Signed-off-by: Ronald S. Bultje <rsbultje@gmail.com>&&&& ",1
 bink: prevent overflows within binkidct by using int-sized intermediate array Signed-off-by: Ronald S. Bultje <rsbultje@gmail.com>&&&&(cherry picked from commit e211e255aa399d68239ffa42c9cc7a52eb3d55a9)&&&& ,1
 dvbsubdec: check against buffer overreads Signed-off-by: Janne Grunau <janne-ffmpeg@jannau.net>&&&&(cherry picked from commit 493aa30adf88baf5bc734072592a22db586f0cfb)&&&& ,1
 cmdutils: fix opt_values leak Add free to uninit_opts and relocate opt_names to same&&&&&&&&Signed-off-by: Ronald S. Bultje <rsbultje@gmail.com>&&&& ,1
" rtsp: Don't store RTSPStream in AVStream->priv_data For mpegts in RTP, there isn't a direct mapping between RTSPStreams&&&&and AVStreams, and the RTSPStream isn't ever stored in&&&&AVStream->priv_data, which was earlier leaked. The fix for this&&&&leak, in ea7f080749d68a431226ce196014da38761a0d82, lead to&&&&double frees for other, normal RTP streams.&&&&&&&&This patch avoids storing RTSPStreams in AVStream->priv_data, thus&&&&avoiding the double free. The RTSPStreams are always available via&&&&RTSPState->rtsp_streams anyway.&&&&&&&&Tested with MS-RTSP, RealRTSP, DSS and mpegts/RTP.&&&&&&&&Signed-off-by: Luca Barbato <lu_zero@gentoo.org>&&&&(cherry picked from commit d9c0510e22821baa364306d867ffac45da0620c8)&&&& ",1
 x86: fix overflow in h264 8x8 planar prediction Signed-off-by: Mans Rullgard <mans@mansr.com>&&&&(cherry picked from commit 80944df720da98d6e5ee0e355db5814735914ec9)&&&& ,1
" Fix crash if invalid bit-rate was read from file. Fixes issue 2426. Patch by David Czech, davidczech510 gmail&&&&&&&&Originally committed as revision 26061 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 Discard partial packet of last frame for fate-wmv8-drm to avoid test fails due to VC-1 decoder overreads resulting in different output. Originally committed as revision 26055 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Fix off-by-one error in APIchanges file. Originally committed as revision 25675 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" perform sanity check on sample rate in electronicarts demuxer Fixes issue2525 Original patch by Daniel Kang, daniel.d.kang at gmail Originally committed as revision 26298 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 qt-faststart: Avoid leaking memory if encountering a file with double ftyp atoms Originally committed as revision 23065 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" Remove useless assert(), since this can (in theora) be used for any Xiph codec, so there's no reason to (invalidly) limit it to only Theora. Also fixes issue 1880 (compilation error on -DDEBUG).&&&&&&&&Originally committed as revision 22886 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
" Add DOS section to the platform documentation. patch by Michael Kostylev, michael.kostylev gmail com Originally committed as revision 22854 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 Fix uninitialized value in codepath. See http://tranquillity.ath.cx/clang/2010-03-30-1/report-40QvF3.html#EndPath&&&&&&&&Originally committed as revision 22782 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Plug some memory leaks in NUT muxer and demuxer Originally committed as revision 22120 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Fix some memory leaks in seek_test test program: - do not allocate context twice - close the input file before exiting Originally committed as revision 22108 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Do not attempt to open references through absolute pathes. This would allow an attacker to test remotely if a local file exists. Originally committed as revision 21925 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" eval: replace variable-length array with av_malloc/free There is a theoretical possibility to pass a very long string to ff_parse,&&&&which could crash if allocated from the stack.  This allows the allocation&&&&to be checked properly.&&&&&&&&Originally committed as revision 19670 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 H.264: Fix memory leaks with multithreading. The threads' contexts and rbsp_buffers were not freed at the end&&&&of decoding.&&&&&&&&Fixes issue 1581&&&&&&&&Originally committed as revision 19207 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" Fix cast of byte buffer to uint32 that was disregarding alignment requirements. Now calculates crc byte at a time until aligned, then continues with uint32 optimized calculation. This fixes crashes during mlp decoding on sparc (at least, maybe others). Originally committed as revision 19160 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 Change buffer size checks to avoid the undefined overflow case. Originally committed as revision 19047 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Set flag after VC-1 VLCs are initialized to avoid race condition Originally committed as revision 18639 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Change buffer check to avoid an unlikely pointer arithmetic overflow. Originally committed as revision 18596 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" Simplify packet duplication code in ff_interleave_add_packet. Behaviour only changes if pkt->destuct neither av_destruct_packet, av_destruct_packet_nofree nor NULL, in which case the new code avoids a double free. Originally committed as revision 18452 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 Make sure error resilience does not try to use unavailable reference frames. Fixes the crash described in issue 706. Originally committed as revision 18407 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Make sure mpeg2 has its height rounded up to 32 as that is needed for interlaced stuff. This might have been exploitable when emu edge was not set though note this bug has been introduced just a few days ago. Originally committed as revision 18405 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Check for alloc failures. Originally committed as revision 17497 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Add av_uninit macro to variable to avoid false positive warning: libavcodec/qtrleenc.c: In function 鈥榪trle_encode_frame鈥? libavcodec/qtrleenc.c:113: warning: 鈥榖ulkcount鈥?may be used uninitialized in this function Originally committed as revision 17155 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Fix an overflow in the predictor. fixes issue 636 Patch by Jai. Originally committed as revision 16007 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Make size variables in dyn_buf_write unsigned so gcc will not optimize the check away (due to assuming signed overflows do not happen). Originally committed as revision 15555 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" Fix endless loop when opening corrupt FLV files (issue 699). Patch by Andrew Wason, rectalogic A rectalogic D com&&&&&&&&Originally committed as revision 15738 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 Fix overflow. Originally committed as revision 27573 to svn://svn.mplayerhq.hu/mplayer/trunk/libswscale&&&& ,1
" Send improper UDP SETUP request, which is what Realmedia servers expect. See discussion on ML in ""Realmedia patch"" thread. Originally committed as revision 15482 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
" Remove check for @ in tcp.c which removes the authorization data from the actual hostname. This functionality already exists (and always existed) in url_split() and is therefore useless. See discussion in ""[PATCH] tcp.c/udp.c memleak?"" thread on ffmpeg-devel. Originally committed as revision 14946 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 Fix a mem leak in av_find_stream_info(). Patch by Erik Hovland erik hovland org Originally committed as revision 14276 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Heap buffer overflow. Originally committed as revision 13051 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Fixes NULL pointer dereference CID66 Originally committed as revision 13483 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Check for memory allocation failure of temp buffer Originally committed as revision 11053 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" fix cabac decoding with some Blue-Ray sources Patch by Andreas 脰man %andreas A olebyn P nu% Original thread: Date: Jul 7, 2007 1:23 AM Subject: [FFmpeg-devel] Corrupted blocks and seeking issues in H264 disc sources Originally committed as revision 9836 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
" Compute the dequant coefficient table ptr outside the loop, this saves speed for the upcoming secondqp fix. Patch by Andreas 脰man % andreas A olebyn P nu % Original thread: Date: Jun 26, 2007 8:48 PM subject: [FFmpeg-devel] Color corruption and seeking errors with H264 disc sources Originally committed as revision 9497 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
" Fix a bug in the DVD subtitle decoder where subtitles with odd heights would not have the last line decoded, leaving the bottom line of the bitmap array uninitialised. Patch by Ian Caulfield, ian dot caulfield gmail dot com. Originally committed as revision 7767 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 add sanity checks Originally committed as revision 7679 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" fix crash when decoding a truncated H264 slice patch by Alexander Chemeris % ipse P ffmpeg A gmail.com % Original thread: date: Dec 5, 2006 7:26 PM subject: [Ffmpeg-devel] [PATCH] Fix crush when truncated slice passed to H.264 decoder Originally committed as revision 7229 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 Divide first audio buffer chunk into atomary bufffers. This slightly simplifies decoder and removes potential audio buffer overrun. Originally committed as revision 7121 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 fix buffer underflows by reencoding the current frame with a higher QP Originally committed as revision 6565 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 Fix overflows in bicubic interpolation. Originally committed as revision 5868 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" test availability of various compiler flags, and verify that requested libraries are really installed Originally committed as revision 5486 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 fix memory leak on mpegts close found by Andy Brown <abrown at daqtron com> Originally committed as revision 5259 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 fix crash on height < 16 pixels. Originally committed as revision 4904 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" wrong sizes, part of [PATCH] from DivX, Part 9: bitstream crashes from (Steve Lhomme | slhomme divxcorp com) Originally committed as revision 4746 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 division by zero fix Originally committed as revision 4191 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
" ""don't quit"" option to attach a debugger /check mem leaks ""no write"" option to only get next packets Originally committed as revision 4110 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ",1
 fixing decoding of http://mplayerhq.hu/~atmos4/ffrv20-crashing-atmos.rm Originally committed as revision 3808 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 stack overflow Originally committed as revision 3389 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 corrupted field pictures segfault fix Originally committed as revision 3040 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 writing corrupt files on MinGW patch by (Matthias Fritschi <choi at netlabs dot org>) Originally committed as revision 2988 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
 fixing q>0.0 assert failure caused by overflow of variance for b frames Originally committed as revision 1120 to svn://svn.ffmpeg.org/ffmpeg/trunk&&&& ,1
