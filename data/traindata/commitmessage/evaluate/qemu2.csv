label,content
0," char: remove fixed length filename allocation A variety of places were snprintf()ing into a fixed length&&&&filename buffer. Some of the buffers were stack allocated,&&&&while another was heap allocated with g_malloc(). Switch&&&&them all to heap allocated using g_strdup_printf() avoiding&&&&arbitrary length restrictions.&&&&&&&&This also facilitates later patches which will want to&&&&populate the filename by calling external functions&&&&which do not support use of a pre-allocated buffer.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1453202071-10289-2-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," vhost-user-test: make features mask an init_virtio_dev() argument The goal is to generalize the use of [un]init_virtio_dev() to&&&&all tests, which does not necessarily expose the same features&&&&set.&&&&&&&&Signed-off-by: Maxime Coquelin <maxime.coquelin@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& "
0," dev-storage: Fix the unusual function name The function name of usb_msd_{realize,unrealize}_*,&&&&usb_msd_class_initfn_* are unusual. Rename it to&&&&usb_msd_*_{realize,unrealize}, usb_msd_class_*_initfn.&&&&&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&&&&&Signed-off-by: Mao Zhongyi <maozy.fnst@cn.fujitsu.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-id: 11e6003433abce35f3f4970e1acc71ee92dbcf51.1511317952.git.maozy.fnst@cn.fujitsu.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," ui: avoid pointless VNC updates if framebuffer isn't dirty The vnc_update_client() method checks the 'has_dirty' flag to see if there are&&&&dirty regions that are pending to send to the client. Regardless of this flag,&&&&if a forced update is requested, updates must be sent. For unknown reasons&&&&though, the code also tries to sent updates if audio capture is enabled. This&&&&makes no sense as audio capture state does not impact framebuffer contents, so&&&&this check is removed.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Darren Kenny <darren.kenny@oracle.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 20171218191228.31018-5-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," block: count bdrv_co_rw_vmstate() requests Call bdrv_inc/dec_in_flight() for vmstate reads/writes.  This seems&&&&unnecessary at first glance because vmstate reads/writes are done&&&&synchronously while the guest is stopped.  But we need the bdrv_wakeup()&&&&in bdrv_dec_in_flight() so the main loop sees request completion.&&&&Besides, it's cleaner to count vmstate reads/writes like ordinary&&&&read/write requests.&&&&&&&&The bdrv_wakeup() partially fixes a 'savevm' hang with -object iothread.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," pci: Eliminate redundant PCIDevice::bus pointer The bus pointer in PCIDevice is basically redundant with QOM information.&&&&It's always initialized to the qdev_get_parent_bus(), the only difference&&&&is the type.&&&&&&&&Therefore this patch eliminates the field, instead creating a pci_get_bus()&&&&helper to do the type mangling to derive it conveniently from the QOM&&&&Device object underneath.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Peter Xu <peterx@redhat.com>&&&& "
0," mips: use object_new() instead of gnew()+object_initialize() object_initialize() is intended for inplace initialization of&&&&objects, but here it's first allocated with g_new0() and then&&&&initialized with object_initialize(). QEMU already has API&&&&to do this (object_new), so do object creation with suitable&&&&for usecase API.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Tested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <1507211474-188400-36-git-send-email-imammedo@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0, target/sparc: check CF_PARALLEL instead of parallel_cpus Thereby decoupling the resulting translated code from the current state&&&&of the system.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Richard Henderson <richard.henderson@linaro.org>&&&& 
0," target/i386: introduce x86_ld*_code These take care of advancing s->pc, and will provide a unified point&&&&where to check for the 15-byte instruction length limit.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," migration: Add 'pause-before-switchover' capability When 'pause-before-switchover' is enabled, the outgoing migration&&&&will pause before invalidating the block devices and serializing&&&&the device state.&&&&At this point the management layer gets the chance to clean up any&&&&device jobs or other device users before the migration completes.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0," openrisc: Initial SMP support Wire in ompic and add basic support for SMP.  The OpenRISC is special in&&&&that interrupts for devices are routed to each core's PIC.  This is&&&&achieved using the qemu_irq_split utility, but this currently limits&&&&OpenRISC to 2 cores.&&&&&&&&This models the reference architecture described in the OpenRISC spec&&&&1.2 proposal.&&&&&&&&  https://github.com/stffrdhrn/doc/raw/arch-1.2-proposal/openrisc-arch-1.2-rev0.pdf&&&&&&&&The changes to the intialization of the sim include:&&&&&&&&CPU Reset&&&& o Reset each cpu to the bootstrap PC rather than only a single cpu as&&&&   done before.&&&& o During Kernel loading the bootstrap PC is saved in a static global.&&&&&&&&Network Initialization&&&& o Connect the interrupt to each CPU&&&& o Use more simple sysbus_mmio_map() rather than memory_region_add_subregion()&&&&&&&&Sim Initialization&&&& o Initialize the pic and tick timer per cpu&&&& o Wire in the OMPIC if SMP is enabled&&&& o Wire the serial irq to each CPU using qemu_irq_split()&&&&&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Signed-off-by: Stafford Horne <shorne@gmail.com>&&&& "
0," io: get rid of bounce buffering in websock write path Currently most outbound I/O on the websock channel gets copied into the&&&&rawoutput buffer, and then immediately copied again into the encoutput&&&&buffer, with a header prepended. Now that qio_channel_websock_encode&&&&accepts a struct iovec, we can trivially remove this bounce buffering&&&&and write directly to encoutput.&&&&&&&&In doing so, we also now correctly validate the encoutput size against&&&&the QIO_CHANNEL_WEBSOCK_MAX_BUFFER limit.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
0," pci: allow 32-bit PCI IO accesses to pass through the PCI bridge Whilst the underlying PCI bridge implementation supports 32-bit PCI IO&&&&accesses, unfortunately they are truncated at the legacy 64K limit.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," build: automatically handle GIT submodule checkout for dtc Currently if DTC is required by configure and not available in the host&&&&OS install, we exit with an error message telling the user to checkout a&&&&git submodule or install the library.&&&&&&&&This introduces automatic handling of the git submodule checkout process&&&&and enables it for dtc. This only runs if building from GIT, so users of&&&&release tarballs still need the system library install. The current state&&&&of the git checkout is stashed in .git-submodule-status, and a helper&&&&program is used to determine if this state matches the desired submodule&&&&state. A dependency against 'Makefile' ensures that the submodule state&&&&is refreshed at the start of the build process&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170929101201.21039-2-berrange@redhat.com&&&&&&&&[ kraxel: use /bin/sh not bash for scripts/git-submodule.sh ]&&&&[ kraxel: fix Makefile dependencies ]&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&&&&&[fixup] Makefile dep&&&& "
0, qom/cpu: move cpu_model null check to cpu_class_by_name() and clean every implementation.&&&&&&&&Suggested-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <20170917232842.14544-1-f4bug@amsat.org>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Laurent Vivier <laurent@vivier.eu>&&&&Reviewed-by: Artyom Tarasenko <atar4qemu@gmail.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," target/arm: Implement secure function return Secure function return happens when a non-secure function has been&&&&called using BLXNS and so has a particular magic LR value (either&&&&0xfefffffe or 0xfeffffff). The function return via BX behaves&&&&specially when the new PC value is this magic value, in the same&&&&way that exception returns are handled.&&&&&&&&Adjust our BX excret guards so that they recognize the function&&&&return magic number as well, and perform the function-return&&&&unstacking in do_v7m_exception_exit().&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Acked-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1507556919-24992-5-git-send-email-peter.maydell@linaro.org&&&& "
0," nvic: Implement Security Attribution Unit registers Implement the register interface for the SAU: SAU_CTRL,&&&&SAU_TYPE, SAU_RNR, SAU_RBAR and SAU_RLAR. None of the&&&&actual behaviour is implemented here; registers just&&&&read back as written.&&&&&&&&When the CPU definition for Cortex-M33 is eventually&&&&added, its initfn will set cpu->sau_sregion, in the same&&&&way that we currently set cpu->pmsav7_dregion for the&&&&M3 and M4.&&&&&&&&Number of SAU regions is typically a configurable&&&&CPU parameter, but this patch doesn't provide a&&&&QEMU CPU property for it. We can easily add one when&&&&we have a board that requires it.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1506092407-26985-14-git-send-email-peter.maydell@linaro.org&&&& "
0," qemu-io: Add -C for opening with copy-on-read Make it easier to enable copy-on-read during iotests, by&&&&exposing a new bool option to main and open.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target/arm: Restore security state on exception return Now that we can handle the CONTROL.SPSEL bit not necessarily being&&&&in sync with the current stack pointer, we can restore the correct&&&&security state on exception return. This happens before we start&&&&to read registers off the stack frame, but after we have taken&&&&possible usage faults for bad exception return magic values and&&&&updated CONTROL.SPSEL.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1506092407-26985-5-git-send-email-peter.maydell@linaro.org&&&& "
0," qemu-iotests: do not include common.rc in ""check"" It only provides functions used by the test programs.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," nvic: Add banked exception states For the v8M security extension, some exceptions must be banked&&&&between security states. Add the new vecinfo array which holds&&&&the state for the banked exceptions and migrate it if the&&&&CPU the NVIC is attached to implements the security extension.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&& "
0, iothread: provide helpers for internal use IOThread is a general framework that contains IO loop environment and a&&&&real thread behind.  It's also good to be used internally inside qemu.&&&&Provide some helpers for it to create iothreads to be used internally.&&&&&&&&Put all the internal used iothreads into the internal object container.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Message-id: 20170928025958.1420-3-peterx@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," target/arm: Implement MSR/MRS access to NS banked registers In v8M the MSR and MRS instructions have extra register value&&&&encodings to allow secure code to access the non-secure banked&&&&version of various special registers.&&&&&&&&(We don't implement the MSPLIM_NS or PSPLIM_NS aliases, because&&&&we don't currently implement the stack limit registers at all.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1505240046-11454-2-git-send-email-peter.maydell@linaro.org&&&& "
0, xlnx-ep108: Rename to ZCU102 The EP108 is a early access development board. Now that silicon is in&&&&production people have access to the ZCU102. Let's rename the internal&&&&QEMU files and variables to use the ZCU102.&&&&&&&&There is no functional change here as the EP108 is still a valid board&&&&option.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, target/arm: Make MMFAR banked for v8M Make the MMFAR register banked if v8M security extensions are&&&&enabled.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1503414539-28762-18-git-send-email-peter.maydell@linaro.org&&&& 
0," hw/ppc: clear pending_events on machine reset The sPAPR machine isn't clearing up the pending events QTAILQ on&&&&machine reboot. This allows for unprocessed hotplug/epow events&&&&to persist in the queue after reset and, when reasserting the IRQs in&&&&check_exception later on, these will be being processed by the OS.&&&&&&&&This patch implements a new function called 'spapr_clear_pending_events'&&&&that clears up the pending_events QTAILQ. This helper is then called&&&&inside ppc_spapr_reset to clear up the events queue, preventing&&&&old/deprecated events from persisting after a reset.&&&&&&&&Signed-off-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, target/arm: Make PRIMASK register banked for v8M Make the PRIMASK register banked if v8M security extensions are enabled.&&&&&&&&Note that we do not yet implement the functionality of the new&&&&AIRCR.PRIS bit (which allows the effect of the NS copy of PRIMASK to&&&&be restricted).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1503414539-28762-8-git-send-email-peter.maydell@linaro.org&&&& 
0, block: tidy ThrottleGroupMember initializations Move the CoMutex and CoQueue inits inside throttle_group_register_tgm()&&&&which is called whenever a ThrottleGroupMember is initialized. There's&&&&no need for them to be separate.&&&&&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Manos Pitsidianakis <el13635@mail.ntua.gr>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," hmp: Use qapi_enum_parse() in hmp_migrate_set_parameter() The error message on invalid parameter name changes from&&&&&&&&    Invalid parameter ""NAME""&&&&&&&&to&&&&&&&&    invalid parameter value: NAME&&&&&&&&Slight degratation, perhaps.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20170822132255.23945-10-marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&[Rebased, assertion added, commit message rewritten]&&&&Cc: ""Dr. David Alan Gilbert"" <dgilbert@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1503564371-26090-7-git-send-email-armbru@redhat.com>&&&& "
0, vhost: use QEMU_ALIGN_DOWN I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0, thunk: assert nb_fields is valid thunk.c:91:32: warning: Call to 'malloc' has an allocation size of 0 bytes&&&&        se->field_offsets[i] = malloc(nb_fields * sizeof(int));&&&&                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&&&&&&&&Reported-by: Clang Static Analyzer&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0," target/s390x: simplify gs_allowed() No need for kvm_enabled() as this function is only called from KVM and&&&&there is no reason why it shouldn't be allowed for tcg. It is simply not&&&&available under tcg.&&&&&&&&Also, there is no need to check for the machine type anymore. Just like&&&&ri_enabled(), we can directly use the stored flag, which results in&&&&""true"" for the ""none"" machine.&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170818114353.13455-5-david@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," tests: add missing dependency to build QTEST_QEMU_BINARY This allow a one liner from fresh repository clone, i.e.:&&&&&&&&  ./configure && make -j check-qtest-aarch64&&&&&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, virtion-net: Prefer is_power_of_2() We have a function that checks if given number is power of two.&&&&We should prefer it instead of expanding the check on our own.&&&&&&&&Signed-off-by: Michal Privoznik <mprivozn@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& 
0," migration/rdma: Allow cancelling while waiting for wrid When waiting for a WRID, if the other side dies we end up waiting&&&&for ever with no way to cancel the migration.&&&&Cure this by poll()ing the fd first with a timeout and checking&&&&error flags and migration state.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Peter Xu <peterx@redhat.com>&&&&Message-Id: <20170717110936.23314-5-dgilbert@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0," s390x/sclp: properly guard pci-specific functions If we do not provide zpci, pci reconfiguration via sclp is not available&&&&either. I/O adapter configuration, however, should always be present.&&&&&&&&Rename the values that refer to I/O adapter configuration (instead of only&&&&pci) to make things clearer.&&&&&&&&Move length checking of the sccb for I/O adapter configuration into the&&&&common sclp code (out of the pci code). This also fixes an issue that&&&&the pci code would refer to a field in the sccb before checking whether&&&&it was actually long enough.&&&&&&&&Check for the adapter type in the sccb and return unrecognized adapter&&&&type if the guest tries to issue I/O adapter configure/deconfigure for&&&&a type other than pci or for pci if the zpci facility is not provided.&&&&&&&&Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," pseries: Allow HPT resizing with KVM So far, qemu implements the PAPR Hash Page Table (HPT) resizing extension&&&&with TCG.  The same implementation will work with KVM PR, but we don't&&&&currently allow that.  For KVM HV we can only implement resizing with the&&&&assistance of the host kernel, which needs a new capability and ioctl()s.&&&&&&&&This patch adds support for testing the new KVM capability and implementing&&&&the resize in terms of KVM facilities when necessary.  If we're running on&&&&a kernel which doesn't have the new capability flag at all, we fall back to&&&&testing for PR vs. HV KVM using the same hack that we already use in a&&&&number of places for older kernels.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," s390x/cpumodel: add zpci, aen and ais facilities zPCI instructions and facilities are available since IBM zEnterprise&&&&EC12. To support z/PCI in QEMU we enable zpci, aen and ais facilities&&&&starting with zEC12 GA1. And we always set zpci and aen bits in max cpu&&&&model. Later they might be switched off due to applied real cpu model.&&&&For ais bit, we only provide it in the full cpu model beginning with&&&&zEC12 and defer its enablement in the default cpu model to a later point&&&&in time. At the same time, disable them for 2.9 and older machines.&&&&&&&&Because of introducing AIS facility, we could check if it's enabled to&&&&initialize flic->ais_supported with the real value.&&&&&&&&Signed-off-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Reviewed-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," translate-all: remove redundant !tcg_enabled check in dump_exec_info This check is redundant because it is already performed by the only&&&&caller of dump_exec_info -- the caller was updated by b7da97eef&&&&(""monitor: Check whether TCG is enabled before running the ""info jit""&&&&code"").&&&&&&&&Checking twice wouldn't necessarily be too bad, but here the check also&&&&returns with tb_lock held. So we can either do the check before tb_lock is&&&&acquired, or just get rid of it. Given that it is redundant, I am going&&&&for the latter option.&&&&&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," nbd: Expose and debug more NBD constants The NBD protocol has several constants defined in various extensions&&&&that we are about to implement.  Expose them to the code, along with&&&&an easy way to map various constants to strings during diagnostic&&&&messages.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20170707203049.534-4-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," s390x/flic: introduce modify_ais_mode callback In order to emulate the adapter interruption suppression (AIS)&&&&facility properly, the guest needs to be able to modify the AIS mask.&&&&Interrupt suppression will be handled via the flic (for kvm, via a&&&&recently introduced kernel backend; for !kvm, in the flic code), so&&&&let's introduce a method to change the mode via the flic interface.&&&&&&&&We introduce the 'simm' and 'nimm' fields to QEMUS390FLICState&&&&to store interruption modes for each ISC. Each bit in 'simm' and&&&&'nimm' targets one ISC, and collaboratively indicate three modes:&&&&ALL-Interruptions, SINGLE-Interruption and NO-Interruptions. This&&&&interface can initiate most transitions between the states; transition&&&&from SINGLE-Interruption to NO-Interruptions via adapter interrupt&&&&injection will be introduced in a following patch. The meaningful&&&&combinations are as follows:&&&&&&&&    interruption mode | simm bit | nimm bit&&&&    ------------------|----------|----------&&&&             ALL      |    0     |     0&&&&           SINGLE     |    1     |     0&&&&             NO       |    1     |     1&&&&&&&&Co-authored-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Signed-off-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Signed-off-by: Fei Li <sherrylf@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0," target-m68k: initialize FPU registers on reset, set FP registers to NaN and control registers to 0&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-Id: <20170620205121.26515-3-laurent@vivier.eu>&&&& "
0, target/s390x: Indicate and check for local tlb clearing Let's allow to enable it for the qemu cpu model and correctly emulate&&&&it.&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170622094151.28633-2-david@redhat.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," tests/test-char.c: Don't use main_loop_wait()'s return value In QEMU's main_loop() we used to check whether we should do&&&&a nonblocking call to main_loop(); this was deleted in commit e330c118f2a5,&&&&because now that vCPUs always drop the I/O thread lock it is an unnecessary&&&&optimization.&&&&&&&&The loop in test-char.c copied the old QEMU main_loop() code, but&&&&here the nonblocking check has never been necessary because this&&&&standalone test case doesn't hold the I/O lock anyway. Remove it,&&&&so we can drop the main_loop_wait() return value.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-Id: <1498584769-12439-2-git-send-email-peter.maydell@linaro.org>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, block: protect modification of dirty bitmaps with a mutex Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <20170605123908.18777-17-pbonzini@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&& 
0," Move CONFIG_KVM related definitions to kvm_i386.h pc.h and sysemu/kvm.h are also included from common code (where&&&&CONFIG_KVM is not available), so the #defines that depend on CONFIG_KVM&&&&should not be declared here to avoid that anybody is using them in a&&&&wrong way. Since we're also going to poison CONFIG_KVM for common code,&&&&let's move them to kvm_i386.h instead. Most of the dummy definitions&&&&from sysemu/kvm.h are also unused since the code that uses them is&&&&only compiled for CONFIG_KVM (e.g. target/i386/kvm.c), so the unused&&&&defines are also simply dropped here instead of being moved.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-Id: <1498454578-18709-3-git-send-email-thuth@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," numa: remove node_cpu bitmaps as they are no longer used Postfactum ""CPU(s) present in multiple NUMA nodes"" check&&&&was the last user of node_cpu bitmaps, but it's not need&&&&as machine_set_cpu_numa_node() does the similar check at&&&&the time mapping is set for cpus (i.e. when -numa cpus=&&&&is parsed) and ensures that cpu can be mapped only to&&&&one node.&&&&&&&&Remove duplicate check based on node_cpu bitmaps and&&&&since the last user is gone remove node_cpu as well,&&&&which completes internal transition from legacy bitmap&&&&based mapping storage to possible_cpus storage.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Andrew Jones <drjones@redhat.com>&&&&Message-Id: <1494415802-227633-17-git-send-email-imammedo@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," numa: add check that board supports cpu_index to node mapping Default node mapping initialization already checks that board&&&&supports cpu_index to node mapping and refuses to start if&&&&it's not supported. Do the same for explicitly provided&&&&mapping ""-numa node,cpus=...""&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Message-Id: <1494415802-227633-6-git-send-email-imammedo@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0, hw/timer/exynos4210_mct: Fix checkpatch style errors Fix checkpatch errors:&&&&1. ERROR: spaces required around that '+' (ctx:VxV)&&&&2. ERROR: spaces required around that '&' (ctx:VxV)&&&&&&&&No functional changes.&&&&&&&&Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," migration: keep bytes_xfer_prev init'd to zero The first time migration_bitmap_sync() is called, bytes_xfer_prev is set&&&&to ram_state.bytes_transferred which is, at this point, zero. The next&&&&time migration_bitmap_sync() is called, an iteration has happened and&&&&bytes_xfer_prev is set to 'x' bytes. Most likely, more than one second&&&&has passed, so the auto converge logic will be triggered and&&&&bytes_xfer_now will also be set to 'x' bytes.&&&&&&&&This condition is currently masked by dirty_rate_high_cnt, which will&&&&wait for a few iterations before throttling. It would otherwise always&&&&assume zero bytes have been copied and therefore throttle the guest&&&&(possibly) prematurely.&&&&&&&&Given bytes_xfer_prev is only used by the auto convergence logic, it&&&&makes sense to only set its value after a check has been made against&&&&bytes_xfer_now.&&&&&&&&Signed-off-by: Felipe Franciosi <felipe@nutanix.com>&&&&Reviewed-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0," Default to GSSAPI (Kerberos) instead of DIGEST-MD5 for SASL RFC 6331 documents a number of serious security weaknesses in&&&&the SASL DIGEST-MD5 mechanism. As such, QEMU should not be&&&&using or recommending it as a default mechanism for VNC auth&&&&with SASL.&&&&&&&&GSSAPI (Kerberos) is the only other viable SASL mechanism that&&&&can provide secure session encryption so enable that by defalt&&&&as the replacement. If users have TLS enabled for VNC, they can&&&&optionally decide to use SCRAM-SHA-1 instead of GSSAPI, allowing&&&&plain username and password auth.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
0," slirp: allow host port 0 for hostfwd The OS will allocate automatically a free port. This is useful if you&&&&want to be sure to not get any port conflict. You still have to figure&&&&out which port you got, for example with ""lsof"" (this could be exposed&&&&in the monitor if needed).&&&&&&&&Example of use:&&&&&&&&     $ qemu-system-x86_64 -net user,hostfwd=127.0.0.1:0-:22 ...&&&&&&&&Then, get your port with:&&&&&&&&     $ lsof -np 1474 | grep LISTEN&&&&     qemu-syst 31777 bernat 12u IPv4 [...] TCP 127.0.0.1:35145 (LISTEN)&&&&&&&&Signed-off-by: Vincent Bernat <vincent@bernat.im>&&&&Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>&&&& "
0," qemu-img/convert: Move bs_n > 1 && -B check down It does not make much sense to use a backing image for the target when&&&&you concatenate multiple images (because then there is no correspondence&&&&between the source images' backing files and the target's); but it was&&&&still possible to give one by using -o backing_file=X instead of -B X.&&&&&&&&Fix this by moving the check.&&&&&&&&(Also, change the error message because -B is not the only way to&&&& specify the backing file, evidently.)&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," xen/9pfs: connect to the frontend Write the limits of the backend to xenstore. Connect to the frontend.&&&&Upon connection, allocate the rings according to the protocol&&&&specification.&&&&&&&&Initialize a QEMUBH to schedule work upon receiving an event channel&&&&notification from the frontend.&&&&&&&&Signed-off-by: Stefano Stabellini <stefano@aporeto.com>&&&&CC: anthony.perard@citrix.com&&&&CC: jgross@suse.com&&&&CC: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&&CC: Greg Kurz <groug@kaod.org>&&&& "
0," qga: Add 'guest-get-host-name' command Retrieving the guest host name is a very useful feature for virtual management&&&&systems. This information can help to have more user friendly VM access&&&&details, instead of an IP there would be the host name. Also the host name&&&&reported can be used to have automated checks for valid SSL certificates.&&&&&&&&virsh # qemu-agent-command F25 '{ ""execute"": ""guest-get-host-name"" }'&&&&{""return"":{""host-name"":""F25.lab.evilissimo.net""}}&&&&&&&&Signed-off-by: Vinzenz Feenstra <vfeenstr@redhat.com>&&&&* minor whitespace fix-ups&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0," migration: Disable hotplug/unplug during migration Until we have reviewed what can/can't be hotplugged during migration,&&&&disable it.  We can enable it later for the things that we know that&&&&work.  For instance, memory hotplug during postcopy doesn't work&&&&currently.&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Reviewed-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&&&&&--&&&&&&&&- Fix typo.  Thanks Thomas.&&&&- Delay migration check after we have checked that we can hotplug that&&&&  device.&&&&- more typos&&&& "
0, cadence_gem: Make the revision a property Expose the Cadence GEM revision as a property.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 541324373cf87b50f8be0439a0cb89f5028b016f.1491947224.git.alistair.francis@xilinx.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, cpus: call cpu_update_icount on read This ensures each time the vCPU thread reads the icount we update the&&&&master timer_state.qemu_icount field. This way as long as updates are&&&&in BQL protected sections (which they should be) the main-loop can&&&&never come to update the log and find time has gone backwards.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&& 
0, target/mips: fix delay slot detection in gen_msa_branch() It is unnecessary to test R6 from delay/forbidden slot check&&&&in gen_msa_branch().&&&&&&&&https://bugs.launchpad.net/qemu/+bug/1663287&&&&&&&&Reported-by: Brian Campbell <bacam@z273.org.uk>&&&&Signed-off-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&& 
0," io: fix incoming client socket initialization The channel socket was initialized manually, but forgot to set&&&&QIO_CHANNEL_FEATURE_SHUTDOWN. Thus, the colo_process_incoming_thread&&&&would hang at recvmsg. This patch just call qio_channel_socket_new to&&&&get channel, Which set QIO_CHANNEL_FEATURE_SHUTDOWN already.&&&&&&&&Signed-off-by: Wang Guang<wang.guang55@zte.com.cn>&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
0," COLO-compare: Optimize compare_common and compare_tcp Add offset args for colo_packet_compare_common, optimize&&&&colo_packet_compare_icmp() and colo_packet_compare_udp()&&&&just compare the IP payload. Before compare all tcp packet,&&&&we compare tcp checksum firstly, this function can get&&&&better performance.&&&&&&&&Signed-off-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," virtio: guard vring access when setting notification Switching to vring caches exposed an existing bug in&&&&virtio_queue_set_notification(): We can't access vring structures&&&&if they have not been set up yet. This may happen, for example,&&&&for virtio-blk devices with multiple queues: The code will try to&&&&switch notifiers for every queue, but the guest may have only set up&&&&a subset of them.&&&&&&&&Fix this by guarding access to the vring memory by checking for&&&&vring.desc. The first aio poll will iron out any remaining&&&&inconsistencies for later-configured queues (buggy legacy drivers).&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," armv7m: Make NVIC expose a memory region rather than mapping itself Make the NVIC device expose a memory region for its users&&&&to map, rather than mapping itself into the system memory&&&&space on realize, and get the one user (the ARMv7M object)&&&&to do this.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-id: 1487604965-23220-7-git-send-email-peter.maydell@linaro.org&&&& "
0," block: Involve block drivers in permission granting In many cases, the required permissions of one node on its children&&&&depend on what its parents require from it. For example, the raw format&&&&or most filter drivers only need to request consistent reads if that's&&&&something that one of their parents wants.&&&&&&&&In order to achieve this, this patch introduces two new BlockDriver&&&&callbacks. The first one lets drivers first check (recursively) whether&&&&the requested permissions can be set; the second one actually sets the&&&&new permission bitmask.&&&&&&&&Also add helper functions that drivers can use in their implementation&&&&of the callbacks to update their permissions on a specific child.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Acked-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," hw/i386: Use Rev3 FADT (ACPI 2.0) instead of Rev1 to improve guest OS support. This updates the FADT generated for x86/64 machine types from Revision 1 to 3. (Based on ACPI standard 2.0 instead of 1.0) The intention is to expose the reset register information to guest operating systems which require it, specifically OS X/macOS. Revision 1 FADTs do not contain the fields relating to the reset register.&&&&&&&&The new layout and contents remains backwards-compatible with operating systems which only support ACPI 1.0, as the existing fields are not modified by this change, as the 64-bit and 32-bit variants are allowed to co-exist according to the ACPI 2.0 standard. No regressions became apparent in tests with a range of Windows (XP-10) and Linux versions.&&&&&&&&The BIOS tables test suite's FADT checksum test has also been updated to reflect the new FADT layout and content.&&&&&&&&Signed-off-by: Phil Dennis-Jordan <phil@philjordan.eu>&&&&Message-Id: <1489558827-28971-2-git-send-email-phil@philjordan.eu>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target/ppc: Fix KVM-HV HPTE accessors When a 'pseries' guest is running with KVM-HV, the guest's hashed page&&&&table (HPT) is stored within the host kernel, so it is not directly&&&&accessible to qemu.  Most of the time, qemu doesn't need to access it:&&&&we're using the hardware MMU, and KVM itself implements the guest&&&&hypercalls for manipulating the HPT.&&&&&&&&However, qemu does need access to the in-KVM HPT to implement&&&&get_phys_page_debug() for the benefit of the gdbstub, and maybe for&&&&other debug operations.&&&&&&&&To allow this, 7c43bca ""target-ppc: Fix page table lookup with kvm&&&&enabled"" added kvmppc_hash64_read_pteg() to target/ppc/kvm.c to read&&&&in a batch of HPTEs from the KVM table.  Unfortunately, there are a&&&&couple of problems with this:&&&&&&&&First, the name of the function implies it always reads a whole PTEG&&&&from the HPT, but in fact in some cases it's used to grab individual&&&&HPTEs (which ends up pulling 8 HPTEs, not aligned to a PTEG from the&&&&kernel).&&&&&&&&Second, and more importantly, the code to read the HPTEs from KVM is&&&&simply wrong, in general.  The data from the fd that KVM provides is&&&&designed mostly for compact migration rather than this sort of one-off&&&&access, and so needs some decoding for this purpose.  The current code&&&&will work in some cases, but if there are invalid HPTEs then it will&&&&not get sane results.&&&&&&&&This patch rewrite the HPTE reading function to have a simpler&&&&interface (just read n HPTEs into a caller provided buffer), and to&&&&correctly decode the stream from the kernel.&&&&&&&&For consistency we also clean up the similar function for altering&&&&HPTEs within KVM (introduced in c138593 ""target-ppc: Update&&&&ppc_hash64_store_hpte to support updating in-kernel htab"").&&&&&&&&Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," qcow2: Use BB for resizing in qcow2_amend_options() In order to able to convert bdrv_truncate() to take a BdrvChild and&&&&later to correctly check the resize permission here, we need to use a&&&&BlockBackend for resizing the image.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," nfs: do not use aio_context_acquire/release Now that all bottom halves and callbacks take care of taking the&&&&AioContext lock, we can migrate some users away from it and to a&&&&specific QemuMutex or CoMutex.&&&&&&&&Protect libnfs calls with a QemuMutex.  Callbacks are invoked&&&&using bottom halves, so we don't even have to drop it around&&&&callback invocations.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 20170222180725.28611-3-pbonzini@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, s390x: add property adapter_routes_max_batch To make virtio-ccw supports more that  64 virtqueues we will have to&&&&increase ADAPTER_ROUTES_MAX_GSI which is currently limiting the number if&&&&possible adapter routes. Of course increasing the number of supported&&&&routes can break backwards migration.&&&&&&&&Let us introduce a compatibility property adapter_routes_max_batch so&&&&client code can use the some old limit if in compatibility mode and&&&&retain the migration compatibility.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& 
0," disas/cris.c: Fix Coverity warning about unchecked NULL Coverity (CID 1005689) warns that we don't check that&&&&spec_reg_info() returned non-NULL before dereferencing.&&&&Add the check, though as the comment notes this is&&&&a can't-really-happen case because the earlier constraint&&&&matching should have ruled out the ""unknown reg"" case.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, target/xtensa: tests: add ccount write tests Check that CCOUNT SR is writable and that CCOMPARE timers are updated&&&&when CCOUNT is written to.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& 
0," tcg: Minor adjustments to deposit expanders Assert that len is not 0.&&&&&&&&Since we have asserted that ofs + len <= N, a later&&&&check for len == N implies that ofs == 0.&&&&&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," hw/isa/lpc_ich9: add SMI feature negotiation via fw_cfg Introduce the following fw_cfg files:&&&&&&&&- ""etc/smi/supported-features"": a little endian uint64_t feature bitmap,&&&&  presenting the features known by the host to the guest. Read-only for&&&&  the guest.&&&&&&&&  The content of this file will be determined via bit-granularity ICH9-LPC&&&&  device properties, to be introduced later. For now, the bitmask is left&&&&  zeroed. The bits will be set from machine type compat properties and on&&&&  the QEMU command line, hence this file is not migrated.&&&&&&&&- ""etc/smi/requested-features"": a little endian uint64_t feature bitmap,&&&&  representing the features the guest would like to request. Read-write&&&&  for the guest.&&&&&&&&  The guest can freely (re)write this file, it has no direct consequence.&&&&  Initial value is zero. A nonzero value causes the SMI-related fw_cfg&&&&  files and fields that are under guest influence to be migrated.&&&&&&&&- ""etc/smi/features-ok"": contains a uint8_t value, and it is read-only for&&&&  the guest. When the guest selects the associated fw_cfg key, the guest&&&&  features are validated against the host features. In case of error, the&&&&  negotiation doesn't proceed, and the ""features-ok"" file remains zero. In&&&&  case of success, the ""features-ok"" file becomes (uint8_t)1, and the&&&&  negotiated features are locked down internally (to which no further&&&&  changes are possible until reset).&&&&&&&&  The initial value is zero.  A nonzero value causes the SMI-related&&&&  fw_cfg files and fields that are under guest influence to be migrated.&&&&&&&&The C-language fields backing the ""supported-features"" and&&&&""requested-features"" files are uint8_t arrays. This is because they carry&&&&guest-side representation (our choice is little endian), while&&&&VMSTATE_UINT64() assumes / implies host-side endianness for any uint64_t&&&&fields. If we migrate a guest between hosts with different endiannesses&&&&(which is possible with TCG), then the host-side value is preserved, and&&&&the host-side representation is translated. This would be visible to the&&&&guest through fw_cfg, unless we used plain byte arrays. So we do.&&&&&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Cc: Igor Mammedov <imammedo@redhat.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Message-Id: <20170126014416.11211-2-lersek@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0,"&&&&QEMU assumes MTU is valid if success is returned.&&&&&&&&Vhost-net driver sends this request through a new&&&&vhost_net_set_mtu vhost_ops entry.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Cc: Aaron Conole <aconole@redhat.com>&&&&Signed-off-by: Maxime Coquelin <maxime.coquelin@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& """
0," quorum: Clean up quorum_aio_get() Make sure that all fields of the new QuorumAIOCB are zeroed when the&&&&function returns even without explicitly setting them. This will protect&&&&us when new fields are added, removes some explicit zero assignment and&&&&makes the code a little nicer to read.&&&&&&&&Suggested-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&& "
0, cadence_uart: Check baud rate generator and divider values on migration The Cadence UART device emulator calculates speed by dividing the&&&&baud rate by a 'baud rate generator' & 'baud rate divider' value.&&&&The device specification defines these register values to be&&&&non-zero and within certain limits. Checks were recently added when&&&&writing to these registers but not when restoring from migration.&&&&&&&&This patch adds checks when restoring from migration to avoid divide by&&&&zero errors.&&&&&&&&Reported-by: Huawei PSIRT <psirt@huawei.com>&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 04ae30ed8ee1758cd2d2af880da4d28f74c67738.1481132150.git.alistair.francis@xilinx.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," virtio: avoid using guest_notifier_mask in vhost-user mode Because guest mask notifier cannot be used in vhost-user mode, a boolean&&&&flag ""use_guest_notifier_mask"" was added in commit 5669655aafd to disable&&&&the use of guest mask notifier under virtio-pci. However this flag wasn't&&&&checked in other virtio devices, such as virtio-mmio. In our tests, it&&&&caused assertion error under ""vhost-user + virtio-mmio"". This patch&&&&addresses this problem by adding a check before guest_notifier_mask is&&&&called.&&&&&&&&Signed-off-by: Wei Huang <wei@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," i386: amd_iommu: fix MMIO register count and access IOMMU MMIO registers are divided in two groups by their offsets.&&&&Low offsets(<0x2000) registers are grouped into 'amdvi_mmio_low'&&&&table and higher offsets(>=0x2000) registers are grouped into&&&&'amdvi_mmio_high' table. No of registers in each table is given&&&&by macro 'AMDVI_MMIO_REGS_LOW' and 'AMDVI_MMIO_REGS_HIGH' resp.&&&&Values of these two macros were swapped, resulting in an OOB&&&&access when reading 'amdvi_mmio_high' table. Correct these two&&&&macros. Also read from 'amdvi_mmio_low' table for lower address.&&&&&&&&Reported-by: Azureyang <azureyang@tencent.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," qmp command 'query-migrate-parameters' doesn't show the&&&&default value for x-checkpoint-delay option.&&&&&&&&This also fixes the fact that HMP was relying on unspecified behavior by&&&&reading x_checkpoint_delay without checking has_x_checkpoint_delay.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& """
0," target-ppc: Fix CPU migration from qemu-2.6 <-> later versions When migration for target-ppc was converted to vmstate, several&&&&VMSTATE_EQUAL() checks were foolishly included of things that really&&&&should be internal state.  Specifically we verified equality of the&&&&insns_flags and insns_flags2 fields, which are used within TCG to&&&&determine which groups of instructions are available on this cpu&&&&model.  Between qemu-2.6 and qemu-2.7 we made some changes to these&&&&classes which broke migration.&&&&&&&&This path fixes migration both forwards and backwards.  On migration&&&&from 2.6 to later versions we import the fields into teporary&&&&variables, which we then ignore.  In migration backwards, we populate&&&&the temporary fields from the runtime fields, but mask out the bits&&&&which were added after qemu-2.6, allowing the VMSTATE_EQUAL in&&&&qemu-2.6 to accept the stream.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&& "
0," target-ppc: Allow eventual removal of old migration mistakes Until very recently, the vmstate for ppc cpus included some poorly&&&&thought out VMSTATE_EQUAL() components, that can easily break&&&&migration compatibility, and did so between qemu-2.6 and later&&&&versions.  A hack was recently added which fixes this migration&&&&breakage, but it leaves the unhelpful cruft of these fields in the&&&&migration stream.&&&&&&&&This patch adds a new cpu property allowing these fields to be removed&&&&from the stream entirely.  For the pseries-2.8 machine type - which&&&&comes after the fix - and for all non-pseries machine types - which&&&&aren't mature enough to care about cross-version migration - we remove&&&&the fields from the stream.&&&&&&&&For pseries-2.7 and earlier, The migration hack remains in place,&&&&allowing backwards and forwards migration with the older machine&&&&types.&&&&&&&&This restricts the migration compatibility cruft to older machine&&&&types, and at least opens the possibility of eventually deprecating&&&&and removing it entirely.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&& "
0," block/curl: Drop TFTP ""support"" Because TFTP does not support byte ranges, it was never usable with our&&&&curl block driver. Since apparently nobody has ever complained loudly&&&&enough for someone to take care of the issue until now, it seems&&&&reasonable to assume that nobody has ever actually used it.&&&&&&&&Therefore, it should be safe to just drop it from curl's protocol list.&&&&&&&&[Jeff Cody: Below is additional summary pulled, with some rewording,&&&&            from followup emails between Max and Markus, to explain what&&&&            worked and what didn't]&&&&&&&&TFTP would sometimes work, to a limited extent, for images <= the curl&&&&""readahead"" size, so long as reads started at offset zero.  By default,&&&&that readahead size is 256KB.&&&&&&&&Reads starting at a non-zero offset would also have returned data from a&&&&zero offset.  It can become more complicated still, with mixed reads at&&&&zero offset and non-zero offsets, due to data buffering.&&&&&&&&In short, TFTP could only have worked before in very specific scenarios&&&&with unrealistic expectations and constraints.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Message-id: 20161102175539.4375-4-mreitz@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," acpi nvdimm: fix Arg6 usage As the function only has 5 args, we use local7 instead of it&&&&&&&&Suggested-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," nbd: Refactor conversion to errno to silence checkpatch Checkpatch complains that 'return EINVAL' is usually wrong&&&&(since we tend to favor 'return -EINVAL').  But it is a&&&&false positive for nbd_errno_to_system_errno().  Since NBD&&&&may add future defined wire values, refactor the code to&&&&keep checkpatch happy.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1476469998-28592-14-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," COLO: Add checkpoint-delay parameter for migrate-set-parameters Add checkpoint-delay parameter for migrate-set-parameters, so that&&&&we can control the checkpoint frequency when COLO is in periodic mode.&&&&&&&&Cc: Luiz Capitulino <lcapitulino@redhat.com>&&&&Cc: Eric Blake <eblake@redhat.com>&&&&Cc: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Amit Shah <amit@amitshah.net>&&&& "
0," virtio-scsi: always use dataplane path if ioeventfd is active Override start_ioeventfd and stop_ioeventfd to start/stop the&&&&whole dataplane logic.  This has some positive side effects:&&&&&&&&- no need anymore for virtio_add_queue_aio (i.e. a revert of&&&&  commit 1c627137c10ee2dcf59e0383ade8a9abfa2d4355)&&&&&&&&- no need anymore to switch from generic ioeventfd handlers to&&&&  dataplane&&&&&&&&It detects some errors better:&&&&&&&&    $ qemu-system-x86_64 -object iothread,id=io \&&&&          -device virtio-scsi-pci,ioeventfd=off,iothread=io&&&&    qemu-system-x86_64: -device virtio-scsi-pci,ioeventfd=off,iothread=io:&&&&    ioeventfd is required for iothread&&&&&&&&while previously it would have started just fine.&&&&&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," vfio: Add support for mmapping sub-page MMIO BARs Now the kernel commit 05f0c03fbac1 (""vfio-pci: Allow to mmap&&&&sub-page MMIO BARs if the mmio page is exclusive"") allows VFIO&&&&to mmap sub-page BARs. This is the corresponding QEMU patch.&&&&With those patches applied, we could passthrough sub-page BARs&&&&to guest, which can help to improve IO performance for some devices.&&&&&&&&In this patch, we expand MemoryRegions of these sub-page&&&&MMIO BARs to PAGE_SIZE in vfio_pci_write_config(), so that&&&&the BARs could be passed to KVM ioctl KVM_SET_USER_MEMORY_REGION&&&&with a valid size. The expanding size will be recovered when&&&&the base address of sub-page BAR is changed and not page aligned&&&&any more in guest. And we also set the priority of these BARs'&&&&memory regions to zero in case of overlap with BARs which share&&&&the same page with sub-page BARs in guest.&&&&&&&&Signed-off-by: Yongji Xie <xyjxie@linux.vnet.ibm.com>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," sun4uv: fix serial initialization regression Since commit b6607a1a204d, serial_hds_isa_init() was introduced to&&&&factor out serial_isa_init() loops. However, sun4uv shouldn't start from&&&&0 when there is a mm serial on 0 already. Add a ""from"" argument to&&&&serial_hds_isa_init().&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20161022095318.17775-5-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," tests/docker: test-build script Much like test-quick but only builds. This is useful for some of the&&&&build targets like ThreadSanitizer that don't yet pass ""make check"".&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&&&&&Message-Id: <20161011161625.9070-3-alex.bennee@linaro.org>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&& "
0," target-i386: Enable CPUID[0x8000000A] if SVM is enabled SVM needs CPUID[0x8000000A] to be available. So if SVM is enabled&&&&in a CPU model or explicitly in the command-line, adjust CPUID&&&&xlevel to expose the CPUID[0x8000000A] leaf.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," char: update read handler in all cases In commit ac1b84dd1 (rhbz#1027181), a check was added to only update the&&&&""read handler"" when the front-end is opened, because the read callbacks&&&&were not restored when a device is plugged. However, this seems not&&&&correct, the handler is correctly set back on hotplug (in&&&&virtconsole_realize) and the bug can no longer be reproduced.&&&&&&&&Calling chr_update_read_handler() allows to fix the mux driver to stop&&&&calling the child handlers (which may be going to be destroyed).&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20161003094704.18087-2-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," net: mcf: limit buffer descriptor count ColdFire Fast Ethernet Controller uses buffer descriptors to manage&&&&data flow to/fro receive & transmit queues. While transmitting&&&&packets, it could continue to read buffer descriptors if a buffer&&&&descriptor has length of zero and has crafted values in bd.flags.&&&&Set upper limit to number of buffer descriptors.&&&&&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," tcg: Make tb_flush() thread safe Use async_safe_run_on_cpu() to make tb_flush() thread safe.  This is&&&&possible now that code generation does not happen in the middle of&&&&execution.&&&&&&&&It can happen that multiple threads schedule a safe work to flush the&&&&translation buffer. To keep statistics and debugging output sane, always&&&&check if the translation buffer has already been flushed.&&&&&&&&Signed-off-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Signed-off-by: Sergey Fedorov <sergey.fedorov@linaro.org>&&&&[AJB: minor re-base fixes]&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-Id: <1470158864-17651-13-git-send-email-alex.bennee@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," tcg: Prepare TB invalidation for lockless TB lookup When invalidating a translation block, set an invalid flag into the&&&&TranslationBlock structure first.  It is also necessary to check whether&&&&the target TB is still valid after acquiring 'tb_lock' but before calling&&&&tb_add_jump() since TB lookup is to be performed out of 'tb_lock' in&&&&future. Note that we don't have to check 'last_tb'; an already invalidated&&&&TB will not be executed anyway and it is thus safe to patch it.&&&&&&&&Suggested-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," block: Accept node-name for block-stream In order to remove the necessity to use BlockBackend names in the&&&&external API, we want to allow node-names everywhere. This converts&&&&block-stream to accept a node-name without lifting the restriction that&&&&we're operating at a root node.&&&&&&&&In case of an invalid device name, the command returns the GenericError&&&&error class now instead of DeviceNotFound, because this is what&&&&qmp_get_root_bs() returns.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&& "
0," block: Accept node-name for blockdev-backup In order to remove the necessity to use BlockBackend names in the&&&&external API, we want to allow node-names everywhere. This converts&&&&blockdev-backup and the corresponding transaction action to accept a&&&&node-name without lifting the restriction that we're operating at a root&&&&node.&&&&&&&&In case of an invalid device name, the command returns the GenericError&&&&error class now instead of DeviceNotFound, because this is what&&&&qmp_get_root_bs() returns.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," net: check fragment length during fragmentation Network transport abstraction layer supports packet fragmentation.&&&&While fragmenting a packet, it checks for more fragments from&&&&packet length and current fragment length. It is susceptible&&&&to an infinite loop, if the current fragment length is zero.&&&&Add check to avoid it.&&&&&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Dmitry Fleytman <dmitry@daynix.com>&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," pc-bios/optionrom: Fix OpenBSD build with better detection of linker emulation The various host OSes are irritatingly variable about the name&&&&of the linker emulation we need to pass to ld's -m option to&&&&build the i386 option ROMs. Instead of doing this via a&&&&CONFIG ifdef, check in configure whether any of the emulation&&&&names we know about will work and pass the right answer through&&&&to the makefile. If we can't find one, we fall back to not trying&&&&to build the option ROMs, in the same way we would for a non-x86&&&&host platform.&&&&&&&&This is in particular necessary to unbreak the build on OpenBSD,&&&&since it wants a different answer to FreeBSD and we don't have&&&&an existing CONFIG_ variable that distinguishes the two.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Sean Bruno <sbruno@freebsd.org>&&&&Message-id: 1470672688-6754-1-git-send-email-peter.maydell@linaro.org&&&& "
0," Revert ""pc: Enforce adding CPUs contiguously and removing them in opposite order"" This reverts commit 4da7faaeb0c7dd3f7f233165d336c878f78fd1eb.&&&&&&&&Since commit:&&&&  pc: init CPUState->cpu_index with index in possible_cpus[]&&&&cpu_index is stable regardless of the order cpus were created&&&&and QEMU instance stays migratable always so limitation added&&&&by 4da7faaeb could be safely removed.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," error: Strip trailing '\n' from error string arguments (again) Commit 9af9e0f, 6daf194d, be62a2eb and 312fd5f got rid of a bunch, but&&&&they keep coming back.  checkpatch.pl tries to flag them since commit&&&&5d596c2, but it's not very good at it.  Offenders tracked down with&&&&Coccinelle script scripts/coccinelle/err-bad-newline.cocci, an updated&&&&version of the script from commit 312fd5f.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1470224274-31522-2-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0, mirror: fix request throttling in drive-mirror There are 2 deficiencies here:&&&&- mirror_iteration could start several requests inside. Thus we could&&&&  simply have more in_flight requests than MAX_IN_FLIGHT.&&&&- keeping this in mind throttling in mirror_run which is checking&&&&  s->in_flight == MAX_IN_FLIGHT is wrong.&&&&&&&&The patch adds the check and throttling into mirror_iteration and fixes&&&&the check in mirror_run() to be sure.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1466598927-5990-1-git-send-email-den@openvz.org&&&&CC: Jeff Cody <jcody@redhat.com>&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&CC: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&(cherry picked from commit e648dc95c28fbca12e67be26a1fc4b9a0676c3fe)&&&& 
0," spapr_pci: Include spapr.h instead of playing games with #error include/hw/pci-host/spapr.h needs hw/ppc/spapr.h.  It checks whether&&&&its header guard is defined, and errors out if it isn't.&&&&&&&&Playing games with some other header's guard symbol is not a good&&&&idea.  Just include the frackin' header already.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0," raw-win32: Set request_alignment during .bdrv_refresh_limits() We want to eventually stick request_alignment alongside other&&&&BlockLimits, but first, we must ensure it is populated at the&&&&same time as all other limits, rather than being a special case&&&&that is set only when a block is first opened.&&&&&&&&In this case, raw_probe_alignment() already did what we needed,&&&&so just fix its signature and wire it in correctly.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," linux-user: fd_trans_host_to_target_data() must process only received data if we process the whole buffer, the netlink helpers can try&&&&to swap invalid data.&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," nvdimm acpi: set HDLE properly Now we pass HDLE to Qemu properly, use 0 for root device and use the&&&&handle for nvdimm devices&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," char: change qemu_chr_fe_add_watch to return unsigned g_source_attach can return any value between 1 and UINT_MAX if you let&&&&QEMU run long enough.  However, qemu_chr_fe_add_watch can also return&&&&a negative errno value when the device is disconnected or does not&&&&support chr_add_watch.  Change it to return zero to avoid overloading&&&&these values.&&&&&&&&Fix the cadence_uart which asserts in this case (easily obtained with&&&&""-serial pty"").&&&&&&&&Tested-by: Bret Ketchum <bcketchum@gmail.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, cadence_gem: Avoid infinite loops with a misconfigured buffer A guest can write zero to the DMACFG resulting in an infinite loop when&&&&it reaches the while(bytes_to_copy) loop.&&&&&&&&To avoid this issue enforce a minimum size for the RX buffer. Hardware&&&&does not have this enforcement and relies on the guest to set a non-zero&&&&value.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Reported-by: P J P <ppandit@redhat.com>&&&&Message-id: 84bb1c391b833275da3f573d4972920cea34c188.1466539342.git.alistair.francis@xilinx.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, block: Prevent sleeping jobs from resuming if they have been paused If we pause a block job and drain its BlockDriverState we want that&&&&the job remains inactive until we call block_job_resume() again.&&&&&&&&However if we pause the job while it is sleeping then it will resume&&&&when the sleep timer fires.&&&&&&&&This patch prevents that from happening by checking if the job has&&&&been paused after it comes back from sleeping.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Suggested-by: Kevin Wolf <kwolf@redhat.com>&&&&Message-id: 3d9011151512326b890d22bdab3530244ef349d7.1464346103.git.berto@igalia.com&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& 
0, blockdev: clean up error handling in do_open_tray Returns negative error codes and accompanying error messages in cases where&&&&the device has no tray or the tray is locked and isn't forced open. This&&&&extra information should result in better flexibility in functions that&&&&call do_open_tray.&&&&&&&&Suggested by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Colin Lord <clord@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," docker: Add common.rc ""requires"" checks the ""FEATURE"" environment for specified prerequisits,&&&&and skip the execution of test if not found.&&&&&&&&""build_qemu"" is the central routine to compile QEMU for tests to call.&&&&&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1464755128-32490-8-git-send-email-famz@redhat.com&&&& "
0," linux-user: Remove redundant default action check in queue_signal() Both queue_signal() and process_pending_signals() did check for default&&&&actions of signals, this is redundant and also causes fatal and stopping&&&&signals to incorrectly cause guest system calls to be interrupted.&&&&&&&&The code in queue_signal() is removed.&&&&&&&&Signed-off-by: Timothy Edward Baldwin <T.E.Baldwin99@members.leeds.ac.uk>&&&&Message-id: 1441497448-32489-21-git-send-email-T.E.Baldwin99@members.leeds.ac.uk&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0, virtio-gpu: check max_outputs value The value must be less than VIRTIO_GPU_MAX_SCANOUT.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1463653560-26958-4-git-send-email-marcandre.lureau@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0, exec: Remove cpu from cpus list during cpu_exec_exit() CPUState *cpu gets added to the cpus list during cpu_exec_init(). It&&&&should be removed from cpu_exec_exit().&&&&&&&&cpu_exec_exit() is called from generic CPU::instance_finalize and some&&&&archs like PowerPC call it from CPU unrealizefn. So ensure that we&&&&dequeue the cpu only once.&&&&&&&&Now -1 value for cpu->cpu_index indicates that we have already dequeued&&&&the cpu for CONFIG_USER_ONLY case also.&&&&&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," vl: change runstate only if new state is different from current state Previously, qemu will abort at following scenario:&&&&(qemu) stop&&&&(qemu) system_reset&&&&(qemu) system_reset&&&&(qemu) 2016-04-13T20:54:38.979158Z qemu-system-x86_64: invalid runstate transition: 'prelaunch' -> 'prelaunch'&&&&&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1460604352-18630-1-git-send-email-lizhijian@cn.fujitsu.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," qemu-iotests: Fix regression in 136 on aio_read invalid Commit 093ea232 removed the ability for aio_read and aio_write&&&&to artificially inflate the invalid statistics counters for&&&&block devices, since it no longer flags unaligned offset or&&&&length.  Add 'aio_read -i' and 'aio_write -i' to restore&&&&the ability, and update test 136 to use it.&&&&&&&&Reported-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1463416983-28318-4-git-send-email-eblake@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0, io: remove checking of EWOULDBLOCK Since we now canonicalize WSAEWOULDBLOCK into EAGAIN there is&&&&no longer any need to explicitly check EWOULDBLOCK for Win32.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
0," qemu-iotests: Some more write_zeroes tests This covers some more write_zeroes cases which are relevant for the&&&&recent qcow2 optimisations that check the allocation status of the&&&&backing file for partial cluster write_zeroes requests.&&&&&&&&This needs to be separate from 034 because we can only support qcow2 in&&&&this test case for multiple reasons: We check the allocation status&&&&after write_zeroes with 'qemu-img map' and the optimised behaviour that&&&&produces zero clusters is only implemented in qcow2; second, the map&&&&command returns offsets that are qcow2 specific; and finally, we also&&&&use 512 byte clusters which aren't supported for formats like qed.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," acpi: add build_append_named_dword, returning an offset in buffer This is a very limited form of support for runtime patching -&&&&similar in functionality to what we can do with ACPI_EXTRACT&&&&macros in python, but implemented in C.&&&&&&&&This is to allow ACPI code direct access to data tables -&&&&which is exactly what DataTableRegion is there for, except&&&&no known windows release so far implements DataTableRegion.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, hw/arm/sysbus-fdt: remove qemu_fdt_setprop returned value check qemu_fdt_setprop asserts in case of error hence no need to check&&&&the returned value.&&&&&&&&Signed-off-by: Eric Auger <eric.auger@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& 
0," qdev-monitor: improve error message when alias device is unavailable When trying to instantiate an alias that points to a device class that&&&&doesn't exist, the error message looks like qemu misunderstood the&&&&request:&&&&&&&&$ s390x-softmmu/qemu-system-s390x -device virtio-gpu&&&&qemu-system-s390x: -device virtio-gpu: 'virtio-gpu-ccw' is not a valid&&&&device model name&&&&&&&&Special-case the error message to make it explicit that alias&&&&expansion is going on:&&&&&&&&$ s390x-softmmu/qemu-system-s390x -device virtio-gpu&&&&qemu-system-s390x: -device virtio-gpu: 'virtio-gpu' (alias&&&&'virtio-gpu-ccw') is not a valid device model name&&&&&&&&Suggested-By: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Sascha Silbe <silbe@linux.vnet.ibm.com>&&&&Message-Id: <1455831854-49013-2-git-send-email-silbe@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," rdma: remove check on time_spent when calculating mbs Within the if statement, time_spent is assured to be non-zero.&&&&&&&&This patch just removes the check on time_spent when calculating mbs.&&&&&&&&Signed-off-by: Wei Yang <richard.weiyang@gmail.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, migration: ensure htab_save_first completes after timeout htab_save_first_pass could return without finishing its work due to&&&&timeout. The patch checks if another invocation of it is necessary and&&&&will call it in htab_save_complete if necessary.&&&&&&&&Signed-off-by: Jianjun Duan <duanj@linux.vnet.ibm.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&[removed overlong line]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," vl: Reset location after handling command-line arguments After looping through all command-line arguments, error location&&&&info becomes obsolete, and any function calling error_report()&&&&will print misleading information. This breaks error reporting&&&&for some option handling, like:&&&&&&&&  $ qemu-system-x86_64 -icount rr=x -vnc :0&&&&  qemu-system-x86_64: -vnc :0: Invalid icount rr option: x&&&&&&&&  $ qemu-system-x86_64 -m size= -vnc :0&&&&  qemu-system-x86_64: -vnc :0: missing 'size' option value&&&&&&&&Fix this by resetting location info as soon as we exit the&&&&command-line handling loop.&&&&&&&&With this, replay_configure() and set_memory_options() won't&&&&print any location info yet, but at least they won't print&&&&incorrect information.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-Id: <1455303747-19776-3-git-send-email-ehabkost@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&[""Do not insert code here"" comment added to prevent regressions]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0, block: Add blk_dev_has_tray() Pull out the check whether a block device has a tray from&&&&blk_dev_is_tray_open() into its own function so both attributes (whether&&&&there is a tray vs. whether that tray is open) can be queried&&&&independently.&&&&&&&&Cc: qemu-stable <qemu-stable@nongnu.org>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: 1454096953-31773-2-git-send-email-mreitz@redhat.com&&&& 
0," docs/memory.txt: Improve list of different memory regions Improve the part of the memory region documentation which describes&&&&the various different kinds of memory region:&&&& * add the missing types ROM, IOMMU and reservation&&&& * mention the functions used to initialize each type, as a hint&&&&   for finding the API docs and examples of use&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-Id: <1454007297-3971-1-git-send-email-peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, target-arm: Add isread parameter to CPAccessFns System registers might have access requirements which need to&&&&be described via a CPAccessFn and which differ for reads and&&&&writes. For this to be possible we need to pass the access&&&&function a parameter to tell it whether the access being checked&&&&is a read or a write.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Message-id: 1454506721-11843-6-git-send-email-peter.maydell@linaro.org&&&& 
0, linux-user: check fd is >= 0 in fd_trans_host_to_target_data/fd_trans_host_to_target_addr Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
0," ide: Correct the CHS 'cyls_max' limit to be 65535 In b7eb0c9:&&&&  hw/block-common: Factor out fall back to legacy -drive cyls=...&&&&'blkconf_geometry()' was introduced, factoring out CHS limit validation&&&&code that was repeated in ide, scsi, virtio-blk.&&&&&&&&The original IDE CHS limit prior b7eb0c9 was 65535,16,255 (as per ATA&&&&CHS addressing).&&&&However the 'cyls_max' argument passed to 'blkconf_geometry' in the&&&&ide_dev_initfn case was accidentally set to 65536 instead of 65535.&&&&&&&&Fix, providing the correct 'cyls_max'.&&&&&&&&Signed-off-by: Shmulik Ladkani <shmulik.ladkani@ravellosystems.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1453112371-29760-1-git-send-email-shmulik.ladkani@ravellosystems.com&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&& "
0," gtk: use qemu_chr_alloc() to allocate CharDriverState The gd_vc_handler() callback is using g_malloc0() to&&&&allocate the CharDriverState struct. As a result the&&&&logfd field is getting initialized to 0, instead of&&&&-1 when no logfile is requested.&&&&&&&&The result is that when running&&&&&&&& $ qemu-system-i386 -nodefaults -chardev vc,id=mon0 -mon chardev=mon0&&&&&&&&qemu duplicates all monitor output to stdout as well&&&&as the GTK window.&&&&&&&&Not using qemu_chr_alloc() was already a bug, but harmless&&&&until this commit&&&&&&&&  commit d0d7708ba29cbcc343364a46bff981e0ff88366f&&&&  Author: Daniel P. Berrange <berrange@redhat.com>&&&&  Date:   Mon Jan 11 12:44:41 2016 +0000&&&&&&&&    qemu-char: add logfile facility to all chardev backends&&&&&&&&which exposed the problem as a behaviour regression&&&&&&&&Reported-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Tested-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Message-id: 1453377386-10190-1-git-send-email-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," acpi: aml: add helper for Opcode Arg2 Arg2 [Dst] AML pattern Currently AML API doesn't compose terms in form of&&&&following pattern:&&&&&&&&   Opcode Arg2 Arg2 [Dst]&&&&&&&&but ASL used in piix4/q35 DSDT ACPI tables uses that&&&&form, so for clean conversion of it, AML API should&&&&be able to handle an optional 'Dst' argumet used there.&&&&&&&&Since above pattern is used by arithmetic/bit ops,&&&&introduce helper that they could reuse.&&&&It reduces code duplication in existing 5 aml_foo()&&&&functions and also will prevent more duplication&&&&when exiting functions are extended to support&&&&optional 'Dst' argument.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Shannon Zhao <shannon.zhao@linaro.org>&&&& "
0," crypto: add support for loading encrypted x509 keys Make use of the QCryptoSecret object to support loading of&&&&encrypted x509 keys. The optional 'passwordid' parameter&&&&to the tls-creds-x509 object type, provides the ID of a&&&&secret object instance that holds the decryption password&&&&for the PEM file.&&&&&&&& # printf ""123456"" > mypasswd.txt&&&& # $QEMU \&&&&    -object secret,id=sec0,filename=mypasswd.txt \&&&&    -object tls-creds-x509,passwordid=sec0,id=creds0,\&&&&            dir=/home/berrange/.pki/qemu,endpoint=server \&&&&    -vnc :1,tls-creds=creds0&&&&&&&&This requires QEMU to be linked to GNUTLS >= 3.1.11. If&&&&GNUTLS is too old an error will be reported if an attempt&&&&is made to pass a decryption password.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
0," qapi-types: Drop unnedeed ._fwdefn Previously, the generated code in qapi-types.c initialized all&&&&enum lookup tables first, prior to any other definitions.  But&&&&there are no topological sorting requirements that mandate this&&&&layout, so we can drop the QAPISchemaGenTypeVisitor._fwdefn&&&&field and just generate all definitions in visitation order.&&&&&&&&The generated code shows some churn due to reordering, but it&&&&is still fairly straightforward to follow (all the deletions&&&&occur in one hunk, and all the deleted lines are re-inserted&&&&in the same order later in the same files, just spread across&&&&multiple insertion points).&&&&&&&&Suggested-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1449033659-25497-6-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," exec: Stop using memory after free memory_region_unref(mr) can free memory.&&&&&&&&For example I got:&&&&&&&&Program received signal SIGSEGV, Segmentation fault.&&&&[Switching to Thread 0x7f43280d4700 (LWP 4462)]&&&&0x00007f43323283c0 in phys_section_destroy (mr=0x7f43259468b0)&&&&    at /home/don/xen/tools/qemu-xen-dir/exec.c:1023&&&&1023        if (mr->subpage) {&&&&(gdb) bt&&&&    at /home/don/xen/tools/qemu-xen-dir/exec.c:1023&&&&    at /home/don/xen/tools/qemu-xen-dir/exec.c:1034&&&&    at /home/don/xen/tools/qemu-xen-dir/exec.c:2205&&&&(gdb) p mr&&&&$1 = (MemoryRegion *) 0x7f43259468b0&&&&&&&&And this change prevents this.&&&&&&&&Signed-off-by: Don Slutz <Don.Slutz@Gmail.com>&&&&Message-Id: <1448921464-21845-1-git-send-email-Don.Slutz@Gmail.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ohci: clear pending SOF on suspend On overcommitted CPU, kernel can be so slow that an interrupt can&&&&be triggered by the device whereas the driver is not ready to receive&&&&it. This drives us into an infinite loop.&&&&&&&&On suspend, if a SOF interrupt is raised between the stop of the&&&&device processing and the change of the device internal state to&&&&OHCI_USB_SUSPEND (QEMU stops SOF timer on this state change), this&&&&interrupt is never acknowledged.&&&&&&&&This patch clears pending SOF interrupt on OHCI_USB_SUSPEND setting.&&&&&&&&Some details:&&&&&&&&- ohci_irq(): the OHCI interrupt handler, acknowledges the SOF IRQ&&&&  only if the state of the driver (rh_state) is OHCI_STATE_RUNNING.&&&&  So if this interrupt happens and the driver is not in this state,&&&&  the function is called again and again, moving the system to a&&&&  CPU starvation.&&&&&&&&- ohci_rh_suspend(): the function stop the operation and acknowledge&&&&  pending interrupts (but doesn't disable it). Later in the function,&&&&  the device is moved to OHCI_SUSPEND_STATE, and the driver to&&&&  OHCI_RH_SUSPENDED. If between the moment when the interrupt is&&&&  acknowledged and the moment when the device is suspended a new&&&&  interrupt is raised, it will be never acknowledged because the&&&&  driver is now not in OHCI_RH_RUNNING state.&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Message-id: 1452109525-32150-3-git-send-email-lvivier@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," tests/vhost-user-bridge: propose GUEST_ANNOUNCE feature The backend has to know whether VIRTIO_NET_F_GUEST_ANNOUNCE was&&&&negotiated, so, as a hack we propose the feature by&&&&vhost-user-bridge during the feature negotiation.&&&&&&&&Signed-off-by: Victor Kaplansky <victork@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, tests: fix cdrom_pio_impl in ide-test The check for the cleared BSY flag has to be performed&&&&before each data transfer and not just before the&&&&first one.&&&&&&&&Commit 5f81724d revealed this glitch as the BSY flag&&&&was not set in ATAPI PIO transfers before.&&&&&&&&While at it fix the descriptions and add a comment before&&&&the nested for loop that transfers the data.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Message-id: 1448029742-19771-1-git-send-email-pl@kamp.de&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, q35: Check propery to determine if iommu is set The helper function machine_iommu() isn't necesary. We can&&&&directly check for the property.&&&&&&&&Signed-off-by: Bandan Das <bsd@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Bandan Das <bsd@redhat.com>&&&& 
0," qjson: surprise, allocating 6 QObjects per token is expensive Replace the contents of the tokens GQueue with a simple struct.  This cuts&&&&the amount of memory allocated by tests/check-qjson from ~500MB to ~20MB,&&&&and the execution time from 600ms to 80ms on my laptop.  Still a lot (some&&&&could be saved by using an intrusive list, such as QSIMPLEQ, instead of&&&&the GQueue), but the savings are already massive and the right thing to&&&&do would probably be to get rid of json-streamer completely.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1448300659-23559-5-git-send-email-pbonzini@redhat.com>&&&&[Straightforwardly rebased on my patches]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0, qga: allow to lookup in PATH from the passed envp for guest-exec This was original behaviour before GLIB gspawn() rework and we rely on&&&&this behaviour.&&&&&&&&Signed-off-by: Yuri Pudgorodskiy <yur@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&* add version check (2.33.2) for G_SPAWN_SEARCH_PATH_FROM_ENVP&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& 
0, replay: shutdown event This patch records and replays simulator shutdown event.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20150917162433.8676.32262.stgit@PASHA-ISP.def.inno>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&& 
0, replay: internal functions for replay log This patch adds functions to perform read and write operations&&&&with replay log.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20150917162342.8676.29445.stgit@PASHA-ISP.def.inno>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, replay: interrupts and exceptions This patch includes modifications of common cpu files. All interrupts and&&&&exceptions occured during recording are written into the replay log.&&&&These events allow correct replaying the execution by kicking cpu thread&&&&when one of these events is found in the log.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20150917162416.8676.57647.stgit@PASHA-ISP.def.inno>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," hw/misc: Add support for ADC controller in Xilinx Zynq 7000 Add support for the Xilinx XADC core used in Zynq 7000.&&&&&&&&References:&&&&- Zynq-7000 All Programmable SoC Technical Reference Manual&&&&- 7 Series FPGAs and Zynq-7000 All Programmable SoC XADC&&&&  Dual 12-Bit 1 MSPS Analog-to-Digital Converter&&&&&&&&Tested with Linux using QEMU machine xilinx-zynq-a9 with devicetree&&&&files zynq-zc702.dtb and zynq-zc706.dtb, and kernel configuration&&&&multi_v7_defconfig.&&&&&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Signed-off-by: Guenter Roeck <linux@roeck-us.net>&&&&[ PC changes:&&&&  * Changed macro names to match TRM where possible&&&&  * Made programmers model macro scheme consistent&&&&  * Dropped XADC_ZYNQ_ prefix on local macros&&&&  * Fix ALM field width&&&&  * Update threshold-comparison interrupts in _update_ints()&&&&  * factored out DFIFO pushes into helper. Renamed to ""push/pop""&&&&  * Changed xadc_reg to 10 bits and added OOB check.&&&&  * Reduced scope of MCTL reset to just stop channel coms.&&&&  * Added dummy read data to write commands&&&&  * Changed _ to - seperators in string names and filenames&&&&  * Dropped ------------ in header comment&&&&  * Catchall'ed _update_ints() in _write handler.&&&&  * Minor whitespace changes.&&&&  * Use ZYNQ_XADC_FIFO_DEPTH instead of ARRAY_SIZE()&&&&]&&&&Signed-off-by: Peter Crosthwaite <crosthwaite.peter@gmail.com>&&&&Tested-by: Guenter Roeck <linux@roeck-us.net>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, target-arm: Add support for AArch32 S2 negative t0sz Add support for AArch32 S2 negative t0sz. In preparation for&&&&using 40bit IPAs on AArch32.&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Message-id: 1445864527-14520-5-git-send-email-edgar.iglesias@gmail.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, target-arm: lpae: Make t0sz and t1sz signed integers Make t0sz and t1sz signed integers to match tsz and to make&&&&it easier to implement support for AArch32 negative t0sz.&&&&t1sz is changed for consistensy.&&&&&&&&No functional change.&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Message-id: 1445864527-14520-3-git-send-email-edgar.iglesias@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," sPAPR: Revert don't enable EEH on emulated PCI devices This reverts commit 7cb18007 (""sPAPR: Don't enable EEH on emulated&&&&PCI devices"") as rtas_ibm_set_eeh_option() isn't the right place&&&&to check if there has the corresponding PCI device for the input&&&&address, which can be PE address, not PCI device address.&&&&&&&&Signed-off-by: Gavin Shan <gwshan@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," qapi: Finish converting to new qapi union layout We have two issues with our qapi union layout:&&&&1) Even though the QMP wire format spells the tag 'type', the&&&&C code spells it 'kind', requiring some hacks in the generator.&&&&2) The C struct uses an anonymous union, which places all tag&&&&values in the same namespace as all non-variant members. This&&&&leads to spurious collisions if a tag value matches a non-variant&&&&member's name.&&&&&&&&This patch is the back end for a series that converts to a&&&&saner qapi union layout.  Now that all clients have been&&&&converted to use 'type' and 'obj->u.value', we can drop the&&&&temporary parallel support for 'kind' and 'obj->value'.&&&&&&&&Given a simple union qapi type:&&&&&&&&{ 'union':'Foo', 'data': { 'a':'int', 'b':'bool' } }&&&&&&&&this is the overall effect, when compared to the state before&&&&this series of patches:&&&&&&&&| struct Foo {&&&&|-    FooKind kind;&&&&|-    union { /* union tag is @kind */&&&&|+    FooKind type;&&&&|+    union { /* union tag is @type */&&&&|         void *data;&&&&|         int64_t a;&&&&|         bool b;&&&&|-    };&&&&|+    } u;&&&&| };&&&&&&&&The testsuite still contains some examples of artificial restrictions&&&&(see flat-union-clash-type.json, for example) that are no longer&&&&technically necessary, now that there is no longer a collision between&&&&enum tag values and non-variant member names; but fixing this will be&&&&done in later patches, in part because some further changes are required&&&&to keep QAPISchema*.check() from asserting.  Also, a later patch will&&&&add a reservation for the member name 'u' to avoid a collision between a&&&&user's non-variant names and our internal choice of C union name.&&&&&&&&Note, however, that we do not rename the generated enum, which&&&&is still 'FooKind'.  A further patch could generate implicit&&&&enums as 'FooType', but while the generator already reserved&&&&the '*Kind' namespace (commit 4dc2e69), there are already QMP&&&&constructs with '*Type' naming, which means changing our&&&&reservation namespace would have lots of churn to C code to&&&&deal with a forced name change.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1445898903-12082-23-git-send-email-eblake@redhat.com>&&&&[Commit message tweaked]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," crypto: introduce new module for TLS anonymous credentials Introduce a QCryptoTLSCredsAnon class which is used to&&&&manage anonymous TLS credentials. Use of this class is&&&&generally discouraged since it does not offer strong&&&&security, but it is required for backwards compatibility&&&&with the current VNC server implementation.&&&&&&&&Simple example CLI configuration:&&&&&&&& $QEMU -object tls-creds-anon,id=tls0,endpoint=server&&&&&&&&Example using pre-created diffie-hellman parameters&&&&&&&& $QEMU -object tls-creds-anon,id=tls0,endpoint=server,\&&&&               dir=/path/to/creds/dir&&&&&&&&The 'id' value in the -object args will be used to associate the&&&&credentials with the network services. For example, when the VNC&&&&server is later converted it would use&&&&&&&& $QEMU -object tls-creds-anon,id=tls0,.... \&&&&       -vnc 127.0.0.1:1,tls-creds=tls0&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," spapr: Don't use QOM [*] syntax for DR connectors. The dynamic reconfiguration (hotplug) code for the pseries machine type&&&&uses a ""DR connector"" QOM object for each resource it will be possible&&&&to hotplug.  Each of these is added to its owner using&&&&    object_property_add_child(owner, ""dr-connector[*], ...);&&&&&&&&That works ok, mostly, but it means that the property indices are&&&&arbitrary, depending on the order in which the connectors are constructed.&&&&That might line up to something useful, but it doesn't have to.&&&&&&&&It will get worse once we add hotplug RAM support.  That will add a DR&&&&connector object for every 256MB of potential memory.  So if maxmem=2T,&&&&for example, there are 8192 objects under the same parent.&&&&&&&&The QOM interfaces aren't really designed for this.  In particular&&&&object_property_add() with [*] has O(n^2) time complexity (in the number of&&&&existing children): first it has a linear search through array indices to&&&&find a free slot, each of which is attempted to a recursive call to&&&&object_property_add() with a specific [N].  Those calls are O(n) because&&&&there's a linear search through all properties to check for duplicates.&&&&&&&&By using a meaningful index value, which we already know is unique we can&&&&avoid the [*] special behaviour.  That lets us reduce the total time for&&&&creating the DR objects from O(n^3) to O(n^2).&&&&&&&&O(n^2) is still kind of crappy, but it's enough to reduce the startup time&&&&of qemu (with in-progress memory hotplug support) with maxmem=2T from ~20&&&&minutes to ~4 seconds.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Cc: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Tested-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&& "
0," target-arm: Add AArch32 banked register access to secure physical timer If EL3 is AArch32, then the secure physical timer is accessed via&&&&banking of the registers used for the non-secure physical timer.&&&&Implement this banking.&&&&&&&&Note that the access controls for the AArch32 banked registers&&&&remain the same as the physical-timer checks; they are not the&&&&same as the controls on the AArch64 secure timer registers.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1437047249-2357-3-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&& "
0," ui: convert VNC websockets to use crypto APIs Remove the direct use of gnutls for hash processing in the&&&&websockets code, in favour of using the crypto APIs. This&&&&allows the websockets code to be built unconditionally&&&&removing countless conditional checks from the VNC code.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1435770638-25715-9-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, spice-display: fix segfault in qemu_spice_create_update Although it is pretty unusual the stride for the guest image and the&&&&mirror image maintained by spice-display can be different.  So use&&&&separate variables for them.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1163047&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reported-by: perrier vincent <clownix@clownix.net>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," memory: track DIRTY_MEMORY_CODE in mr->dirty_log_mask DIRTY_MEMORY_CODE is only needed for TCG.  By adding it directly to&&&&mr->dirty_log_mask, we avoid testing for TCG everywhere a region is&&&&checked for the enabled/disabled state of dirty logging.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," Stop including qemu-common.h in memory.h Including qemu-common.h from other header files is generally a bad&&&&idea, because it means it's very easy to end up with a circular&&&&dependency. For instance, if we wanted to include memory.h from&&&&qom/cpu.h we'd end up with this loop:&&&& memory.h -> qemu-common.h -> cpu.h -> cpu-qom.h -> qom/cpu.h -> memory.h&&&&&&&&Remove the include from memory.h. This requires us to fix up a few&&&&other files which were inadvertently getting declarations indirectly&&&&through memory.h.&&&&&&&&The biggest change is splitting the fprintf_function typedef out&&&&into its own header so other headers can get at it without having&&&&to include qemu-common.h.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-Id: <1435933104-15216-1-git-send-email-peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-mips: Misaligned memory accesses for MSA MIPS SIMD Architecture vector loads and stores require misalignment support.&&&&MSA Memory access should work as an atomic operation. Therefore, it has to&&&&check validity of all addresses for a vector store access if it is spanning&&&&into two pages.&&&&&&&&Separating helper functions for each data format as format is known in&&&&translation.&&&&To use mmu_idx from cpu_mmu_index() instead of calculating it from hflag.&&&&Removing save_cpu_state() call in translation because it is able to use&&&&cpu_restore_state() on fault as GETRA() is passed.&&&&&&&&Signed-off-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&[leon.alrae@imgtec.com: remove unused do_* functions]&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
0," tcg: add TCG_TARGET_TLB_DISPLACEMENT_BITS This will be used to size the TLB when more than 8 MMU modes are&&&&used by the target.  Limitations come from the limited size of&&&&the immediate fields (which sometimes, as in the case of Aarch64,&&&&extend to instructions that shift the immediate).&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1424436345-37924-2-git-send-email-pbonzini@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," spice: fix spice_chr_add_watch() pre-condition Since e02bc6de30c44fd668dc0d6e1cd1804f2eed3ed3, add_watch() is called&&&&with G_IO_HUP. Even if spice-qemu-char ignores this flag, the&&&&precondition must be changed.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1128992&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," monitor: Limit QError use to command handlers The previous commits narrowed use of QError to handle_qmp_command()&&&&and its helpers monitor_protocol_emitter(), build_qmp_error_dict().&&&&Narrow it further to just the command handler call: instead of&&&&converting Error to QError throughout handle_qmp_command(), convert&&&&the QError gotten from the command handler to Error, and switch the&&&&helpers from QError to Error.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, target-alpha: Set PC correctly for floating-point exceptions PC should be one past the faulting insn.  Add better commentary&&&&for the machine-check exception path.&&&&&&&&Reported-by: Al Viro <viro@ZenIV.linux.org.uk>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0, tpm: Modify DPRINTF to enable -Wformat checking Modify DPRINTF to always enable -Wformat checking.&&&&&&&&Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0," qobject: Clean up around qtype_code QTYPE_NONE is a sentinel value.  No QObject has this type code.&&&&Document it properly.&&&&&&&&Fix dump_qobject() to abort() on QTYPE_NONE, just like for any other&&&&invalid type code.&&&&&&&&Fix to_json() to abort() on all invalid type codes, not just&&&&QTYPE_MAX.&&&&&&&&Clean up Property member qtype's type: it's a qtype_code.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, target-arm: Check watchpoints against CPU security state Fix a TODO in bp_wp_matches() now that we have a function for&&&&testing whether the CPU is currently in Secure mode or not.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&& 
0," aer: fix wrong check on expose aer tlp prefix log when specify TLP Prefix log as using pcie_aer_inject_error,&&&&the TLP prefix log is always discarded. because the check&&&&is incorrect, the End-End TLP Prefix Supported bit&&&&(PCI_EXP_DEVCAP2_EETLPP) should be in Device Capabilities 2 Register.&&&&&&&&Signed-off-by: Chen Fan <chen.fan.fnst@cn.fujitsu.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," migration/rdma: clean up qemu_rdma_dest_init a bit Do not check for rdma->host being empty twice.  This removes a large&&&&""if"" block, so code indentation is changed.  While at it, remove an&&&&ugly goto from the loop, replacing it with a cleaner if logic.  And&&&&finally, there's no need to initialize `ret' variable since is always&&&&has a value.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Tested-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&&&&&--&&&&&&&&fixed space detected by Dave&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0," target-arm: convert check_ap to ap_to_rw_prot Instead of mixing access permission checking with access permissions&&&&to page protection flags translation, just do the translation, and&&&&leave it to the caller to check the protection flags against the access&&&&type. Also rename to ap_to_rw_prot to better describe the new behavior.&&&&&&&&Signed-off-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1426099139-14463-2-git-send-email-drjones@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," usb: Pair g_malloc() with g_free(), not free() Spotted by Coverity with preview checker ALLOC_FREE_MISMATCH enabled&&&&and my ""coverity: Model g_free() isn't necessarily free()"" model patch&&&&applied.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," s390x/mmu: Check bit 52 in page table entry Bit 52 in a page table entry has always to be zero, or a translation&&&&specification exception is to be recognized.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0," s390x/ioinst: Rework memory access in STCRW instruction Change the handler for STCRW to use the new logical memory access&&&&functions. Since STCRW is suppressed on protection/access exceptions,&&&&we also have to make sure to re-queue the CRW in case it could not be&&&&written to the memory.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0, vfio: fix wrong initialize vfio_group_list Signed-off-by: Chen Fan <chen.fan.fnst@cn.fujitsu.com>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& 
0," vl: fix max_cpus check We should confirm max_cpus, which is >= smp_cpus, is&&&&<= the machine's true max_cpus, not just smp_cpus.&&&&&&&&Signed-off-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," balloon: Inline qemu_balloon(), qemu_balloon_status() ... and simplify a bit.  Permits factoring out common error checks in&&&&the next commit.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," s390x/kvm: unknown DIAGNOSE code should give a specification exception As described in CP programming services an unimplemented DIAGNOSE&&&&function should return a specification exception. Today we give the&&&&guest an operation exception.&&&&As both exception types are suppressing and Linux as a guest does not&&&&care about the type of program check in its exception table handler&&&&as long as both types have the same kind of error handling (nullifying,&&&&terminating, suppressing etc.) this was unnoticed.&&&&&&&&Reviewed-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," loader: fix NEGATIVE_RETURNS lseek will return -1 on error, g_malloc0(size) and read(,,size)&&&&paramenters cannot be negative. We should add a check for return&&&&value of lseek().&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," qemu-img: Check create_opts before image amendment The image options which can be amended are described by the .create_opts&&&&field for every driver. This field must therefore be non-NULL so that&&&&anything can be amended in the first place. Check that this holds true&&&&before going into qemu_opts_create() (because if .create_opts is NULL,&&&&the create_opts pointer in img_amend() will be NULL after&&&&qemu_opts_append()).&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," fw_cfg_mem: introduce the ""data_width"" property The ""data_width"" property is capable of changing the maximum valid access&&&&size to the MMIO data register, and resizes the memory region similarly,&&&&at device realization time.&&&&&&&&The default value of ""data_memwidth"" is set so that we don't yet diverge&&&&from ""fw_cfg_data_mem_ops"".&&&&&&&&Most of the fw_cfg_mem users will stick with the default, and for them we&&&&should continue using the statically allocated ""fw_cfg_data_mem_ops"". This&&&&is beneficial for debugging because gdb can resolve pointers referencing&&&&static objects to the names of those objects.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1419250305-31062-7-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," s390x/sclpconsole-lm: truncate input if line is too long As the SCLP line mode console input length is limited by the available&&&&SCCB buffer space, it might lock up if the input does not fit into the&&&&buffer.&&&&&&&&With this patch, characters that don't fit are 'eaten' up to the next&&&&CR/LF and the input line is sent truncated to the guest.&&&&&&&&Signed-off-by: Heinz Graalfs <graalfs@linux.vnet.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," s390x: Implement SAM{24,31,64} The SAM instructions simply change 2 bits in PSW.MASK to advertise&&&&the current memory mode. While we can't fully guarantee that 31 bit&&&&mode (or even remotely 24 bit mode) actually work correctly, we don't&&&&check whether lpswe modifies these bits, so we shouldn't keep the&&&&guest from executing SAM instructions either.&&&&&&&&This patch implements all SAM instrutions with their actual PSW changing&&&&semantics, making more recent Linux kernels boot properly which do issue&&&&a SAM31 call during early boot.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Reviewed-by: Bastian Koppelmann <kbastian@mail.uni-paderborn.de>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0," slirp/smbd: modify/set several parameters in generated smbd.conf The file sharing module should not handle printers, so disable it.&&&&The options 'load printers' and 'printing' have been available since the&&&&beginning (May 1996, commit 0e8fd3398771da2f016d72830179507f3edda51b).&&&&Option 'disable spoolss' is available since Samba 2.0.4, commit&&&&de5f42c9d9172592779fa2504d44544e3b6b1c0d).&&&&&&&&Next, ""socket address"" was reported as deprecated, use a combination of&&&&""interfaces"" and ""bind interfaces only"" instead (available since October&&&&1997, commit 79f4fb52c1ed56fd843f81b4eb0cdd2991d4d0f4).&&&&&&&&Override cache directory to avoid writing to a global directory. Option&&&&available since Samba 3.4.0, Jan 2009, commit&&&&19a05bf2f485023b11b41dfae3f6459847d55ef7.&&&&&&&&Set ""usershare max shared=0"" to prevent a global directory from being&&&&used. Option available since Samba 3.0.23, February 2006, commit&&&&5831715049f2d460ce42299963a5defdc160891b.&&&&&&&&The last option was introduced with Samba 3.4.0, but previously&&&&""state directory"" was already added which exists in Samba 3.4.0. As&&&&unknown parameters are ignored (while printing a warning), it should be&&&&safe to add another option.&&&&&&&&Signed-off-by: Peter Wu <peter@lekensteyn.nl>&&&&Cc: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," target-mips: add BadInstr and BadInstrP support BadInstr Register (CP0 Register 8, Select 1)&&&&The BadInstr register is a read-only register that capture the most recent&&&&instruction which caused an exception.&&&&&&&&BadInstrP Register (CP0 Register 8, Select 2)&&&&The BadInstrP register contains the prior branch instruction, when the&&&&faulting instruction is in a branch delay slot.&&&&&&&&Using error_code to indicate whether AdEL or TLBL was triggered during&&&&instruction fetch, in this case BadInstr is not updated as valid instruction&&&&word is not available.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Reviewed-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&& "
0," target-i386: warns users when CPU threads>1 for non-Intel CPUs Only Intel CPUs support hyperthreading. When users select threads>1 in&&&&-smp option, QEMU fixes it by adjusting CPUID_0000_0001_EBX and&&&&CPUID_8000_0008_ECX based on inputs (sockets, cores, threads);&&&&so guest VM can boot correctly. However it is still better to gives&&&&users a warning when such case happens.&&&&&&&&Signed-off-by: Wei Huang <wei@redhat.com>&&&&[As suggested by Eduardo, check for !IS_INTEL instead of AMD. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, scsi: Drop scsi_req_abort The only user of this function is spapr_vscsi.c. We can convert to&&&&scsi_req_cancel plus adding a check in vscsi_request_cancelled.&&&&&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&[Drop prototype. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," i386/pc: add piix and q35 machtypes to sorting families for -M \? With this patch applied, the output of -M \? is&&&&&&&&> Supported machines are:&&&&> pc                   Standard PC (i440FX + PIIX, 1996) (alias of pc-i440fx-2.2)&&&&> pc-i440fx-2.2        Standard PC (i440FX + PIIX, 1996) (default)&&&&> pc-i440fx-2.1        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-2.0        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.7        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.6        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.5        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.4        Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.3               Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.2               Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.1               Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.0               Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.15              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.14              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.13              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.12              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.11              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.10              Standard PC (i440FX + PIIX, 1996)&&&&> q35                  Standard PC (Q35 + ICH9, 2009) (alias of pc-q35-2.2)&&&&> pc-q35-2.2           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-2.1           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-2.0           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.7           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.6           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.5           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.4           Standard PC (Q35 + ICH9, 2009)&&&&> isapc                ISA-only PC&&&&> none                 empty machine&&&&&&&&RHBZ: https://bugzilla.redhat.com/show_bug.cgi?id=1145042&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel.a@redhat.com>&&&&Acked-by: David Gibson <david@gibson.dropbear.id.au>&&&&&&&&&&&& "
0," ahci: Adding basic functionality qtest. Currently, there is no qtest to test the functionality of&&&&the AHCI functionality present within the Q35 machine type.&&&&&&&&This patch adds a skeleton for an AHCI test suite,&&&&and adds a simple sanity-check test case where we&&&&identify that the AHCI device is present, then&&&&disengage the virtual machine.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1408643079-30675-2-git-send-email-jsnow@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," scsi: Unify request unref in scsi_req_cancel Before, scsi_req_cancel will take ownership of the canceled request and unref&&&&it. We did this because we didn't know whether AIO CB will be called or not&&&&during the cancelling, so we set the io_canceled flag before calling it, and&&&&skip unref in the potentially called callbacks, which is not very nice.&&&&&&&&Now, bdrv_aio_cancel has a stricter contract that the completion callbacks are&&&&always called, so we can remove the checks of req->io_canceled and just unref&&&&it in callbacks.&&&&&&&&It will also make implementing asynchronous cancellation easier.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," qom: Add error handler for object alias property object_property_add_alias() is called at some&&&&places at present. And its parameter errp may not NULL,&&&&such as&&&& object_property_add_alias(obj, ""iothread"", OBJECT(&dev->vdev),""iothread"",&&&&                              &error_abort);&&&&This patch add error handler for security.&&&&&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Cc: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," util/qemu-sockets.c: Support specifying IPv4 or IPv6 in socket_dgram() Currently you can specify whether you want a UDP chardev backend&&&&to be IPv4 or IPv6 using the ipv4 or ipv6 options if you use the&&&&QemuOpts parsing code in inet_dgram_opts(). However the QMP struct&&&&parsing code in socket_dgram() doesn't provide this flexibility&&&&(which in turn prevents us from converting the UDP backend handling&&&&to the new style QAPI framework).&&&&&&&&Use the existing inet_addr_to_opts() function to convert the&&&&remote->inet address to option strings; this handles ipv4 and&&&&ipv6 flags as well as host and port. (It will also convert any&&&&'to' specification, which is harmless as it is ignored in this&&&&context.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1409653457-27863-3-git-send-email-peter.maydell@linaro.org&&&& "
0," s390x/kvm: introduce proper states for s390 cpus Until now, when a s390 cpu was stopped or halted, the number of running&&&&CPUs was tracked in a global variable. This was problematic for migration,&&&&so Jason came up with a per-cpu running state.&&&&As it turns out, we want to track the full logical state of a target vcpu,&&&&so we need real s390 cpu states.&&&&&&&&This patch is based on an initial patch by Jason Herne, but was heavily&&&&rewritten when adding the cpu states STOPPED and OPERATING. On the way we&&&&move add_del_running to cpu.c (the declaration is already in cpu.h) and&&&&modify the users where appropriate.&&&&&&&&Please note that the cpu is still set to be stopped when it is&&&&halted, which is wrong. This will be fixed in the next patch. The LOAD and&&&&CHECK-STOP state will not be used in the first step.&&&&&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&[folded Jason's patch into David's patch to avoid add/remove same lines]&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&CC: Andreas Faerber <afaerber@suse.de>&&&&Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," hw/9pfs: Use little-endian format for xattr values With security_model=mapped-xattr, we encode the uid,gid and other file&&&&attributes as extended attributes of the file. We save them under&&&&user.virtfs.* namespace.&&&&&&&&Use little-endian encoding for on-disk values. This enables us to export&&&&the same directory from both little-endian and big-endian hosts.&&&&&&&&NOTE: This will break big-endian host that have virtFS exports&&&&using security model mapped-xattr. They will have to use external tools&&&&to convert the xattr to little-endian format.&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& "
0," linux-user: add setns and unshare Add support for the setns and unshare syscalls, trivially passed through to&&&&the host. Based on patches by Paul Burton, added configure check.&&&&&&&&Signed-off-by: Paul Burton <paul@archlinuxmips.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0, linux-user: Detect Negative Message Sizes in msgsnd System Call The msgsnd system call takes an argument that describes the message&&&&size (msgsz) and is of type size_t.  The system call should set&&&&errno to EINVAL in the event that a negative message size is passed.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
0," virtio-serial: create a linked list of all active devices To ensure two virtserialports don't get added to the system with the&&&&same 'name' parameter, we need to access all the ports on all the&&&&devices added, and compare the names.&&&&&&&&We currently don't have a list of all VirtIOSerial devices added to the&&&&system.  This commit adds a simple linked list in which devices are put&&&&when they're initialized, and removed when they go away.&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," target-arm: Rename QEMU PSCI v0.1 definitions The function IDs for PSCI v0.1 are exported by KVM and defined as&&&&KVM_PSCI_FN_<something>.  To build using these defines in non-KVM code,&&&&QEMU defines these IDs locally and check their correctness against the&&&&KVM headers when those are available.&&&&&&&&However, the naming scheme used for QEMU (almost) clashes with the PSCI&&&&v0.2 definitions from Linux so to avoid unfortunate naming when we&&&&introduce local PSCI v0.2 defines, rename the current local defines with&&&&QEMU_ prependend and clearly identify the PSCI version as v0.1 in the&&&&defines.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Christoffer Dall <christoffer.dall@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," thread-pool: avoid per-thread-pool EventNotifier EventNotifier is implemented using an eventfd or pipe.  It therefore&&&&consumes file descriptors, which can be limited by rlimits and should&&&&therefore be used sparingly.&&&&&&&&Switch from EventNotifier to QEMUBH in thread-pool.c.  Originally&&&&EventNotifier was used because qemu_bh_schedule() was not thread-safe&&&&yet.&&&&&&&&Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," tests/Makefile: Only run vhost-user-test on Linux vhost-user-test uses the linux/vhost.h header, so it must only be&&&&enabled if CONFIG_LINUX is defined. (Previously it was enabled&&&&for CONFIG_POSIX, which broke 'make check' on MacOSX.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, prep: Remove PCI memory hack related to OpenHack'Ware Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&& 
0," acpi-dsdt: procedurally generate _PRT This replaces the _PRT constant with a method that computes it.&&&&&&&&The problem is that the DSDT+SSDT have grown from 2.0 to 2.1,&&&&enough to cross the 8k barrier (we align the ACPI tables to 4k&&&&before putting them in fw_cfg).  This causes problems with&&&&migration and the pc-i440fx-2.0 machine type.&&&&&&&&The solution to the problem is to hardcode 64k as the limit,&&&&but this doesn't solve the bug with pc-i440fx-2.0.  The fix will be&&&&for QEMU 2.1 to use exactly the same size as QEMU 2.0 for the&&&&ACPI tables.  First, however, we must make the actual AML&&&&equal or smaller; to do this, rewrite _PRT in a way that saves&&&&over 1k of bytecode.&&&&&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Tested-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," s390x/css: reflect cpa in scsw We neglected to update the the channel-program-address field of the scsw&&&&after completion of the start or the halt function: Fortunately, Linux&&&&didn't miss it so far. Let's update it for the cases where the cpa is&&&&expected to be valid; in some cases, the cpa is 'unpredictable', so we&&&&leave it untouched.&&&&&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0, rng-random: NULL check not needed before g_free() g_free() is NULL-safe.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0, tests: vmstate static checker: remove a subsection Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0, tests: vmstate static checker: add substructure for usb-kbd for hid section This shows how the script deals with substructures added to vmstate&&&&descriptions that don't change the on-wire format.&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0, signal/all/do_sigaltstack remove __get_user value check Access is already checked in the lock_user_struct&&&&call before.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, pc-dimm: do not allow setting an in-use memdev using the same memdev backend more than once will cause&&&&assertion at MemoryRegion mapping time because it's already&&&&mapped. Prevent it by checking that the associated MemoryRegion&&&&is not mapped.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Acked-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&MST: tweak commit log&&&& 
0," signal/sparc/restore_fpu_state: remove A function never called from anywhere, obviously half-complete.&&&&Remove function and if someone wants to complete this, please&&&&check the old version out of git history.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," signal/all: remove return value from copy_siginfo_to_user Since copy_siginfo_to_user always returns 0, make it void&&&&and remove any checks for return value from calling functions.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," KVM: PPC: Don't secretly add 1T segment feature to CPU When we select a CPU type that does not support 1TB segments, we should&&&&not expose 1TB just because KVM supports 1TB segments. User configuration&&&&always wins over feature availability.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," pc: Move q35 compat props to PC_COMPAT_* For each compat property on PC_Q35_COMPAT_*, there are only two&&&&possibilities:&&&&&&&& * If the device is never instantiated when using a machine other than&&&&   pc-q35, then the compat property can be safely added to&&&&   PC_COMPAT_*;&&&& * If the device can be instantiated when using a machine other than&&&&   pc-q35, that means the other machines also need the compat property&&&&   to be set.&&&&&&&&That means we don't need separate PC_Q35_COMPAT_* macros at all, today.&&&&&&&&The hpet.hpet-intcap case is interesting: piix and q35 do have something&&&&that emulates different defaults, but the machine-specific default is&&&&applied _after_ compat_props are applied, by simply checking if the&&&&property is zero (which is the real default on the hpet code).&&&&&&&&The hpet.hpet-intcap=0x4 compat property can (should?) be applied to&&&&piix too, because 0x4 was the default on both piix and q35 before the&&&&hpet-intcap property was introduced.&&&&&&&&Now, if one day we change the default HPET intcap on one of the PC&&&&machine-types again, we may want to introduce PC_{Q35,I440FX}_COMPAT&&&&macros. But while we don't need that, we can keep the code simple.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Cc: Liu Ping Fan <pingfank@linux.vnet.ibm.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, spapr_pci: Introduce a finish_realize() callback The spapr-pci PHB initializes IOMMU for emulated devices only.&&&&The upcoming VFIO support will do it different. However both emulated&&&&and VFIO PHB types share most of the initialization code.&&&&For the type specific things a new finish_realize() callback is&&&&introduced.&&&&&&&&This introduces sPAPRPHBClass derived from PCIHostBridgeClass and&&&&adds the callback pointer.&&&&&&&&This implements finish_realize() for emulated devices.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&[agraf: Fix compilation]&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," macio ide: Do remainder access asynchronously The macio IDE controller has some pretty nasty magic in its implementation to&&&&allow for unaligned sector accesses. We used to handle these accesses&&&&synchronously inside the IO callback handler.&&&&&&&&However, the block infrastructure changed below our feet and now it's impossible&&&&to call a synchronous block read/write from the aio callback handler of a&&&&previous block access.&&&&&&&&Work around that limitation by making the unaligned handling bits also go&&&&through our asynchronous handler.&&&&&&&&This fixes booting Mac OS X for me.&&&&&&&&Reported-by: John Arbuckle <programmingkidx@gmail.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," audio/intel-hda: support FIFORDY linux kernel 3.12 has changed intel-hda&&&&driver to always check for FIFORDY, this&&&&causes long hangs in guest since QEMU&&&&always has this bit set to 0. We now simply set&&&&it to 1 always, since we're synchronous anyway&&&&and always ready to receive the stream&&&&&&&&Signed-off-by: Stanislav Vorobiov <s.vorobiov@samsung.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, block/iscsi: allow cluster_size of 4K and greater depending on the target the opt_unmap_gran might be as low&&&&as 4K. As we know use this also as a knob to activate the allocationmap&&&&feature lower the barrier. The limit 4K (and not 512) is choosen&&&&to avoid a potentially too big allocationmap.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, gtk: Use ctrl+alt+q for quit accelerator Using the standard ctrl+q makes it too easy to kill the whole VM. Using&&&&ctrl+alt+FOO is consistent with our other accelerators.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1062393&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," SMBIOS: Use bitmaps to prevent incompatible comand line options Replace existing smbios_check_collision() functionality with&&&&a pair of bitmaps: have_binfile_bitmap and have_fields_bitmap.&&&&Bits corresponding to each smbios type are set by smbios_entry_add(),&&&&which also uses the bitmaps to ensure that binary blobs and field&&&&values are never accepted for the same type.&&&&&&&&These bitmaps will also be used in the future to decide whether&&&&or not to build a full table for a given smbios type.&&&&&&&&Signed-off-by: Gabriel Somlo <somlo@cmu.edu>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, sysemu.h: Document what MAX_CPUMASK_BITS really limits Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, mirror: fix early wake from sleep due to aio The mirror blockjob coroutine rate-limits itself by sleeping.  The&&&&coroutine also performs I/O asynchronously so it's important that the&&&&aio callback doesn't wake the coroutine early as that breaks&&&&rate-limiting.&&&&&&&&Reported-by: Joaquim Barrera <jbarrera@ac.upc.edu>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, gtk: Remember the last grabbed pointer position It's pretty annoying that the pointer reappears at a random place once&&&&after grabbing and ungrabbing the input.  Better to restore to the&&&&original position where the pointer was grabbed.&&&&&&&&Reference: https://bugzilla.novell.com/show_bug.cgi?id=849587&&&&Tested-by: Cole Robinson <crobinso@redhat.com>&&&&Reviewed-by: Cole Robinson <crobinso@redhat.com>&&&&Tested-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Takashi Iwai <tiwai@suse.de>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," vl.c: Output error on invalid machine type Output error message using qemu's error_report() function when user&&&&provides the invalid machine type on the command line. This also saves&&&&time to find what issue is when you downgrade from one version of qemu&&&&to another that doesn't support required machine type yet (the version&&&&user downgraded to have to have this patch applied too, of course).&&&&&&&&Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>&&&&[Replace printf with error_printf, suggested by Markus Armbruster. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, target-arm: Implement AArch64 TLB invalidate ops Implement the AArch64 TLB invalidate operations. This is&&&&the full set of TLBI ops defined for a CPU which doesn't&&&&implement EL2 or EL3.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, target-arm: Implement AArch64 cache invalidate/clean ops Implement all the AArch64 cache invalidate and clean ops&&&&(which are all NOPs since QEMU doesn't emulate the cache).&&&&The only remaining unimplemented cache op is DC ZVA.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&& 
0, block/iscsi: query for supported VPD pages this patch ensures that we only query for block provisioning and&&&&block limits vpd pages if they are advertised. It also cleans&&&&up the inquiry code and eliminates some redundant code.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," memory_region_present: return false if address is not found in child MemoryRegion Windows XP shows COM2 port as non functional in&&&&""Device Manager"" although no COM2 port backing device&&&&is present in QEMU.&&&&&&&&This regression is really due to&&&&3bb28b7208b349e7a1b326e3c6ef9efac1d462bf?&&&&    memory: Provide separate handling of unassigned io ports accesses&&&&&&&&That is caused by the fact that QEMU reports to&&&&OSPM that device is present by setting 5th bit in&&&&PII4XPM.pci_conf[0x67] register when COM2 doesn't&&&&exist.&&&&&&&&It happens due to memory_region_present(io_as, 0x2f8)&&&&returning false positive since 0x2f8 address eventually&&&&translates into catchall io_as address space.&&&&&&&&Fix memory_region_present(parent, addr) by returning&&&&true only if addr maps into a MemoryRegion within&&&&parent (excluding parent itself), to match its&&&&doc comment.&&&&&&&&While at it fix copy/paste error in&&&&memory_region_present() doc comment.&&&&&&&&Note: this is a temporary hack: we really need better handling for&&&&unassigned regions, we should avoid fallback regions since they are bad&&&&for performance (breaking radix tree assumption that the data structure&&&&is sparsely populated); for memory we need to fix this to implement PCI&&&&master abort properly, anyway.&&&&&&&&Cc: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," nbd: correctly propagate errors Before:&&&&    $ ./qemu-io-old&&&&    qemu-io-old> open -r -o file.driver=nbd&&&&    one of path and host must be specified.&&&&    qemu-io-old: can't open device (null): Could not open image: Invalid argument&&&&    $ ./qemu-io-old&&&&    qemu-io-old> open -r -o file.driver=nbd,file.host=foo,file.path=bar&&&&    path and host may not be used at the same time.&&&&    qemu-io-old: can't open device (null): Could not open image: Invalid argument&&&&&&&&After:&&&&    $ ./qemu-io&&&&    qemu-io> open -r -o file.driver=nbd&&&&    qemu-io: can't open device (null): one of path and host must be specified.&&&&    $ ./qemu-io&&&&    qemu-io> open -r -o file.driver=nbd,file.host=foo,file.path=bar&&&&    qemu-io: can't open device (null): path and host may not be used at the same time.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target-arm: Stop underdecoding ARM946 PRBS registers The ARM946 has 8 PRBS (protection region base and size) registers.&&&&Currently we implement these with a CP_ANY reginfo; however this&&&&underdecodes (since there are 16 possible values of CRm but only&&&&8 registers) and we catch the invalid values in the read and&&&&write functions. However this causes issues with migration since&&&&we only migrate the first of a wildcard register set, so we only&&&&migrate c6_region[0]. It also makes it awkward to pull reginfo&&&&access checks out into their own function.&&&&&&&&Avoid all these problems by just defining separate reginfo structs&&&&for each of the 8 registers; this also lets us avoid having any&&&&read or write functions and will result in more efficient direct&&&&field accesses from generated code.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," block: Switch bdrv_io_limits_intercept() to byte granularity Request sizes used to be rounded down to the next sector boundary,&&&&allowing to bypass the I/O limit. Now all requests are accounted for&&&&with their exact byte size.&&&&&&&&Reported-by: Wenchao Xia <xiawenc@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," block: Update BlockLimits when they might have changed When reopening with different flags, or when backing files disappear&&&&from the chain, the limits may change. Make sure they get updated in&&&&these cases.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Wenchao Xia <xiawenc@linux.vnet.ibm.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Beno卯t Canet <benoit@irqsave.net>&&&& "
0," roms: update seabios submodule to 31b8b4eea9d9ad58a73b22a6060d3ac1c419c26d Updates seabios to git master snapshot.  seabios is in freeze now,&&&&update to final 1.7.4 will follow later this year.&&&&&&&&Summary of major changes:&&&&&&&& * Support for acpi table loading from qemu.&&&& * Support for the xhci host adapter.&&&& * Support for the pvscsi HBA.&&&& * Various minor bug fixes.&&&& * Lots of cleanups.&&&&&&&&Full shortlog since 1.7.3 (note that some of these changes have been&&&&cherry-picked into 1.7.3-stable):&&&&&&&&Evgeny Budilovsky (1):&&&&      Add pvscsi boot support&&&&&&&&Gerd Hoffmann (27):&&&&      coreboot: add cbmem console support&&&&      Add CONFIG_DEBUG_COREBOOT config option&&&&      apm: fix shutdown&&&&      ahci: add missing check for allocation failure&&&&      bochsvga: fallback to stdvga if dispi interface isn't present&&&&      Add generic qemu detection&&&&      Drop coreboot qemu detection&&&&      Add qemu detection to csm&&&&      uas: add (temporary) superspeed stopgap&&&&      usb: add usb_update_pipe()&&&&      usb: add xhci support&&&&      fix buildversion.sh&&&&      build: simplify cross builds&&&&      build: create output dirs in do-kconfig&&&&      build: explicitly set ROM size&&&&      Add qemu_cfg_e820 function.&&&&      Add support for etc/e820 fw_cfg file&&&&      pci: don't reorder entries when moving to 64bit list&&&&      pci: don't map usb host adapters above 4G&&&&      pci: align 64bit pci regions to 1G&&&&      pci: tweak + comment minimum allocations&&&&      pci: log pci windows&&&&      pci: map 64-bit BARs at location provided by emulator&&&&      ahci: zap real mode macros&&&&      ahci: remote some parentheses&&&&      ahci: alloc structs in high memory&&&&      add hw/serialio.c to SRC32SEG&&&&&&&&Jonathan A. Kollasch (1):&&&&      vgahooks: add SM720 VGA BIOS hooks for WIN Enterprises MB-60470&&&&&&&&Kevin O'Connor (80):&&&&      Fix USB EHCI detection that was broken in hlist conversion of PCIDevices.&&&&      Update README to include info on VARLOW variables.&&&&      PIC code cleanups.&&&&      Move internal timer code from clock.c to a new file timer.c.&&&&      Don't pass khz to pmtimer_setup - it's always PM_TIMER_FREQUENCY.&&&&      Add helper functions to convert timer irqs to milliseconds.&&&&      Improve accuracy of internal timers.&&&&      Rename cpu_khz to TimerKHz.&&&&      Shift CPU TSC down to reduce need for 64bit variables.&&&&      Rename check_timer() function (and similar) to irqtimer_check().&&&&      Rename check_tsc() (and similar) to timer_check() and use u32.&&&&      Separate out timer setup code.&&&&      Unify pmtimer_read() and pittimer_read() code.&&&&      Default unused UMB areas to be read-only.&&&&      Add missing mathcp_setup() call to CSM code.&&&&      Fix bug in CBFS file walking with compressed files.&&&&      Support custom boot menu prompt and custom boot menu key.&&&&      Minor cleanups to smm assembler.&&&&      Add config option to support memory allocations in 9-segment.&&&&      Minor - no need to declare MaxCountCPUs as VARFSEG.&&&&      Minor - simplify rom_reserve().&&&&      Rename tools/ directory to scripts/ directory.&&&&      Update kconfig to latest version.&&&&      build: Don't use vpath makefile directive.&&&&      Move code centered around specific hardware devices to src/hw/&&&&      Move code cenetered around firmware initialization to src/fw/&&&&      build: Reorder makefile source list to group like files together.&&&&      README: Update readme to note scripts/ directory rename and vgasrc/ directory.&&&&      vgabios: Rename stdvga_bpp_factor to stdvga_vram_ratio.&&&&      vgabios: Limit the range of the VBE number of ""pages"" parameter.&&&&      readme: Minor - fix typo in readme.&&&&      Split x86 specific functions out of util.c/h to new files x86.c/h.&&&&      Move keyboard calling code from util.c to boot.c.&&&&      Rename util.c to string.c and introduce string.h.&&&&      build: Perform compile checking on vgasrc code.&&&&      Move stacks.c definitions from util.h to new file stacks.h.&&&&      Move romfile definitions from util.h to new file romfile.h.&&&&      Move malloc code from pmm.c to new files malloc.c and malloc.h.&&&&      Move function definitions for output.c from util.h to new file output.h.&&&&      Move definition of struct segoff_s from farptr.h to types.h.&&&&      build: Fix import of gcc dependency files.&&&&      Move pirtable definitions from hw/pci.h to std/pirtable.h and util.h.&&&&      Move optionroms.h to std/optionrom.h and util.h.&&&&      Move vbe.h to std/vbe.h.&&&&      Move fw/LegacyBios.h to std/LegacyBios.h and remove csm.h.&&&&      Move fw/smbios.h to std/smbios.h.&&&&      Move fw/mptable.h to std/mptable.h.&&&&      Move fw/acpi.h to std/acpi.h.&&&&      Move pnpbios definition to new file std/pnpbios.h.&&&&      Move pmm definitions to new file std/pmm.h.&&&&      Split disk.h into block.h and std/disk.h.&&&&      Move standard bda type info from biosvar.h to std/bda.h.&&&&      Merge bmp.h, boot.h, jpeg.h, and post.h into util.h.&&&&      Sort the sections of util.h.&&&&      Move PIT setup from clock.c to hw/timer.c.&&&&      Rename hw/cmos.h to hw/rtc.h and copy RTC code from clock.c to hw/rtc.c.&&&&      Move dma code to new file hw/dma.c.&&&&      Remove ioport.h; disperse its contents to other header files.&&&&      Minor - update file comments in src/malloc.c.&&&&      Rename fields of 'struct chs_s' and use in floppy lba2chs().&&&&      Rearrange stack_hop_back() call in wait_irq, check_irqs, and _farcall16.&&&&      Minor - move call16 assembler in romlayout.S.&&&&      Make __call16 use C calling convention and support two passed parameters.&&&&      Update _farcall16() to pass segment of callregs explicitly.&&&&      Support call16() calls after entering 32bit mode from call32().&&&&      Run ahci code entirely in 32bit mode.&&&&      Build different final files for QEMU, coreboot, and CSM.&&&&      Convert op->drive_g from a 16bit pointer to a 32 bit ""GLOBALFLAT"" pointer.&&&&      megasas: Don't attempt to access 'struct pci_device' at runtime.&&&&      Minor - eliminate the SET_GLOBAL macro.&&&&      Move low-level hardware writing from output.c to new file hw/serialio.c.&&&&      vgabios: Load the DAC palette in ""packed"" modes on Cirrus and BochsVGA.&&&&      vgabios: Support custom fonts in vga framebuffer text writing.&&&&      vgabios: Add bochsvga ""HDTV"" resolutions.&&&&      vgabios: Avoid possible divide by zero in bochsvga_set_displaystart.&&&&      vgabios: Work around lack of support for ""calll"" in x86emu emulation.&&&&      Minor - update file comment on bootsplash.c.&&&&      vgabios: Support allocating an extra stack for vgabios calls and default on.&&&&      vgabios: Move initialization code to new file vgainit.c.&&&&      floppy: Minor - add warnings if timeouts occur.&&&&&&&&Michael S. Tsirkin (6):&&&&      acpi: sync FADT flags from PIIX4 to Q35&&&&      acpi_extract.py: document DEVICE directives&&&&      biostables: support looking up RSDP&&&&      romfile_loader: utility to patch in-memory ROM files&&&&      acpi: load and link tables through romfile loader&&&&      acpi: strip compiler info in built-in DSDT if any&&&&&&&&Paul Menzel (2):&&&&      ACPI DSDT: Make control method `IQCR` serialized&&&&      hw/usb-xhci.c: Code refactoring to not override initializers in `speed_from_xhci[16]`&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, target-arm: Switch ARMCPUInfo arrays to use terminator entries Switch the ARMCPUInfo arrays in cpu.c and cpu64.c to use a terminator&&&&entry rather than looping based on ARRAY_SIZE. The latter causes&&&&compile warnings on some versions of gcc if the configure options&&&&happen to result in an empty array.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Tested-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&& 
0," target-arm: A64: Implement MRS/MSR/SYS/SYSL The AArch64 equivalent of the traditional AArch32&&&&cp15 coprocessor registers is the set of instructions&&&&MRS/MSR/SYS/SYSL, which cover between them both true&&&&system registers and the ""operations with side effects""&&&&such as cache maintenance which in AArch32 are mixed&&&&in with other cp15 registers. Implement these instructions&&&&to look in the cpregs hashtable for the register or&&&&operation.&&&&&&&&Since we don't yet populate the cpregs hashtable with&&&&any registers with the ""AA64"" bit set, everything will&&&&still UNDEF at this point.&&&&&&&&MSR/MRS is the first user of is_jmp = DISAS_UPDATE, so&&&&fix an infelicity in its handling where the main loop&&&&was requiring the caller to do the update of PC rather&&&&than just doing it itself.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0, net/cadence_gem: Implement mac level loopback mode Cadence GEM has a MAC level loopback mode. Implement. Use the same basic&&&&operation as the already implemented PHY loopback.&&&&&&&&Reported-by: Deepika Dhamija <deepika@xilinx.com>&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 3a0baf1b6b2fc1be638bdf1a37408ec38988e970.1386136219.git.peter.crosthwaite@xilinx.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," xhci: add support for suspend/resume The OS can ask the xhci controller to save and restore its&&&&internal state, which is used by the OS when the system is&&&&suspended and resumed.&&&&&&&&This patch handles writes to the save + restore bits in the&&&&command register.  Only thing it does is updating the&&&&restore error bit in the status register to signal an error&&&&on restore.  The guest OS should do a full reinitialization&&&&after resume then.&&&&&&&&This is the minimal patch which gets S3 going with xhci.&&&&Implementing full save/restore support is TBD.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1012365&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, target-openrisc: Correct carry flag check of l.addc and l.addic test cases The test cases did not correctly test for the carry flag.&&&&&&&&Signed-off-by: Sebastian Macke <sebastian@macke.de>&&&&Reviewed-by: Jia Liu <proljc@gmail.com>&&&&Signed-off-by: Jia Liu <proljc@gmail.com>&&&& 
0," block: vhdx - add region overlap detection for image files Regions in the image file cannot overlap - the log, region tables,&&&&and metdata must all be unique and non-overlapping.&&&&&&&&This adds region checking by means of a QLIST; there can be a variable&&&&number of regions and metadata (there may be metadata or region tables&&&&that we do not recognize / know about, but are not required).&&&&&&&&This adds the capability to register a region for later checking, and&&&&to check against registered regions for any overlap.&&&&&&&&Also, if neither the BAT or Metadata region tables are found, return&&&&error.&&&&&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," hw/pci: partially handle pci master abort A MemoryRegion with negative priority was created and&&&&it spans over all the pci address space.&&&&It ""intercepts"" the accesses to unassigned pci&&&&address space and will follow the pci spec:&&&& 1. returns -1 on read&&&& 2. does nothing on write&&&&&&&&Note: setting the RECEIVED MASTER ABORT bit in the STATUS register&&&&      of the device that initiated the transaction will be&&&&      implemented in another series&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel.a@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," vmdk: Fix vmdk_parse_extents An extra 'p++' after while loop when *p == '\n' will move p to unknown&&&&data position, risking parsing junk data or memory access violation.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," tests: build the helper program by default Usually we may configure and make, then goto ./tests/qemu-iotest,&&&&check. In this case an error will happen since helper program&&&&was not built. This patch simply build it by default. A better way&&&&may be introducing Makefile in ./tests/qemu-iotest, but it is more&&&&complicate to handle out of tree case, and a bit overkill&&&&for a single file now, we can do that when more files come.&&&&&&&&Signed-off-by: Wenchao Xia <xiawenc@linux.vnet.ibm.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," uas: Fix response iu struct definition This patch mirrors a patch to the Linux uas kernel driver which I've just&&&&submitted. It looks like the qemu uas struct definitions were taken from&&&&the Linux kernel driver, and have inherited the same mistake.&&&&&&&&Besides fixing the response iu struct, the patch also drops the add_info&&&&parameter from the usb_uas_queue_response() function, it is always 0 anyways,&&&&and expressing 3 zero-bytes as a function argument is a bit hard.&&&&&&&&Below is the long explanation for this change taken from the kernel commit:&&&&&&&&The response iu struct before this patch has a size of 7 bytes, which is weird&&&&since all other iu-s are explictly padded to a multiple of 4 bytes.&&&&&&&&Submitting a 7 byte bulk transfer to the status endpoint of a real uasp device&&&&when expecting a response iu results in an USB babble error, as the device&&&&actually sends 8 bytes.&&&&&&&&Up on closer reading of the UAS spec:&&&&http://www.t10.org/cgi-bin/ac.pl?t=f&f=uas2r00.pdf&&&&&&&&The reason for this becomes clear, the 2 entries in ""Table 17 鈥?RESPONSE IU""&&&&are numbered 4 and 6, looking at other iu definitions in the spec, esp.&&&&multi-byte fields, this indicates that the ADDITIONAL RESPONSE INFORMATION&&&&field is not a 2 byte field as one might assume at a first look, but is&&&&a multi-byte field containing 3 bytes.&&&&&&&&This also aligns with the SCSI Architecture Model 4 spec, which UAS is based&&&&on which states in paragraph ""7.1 Task management function procedure calls""&&&&that the ""Additional Response Information"" output argument for a Task&&&&management function procedure call is 3 bytes.&&&&&&&&Last but not least I've verified this by sending a logical unit reset task&&&&management call with an invalid lun to an actual uasp device, and received&&&&back a response-iu with byte 6 being 0, and byte 7 being 9, which is the&&&&responce code for an invalid iu, which confirms that the response code is&&&&being reported in byte 7 of the response iu rather then in byte 6.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," kvmvapic: Prevent reading beyond the end of guest RAM rom_state_paddr is guest provided (caller address of outw(VAPIC_PORT) +&&&&writen 16-bit value) and can be influenced to point beyond the end of&&&&the host memory backing the guest's RAM. Make sure we do not use this&&&&pointer to actually read beyond the limits.&&&&&&&&Reading arbitrary guest bytes is harmless, the guest kernel has to&&&&manage access to this I/O port anyway.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&& "
0," linux-user: add support of binfmt_misc 'O' flag The binfmt_misc module can calculate the credentials and security&&&&token according to the binary instead of to the interpreter if the&&&&'C' flag is enabled.&&&&&&&&To be able to execute non-readable binaries, this flag implies 'O'&&&&flag. When 'O' flag is enabled, bintfmt_misc opens the file for&&&&reading and pass the file descriptor to the interpreter.&&&&&&&&References:&&&&linux/Documentation/binfmt_misc.txt          ['O' and 'C' description]&&&&linux/fs/binfmt_misc.c linux/fs/binfmt_elf.c [ AT_EXECFD usage ]&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," exec: Clean up unnecessary S390 ifdeffery Another issue missed in commit fdec991 is -mem-path: it needs to be&&&&rejected only for old S390 KVM, not for any S390.  Not that I&&&&personally care, but the ifdeffery in qemu_ram_alloc_from_ptr() annoys&&&&me.&&&&&&&&Note that this doesn't actually make -mem-path work, as the kernel&&&&doesn't (yet?)  support large pages in the host for KVM guests.  Clean&&&&it up anyway.&&&&&&&&Thanks to Christian Borntraeger for pointing out the S390 kernel&&&&limitations.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Laszlo Ersek <lersek@redhat.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Message-id: 1375276272-15988-7-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <anthony@codemonkey.ws>&&&& "
0," exec: Drop incorrect & dead S390 code in qemu_ram_remap() Old S390 KVM wants guest RAM mapped in a peculiar way.  Commit 6b02494&&&&implemented that.&&&&&&&&When qemu_ram_remap() got added in commit cd19cfa, its code carefully&&&&mimicked the allocation code: peculiar way if defined(TARGET_S390X) &&&&&&defined(CONFIG_KVM), else normal way.&&&&&&&&For new S390 KVM, we actually want the normal way.  Commit fdec991&&&&changed qemu_ram_alloc_from_ptr() accordingly, but forgot to update&&&&qemu_ram_remap().  If qemu_ram_alloc_from_ptr() maps RAM the normal&&&&way, but qemu_ram_remap() remaps it the peculiar way, remapping&&&&changes protection and flags, which it shouldn't.&&&&&&&&Fortunately, this can't happen, as we never remap on S390.&&&&&&&&Replace the incorrect code with an assertion.&&&&&&&&Thanks to Christian Borntraeger for help with assessing the bug's&&&&(non-)impact.&&&&&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Laszlo Ersek <lersek@redhat.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Message-id: 1375276272-15988-6-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <anthony@codemonkey.ws>&&&& "
0," linux-user: Make sure NWFPE code is 32 bit ARM only On ARM, linux-user emulation includes NWFPE support for emulating the&&&&ancient FPA floating point coprocessor. This has long since been&&&&superseded by VFP and is only required for legacy binaries. The&&&&AArch64 linux-user target doesn't compile in NWFPE support, so make&&&&sure the relevant code is protected by suitable ifdefs.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1378235544-22290-18-git-send-email-peter.maydell@linaro.org&&&& "
0," block: Introduce bs->zero_beyond_eof In 4146b46c42e0989cb5842e04d88ab6ccb1713a48 (block: Produce zeros when&&&&protocols reading beyond end of file), we break qemu-iotests ./check&&&&-qcow2 022. This happens because qcow2 temporarily sets ->growable = 1&&&&for vmstate accesses (which are stored beyond the end of regular image&&&&data).&&&&&&&&We introduce the bs->zero_beyond_eof to allow qcow2_load_vmstate() to&&&&disable ->zero_beyond_eof temporarily in addition to enable ->growable.&&&&&&&&[Since the broken patch ""block: Produce zeros when protocols reading&&&&beyond end of file"" has not been merged yet, I have applied this fix&&&&*first* and will then apply the next patch to keep the tree bisectable.&&&&-- Stefan]&&&&&&&&Suggested-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Asias He <asias@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," so&&&&don't allow the guest to flip a queue between zero-size and&&&&non-zero-size. Don't permit setting of negative queue sizes&&&&either.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1374853288-9912-2-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&& """
0," target-arm: Implement 'int' loglevel The 'int' loglevel for recording interrupts and exceptions&&&&requires support in the target-specific code. Implement&&&&it for ARM. This improves debug logging in some situations&&&&that were otherwise pretty opaque, such as when we fault&&&&trying to execute at an exception vector address, which&&&&would otherwise cause an infinite loop of taking exceptions&&&&without any indication in the debug log of what was going on.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-id: 1375700771-21665-1-git-send-email-peter.maydell@linaro.org&&&& "
0, xhci: implement warm port reset Without this patch windows can't do port resets for usb3 devices.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=949514&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0, HACKING: Document vaddr type usage Also extend documentation of target_ulong and abi_ulong.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
0," dump: introduce GuestPhysBlockList The vmcore must use physical addresses that are visible to the guest, not&&&&addresses that point into linear RAMBlocks. As first step, introduce the&&&&list type into which we'll collect the physical mappings in effect at the&&&&time of the dump.&&&&&&&&Related RHBZ: https://bugzilla.redhat.com/show_bug.cgi?id=981582&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," vl: Tighten parsing of -machine option phandle_start Make it QEMU_OPT_NUMBER, so it gets parsed by generic code, which&&&&actually bothers to check for errors, rather than its user, which&&&&doesn't.&&&&&&&&Cc: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Message-id: 1372943363-24081-8-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," target-ppc: Introduce unrealizefn for PowerPCCPU Use it to clean up the opcode table, resolving a former TODO from Jocelyn.&&&&Also switch from malloc() to g_malloc().&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," linux-user: Fix sys_utimensat (would not compile on old glibc) Commit c0d472b12e accidentally dropped the definition of&&&&__NR_SYS_utimensat even though its use is guarded by&&&&CONFIG_UTIMENSAT, not CONFIG_ATFILE. Some older glibc don't&&&&have utimensat() (even if they have the other *at() functions).&&&&Fix this by correctly cleaning up the sys_utimensat()&&&&implementation and #defines, so that we always provide the&&&&syscall if needed whether we're doing it via glibc or not.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Tested-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Message-id: 1371743841-26110-1-git-send-email-peter.maydell@linaro.org&&&& "
0," vl: convert -smp to qemu_opts_parse() This also introduces a new suboption, ""cpus="",&&&&which is the default.  So after this patch,&&&&&&&& -smp n,sockets=y&&&&&&&&is the same as&&&&&&&&  -smp cpus=n,sockets=y&&&&&&&&(with ""cpu"" being some generic thing, referring to&&&&either cores, or threads, or sockets, as before).&&&&&&&&We still don't validate relations between different&&&&numbers, for example it is still possible to say&&&&&&&&  -smp 1,sockets=10&&&&&&&&and it will be accepted to mean sockets=1.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Message-id: 1372072012-30305-1-git-send-email-mjt@msgid.tls.msk.ru&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," pci: Cleanup configuration for pci-hotplug.c pci-hotplug.c and the CONFIG_PCI_HOTPLUG variable which controls its&&&&compilation are misnamed.  They're not about PCI hotplug in general, but&&&&rather about the pci_add/pci_del interface which are now deprecated in&&&&favour of the more general device_add/device_del interface.  This patch&&&&therefore renames them to pci-hotplug-old.c and CONFIG_PCI_HOTPLUG_OLD.&&&&&&&&CONFIG_PCI_HOTPLUG=y was listed twice in {i386,x86_64}-softmmu.make for no&&&&particular reason, so we clean that up too.  In addition it was included in&&&&ppc64-softmmu.mak for which the old hotplug interface was never used and is&&&&unsuitable, so we remove that too.&&&&&&&&Most of pci-hotplug.c was additionaly protected by #ifdef TARGET_I386.  The&&&&small piece which wasn't is only called from the pci_add and pci_del hooks&&&&in hmp-commands.hx, which themselves were protected by #ifdef TARGET_I386.&&&&This patch therefore also removes the #ifdef from pci-hotplug-old.c,&&&&and changes the ifdefs in hmp-commands.hx to use CONFIG_PCI_HOTPLUG_OLD.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," multiboot: Don't forget last mmap entry When the BIOS returns ebx = 0, the current entry is still valid and&&&&needs to be included in the Multiboot memory map.&&&&&&&&Fixing this meant that using bx as the entry index doesn't work any&&&&more because it's 0 on the last entry (and it was SeaBIOS-specific&&&&anyway), so the whole loop had to change a bit and should be more&&&&generic as a result (ebx can be an arbitrary continuation number now,&&&&and the entry size returned by the BIOS is used instead of hard-coding&&&&20 bytes).&&&&&&&&Signed-off-by: Kevin Wolf <mail@kevin-wolf.de>&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Message-id: 1372018066-21822-2-git-send-email-mail@kevin-wolf.de&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," target-arm: Allow special cpregs to have flags set Relax the ""is this a valid ARMCPRegInfo type value?"" check to permit&&&&""special"" cpregs to have flags other than ARM_CP_SPECIAL set. At&&&&the moment none of the other flags are relevant for special regs,&&&&but the migration related flag we're about to introduce can apply&&&&here too.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," xilinx_spips: Fix CTRL register RW bits The CTRL register was RAZ/WI on some of the RW bits. Even though the&&&&function behind these bits is invalid in QEMU, they should still be&&&&guest accessible. Fix.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&Message-id: b7aaad93163ce4af0c428635804ac7b77a567b25.1369117359.git.peter.crosthwaite@xilinx.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," target-arm: Fix incorrect check of kvm_vcpu_ioctl return value kvm_vcpu_ioctl() returns -ETHING on error, not ETHING -- correct&&&&an incorrect check in kvm_arch_init_vcpu(). This would not have&&&&had any significant ill-effects -- we would just have propagated&&&&the less useful ENOENT up to the caller rather than the more&&&&accurate EINVAL in the unlikely case that the kernel didn't&&&&have VFP-D32 support.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," osdep: add qemu_get_local_state_pathname() This function returns ${prefix}/var/RELATIVE_PATHNAME on POSIX-y systems,&&&&and <CSIDL_COMMON_APPDATA>/RELATIVE_PATHNAME on Win32.&&&&&&&&http://msdn.microsoft.com/en-us/library/bb762494.aspx&&&&&&&&  [...] This folder is used for application data that is not user&&&&  specific. For example, an application can store a spell-check&&&&  dictionary, a database of clip art, or a log file in the&&&&  CSIDL_COMMON_APPDATA folder. [...]&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0, ccid-card-passthru: add atr check Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <mlureau@redhat.com>&&&& 
0," qdev: skip bus check for bus-less devices in qdev_unplug() Since commit 2f7bd829db ""qdev: Fix device_add bus assumptions""&&&&it's possible to device_add bus-less device, but if such device is&&&&unplugged it will dereference NULL parent_bus in qdev_unplug().&&&&&&&&Fix it by taking in account that parent_bus might be NULL and&&&&skipping bus check.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Message-id: 1367587536-14964-1-git-send-email-imammedo@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," tci: Use 32-bit signed offsets to loads/stores Since the change to tcg_exit_req, the first insn of every TB is&&&&a load with a negative offset from env.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off by: Stefan Weil <sw@weilnetz.de>&&&& "
0," pci_bridge: factor out common code Reuse common code in pcie_port, override the hardwired-to-0&&&&bits per PCI Express spec.&&&&No functional change but makes the code easier to follow.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," hw/arm/nseries: don't print to stdout or stderr Remove various bits of printing to stdout or stderr from the&&&&nseries code, replacing it with a qemu log message where there's&&&&an appropriate log category, and just dropping the output for&&&&some of the more debug-like printing.&&&&&&&&In particular, this will get rid of the 'mipid_reset' message&&&&you currently get from 'make check'.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Message-id: 1363368565-24546-1-git-send-email-peter.maydell@linaro.org&&&& "
0, spice-qemu-char: Drop hackish vmc_register on spice_chr_write Now that the core takes care of fe_open tracking we no longer need this hack.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Message-id: 1364292483-16564-12-git-send-email-hdegoede@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," target-lm32: flush tlb after clearing env The tlb data is stored within the CPU env. Therefore, the initialization&&&&has to be done after we clear the environment. Otherwise the tlb will have&&&&a valid entry for address 0x0.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&& "
0," sheepdog: show error message for halt status Sheepdog (neither quorum nor unsafe mode) will refuse to serve IO requests when&&&&number of alive nodes is less than that of copies specified by users. This will&&&&return 0x19 to QEMU client which currently doesn't recognize it.&&&&&&&&This patch adds an error description when QEMU client receives it, other than&&&&plainly printing 'Invalid error code'&&&&&&&&Cc: MORITA Kazutaka <morita.kazutaka@lab.ntt.co.jp>&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Liu Yuan <tailai.ly@taobao.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: MORITA Kazutaka <morita.kazutaka@lab.ntt.co.jp>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qemu-option: Add qemu_opts_absorb_qdict() This adds a function that adds all entries of a QDict to a QemuOpts if&&&&the keys are known, and leaves only the rest in the QDict.&&&&&&&&This way a single QDict of -drive options can be processed in multiple&&&&places (generic block layer, block driver, backing file block driver,&&&&etc.), where each part picks the options it knows. If at the end of the&&&&process the QDict isn't empty, the user specified an invalid option.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-ppc: Use QOM method dispatch for MMU fault handling After previous cleanups, the many scattered checks of env->mmu_model in&&&&the ppc MMU implementation have, at least for ""classic"" hash MMUs been&&&&reduced (almost) to a single switch at the top of&&&&cpu_ppc_handle_mmu_fault().&&&&&&&&An explicit switch is still a pretty ugly way of handling this though.  Now&&&&that Andreas F盲rber's CPU QOM cleanups for ppc have gone in, it's quite&&&&straightforward to instead make the handle_mmu_fault function a QOM method&&&&on the CPU object.&&&&&&&&This patch implements such a scheme, initializing the method pointer at&&&&the same time as the mmu_model variable.  We need to keep the latter around&&&&for now, because of the MMU types (BookE, 4xx, et al) which haven't been&&&&converted to the new scheme yet, and also for a few other uses.  It would&&&&be good to clean those up eventually.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, target-mips: Move TCG initialization to MIPSCPU initfn Make mips_tcg_init() non-static and add tcg_enabled() check to suppress&&&&it for qtest.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
0," scsi-disk: handle io_canceled uniformly and correctly Always check it immediately after calling bdrv_acct_done, and&&&&always do a ""goto done"" in case the ""done"" label has to free&&&&some memory---as is the case for scsi_unmap_complete in the&&&&previous patch.&&&&&&&&This patch could fix problems that happen when a request is&&&&split into multiple parts, and one of them is canceled.  Then&&&&the next part is fired, but the HBA's cancellation callbacks have&&&&fired already.  Whether this happens or not, depends on how the&&&&block/ driver implements AIO cancellation.  It it does a simple&&&&bdrv_drain_all() or similar, then it will not have a problem.&&&&If it only cancels the given AIOCB, this scenario could happen.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," gtk ui: unbreak spice Merge of the gtk ui brought a initialitation order issue for spice:&&&&The using_spice variable isn't set yet when checked, leading to the&&&&default UI being activated (additionally to spice remote access).&&&&&&&&Let's set display_remote when we find a -spice switch on the command&&&&line, like we do for vnc.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1361804550-15858-1-git-send-email-kraxel@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," target-alpha: Detect attempt to instantiate non-CPU type in cpu_init() Check in alpha_cpu_class_by_name() whether the type found is actually&&&&(a sub-type of) TYPE_ALPHA_CPU.&&&&&&&&This fixes, e.g., -cpu typhoon-pcihost asserting.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," PPC: Provide zero SVR for -cpu e500mc and e5500 Even though our -cpu types for e500mc and e5500 are no real CPUs that&&&&actually have version registers, a guest might still want to access&&&&said version register and that has to succeed for a guest to be happy.&&&&&&&&So let's expose a zero SVR value on E500_SVR SPR reads.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," s390: Fix handling of iscs. There are two ways to express an interruption subclass:&&&&- As a bitmask, as used in cr6.&&&&- As a number, as used in the I/O interruption word.&&&&&&&&Unfortunately, we have treated to I/O interruption word as if it&&&&contained the bitmask as well, which went unnoticed so far as&&&&- (queued-for-next) kvm made the same mistake, and&&&&- Linux guest kernels don't check the isc value in the I/O interruption&&&&  word for subchannel interrupts.&&&&&&&&Make sure that we treat the I/O interruption word correctly.&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," ehci: Assert state machine is sane w.r.t. EHCIQueue Coverity worries the EHCIQueue pointer could be null when we pass it&&&&to functions that reference it.  The state machine ensures it can't be&&&&null then.  Assert that, to hush the checker.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," target-i386: check/enforce: Do not ignore ""hypervisor"" flag We don't need any hack to ignore CPUID_EXT_HYPERVISOR anymore, because&&&&kvm_arch_get_supported_cpuid() now sets CPUID_EXT_HYPERVISOR properly.&&&&So, this shouldn't introduce any behavior change, but it makes the code&&&&simpler.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," balloon: re-enable balloon stats The statistics are now available through device properties via a&&&&polling mechanism. First a client has to enable polling, then it&&&&can query available stats.&&&&&&&&Polling is enabled by setting an update interval (in seconds)&&&&to a property named guest-stats-polling-interval, like this:&&&&&&&&{ ""execute"": ""qom-set"",&&&&  ""arguments"": { ""path"": ""/machine/peripheral-anon/device[1]"",&&&&                 ""property"": ""guest-stats-polling-interval"", ""value"": 4 } }&&&&&&&&Then the available stats can be retrieved by querying the&&&&guest-stats property. The returned object is a dict containing&&&&all available stats. Example:&&&&&&&&{ ""execute"": ""qom-get"",&&&&  ""arguments"": { ""path"": ""/machine/peripheral-anon/device[1]"",&&&&  ""property"": ""guest-stats"" } }&&&&&&&&{&&&&    ""return"": {&&&&        ""stats"": {&&&&            ""stat-swap-out"": 0,&&&&            ""stat-free-memory"": 844943360,&&&&            ""stat-minor-faults"": 219028,&&&&            ""stat-major-faults"": 235,&&&&            ""stat-total-memory"": 1044406272,&&&&            ""stat-swap-in"": 0&&&&        },&&&&        ""last-update"": 1358529861&&&&    }&&&&}&&&&&&&&Please, check the next commit for full documentation.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0, iscsi: do not assume device is zero initialized Without any complex checks we can't assume that an&&&&iscsi target is initialized to zero.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," aio: clean up now-unused functions Some cleanups can now be made, now that the main loop does not anymore need&&&&hooks into the bottom half code.&&&&&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," dataplane: add event loop Outside the safety of the global mutex we need to poll on file&&&&descriptors.  I found epoll(2) is a convenient way to do that, although&&&&other options could replace this module in the future (such as an&&&&AioContext-based loop or glib's GMainLoop).&&&&&&&&One important feature of this small event loop implementation is that&&&&the loop can be terminated in a thread-safe way.  This allows QEMU to&&&&stop the data plane thread cleanly.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," monitor: Prevent removing fd from set during init If an fd is added to an fd set via the command line, and it is not&&&&referenced by another command line option (ie. -drive), then clean&&&&it up after QEMU initialization is complete.&&&&&&&&Signed-off-by: Corey Bryant <coreyb@linux.vnet.ibm.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," allow make {dist, }clean work w/out configure There's no reason to require configure to run before running a clean&&&&target, so check MAKECMDGOALS before.&&&&&&&&Signed-off-by: Mike Frysinger <vapier@gentoo.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," vfio-pci: Extend reset Take what we've learned from pci-assign and apply it to vfio-pci.&&&&On reset, disable previous interrupt config, perform a device&&&&reset if available, re-enable INTx, and disable memory regions on&&&&the device to prevent continuing DMA.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," monitor: Enable adding an inherited fd to an fd set qmp_add_fd() gets an fd that was received over a socket with&&&&SCM_RIGHTS and adds it to an fd set.  This patch adds support&&&&that will enable adding an fd that was inherited on the&&&&command line to an fd set.&&&&&&&&Note: All of the code added to monitor_fdset_add_fd(), with the&&&&exception of the error path for non-valid fdset-id, is code motion&&&&from qmp_add_fd().&&&&&&&&Signed-off-by: Corey Bryant <coreyb@linux.vnet.ibm.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, fpu/softfloat.c: Return correctly signed values from uint64_to_float32 The uint64_to_float32() conversion function was incorrectly always&&&&returning numbers with the sign bit set (ie negative numbers). Correct&&&&this so we return positive numbers instead.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0, CHECKPATCH: Add --debug adv_apw Add debug options to find this issue.  They were not listed&&&&in the help because the are not simple to understand the output of.&&&&&&&&Signed-off-by: Don Slutz <Don@CloudSwitch.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," pseries: Rework implementation of TCE bypass On the pseries machine the IOMMU (aka TCE tables) is always active for all&&&&PCI and VIO devices.  Mostly to simplify the SLOF firmware, we implement an&&&&extension which allows the IOMMU to be temporarily disabled for certain&&&&devices.&&&&&&&&Currently this is implemented by setting the device's DMAContext pointer to&&&&NULL (thus reverting to qemu's default no-IOMMU DMA behaviour), then&&&&replacing it when bypass mode is disabled.&&&&&&&&This approach causes a bunch of complications though.  It complexifies the&&&&management of the DMAContext lifetimes, it's problematic for savevm/loadvm,&&&&and it means that while bypass is active we have nowhere to store the&&&&device's LIOBN (Logical IO Bus Number, used to identify DMA address&&&&spaces).  At present we regenerate the LIOBN from other address information&&&&but this restricts how we can allocate LIOBNs.&&&&&&&&This patch gives up on this approach, replacing it with the much simpler&&&&one of having a 'bypass' boolean flag in the TCE state structure.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," usb-redir: Add an already_in_flight packet-id queue After a live migration, the usb-hcd will re-queue all packets by&&&&walking over the schedule in the guest memory again, but requests which&&&&were encountered on the migration source before will already be in flight,&&&&so these should *not* be re-send to the usbredir-host.&&&&&&&&This patch adds an already in flight packet ud queue, which will be filled by&&&&the source before migration and then moved over to the migration dest, any&&&&async handled packets are then checked against this queue to avoid sending&&&&the same packet to the usbredir-host twice.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat,com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," Add one new file vga-pci.h and cleanup on all platforms Functions pci_vga_init() and pci_cirrus_vga_init() are declared&&&&in pc.h. That prevents other platforms (e.g. sPAPR) to use them.&&&&&&&&This patch is to create one new file vga-pci.h and move the&&&&declarations to vga-pci.h, so that they can be shared by&&&&all platforms. This patch also cleans up on all platforms.&&&&&&&&Signed-off-by: Li Zhang <zhlcindy@linux.vnet.ibm.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," unicore32: Split UniCore-F64 instruction helpers from helper.c This patch just splits ucf64 instruction simulation helpers from&&&&helper.c.&&&&Also, two checkpatch warnings are solved.&&&&&&&&v1->v2: adjust copyright information for new ucf64_helper.c&&&&&&&&Signed-off-by: Guan Xuetao <gxt@mprc.pku.edu.cn>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, qemu-iotests: Valgrind support check -valgrind wraps all qemu-io calls with valgrind. This makes it a&&&&bit easier to debug problems that occur somewhere deep in a test case.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," lsi: avoid redundant tests of s->current != NULL Simplify the code by checking against req->hba_private directly,&&&&and asserting that it is non-NULL before a command is completed&&&&or canceled.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," build: libcacard Makefile cleanups Build vscclient from toplevel Makefile, limit usage of vpath.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," stream: tweak usage of bdrv_co_is_allocated is_allocated_base has complex semantics that are not really usable&&&&outside streaming.  Split the check in two parts, where the allocated&&&&state for the top bs is moved to the caller.  The resulting function&&&&is more generally useful.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," configure: Fix build for some versions of glibc (9pfs) Some versions declare open_by_handle_at, but don't define AT_EMPTY_PATH.&&&&Extend the check in configure to test both preconditions.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Acked-by: Serge Hallyn <serge.hallyn@ubuntu.com>&&&& "
0," sun4u: initialize OBIO interrupt mappings Similarly to PCI interrupt mappings, the OBIO ones have to be initialized.&&&&&&&&Signed-off-by: Artyom Tarasenko <atar4qemu@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, sparc: fix qtest Initialize TCG only when enabled.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," signrom: Rewrite as python script Now that we have a hard dependency on python anyway, we can replace the&&&&slow shell script to calculate the option ROM checksum with a fast AND&&&&portable python version. Tested both with python 2.7 and 3.1.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
0," target-ppc/machine.c: Drop unnecessary ifdefs machine.c is only compiled for softmmu targets, so checks for&&&&!defined(CONFIG_USER_ONLY) are unnecessary and can be dropped.&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&[AF: Use more verbose commit message suggested by PMM]&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," qcow2: Fix return value of alloc_refcount_block Someone forgot something in commit 29c1a730... Documenting the right&&&&return value is not enough, you also need to actually return it in the&&&&code.&&&&&&&&This bug sometimes causes error return values even when everything has&&&&succeeded: The new offset of the refcount block is truncated to 32 bits&&&&and interpreted as signed. At least with small cluster sizes it's easy&&&&to get a negative return value this way.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, qapi: remove print statements from test-qmp-commands This is necessary for nicer make check integration.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
0, tcg: Allow ELF_HOST_FLAGS and ELF_OSABI overrides in gdb-jit. Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," main-loop: interrupt wait when data arrives on a socket Right now, the main loop is not interrupted when data arrives on a&&&&socket.  To fix this, register each socket to interrupt the main loop&&&&with WSAEventSelect.  This does not replace select, it only communicates&&&&a change in socket state that requires a select call.&&&&&&&&Since the interrupt fires only once per recv call, or only once&&&&after a send call returns EWOULDBLOCK we can activate it on all events&&&&unconditionally.  If QEMU is momentarily uninterested on some condition,&&&&the main loop will not busy wait.  Instead, it may get one extra wakeup,&&&&but then it will ignore the condition until progress occurs and/or&&&&qemu_set_fd_handler is called to set a callback.  At this point the&&&&condition will be tested via select and the callback will be invoked&&&&even if it is still disabled on the event.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, Add 'make check-block' Runs the full qemu-iotests suite for various image formats.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," usb-ehci: Never follow table entries with the T-bit set Before this patch the T-bit was not checked in 2 places, while it should be.&&&&&&&&Once we properly check the T-bit everywhere we no longer need the weird&&&&entry < 0x1000 and entry > 0x1000 checks, so this patch removes them.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," Expose CPUID leaf 7 only for -cpu host Changes v2 -> v3;&&&&  - Check for kvm_enabled() before setting cpuid_7_0_ebx_features&&&&&&&&Changes v1 -> v2:&&&&  - Use kvm_arch_get_supported_cpuid() instead of host_cpuid() on&&&&    cpu_x86_fill_host().&&&&&&&&  We should use GET_SUPPORTED_CPUID for all bits on ""-cpu host""&&&&  eventually, but I am not changing all the other CPUID leaves because&&&&  we may not be able to test such an intrusive change in time for 1.1.&&&&&&&&Description of the bug:&&&&&&&&Since QEMU 0.15, the CPUID information on CPUID[EAX=7,ECX=0] is being&&&&returned unfiltered to the guest, directly from the GET_SUPPORTED_CPUID&&&&return value.&&&&&&&&The problem is that this makes the resulting CPU feature flags&&&&unpredictable and dependent on the host CPU and kernel version. This&&&&breaks live-migration badly if migrating from a host CPU that supports&&&&some features on that CPUID leaf (running a recent kernel) to a kernel&&&&or host CPU that doesn't support it.&&&&&&&&Migration also is incorrect (the virtual CPU changes under the guest's&&&&feet) if you migrate in the opposite direction (from an old CPU/kernel&&&&to a new CPU/kernel), but with less serious consequences (guests&&&&normally query CPUID information only once on boot).&&&&&&&&Fortunately, the bug affects only users using cpudefs with level >= 7.&&&&&&&&The right behavior should be to explicitly enable those features on&&&&[cpudef] config sections or on the ""-cpu"" command-line arguments. Right&&&&now there is no predefined CPU model on QEMU that has those features:&&&&the latest Intel model we have is Sandy Bridge.&&&&&&&&I would like to get this fixed on 1.1, so I am submitting this patch,&&&&that enables those features only if ""-cpu host"" is being used (as we&&&&don't have any pre-defined CPU model that actually have those features).&&&&After 1.1 is released, we can make those features properly configurable&&&&on [cpudef] and -cpu configuration.&&&&&&&&One problem is: with this patch, users with the following setup:&&&&- Running QEMU 1.0;&&&&- Using a cpudef having level >= 7;&&&&- Running a kernel that supports the features on CPUID leaf 7; and&&&&- Running on a CPU that supports some features on CPUID leaf 7&&&&won't be able to live-migrate to QEMU 1.1. But for these users&&&&live-migration is already broken (they can't live-migrate to hosts with&&&&older CPUs or older kernels, already), I don't see how to avoid this&&&&problem.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," serial: fix retry logic I'm not sure if the retry logic has ever worked when not using FIFO mode.  I&&&&found this while writing a test case although code inspection confirms it is&&&&definitely broken.&&&&&&&&The TSR retry logic will never actually happen because it is guarded by an&&&&'if (s->tsr_rety > 0)' but this is the only place that can ever make the&&&&variable greater than zero.  That effectively makes the retry logic an 'if (0)'.&&&&&&&&I believe this is a typo and the intention was >= 0.  Once this is fixed though,&&&&I see double transmits with my test case.  This is because in the non FIFO&&&&case, serial_xmit may get invoked while LSR.THRE is still high because the&&&&character was processed but the retransmit timer was still active.&&&&&&&&We can handle this by simply checking for LSR.THRE and returning early.  It's&&&&possible that the FIFO paths also need some attention.&&&&&&&&Cc: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, kvm: x86: Establish IRQ0 override control KVM is forced to disable the IRQ0 override when we run with in-kernel&&&&irqchip but without IRQ routing support of the kernel. Set the fwcfg&&&&value correspondingly. This aligns us with qemu-kvm.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& 
0," monitor: expose readline state HMP is now implemented in terms of QMP.  The monitor has a bunch of logic to&&&&deal with HMP right now like readline support.  Export it from the monitor so&&&&we can consume it in hmp.c.&&&&&&&&In short time, hmp.c will take over all of the readline bits.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, check-qstring: remove check.h include Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, check-qint: convert to gtest Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," hw/arm_boot.c: Make SMP boards specify address to poll in bootup loop The secondary CPU bootloader in arm_boot.c holds secondary CPUs in a&&&&pen until the primary CPU releases them. Make boards specify the&&&&address to be polled to determine whether to leave the pen (it was&&&&previously hardcoded to 0x10000030, which is a Versatile Express/&&&&Realview specific system register address).&&&&&&&&Signed-off-by: Evgeny Voevodin <e.voevodin@samsung.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andrzej Zaborowski <andrew.zaborowski@intel.com>&&&& "
0," qdev: Introduce lost tick policy property Potentially tick-generating timer devices will gain a common property:&&&&lock_tick_policy. It allows to encode 4 different ways how to deal with&&&&tick events the guest did not process in time:&&&&&&&&discard - ignore lost ticks (e.g. if the guest compensates for them&&&&          already)&&&&delay   - replay all lost ticks in a row once the guest accepts them&&&&          again&&&&merge   - if multiple ticks are lost, all of them are merged into one&&&&          which is replayed once the guest accepts it again&&&&slew    - lost ticks are gradually replayed at a higher frequency than&&&&          the original tick&&&&&&&&Not all timer device will need to support all modes. However, all need&&&&to accept the configuration via this common property.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Expose drive_add on all architectures All architectures can now use drive_add on the monitor. This of course&&&&does not mean that there is hotplug support for the specific platform,&&&&so in order to actually make use of the new drives you still need to&&&&have a hotplug capable device.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, vnc: fix no-lock-key-sync strncmp() length The no-lock-key-sync option is being parsed incorrectly because of an&&&&outdated strcmp() length value.  Use the correct length so that invalid&&&&option names do not match.&&&&&&&&Reported-by: Dr David Alan Gilbert <davidagilbert@uk.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
0," hw/arm_gic: Expose GIC CPU interfaces as sysbus memory regions Expose the ARM GIC CPU interfaces as memory regions, rather than&&&&just providing read and write functions for them.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," block: convert qcow2, qcow2, and vmdk to .bdrv_co_is_allocated() The qcow2, qcow, and vmdk block drivers are based on coroutines.  They have a&&&&coroutine mutex which protects internal state.  We can convert the&&&&.bdrv_is_allocated() function to .bdrv_co_is_allocated() by holding the mutex&&&&around the cluster lookup operation.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," s390x: make ipte 31-bit aware When running 31-bit code we can potentially map the same virtual&&&&address twice - once as 0x0yyyyyyy and once as 0x8yyyyyyy, because&&&&the upper bit gets ignored.&&&&&&&&This also should be reflected in the tlb invalidation path, so we&&&&really invalidate also the transparently created tlb entries.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," ivshmem: use migration blockers to prevent live migration in peer mode (v2) Now when you try to migrate with ivshmem, you get a proper QMP error:&&&&&&&&(qemu) migrate tcp:localhost:1025&&&&Migration is disabled when using feature 'peer mode' in device 'ivshmem'&&&&(qemu)&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," qapi: Check for negative enum values We don't currently check for negative enum values in qmp_output_type_enum(),&&&&this will very likely generate a segfault when triggered.&&&&&&&&However, it _seems_ that no code in tree can trigger this today.&&&&&&&&Acked-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, hw/arm_gic.c: Fix save/load of irq_target array irq_target array saving/loading is in the wrong loop.&&&&Version bump.&&&&&&&&Signed-off-by: Dmitry Koshelev <karaghiozis@gmail.com>&&&&Acked-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Andrzej Zaborowski <andrew.zaborowski@intel.com>&&&& 
0," block: drop .bdrv_read()/.bdrv_write() emulation There is no need to emulate .bdrv_read()/.bdrv_write() since these&&&&interfaces are only called if aio and coroutine interfaces are not&&&&present.  All valid BlockDrivers must implement either sync, aio, or&&&&coroutine interfaces.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," tcg-ppc64: Fix compile errors for userspace only builds with gcc 4.6 tcg/ppc64/tcg-target.c has a couple of places where variables are set&&&&unconditionally, but otherwise used only for softmmu builds, not&&&&userspace only builds.  This causes compiler warnings (which are fatal&&&&by default) when compiling for a ppc64 host with gcc 4.6.  This patch&&&&fixes the problem by moving the code which defines and sets the&&&&variables into the CONFIG_SOFTMMU guarded regions.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, xen: enable console and disk backend in HVM mode Initialize the Xen console backend and the Xen disk backend even when&&&&running in HVM mode so that PV on HVM drivers can connect to them.&&&&&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," monitor: Show combined protection bits in ""info mem"" Previously, ""info mem"" considered and displayed only the last-level&&&&protection bits for a memory range, which doesn't accurrately&&&&represent the protection of that range.  Now it shows the combined&&&&protection.&&&&&&&&Signed-off-by: Austin Clements <amdragon@mit.edu>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, hw/ne2000.c: convert to PCIDeviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," x86: use caller supplied CPUState for interrupt related stuff Several x86 specific functions are called from cpu-exec.c with the&&&&assumption that global env register is valid. This will be changed&&&&later, so make the functions use caller supplied CPUState parameter.&&&&&&&&It would be cleaner to move the functions to helper.c, but there are&&&&quite a lot of dependencies between do_interrupt() and other functions.&&&&&&&&Add helpers for svm_check_intercept() and cpu_cc_compute_all() instead&&&&of calling the helper (which uses global env, AREG0) directly.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, vmware_vga.c: convert to PCIDeviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," linux-user: Fix initialization of the heap contents when allocating new pages Technically the new mmapped pages are already initialized to zero&&&&since they are anonymous, however we have to take care with the&&&&contents that come from the remaining part of the previous page: it&&&&may contains garbage data due to a previous heap usage (grown then&&&&shrunken).&&&&&&&&This patch completes commit 55f08c84.  The problem could be reproduced&&&&when emulating the build process of Perl 5.12.3 on ARMedSlack 13.37:&&&&&&&&    make[1]: Entering directory `/tmp/perl-5.12.3/cpan/Compress-Raw-Bzip2'&&&&    cc -c  -I. -fno-strict-aliasing -pipe -fstack-protector                 \&&&&           -I/usr/local/include -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64  \&&&&           -O2   -DVERSION=\""2.024\"" -DXS_VERSION=\""2.024\"" -fPIC ""-I../.."" \&&&&           -DBZ_NO_STDIO  decompress.c&&&&    decompress.c: In function 'BZ2_decompress':&&&&    decompress.c:621:1: internal compiler error: Segmentation fault&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Signed-off-by: Laurent ALFONSI <laurent.alfonsi@st.com>&&&&Signed-off-by: C茅dric VINCENT <cedric.vincent@st.com>&&&& "
0," target-ppc: Handle memory-forced I/O controller access On at least the PowerPC 601, a direct-store (T=1) with bus unit ID 0x07F&&&&is special-cased as memory-forced I/O controller access. It is supposed&&&&to be checked immediately if T=1, bypassing all protection mechanisms&&&&and acting cache-inhibited and global.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&&&&&Simplified by avoiding reindentation. Added explanatory comments.&&&&&&&&Cc: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, json-lexer: limit the maximum size of a given token Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, milkymist-sysctl: fix timers Prevent timers from firing right after starting.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
0, blockdev: Use GCC_FMT_ATTR (format checking) Additional changes:&&&&&&&&* Removed 'extern' from drive_add (avoids too long line).&&&&* Removed 'extern' from other functions (makes declarations&&&&  consistent with others in same header file).&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," kvm: ppc: detect old headers When compiling Qemu with older kernel headers, the PVR setting&&&&mechanism isn't available yet. Unfortunately, back then I didn't add&&&&a capability we could check against, so all we can do is add a configure&&&&test to see if we support PVR setting. For BookE, we don't care yet.&&&&&&&&This fixes compilation errors with KVM enabled on older kernel headers&&&&(like 2.6.32).&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," vpc.c: Use get_option_parameter() does the search Use get_option_parameter() to instead of duplicating the loop, and&&&&use BDRV_SECTOR_SIZE to instead of 512&&&&&&&&Signed-off-by: Mitnick Lyu <mitnick.lyu@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, target-arm: Correct ABD's handling of negative zeroes Implement ABD by taking the absolute value of the difference&&&&of the operands (as the ARM ARM specifies) rather than by&&&&flipping the order of the operands to the subtract based&&&&on the results of a comparison. The latter approch gives&&&&the wrong answers for some edge cases like negative zero.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0," ide/atapi: Introduce CHECK_READY flag for commands Some commands are supposed to report a Not Ready Condition (i.e. they require&&&&a medium to be present in order to execute successfully). Instead of&&&&duplicating the check in each command implementation, let's add a flag and&&&&check it before calling the command.&&&&&&&&This patch only converts existing checks, it does not introduce new checks for&&&&any of the other commands that can/should report a Not Ready Condition.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target-arm: Handle UNDEF cases for Neon invalid modified-immediates For Neon ""one register and a modified immediate value"" forms, the&&&&combination op=1 cmode=1111 is unallocated and should UNDEF.&&&&All instructions of this form also UNDEF if Q == 1 and Vd<0> == 1.&&&&We also add a comment on the only UNPREDICTABLE in this space.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, Fix a few coding style violations in cpus.c No functional changes.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& 
0," Refactor kvm&tcg function names in cpus.c Pure interface cosmetics: Ensure that only kvm core services (as&&&&declared in kvm.h) start with ""kvm_"". Prepend ""qemu_"" to those that&&&&violate this rule in cpus.c. Also rename the corresponding tcg functions&&&&for the sake of consistency.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," blockdev: Put BlockInterfaceType names and max_devs in tables Turns drive_init()'s lengthy conditional into a concise loop, and&&&&makes the data available elsewhere.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target-arm: Fix shift by immediate and narrow where src, dest overlap For Neon shifts by immediate and narrow, correctly handle the case&&&&where the source registers and the destination registers overlap&&&&(the second pass should use the original register contents, not the&&&&results of the first pass).&&&&&&&&This includes a refactoring to pull the size check outside the&&&&loop rather than inside, since there is now very little common&&&&code between the size == 3 and size != 3 case.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," usb-bus: use snprintf Avoid this warning from OpenBSD linker:&&&&  LINK  i386-softmmu/qemu&&&&../usb-bus.o(.text+0x27c): In function `usb_get_fw_dev_path':&&&&/src/qemu/hw/usb-bus.c:294: warning: sprintf() is often misused,&&&&please use snprintf()&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," scsi-disk: Allow overriding SCSI INQUIRY removable bit Provide the ""removable"" qdev property bit to override the SCSI INQUIRY&&&&removable (RMB) bit for non-CDROM devices.  This will be used by USB&&&&Mass Storage Devices, which sometimes have this guest-visible bit set&&&&and sometimes do not.  They therefore requires a means for user&&&&configuration.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," ide: honor ncq for atapi ATAPI also can do ncq, so let's expose the capability.&&&&&&&&This patch makes CD-ROM support work on Windows 7 for me.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," gt64xxx: set isa_mem_base during registration isa_mem_base is computed from registers during reset, but due to QEMU&&&&limitations some devices (e.g. VGA card) need to know it earlier when&&&&they are registered.&&&&&&&&Workaround this by setting the value during registration instead of&&&&reset.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, img_convert(): Only try to free bs[] entries if bs is valid. This allows for jumping to 'out:' consistently for error exit.&&&&&&&&Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, vnc: support password expire This patch adds support for expiring passwords to vnc.  It adds a new&&&&vnc_display_pw_expire() function which specifies the time when the&&&&password will expire.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," ppc: remove video.x Only Mac-on-Linux stuff used video.x, OpenBIOS does not need it.&&&&&&&&Remove video.x MoL hacks.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," ARM: linux-user: Expose VFP registers to signal handlers For ARM linux-user mode signal handlers, fill in the ucontext with&&&&VFP register contents in the same way that the kernel does. We only&&&&do this for v2 format sigframe (2.6.12 and above); this is actually&&&&bug-for-bug compatible with the older kernels, which don't save and&&&&restore VFP registers either.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@nokia.com>&&&& "
0," Implement the PAPR (pSeries) virtualized interrupt controller (xics) PAPR defines an interrupt control architecture which is logically divided&&&&into ICS (Interrupt Control Presentation, each unit is responsible for&&&&presenting interrupts to a particular ""interrupt server"", i.e. CPU) and&&&&ICS (Interrupt Control Source, each unit responsible for one or more&&&&hardware interrupts as numbered globally across the system).  All PAPR&&&&virtual IO devices expect to deliver interrupts via this mechanism.  In&&&&Linux, this interrupt controller system is handled by the ""xics"" driver.&&&&&&&&On pSeries systems, access to the interrupt controller is virtualized via&&&&hypercalls and RTAS methods.  However, the virtualized interface is very&&&&similar to the underlying interrupt controller hardware, and similar PICs&&&&exist un-virtualized in some other systems.&&&&&&&&This patch implements both the ICP and ICS sides of the PAPR interrupt&&&&controller.  For now, only the hypercall virtualized interface is provided,&&&&however it would be relatively straightforward to graft an emulated&&&&register interface onto the underlying interrupt logic if we want to add&&&&a machine with a hardware ICS/ICP system in the future.&&&&&&&&There are some limitations in this implementation: it is assumed for now&&&&that only one instance of the ICS exists, although a full xics system can&&&&have several, each responsible for a different group of hardware irqs.&&&&ICP/ICS can handle both level-sensitve (LSI) and message signalled (MSI)&&&&interrupt inputs.  For now, this implementation supports only MSI&&&&interrupts, since that is used by PAPR virtual IO devices.&&&&&&&&Signed-off-by: Paul Mackerras <paulus@samba.org>&&&&Signed-off-by: David Gibson <dwg@au1.ibm.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, console: Avoid dereferencing NULL active_console The console_select() function does not check that active_console is&&&&non-NULL before dereferencing it.  When invoked with qemu -nodefaults it&&&&is possible to hit this case.&&&&&&&&This patch checks that active_console is non-NULL before stashing away&&&&the old console dimensions in console_select().&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Acked-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Acked-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," linux-user: fix types in a comparison -1ul is unsigned long, which does not necessarily match abi_ulong&&&&type.&&&&&&&&Fix by using abi_long instead.&&&&&&&&This also avoids a warning with GCC flag -Wtype-limits.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, powerpc: Avoid TLB related log spamming Invalid TLB entries are normal and should not spam the log.&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
0," qjson: Handle ""\f"" It's valid JSON and should be handled.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," virtio-9p: Hide user.virtfs xattr in case of mapped security. With mapped security mode we use ""user.virtfs"" namespace is used&&&&to store the virtFs related attributes. So hide it from user.&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& "
0, Remove useless device dependency of HAS_AUDIO System architecture dictates whether HAS_AUDIO is defined. It's then&&&&useless to check for HAS_AUDIO in files which are only used on those&&&&architectures which always have audio.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," virtio-serial: Check if virtio queue is ready before consuming data If a virtio-serial port is removed before the guest comes up and&&&&initialises the virtqueues, qemu exits with the message&&&&&&&&Guest moved used index from 0 to 61440&&&&&&&&This happens because we try to clear any pending buffers from the&&&&virtqueue.&&&&&&&&Ensure the virtqueue is initialised before calling any virtqueue&&&&operations.&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, provide a stub version of kvm-all.c if !CONFIG_KVM This allows limited use of kvm functions (which will return ENOSYS)&&&&even in once-compiled modules.  The patch also improves a bit the error&&&&messages for KVM initialization.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&[blauwirbel@gmail.com: fixed Win32 build]&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," block/raw: Add create_options for host_device Today host_devices have a create function, so they also need a create_options&&&&field to prevent qemu-img from complaining.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Expose whether a mouse is an absolute device via QMP and the human monitor. For QMP, we just add an attribute which is backwards compatible.  For the human&&&&monitor, we add (absolute) to the end of the line.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," tweak qemu_notify_event Instead of testing specially next_cpu in host_alarm_handler, just do&&&&that in qemu_notify_event.  The idea is, if we are not running (or&&&&not yet running) target CPU code, prepare things so that the execution&&&&loop is exited asap; just make that clear.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," alpha-linux-user: Implement signals. Move userland PALcode handling into linux-user main loop so that&&&&we can send signals from there.  This also makes alpha_palcode.c&&&&system-level only, so don't build it for userland.  Add defines&&&&for GENTRAP PALcall mapping to signals.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," block: add logical_block_size property Add a logical block size attribute as various guest side tools only&&&&increase the filesystem sector size based on it, not the advisory&&&&physical block size.&&&&&&&&For scsi we already have support for a different logical block size&&&&in place for CDROMs that we can built upon.  Only my recent block&&&&device characteristics VPD page needs some fixups.  Note that we&&&&leave the logial block size for CDROMs hardcoded as the 2k value&&&&is expected for it in general.&&&&&&&&For virtio-blk we already have a feature flag claiming to support&&&&a variable logical block size that was added for the s390 kuli&&&&hypervisor.  Interestingly it does not actually change the units&&&&in which the protocol works, which is still fixed at 512 bytes,&&&&but only communicates a different minimum I/O granularity.  So&&&&all we need to do in virtio is to add a trap for unaligned I/O&&&&and round down the device size to the next multiple of the logical&&&&block size.&&&&&&&&IDE does not support any other logical block size than 512 bytes.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, Add KVM paravirt cpuid leaf Initialize KVM paravirt cpuid leaf and allow user to control guest&&&&visible PV features through -cpu flag.&&&&&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, sparc64: use helper_wrpil to check pending irq on write Signed-off-by: Igor V. Kovalenko <igor.v.kovalenko@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," block: separate raw images from the file protocol We're running into various problems because the ""raw"" file access, which&&&&is used internally by the various image formats is entangled with the&&&&""raw"" image format, which maps the VM view 1:1 to a file system.&&&&&&&&This patch renames the raw file backends to the file protocol which&&&&is treated like other protocols (e.g. nbd and http) and adds a new&&&&""raw"" image format which is just a wrapper around calls to the underlying&&&&protocol.&&&&&&&&The patch is surprisingly simple, besides changing the probing logical&&&&in block.c to only look for image formats when using bdrv_open and&&&&renaming of the old raw protocols to file there's almost nothing in there.&&&&&&&&For creating images, a new bdrv_create_file is introduced which guesses the&&&&protocol to use. This allows using qemu-img create -f raw (or just using the&&&&default) for both files and host devices. Converting the other format drivers&&&&to use this function to create their images is left for later patches.&&&&&&&&The only issues still open are in the handling of the host devices.&&&&Firstly in current qemu we can specifiy the host* format names&&&&on various command line acceping images, but the new code can't&&&&do that without adding some translation.  Second the layering breaks&&&&the no_zero_init flag in the BlockDriver used by qemu-img.  I'm not&&&&happy how this is done per-driver instead of per-state so I'll&&&&prepare a separate patch to clean this up.&&&&&&&&There's some more cleanup opportunity after this patch, e.g. using&&&&separate lists and registration functions for image formats vs&&&&protocols and maybe even host drivers, but this can be done at a&&&&later stage.&&&&&&&&Also there's a check for protocol in bdrv_open for the BDRV_O_SNAPSHOT&&&&case that I don't quite understand, but which I fear won't work as&&&&expected - possibly even before this patch.&&&&&&&&Note that this patch requires various recent block patches from Kevin&&&&and me, which should all be in his block queue.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, gdbstub: add MIPS16 support The only thing to do here is to expose the current processor mode to GDB&&&&and to set the processor mode properly when we change the PC.&&&&&&&&Signed-off-by: Nathan Froyd <froydnj@codesourcery.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0, Unbreak Linux build   commit 71f4effce79ec0485586963ea764f2c212c72f26&&&&  Author: Alexander Graf <agraf@suse.de>&&&&  Date:   Fri Oct 30 22:27:00 2009 +0100&&&&&&&&      Unbreak tap compilation on OS X&&&&&&&&Broke the build on Linux due to a bad #if guard&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," Add test suite for json marshalling By reusing the qjson test suite.  After checking that we can demarshal, marshal&&&&again and compared to the expected decoded value.  This doesn't work so well&&&&for floats because they cannot be accurately represented in decimal but we&&&&try our best.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," monitor: QError support This commit adds QError support in the Monitor.&&&&&&&&A QError member is added to the Monitor struct. This new member&&&&stores error information and is also used to check if an error&&&&has occurred when the called handler returns.&&&&&&&&Additionally, a new macro called qemu_error_new() is introduced.&&&&It builds on top of the QemuErrorSink API and should be used in&&&&place of qemu_error().&&&&&&&&When all conversion to qemu_error_new() is done, qemu_error() can&&&&be turned private.&&&&&&&&Basically, Monitor's error flow is something like this:&&&&&&&&1. An error occurs in the handler, it calls qemu_error_new()&&&&2. qemu_error_new() builds a new QError object and stores it in&&&&   the Monitor struct&&&&3. The handler returns&&&&4. Top level Monitor code checks the Monitor struct and calls&&&&   qerror_print() to print the error&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, use C99 initializers for audio_pcm_ops Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0, net: add tap_set_offload() This API allows virtio-net to enable various offload features on a&&&&tap interface - e.g. to tell the host kernel it can pass up partial&&&&checksums to userspace.&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, Use C99 initializers for audio_option Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0, \!CONFIG_USER_ONLY == CONFIG_SOFTMMU Use this to simplify Makefile.target and remove negative logic&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Message-Id: &&&& 
0," qemu-io: reject invalid pattern Replace the use of atoi which is used for pattern parsing currently with&&&&strtol.  Atoi won't parse sedecimal pattern values (it always returns 0),&&&&but qemu-iotests use such pattern values.  Also reject every pattern&&&&that is not a unsigned char as we pass the pattern to memset which&&&&expect a bye value (despite having the pattern argument declared as int).&&&&&&&&Based on an earlier patch by Stefan Weil which did not include the&&&&error handling.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Reported-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Add cpu model configuration support.. This is a reimplementation of prior versions which adds&&&&the ability to define cpu models for contemporary processors.&&&&The added models are likewise selected via -cpu <name>,&&&&and are intended to displace the existing convention&&&&of ""-cpu qemu64"" augmented with a series of feature flags.&&&&&&&&A primary motivation was determination of a least common&&&&denominator within a given processor class to simplify guest&&&&migration.  It is still possible to modify an arbitrary model&&&&via additional feature flags however the goal here was to&&&&make doing so unnecessary in typical usage.  The other&&&&consideration was providing models names reflective of&&&&current processors.  Both AMD and Intel have reviewed the&&&&models in terms of balancing generality of migration vs.&&&&excessive feature downgrade relative to released silicon.&&&&&&&&This version of the patch replaces the prior hard wired&&&&definitions with a configuration file approach for new&&&&models.  Existing models are thus far left as-is but may&&&&easily be transitioned to (or may be overridden by) the&&&&configuration file representation.&&&&&&&&Proposed new model definitions are provided here for current&&&&AMD and Intel processors.  Each model consists of a name&&&&used to select it on the command line (-cpu <name>), and a&&&&model_id which corresponds to a least common denominator&&&&commercial instance of the processor class.&&&&&&&&A table of names/model_ids may be queried via ""-cpu ?model"":&&&&&&&&        :&&&&    x86       Opteron_G3  AMD Opteron 23xx (Gen 3 Class Opteron)&&&&    x86       Opteron_G2  AMD Opteron 22xx (Gen 2 Class Opteron)&&&&    x86       Opteron_G1  AMD Opteron 240 (Gen 1 Class Opteron)&&&&    x86          Nehalem  Intel Core i7 9xx (Nehalem Class Core i7)&&&&    x86           Penryn  Intel Core 2 Duo P9xxx (Penryn Class Core 2)&&&&    x86           Conroe  Intel Celeron_4x0 (Conroe/Merom Class Core 2)&&&&        :&&&&&&&&Also added is ""-cpu ?dump"" which exhaustively outputs all config&&&&data for all defined models, and ""-cpu ?cpuid"" which enumerates&&&&all qemu recognized CPUID feature flags.&&&&&&&&The pseudo cpuid flag 'check' when added to the feature flag list&&&&will warn when feature flags (either implicit in a cpu model or&&&&explicit on the command line) would have otherwise been quietly&&&&unavailable to a guest:&&&&&&&&    # qemu-system-x86_64 ... -cpu Nehalem,check&&&&    warning: host cpuid 0000_0001 lacks requested flag 'sse4.2|sse4_2' [0x00100000]&&&&    warning: host cpuid 0000_0001 lacks requested flag 'popcnt' [0x00800000]&&&&&&&&A similar 'enforce' pseudo flag exists which in addition&&&&to the above causes qemu to error exit if requested flags are&&&&unavailable.&&&&&&&&Configuration data for a cpu model resides in the target config&&&&file which by default will be installed as:&&&&&&&&    /usr/local/etc/qemu/target-<arch>.conf&&&&&&&&The format of this file should be self explanatory given the&&&&definitions for the above six models and essentially mimics&&&&the structure of the static x86_def_t x86_defs.&&&&&&&&Encoding of cpuid flags names now allows aliases for both the&&&&configuration file and the command line which reconciles some&&&&Intel/AMD/Linux/Qemu naming differences.&&&&&&&&This patch was tested relative to qemu.git.&&&&&&&&Signed-off-by: john cooper <john.cooper@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, Use snprintf to avoid OpenBSD warning Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," qemu/pci: make default_write_config use mask table Change much of hw/pci to use symbolic constants and a table-driven&&&&design: add a mask table with writable bits set and readonly bits unset.&&&&Detect change by comparing original and new registers.&&&&&&&&This makes it easy to support capabilities where read-only/writeable&&&&bit layout differs between devices, depending on capabilities present.&&&&&&&&As a result, writing a single byte in BAR registers now works as&&&&it should. Writing to upper limit registers in the bridge&&&&also works as it should. Code is also shorter.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," net: fix error reporting for some net parameter checks A small bit of confusion between buffers is causing errors like:&&&&&&&&  qemu: invalid parameter '10' in 'script=/etc/qemu-ifup,fd=10'&&&&&&&&instead of:&&&&&&&&  qemu: invalid parameter 'script' in 'script=/etc/qemu-ifup,fd=10'&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&& "
0," Hardware convenience library The only target dependency for most hardware is sizeof(target_phys_addr_t).&&&&Build these files into a convenience library, and use that instead of&&&&building for every target.&&&&&&&&Remove and poison various target specific macros to avoid bogus target&&&&dependencies creeping back in.&&&&&&&&Big/Little endian is not handled because devices should not know or care&&&&about this to start with.&&&&&&&&Signed-off-by: Paul Brook <paul@codesourcery.com>&&&& "
0," net: add '-net tap,sndbuf=nbytes' 2.6.30 adds a new TUNSETSNDBUF ioctl() which allows a send buffer limit&&&&for the tap device to be specified. When this limit is reached, a tap&&&&write() will return EAGAIN and poll() will indicate the fd isn't&&&&writable.&&&&&&&&This allows people to tune their setups so as to avoid e.g. UDP packet&&&&loss when the sending application in the guest out-runs the NIC in the&&&&host.&&&&&&&&There is no obviously sensible default setting - a suitable value&&&&depends mostly on the capabilities of the physical NIC through which the&&&&packets are being sent.&&&&&&&&Also, note that when using a bridge with netfilter enabled, we currently&&&&never get EAGAIN because netfilter causes the packet to be immediately&&&&orphaned. Set /proc/sys/net/bridge/bridge nf-call-iptables to zero to&&&&disable this behaviour.&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Properly handle pthread_cond_timedwait timing out pthread_cond_timedwait is allowed to both consume the signal and&&&&return with the value indicating the timeout, hence predicate should&&&&always be (re)checked before taking an action&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6634 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," qemu:virtio-net: Check return size on the correct sg list (Alex Williamson) When checking that the size of the control virtqueue return field&&&&is sufficient, use the correct sg list.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@hp.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6845 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Allow the monitor to be suspended during non-blocking op Live migration happens in the background, but it is useful to make the monitor&&&&command appear as if it's blocking.  This allows a management tool to&&&&immediately know when the live migration has completed without having to poll&&&&the migration status.&&&&&&&&This patch allows the monitor to be suspended from a monitor callback which&&&&will prevent new monitor commands from being executed.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5431 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Introduce block dma helpers (Avi Kivity) These helpers perform read/write requests on entire scatter/gather lists,&&&&relieving the device emulation code from mapping and unmapping physical&&&&memory, and from looping when map resources are exhausted.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6524 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, LSI53C895A: Remove current_dma_len hack Signed-off-by: Justin Chevrier <address@hidden>&&&&Acked-by: Ryan Harper <ryanh@us.ibm.com>&&&&Acked-by: Chris Wright <chrisw@sous-sol.org>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5901 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Initialize msr list size properly in KVM Hollis Blanchard noticed that the last commit was not sufficient.  We also need&&&&to initialize the msr size in our newly allocated list.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6018 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Add qemu_strndup: qemu_strdup with length limit. Also optimise qemu_strdup by using memcpy - using pstrcpy is usually &&&&suboptimal.&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5653 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Fix qemu endless loop when raising a SIGSEGV/SIGBUS signal with gdbstub in user emulation When a SIGSEGV signal is raised in user mode emulation the current&&&&test to know whether the signal is sent by the kernel is wrong :&&&&&&&&info->si_code == SI_KERNEL&&&&&&&&according to /usr/include/bits/siginfo.h it should be&&&&&&&&info->si_code > 0&&&&&&&&Signed-off-by: Lionel Landwerlin <lionel.landwerlin@openwide.fr>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6151 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Add --kerneldir configure argument This allows a user to override the default search path and also makes cross&&&&compilation work a bit nicer wrt KVM detection.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5628 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Use snprintf to please OpenBSD linker git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5529 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Special-case CTL_ALIAS instead of CTL_DNS in udp loopback test. At the same time remove a bogus test (tested by Jason Wessel).&&&&Quiet some gcc4 warnings from slirp compilation.&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4402 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Fix interrupt exclusion via SSTEP_NOIRQ Commit #5620 revealed an issue of the SSTEP_NOIRQ masking that was&&&&applied on all interrupt sources (including internal ones) when single&&&&stepping through the guest. Due to that commit, we now ended up in an&&&&infinite loop when CPU_INTERRUPT_EXIT was pending on SSTEP resume. That&&&&was due to #5620 eating all TBs while CPU_INTERRUPT_EXIT is pending, but&&&&SSTEP_NOIRQ preventing CPU_INTERRUPT_EXIT to be processed.&&&&&&&&What SSTEP_NOIRQ should actually do is to block the delivery of all&&&&external, guest visible interrupts. With the fix below applied, single&&&&stepping now works again.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5643 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, CRIS MMU Updates * Add support for exec faults and for the k protection bit. * Abort if search_pc causes recursive mmu faults. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4349 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Add serial loopback mode (patch from Herv茅 Poussineau). git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3973 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0,  Prevent overwriting fixed bits in AFSR git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3752 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0,  Fix count calculation when counter limit set to 0 (Robert Reif) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3840 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Fix up pxe boot (Glauber Costa) As discussed in&&&&http://lists.gnu.org/archive/html/qemu-devel/2008-08/msg00667.html,&&&&current pxe boot is broken for some use cases. The problem&&&&goes away if we reduce the number of allowed bits in the address space&&&&to 32 (which has the side effect of reducing guest max mem size to 4Gb).&&&&&&&&After digging for a while, it turns out that it happens because pxelinux&&&&tries to access address 0x10009e9a6, which does not fit a 32-bit address.&&&&A closer look, however, reveals this access is totally valid: It's just&&&&0x9e9a6 with an add carry.&&&&&&&&To avoid this, this patch casts the address passed to the POPL macro to&&&&a 32-bit value. This is also done, although just theorectically, for&&&&PUSHL too.&&&&&&&&Signed-off-by: Glauber Costa <glommer@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Reported-by: Chris Lalancette <clalance@redhat.com>&&&&CC: Eduardo Habkost <ehabkost@redhat.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5182 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, suppressed invalid TARGET_CMSG_FIRSTHDR macro git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3601 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Quickly hack PowerPC BIOS able to boot on CDROM again. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3309 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Add some missing checks for host syscalls. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3174 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, We never have to export ppc_set_irq. Protect PowerPC 64 only features with #ifdef (TARGET_PPC64) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3316 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Hack to keep wine happy, by Alexander Graf. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2993 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, Move configure --help output before gcc checks. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1798 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Alignment check mechanism (not fully enabled yet) (Aurelien Jarno) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2655 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, hack for target_ulong define git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@525 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," gcc32 may well be a 4.x version for a 32bit target, so add an additional check, hopefully not too strict. Probe also gcc-3.3.6 to make Gentoo users happy. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3087 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, ide: pass IDEState to trim AIO callback It will be needed to handle invalid requests&&&&&&&&Signed-off-by: Anton Nefedov <anton.nefedov@virtuozzo.com>&&&&Message-id: 1512735034-35327-2-git-send-email-anton.nefedov@virtuozzo.com&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&& 
0, correct zero segment values when coming from VM86 mode - cache infos in CPUID - simpler exception handling in load_seg() - validate segments after lret/iret git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@485 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," chardev: Use goto/label instead of do/break/while(0) Use of a do/while(0) control flow in order to permit an early break&&&&is an unusual paradigm, and triggers a false positive with a planned&&&&future syntax check against 'while (0);'.  Rewrite the code to use a&&&&goto instead.  This patch temporarily keeps an extra level of&&&&indentation to highlight the change; the next patch cleans it up.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171201232433.25193-4-eblake@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," tests: Avoid 'do/while(false); ' in vhost-user-bridge Use of a do/while(0) loop as a way to allow break statements in&&&&the middle of execute-once code is unusual.  More typical is&&&&the use of goto for early exits, with a label at the end of&&&&the execute-once code, rather than nesting code in a scope;&&&&however, the comment at the end of the existing code makes this&&&&alternative a bit unpractical.&&&&&&&&So, to avoid false positives from a future syntax check about&&&&'while (false);', and to keep the loop form (in case someone&&&&ever does add DONTWAIT support, where they can just as easily&&&&manipulate the initial loop condition or add an if around the&&&&final 'break'), I opted to use the form of a while(1) loop (the&&&&break as an early exit is more idiomatic there), coupled with&&&&a final break preserving the original comment.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171201232433.25193-6-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," e1000, e1000e: Move per-packet TX offload flags out of context state sum_needed and cptse flags are received from the guest within each&&&&transmit data descriptor. They are not part of the offload context;&&&&instead, they determine how to apply a previously received context to&&&&the packet being transmitted:&&&&&&&&- If cptse is set, perform both segmentation and checksum offload&&&&  using the parameters in the TSO context; otherwise just do checksum&&&&  offload. (Currently the e1000 device incorrectly stores only one&&&&  context, which will be fixed in a subsequent patch.)&&&&&&&&- Depending on the bits set in sum_needed, possibly perform L4&&&&  checksum offload and/or IP checksum offload, using the parameters in&&&&  the appropriate context.&&&&&&&&Move these flags out of struct e1000x_txd_props, which is otherwise&&&&dedicated to storing values from a context descriptor, and into the&&&&per-packet TX struct.&&&&&&&&Signed-off-by: Ed Swierk <eswierk@skyportsystems.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," spapr: fix device tree properties when using compatibility mode Commit 51f84465dd98 changed the compatility mode setting logic:&&&&- machine reset only sets compatibility mode for the boot CPU&&&&- compatibility mode is set for other CPUs when they are put online&&&&  by the guest with the ""start-cpu"" RTAS call&&&&&&&&This causes a regression for machines started with max-compat-cpu:&&&&the device tree nodes related to secondary CPU cores contain wrong&&&&""cpu-version"" and ""ibm,pa-features"" values, as shown below.&&&&&&&&Guest started on a POWER8 host with:&&&&     -smp cores=2 -machine pseries,max-cpu-compat=compat7&&&&&&&&                        ibm,pa-features = [18 00 f6 3f c7 c0 80 f0 80 00&&&& 00 00 00 00 00 00 00 00 80 00 80 00 80 00 00 00];&&&&                        cpu-version = <0x4d0200>;&&&&&&&&                               ^^^&&&&                        second CPU core&&&&&&&&                        ibm,pa-features = <0x600f63f 0xc70080c0>;&&&&                        cpu-version = <0xf000003>;&&&&&&&&                               ^^^&&&&                          boot CPU core&&&&&&&&The second core is advertised in raw POWER8 mode. This happens because&&&&CAS assumes all CPUs to have the same compatibility mode. Since the&&&&boot CPU already has the requested compatibility mode, the CAS code&&&&does not set it for the secondary one, and exposes the bogus device&&&&tree properties in in the CAS response to the guest.&&&&&&&&A similar situation is observed when hot-plugging a CPU core. The&&&&related device tree properties are generated and exposed to guest&&&&with the ""ibm,configure-connector"" RTAS before ""start-cpu"" is called.&&&&The CPU core is advertised to the guest in raw mode as well.&&&&&&&&It both cases, it boils down to the fact that ""start-cpu"" happens too&&&&late. This can be fixed globally by propagating the compatibility mode&&&&of the boot CPU to the other CPUs during reset.  For this to work, the&&&&compatibility mode of the boot CPU must be set before the machine code&&&&actually resets all CPUs.&&&&&&&&It is not needed to set the compatibility mode in ""start-cpu"" anymore,&&&&so the code is dropped.&&&&&&&&Fixes: 51f84465dd98&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," tests/boot-serial-test: Add code to allow to specify our own kernel or bios QEMU only ships with some few firmware images, i.e. we can currently run&&&&the boot-serial test only on a very limited set of machines. But writing&&&&some characters to the default UART of a machine can often be done with&&&&some few lines of assembly, so we add the possibility to the boot-serial&&&&tester to use its own mini-kernels or mini-firmwares. We write such images&&&&then into a file that we can load with the ""-kernel"" or ""-bios"" parameter&&&&when we launch QEMU.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-Id: <1512031988-32490-3-git-send-email-thuth@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," virtio-pci: Don't force Subsystem Vendor ID = Vendor ID The statement being removed doesn't change anything as virtio PCI devices already&&&&have Subsystem Vendor ID set to pci_default_sub_vendor_id (0x1af4), same as Vendor&&&&ID. And the Virtio spec does not require the two to be equal, either:&&&&&&&&  ""The PCI Subsystem Vendor ID and the PCI Subsystem Device ID MAY reflect the PCI&&&&  Vendor and Device ID of the environment (for informational purposes by the driver).""&&&&&&&&Background:&&&&&&&&Following the recent virtio-win licensing change, several vendors are planning to&&&&ship their own certified version of Windows guest Virtio drivers, potentially taking&&&&advantage of Windows Update as a distribution channel. It is therefore critical that&&&&each vendor uses their own PCI Subsystem Vendor ID for Virtio devices to prevent&&&&drivers from other vendors binding to it.&&&&&&&&This would be trivially done by adding:&&&&&&&&  k->subsystem_vendor_id = ...&&&&&&&&to virtio_pci_class_init(). Except for the problematic statement deleted by this&&&&patch, which reverts the Subsystem Vendor ID back to 0x1af4 for legacy devices for&&&&no good reason.&&&&&&&&Signed-off-by: Ladi Prosek <lprosek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qapi: Stop rejecting #optional Commit 1d8bda1 got rid of #optional tags, and added a check to keep&&&&them from getting added back, to make sure patches then in flight&&&&don't add them back.  It's been six months, time to drop that check.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <20171002141341.24616-3-armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& "
0," backup: use copy_bitmap in incremental backup We can use copy_bitmap instead of sync_bitmap. copy_bitmap is&&&&initialized from sync_bitmap and it is more informative: we will not try&&&&to process data, that is already in progress (by write notifier).&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Message-id: 20171012135313.227864-6-vsementsov@virtuozzo.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," s390x/tcg: drop program_interrupt() All users are gone, we can finally drop it and make sure that all new&&&&program interrupt injections are reminded of the retaddr - as they have to&&&&use s390_program_interrupt() now.&&&&&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20171130162744.25442-16-david@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," xenfb: Add [feature|request]-raw-pointer Writes ""feature-raw-pointer"" during init to indicate the backend&&&&can pass raw unscaled values for absolute axes to the frontend.&&&&Frontends set ""request-raw-pointer"" to indicate the backend should&&&&not attempt to scale absolute values to console size.&&&&""request-raw-pointer"" is only valid if ""request-abs-pointer"" is&&&&also set. Raw unscaled pointer values are in the range [0, 0x7fff]&&&&&&&&""feature-raw-pointer"" and ""request-raw-pointer"" added to Xen&&&&header in commit 7868654ff7fe5e4a2eeae2b277644fa884a5031e&&&&&&&&Signed-off-by: Owen Smith <owen.smith@citrix.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>&&&&Signed-off-by: Stefano Stabellini <sstabellini@kernel.org>&&&& "
0, pc-bios/s390-ccw.img: update image Contains the following commit:&&&&- pc-bios/s390-ccw: Fix problem with invalid virtio-scsi LUN when rebooting&&&&&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& 
0," block: Error out on load_vm with active dirty bitmaps Loading a snapshot invalidates the bitmap. Just marking all blocks dirty&&&&is not a useful response in practice, instead the user needs to be aware&&&&that we switch to a completely different state. If they are okay with&&&&losing the dirty bitmap, they can just explicitly delete it.&&&&&&&&This effectively reverts commit 04dec3c3ae5.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&& "
0," target/ppc: Move setting of patb_entry on hash table init The patb_entry is used to store the location of the process table in&&&&guest memory. The msb is also used to indicate the mmu mode of the&&&&guest, that is patb_entry & 1 << 63 ? radix_mode : hash_mode.&&&&&&&&Currently we set this to zero in spapr_setup_hpt_and_vrma() since if&&&&this function gets called then we know we're hash. However some code&&&&paths, such as setting up the hpt on incoming migration of a hash guest,&&&&call spapr_reallocate_hpt() directly bypassing this higher level&&&&function. Since we assume radix if the host is capable this results in&&&&the msb in patb_entry being left set so in spapr_post_load() we call&&&&kvmppc_configure_v3_mmu() and tell the host we're radix which as&&&&expected means addresses cannot be translated once we actually run the cpu.&&&&&&&&To fix this move the zeroing of patb_entry into spapr_reallocate_hpt().&&&&&&&&Signed-off-by: Suraj Jitindar Singh <sjitindarsingh@gmail.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," nbd-client: Short-circuit 0-length operations The NBD spec was recently clarified to state that clients should&&&&not send 0-length requests to the server, as the server behavior&&&&is undefined [1].  We know that qemu-nbd's behavior is a successful&&&&no-op (once it has filtered for read-only exports), but other NBD&&&&implementations might return an error.  To avoid any questionable&&&&server implementations, it is better to just short-circuit such&&&&requests on the client side (we are relying on the block layer to&&&&already filter out requests such as invalid offset, write to a&&&&read-only volume, and so forth); do the short-circuit as late as&&&&possible to still benefit from protections from assertions that&&&&the block layer is not violating our assumptions.&&&&&&&&[1] https://github.com/NetworkBlockDevice/nbd/commit/ee926037&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171108215703.9295-6-eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&& "
0, build: don't create temporary files in source dir There are cases where users do VPATH builds with the source directory being on&&&&a read-only volume. In such a case they have to manually run the command&&&&'git-submodule.sh ...modules...' ahead of time. When checking for status we&&&&should not then write into the source dir.&&&&&&&&Tested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
0," qom: move CPUClass.tcg_initialize to a global 55c3cee (""qom: Introduce CPUClass.tcg_initialize"", 2017-10-24)&&&&introduces a per-CPUClass bool that we check so that the target CPU&&&&is initialized for TCG only once. This works well except when&&&&we end up creating more than one CPUClass, in which case we end&&&&up incorrectly initializing TCG more than once, i.e. once for&&&&each CPUClass.&&&&&&&&This can be replicated with:&&&&  $ aarch64-softmmu/qemu-system-aarch64 -machine xlnx-zcu102 -smp 6 \&&&&      -global driver=xlnx,,zynqmp,property=has_rpu,value=on&&&&In this case the class name of the ""RPUs"" is prefixed by ""cortex-r5-"",&&&&whereas the ""regular"" CPUs are prefixed by ""cortex-a53-"". This&&&&results in two CPUClass instances being created.&&&&&&&&Fix it by introducing a static variable, so that only the first&&&&target CPU being initialized will initialize the target-dependent&&&&part of TCG, regardless of CPUClass instances.&&&&&&&&Fixes: 55c3ceef61fcf06fc98ddc752b7cce788ce7680b&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Tested-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 1510343626-25861-2-git-send-email-cota@braap.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," nbd/server: Refactor zero-length option check Consolidate the response for a non-zero-length option payload&&&&into a new function, nbd_reject_length().  This check will&&&&also be used when introducing support for structured replies.&&&&&&&&Note that STARTTLS response differs based on time: if the connection&&&&is still unencrypted, we set fatal to true (a client that can't&&&&request TLS correctly may still think that we are ready to start&&&&the TLS handshake, so we must disconnect); while if the connection&&&&is already encrypted, the client is sending a bogus request but&&&&is no longer at risk of being confused by continuing the connection.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171027104037.8319-7-eblake@redhat.com>&&&&[eblake: correct return value on STARTTLS]&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&& "
0, s390x/tcg: implement SIGP CONDITIONAL EMERGENCY SIGNAL Mostly analogous to the kernel/KVM version (so I assume the checks are&&&&correct :) ). As a preparation for TCG.&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170928203708.9376-24-david@redhat.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& 
0," futex: add missing header guards The header file was introduced by fbcc3e5 (""qemu-thread: optimize QemuLockCnt&&&&with futexes on Linux"", 2017-01-16) without header guards. Add them.&&&&&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, numa: fixup parsed NumaNodeOptions earlier numa 'mem' option with suffix or without one is possible&&&&only on CLI/HMP. Instead of fixing up special suffix less&&&&CLI case deep in parse_numa_node() do it earlier right&&&&after option is parsed into NumaNodeOptions with OptVisistor&&&&so that the rest of the code would use valid values in&&&&NumaNodeOptions and won't have to reparse QemuOpts.&&&&&&&&It will help to isolate CLI/HMP parts in parse_numa() and&&&&split out parsed NumaNodeOptions processing into separate&&&&function that could be reused by QMP handler where we have&&&&only NumaNodeOptions and don't need any fixups.&&&&&&&&While at it reuse qemu_strtosz_MiB() instead of manually&&&&checking for suffixes.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Message-Id: <1507801198-98182-1-git-send-email-imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," scsi: Ignore executable for in-tree builds The new qemu-pr-helper (commit b855f8d17) should not be checked in,&&&&even when doing in-tree builds.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20170926151421.14557-1-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, s390x/tcg: make testblock use the new _real mmu Low address protection checks will be moved into the mmu later.&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170926183318.12995-6-david@redhat.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& 
0, io: use case insensitive check for Connection & Upgrade websock headers When checking the value of the Connection and Upgrade HTTP headers&&&&the websock RFC (6455) requires the comparison to be case insensitive.&&&&The Connection value should be an exact match not a substring.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
0, s390x/css: use ccw data stream Replace direct access which implicitly assumes no IDA&&&&or MIDA with the new ccw data stream interface which should&&&&cope with these transparently in the future.&&&&&&&&Note that checking the return code for ccw_dstream_* will be&&&&done in a follow-on patch.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Reviewed-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>&&&&Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Message-Id: <20170921180841.24490-3-pasic@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& 
0," block: Uniform handling of 0-length bdrv_get_block_status() Handle a 0-length block status request up front, with a uniform&&&&return value claiming the area is not allocated.&&&&&&&&Most callers don't pass a length of 0 to bdrv_get_block_status()&&&&and friends; but it definitely happens with a 0-length read when&&&&copy-on-read is enabled.  While we could audit all callers to&&&&ensure that they never make a 0-length request, and then assert&&&&that fact, it was just as easy to fix things to always report&&&&success (as long as the callers are careful to not go into an&&&&infinite loop).  However, we had inconsistent behavior on whether&&&&the status is reported as allocated or defers to the backing&&&&layer, depending on what callbacks the driver implements, and&&&&possibly wasting quite a few CPU cycles to get to that answer.&&&&Consistently reporting unallocated up front doesn't really hurt&&&&anything, and makes it easier both for callers (0-length requests&&&&now have well-defined behavior) and for drivers (drivers don't&&&&have to deal with 0-length requests).&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," block: Perform copy-on-read in loop Improve our braindead copy-on-read implementation.  Pre-patch,&&&&we have multiple issues:&&&&- we create a bounce buffer and perform a write for the entire&&&&request, even if the active image already has 99% of the&&&&clusters occupied, and really only needs to copy-on-read the&&&&remaining 1% of the clusters&&&&- our bounce buffer was as large as the read request, and can&&&&needlessly exhaust our memory by using double the memory of&&&&the request size (the original request plus our bounce buffer),&&&&rather than a capped maximum overhead beyond the original&&&&- if a driver has a max_transfer limit, we are bypassing the&&&&normal code in bdrv_aligned_preadv() that fragments to that&&&&limit, and instead attempt to read the entire buffer from the&&&&driver in one go, which some drivers may assert on&&&&- a client can request a large request of nearly 2G such that&&&&rounding the request out to cluster boundaries results in a&&&&byte count larger than 2G.  While this cannot exceed 32 bits,&&&&it DOES have some follow-on problems:&&&&-- the call to bdrv_driver_pread() can assert for exceeding&&&&BDRV_REQUEST_MAX_BYTES, if the driver is old and lacks&&&&.bdrv_co_preadv&&&&-- if the buffer is all zeroes, the subsequent call to&&&&bdrv_co_do_pwrite_zeroes is a no-op due to a negative size,&&&&which means we did not actually copy on read&&&&&&&&Fix all of these issues by breaking up the action into a loop,&&&&where each iteration is capped to sane limits.  Also, querying&&&&the allocation status allows us to optimize: when data is&&&&already present in the active layer, we don't need to bounce.&&&&&&&&Note that the code has a telling comment that copy-on-read&&&&should probably be a filter driver rather than a bolt-on hack&&&&in io.c; but that remains a task for another day.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target/xtensa: Use the pre-defined MEMTXATTRS_UNSPECIFIED macro Instead of using the hardcoded (MemTxAttrs){0} for no memory attributes&&&&let's use the already defined MEMTXATTRS_UNSPECIFIED macro instead.&&&&&&&&This is technically a change of behaviour as MEMTXATTRS_UNSPECIFIED sets&&&&the unspecified field to 1, but it doesn't look like anything is&&&&checking this field.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Acked-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," virtio-serial: add enable_backend callback We should guarantee that RAM will not be modified while VM has a stopped&&&&state, otherwise it can lead to negative consequences during post-copy&&&&migration. In RUN_STATE_FINISH_MIGRATE step, it's expected that RAM on&&&&source side will not be modified as this could lead to non-consistent vm state&&&&on the destination side. Also RAM access during postcopy-ram migration with&&&&enabled release-ram capability can lead to sad consequences.&&&&&&&&Let's add enable_backend() callback to avoid undesirable virtioqueue changes&&&&in the guest memory.&&&&&&&&Signed-off-by: Pavel Butsykin <pbutsykin@virtuozzo.com>&&&&Message-Id: <20170919120733.22020-1-pbutsykin@virtuozzo.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target/arm: [tcg,a64] Port to translate_insn Incrementally paves the way towards using the generic instruction translation&&&&loop.&&&&&&&&Reviewed-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Message-Id: <150002510079.22386.10164419868911710218.stgit@frigg.lan>&&&&[rth: Adjust for translate_insn interface change.]&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0, virtio-gpu: use DIV_ROUND_UP I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0, usb-hub: use DIV_ROUND_UP I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0, i8254: use QEMU_ALIGN_DOWN I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0," tests: Add network filter tests to the check-qtest-s390x list With some small modifications, we can also use the the netfilter,&&&&the filter-mirror and the filter-redirector tests on s390x.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Cornelia Huck <cohuck@redhat.com>&&&&Message-Id: <1502951113-4246-3-git-send-email-thuth@redhat.com>&&&&Reviewed-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," scsi: clarify sense codes for LUN0 emulation The LUN0 emulation is just that, an emulation for a non-existing&&&&LUN0. So we should be returning LUN_NOT_SUPPORTED for any request&&&&coming from any other LUN.&&&&And we should be aborting unhandled commands with INVALID OPCODE,&&&&not LUN NOT SUPPORTED.&&&&&&&&Signed-off-by: Hannes Reinecke <hare@suse.com>&&&&Message-Id: <1501835795-92331-4-git-send-email-hare@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," block: convert ThrottleGroup to object with QOM ThrottleGroup is converted to an object. This will allow the future&&&&throttle block filter drive easy creation and configuration of throttle&&&&groups in QMP and cli.&&&&&&&&A new QAPI struct, ThrottleLimits, is introduced to provide a shared&&&&struct for all throttle configuration needs in QMP.&&&&&&&&ThrottleGroups can be created via CLI as&&&&    -object throttle-group,id=foo,x-iops-total=100,x-..&&&&where x-* are individual limit properties. Since we can't add non-scalar&&&&properties in -object this interface must be used instead. However,&&&&setting these properties must be disabled after initialization because&&&&certain combinations of limits are forbidden and thus configuration&&&&changes should be done in one transaction. The individual properties&&&&will go away when support for non-scalar values in CLI is implemented&&&&and thus are marked as experimental.&&&&&&&&ThrottleGroup also has a `limits` property that uses the ThrottleLimits&&&&struct.  It can be used to create ThrottleGroups or set the&&&&configuration in existing groups as follows:&&&&&&&&{ ""execute"": ""object-add"",&&&&  ""arguments"": {&&&&    ""qom-type"": ""throttle-group"",&&&&    ""id"": ""foo"",&&&&    ""props"" : {&&&&      ""limits"": {&&&&          ""iops-total"": 100&&&&      }&&&&    }&&&&  }&&&&}&&&&{ ""execute"" : ""qom-set"",&&&&    ""arguments"" : {&&&&        ""path"" : ""foo"",&&&&        ""property"" : ""limits"",&&&&        ""value"" : {&&&&            ""iops-total"" : 99&&&&        }&&&&    }&&&&}&&&&&&&&This also means a group's configuration can be fetched with qom-get.&&&&&&&&Signed-off-by: Manos Pitsidianakis <el13635@mail.ntua.gr>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," tests: crypto: add hash speed benchmark support This patch add a hash speed benchmark, it helps us to&&&&measure the performance by using ""make check-speed"" or&&&&using ""./tests/benchmark-crypto-hash"" directly.&&&&&&&&Signed-off-by: Longpeng(Mike) <longpeng2@huawei.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
0, migration: check global caps for validity Checks validity for all the capabilities that we enabled with command&&&&line.&&&&&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Message-Id: <1500349150-13240-11-git-send-email-peterx@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," hw/arm/mps2: Add ethernet The MPS2 FPGA images support ethernet via a LAN9220. We use&&&&QEMU's LAN9118 model, which is software compatible except&&&&that it is missing the checksum-offload feature.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1500029487-14822-9-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& "
0, audio/adlib: remove limitation of one adlib card Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-id: 20170621043401.19842-3-hpoussin@reactos.org&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," target/mips: Fix TLBWI shadow flush for EHINV,XI,RI Writing specific TLB entries with TLBWI flushes shadow TLB entries&&&&unless an existing entry is having its access permissions upgraded. This&&&&is necessary as software would from then on expect the previous mapping&&&&in that entry to no longer be in effect (even if QEMU has quietly&&&&evicted it to the shadow TLB on a TLBWR).&&&&&&&&However it won't do this if only EHINV, XI, or RI bits have been set,&&&&even if that results in a reduction of permissions, so add the necessary&&&&checks to invoke the flush when these bits are set.&&&&&&&&Fixes: 2fb58b73746e (""target-mips: add RI and XI fields to TLB entry"")&&&&Fixes: 9456c2fbcd82 (""target-mips: add TLBINV support"")&&&&Signed-off-by: James Hogan <james.hogan@imgtec.com>&&&&Cc: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Tested-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&&[yongbok.kim@imgtec.com:&&&&  cosmetic changes]&&&&Signed-off-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&& "
0," s390x: initialize cpu firstly By initializing the CPU firstly, we are able to retrieve and use the&&&&CPU model features when initializing other subsystem or devices.&&&&&&&&Signed-off-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cohuck@redhat.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0," dimm: Convert to DEFINE_PROP_LINK Unlike the usual object_property_add_link() invocations in other&&&&devices, dimm checks the ""is mapped"" state of the backend in addition to&&&&qdev_prop_allow_set_link_before_realize. To convert it without&&&&specializing DEFINE_PROP_LINK which always uses the qdev general check&&&&callback, move the extra check to device realize time.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-Id: <20170714021509.23681-11-famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, target/arm: use DISAS_EXIT for eret handling Previously DISAS_JUMP did ensure this but with the optimisation of&&&&8a6b28c7 (optimize indirect branches) we might not leave the loop.&&&&This means if any pending interrupts are cleared by changing IRQ flags&&&&we might never get around to servicing them. You usually notice this&&&&by seeing the lookup_tb_ptr() helper gainfully chaining TBs together&&&&while cpu->interrupt_request remains high and the exit_request has not&&&&been set.&&&&&&&&This breaks amongst other things the OPTEE test suite which executes&&&&an eret from the secure world after a non-secure world IRQ has gone&&&&pending which then never gets serviced.&&&&&&&&Instead of using the previously implied semantics of DISAS_JUMP we use&&&&DISAS_EXIT which will always exit the run-loop.&&&&&&&&CC: Etienne Carriere <etienne.carriere@linaro.org>&&&&CC: Joakim Bech <joakim.bech@linaro.org>&&&&CC: Jaroslaw Pelczar <j.pelczar@samsung.com>&&&&CC: Peter Maydell <peter.maydell@linaro.org>&&&&CC: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-id: 20170713141928.25419-7-alex.bennee@linaro.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," nbd: Implement NBD_INFO_BLOCK_SIZE on client The upstream NBD Protocol has defined a new extension to allow&&&&the server to advertise block sizes to the client, as well as&&&&a way for the client to inform the server whether it intends to&&&&obey block sizes.&&&&&&&&When using the block layer as the client, we will obey block&&&&sizes; but when used as 'qemu-nbd -c' to hand off to the&&&&kernel nbd module as the client, we are still waiting for the&&&&kernel to implement a way for us to learn if it will honor&&&&block sizes (perhaps by an addition to sysfs, rather than an&&&&ioctl), as well as any way to tell the kernel what additional&&&&block sizes to obey (NBD_SET_BLKSIZE appears to be accurate&&&&for the minimum size, but preferred and maximum sizes would&&&&probably be new ioctl()s), so until then, we need to make our&&&&request for block sizes conditional.&&&&&&&&When using ioctl(NBD_SET_BLKSIZE) to hand off to the kernel,&&&&use the minimum block size as the sector size if it is larger&&&&than 512, which also has the nice effect of cooperating with&&&&(non-qemu) servers that don't do read-modify-write when&&&&exposing a block device with 4k sectors; it might also allow&&&&us to visit a file larger than 2T on a 32-bit kernel.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20170707203049.534-10-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," qemu-iotests: support per-format golden output files Some tests produce format-dependent output.  Either the difference is&&&&filtered out and ignored, or the test case is format-specific so we&&&&don't need to worry about per-format output differences.&&&&&&&&There is a third case: the test script is the same for all image formats&&&&and the format-dependent output is relevant.  An ugly workaround is to&&&&copy-paste the test into multiple per-format test cases.  This&&&&duplicates code and is not maintainable.&&&&&&&&This patch allows test cases to add per-format golden output files so a&&&&single test case can work correctly when format-dependent output must be&&&&checked:&&&&&&&&  123.out.qcow2&&&&  123.out.raw&&&&  123.out.vmdk&&&&  ...&&&&&&&&This naming scheme is not composable with 123.out.nocache or 123.pc.out,&&&&two other scenarios where output files are split.  I don't think it&&&&matters since few test cases need these features.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: 20170705125738.8777-9-stefanha@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0, target/s390x: implement PACK UNICODE Use a common helper with PACK ASCII as the differences are limited to&&&&the stride of the source operand.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Message-Id: <20170531220129.27724-25-aurelien@aurel32.net>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," s390x: vmstatify config migration for virtio-ccw Let's vmstatify virtio_ccw_save_config and virtio_ccw_load_config for&&&&flexibility (extending using subsections) and for fun.&&&&&&&&To achieve this we need to hack the config_vector, which is VirtIODevice&&&&(that is common virtio) state, in the middle of the VirtioCcwDevice state&&&&representation.  This is somewhat ugly, but we have no choice because the&&&&stream format needs to be preserved.&&&&&&&&Almost no changes in behavior. Exception is everything that comes with&&&&vmstate like extra bookkeeping about what's in the stream, and maybe some&&&&extra checks and better error reporting.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Message-Id: <20170703213414.94298-1-pasic@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0," memory: remove the last param in memory_region_iommu_replay() We were always passing in that one as ""false"" to assume that's an read&&&&operation, and we also assume that IOMMU translation would always have&&&&that read permission. A better permission would be IOMMU_NONE since the&&&&replay is after all not a real read operation, but just a page table&&&&rebuilding process.&&&&&&&&CC: David Gibson <david@gibson.dropbear.id.au>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&& "
0, blockjob: reorganize block_job_completed_txn_abort This splits the part that touches job states from the part that invokes&&&&callbacks.  It will make the code simpler to understand once job states will&&&&be protected by a different mutex than the AioContext lock.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 20170508141310.8674-11-pbonzini@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& 
0," curl: do not do aio_poll when waiting for a free CURLState Instead, put the CURLAIOCB on a wait list and yield; curl_clean_state will&&&&wake the corresponding coroutine.&&&&&&&&Because of CURL's callback-based structure, we cannot easily convert&&&&everything to CoMutex/CoQueue; keeping the QemuMutex is simpler.  However,&&&&CoQueue is a simple wrapper around a linked list, so we can easily&&&&use QSIMPLEQ and open-code a CoQueue, protected by the BDRVCURLState&&&&QemuMutex instead of a CoMutex.&&&&&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20170515100059.15795-8-pbonzini@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," blockjob: introduce block_job_cancel_async, check iostatus invariants The new functions helps respecting the invariant that the coroutine&&&&is entered with false user_resume, zero pause count and no error&&&&recorded in the iostatus.&&&&&&&&Resetting the iostatus is now common to all of block_job_cancel_async,&&&&block_job_user_resume and block_job_iostatus_reset, albeit with slight&&&&differences:&&&&&&&&- block_job_cancel_async resets the iostatus, and resumes the job if&&&&there was an error, but the coroutine is not restarted immediately.&&&&For example the caller may continue with a call to block_job_finish_sync.&&&&&&&&- block_job_user_resume resets the iostatus.  It wants to resume the job&&&&unconditionally, even if there was no error.&&&&&&&&- block_job_iostatus_reset doesn't resume the job at all.  Maybe that's&&&&a bug but it should be fixed separately.&&&&&&&&block_job_iostatus_reset does the least common denominator, so add some&&&&checking but otherwise leave it as the entry point for resetting the&&&&iostatus.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 20170508141310.8674-8-pbonzini@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," block: Simplify bdrv_append_temp_snapshot() logic Noticed while checking Coccinelle results. Naming a label 'out:'&&&&when it is only used on error paths is weird.  Also, we had some&&&&dead stores to 'ret'.  Meanwhile we know that snapshot_options&&&&is NULL on success and that QDECREF(NULL) is safe.  So merge the&&&&two exit paths into one by careful control over bs_snapshot.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <20170427215821.19397-8-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0, postcopy: Check for shared memory Postcopy doesn't support migration of RAM shared with another process&&&&yet (we've got a bunch of things to understand).&&&&Check for the case and don't allow postcopy to be enabled.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," monitor: Check whether TCG is enabled before running the ""info jit"" code The ""info jit"" command currently aborts on Mac OS X with the message&&&&""qemu_mutex_lock: Invalid argument"" when running with ""-M accel=qtest"".&&&&We should only call into the TCG code here if TCG has really been&&&&enabled and initialized.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-Id: <1493179907-22516-1-git-send-email-thuth@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Tested-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
0," numa: add '-numa cpu,...' option for property based node mapping legacy cpu to node mapping is using cpu index values to map&&&&VCPU to node with help of '-numa node,nodeid=node,cpus=x[-y]'&&&&option. However cpu index is internal concept and QEMU users&&&&have to guess /reimplement qemu's logic/ to map it to&&&&a concrete cpu socket/core/thread to make sane CPUs&&&&placement across numa nodes.&&&&&&&&This patch allows to map cpu objects to numa nodes using&&&&the same properties as used for cpus with -device/device_add&&&&(socket-id/core-id/thread-id/node-id).&&&&&&&&At present valid properties/values to address CPUs could be&&&&fetched using hotpluggable-cpus monitor/qmp command, it will&&&&require user to start qemu twice when creating domain to fetch&&&&possible CPUs for a machine type/-smp layout first and&&&&then the second time with numa explicit mapping for actual&&&&usage. The first step results could be saved and reused to&&&&set/change mapping later as far as machine type/-smp stays&&&&the same.&&&&&&&&Proposed impl. supports exact and wildcard matching to&&&&simplify CLI and allow to set mapping for a specific cpu&&&&or group of cpu objects specified by matched properties.&&&&&&&&For example:&&&&&&&&   # exact mapping x86&&&&   -numa cpu,node-id=x,socket-id=y,core-id=z,thread-id=n&&&&&&&&   # exact mapping SPAPR&&&&   -numa cpu,node-id=x,core-id=y&&&&&&&&   # wildcard mapping, all cpu objects that match socket-id=y&&&&   # are mapped to node-id=x&&&&   -numa cpu,node-id=x,socket-id=y&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Message-Id: <1494415802-227633-18-git-send-email-imammedo@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," ppc: remove cannot_destroy_with_object_finalize_yet This removes the assert(kvm_enabled()) from kvmppc_host_cpu_initfn()&&&&&&&&This assert can never be triggered as the function is only registered&&&&when KVM is available (see also 4c315c2&&&&""qdev: Protect device-list-properties against broken devices"").&&&&&&&&So we can remove the cannot_destroy_with_object_finalize_yet from&&&&kvmppc_host_cpu_class_init() without fear and beyond reproach.&&&&(as it has already be done for i386 with 771a13e ""i386: Unset&&&&cannot_destroy_with_object_finalize_yet on ""host"" model"" and&&&&e435601 ""target-i386: Remove assert(kvm_enabled()) from&&&&host_x86_cpu_initfn()"")&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Message-Id: <20170414083717.13641-3-lvivier@redhat.com>&&&&Acked-by: Peter Maydell <peter.maydell@linaro.org>&&&&Acked-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," numa,spapr: align default numa node memory size to 256MB Since commit 224245b (""spapr: Add LMB DR connectors""), NUMA node&&&&memory size must be aligned to 256MB (SPAPR_MEMORY_BLOCK_SIZE).&&&&&&&&But when ""-numa"" option is provided without ""mem"" parameter,&&&&the memory is equally divided between nodes, but 8MB aligned.&&&&This can be not valid for pseries.&&&&&&&&In that case we can have:&&&&$ ./ppc64-softmmu/qemu-system-ppc64 -m 4G -numa node -numa node -numa node&&&&qemu-system-ppc64: Node 0 memory size 0x55000000 is not aligned to 256 MiB&&&&&&&&With this patch, we have:&&&&(qemu) info numa&&&&3 nodes&&&&node 0 cpus: 0&&&&node 0 size: 1280 MB&&&&node 1 cpus:&&&&node 1 size: 1280 MB&&&&node 2 cpus:&&&&node 2 size: 1536 MB&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, i386: host_vendor_fms() helper function Helper function for code that needs to check the host CPU&&&&vendor/family/model/stepping values.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-Id: <20170309181212.18864-2-ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," qapi: Have each QAPI schema declare its name rule violations qapi.py has a hardcoded white-list of type names that may violate the&&&&rule on use of upper and lower case.  Add a new pragma directive&&&&'name-case-whitelist', and use it to replace the hard-coded&&&&white-list.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1489582656-31133-7-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," target-i386: defer VMEXIT to do_interrupt Paths through the softmmu code during code generation now need to be audited&&&&to check for double locking of tb_lock.  In particular, VMEXIT can take tb_lock&&&&through cpu_vmexit -> cpu_x86_update_cr4 -> tlb_flush.&&&&&&&&To avoid this, split VMEXIT delivery in two parts, similar to what is done with&&&&exceptions.  cpu_vmexit only records the VMEXIT exit code and information, and&&&&cc->do_interrupt can then deliver it when it is safe to take the lock.&&&&&&&&Reported-by: Alexander Boettcher <alexander.boettcher@genode-labs.com>&&&&Suggested-by: Richard Henderson <rth@twiddle.net>&&&&Tested-by: Alexander Boettcher <alexander.boettcher@genode-labs.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0," Add a new qmp command to do checkpoint, query xen replication status We can call this qmp command to do checkpoint outside of qemu.&&&&Xen colo will need this function.&&&&&&&&Signed-off-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&Signed-off-by: Wen Congyang <wencongyang@gmail.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Stefano Stabellini <sstabellini@kernel.org>&&&& "
0," target/ppc: Remove the function ppc_hash64_set_sdr1() The function ppc_hash64_set_sdr1 basically checked the htabsize and set an&&&&error if it was too big, otherwise it just stored the value in SPR_SDR1.&&&&&&&&Given that the only function which calls ppc_hash64_set_sdr1() is&&&&ppc_store_sdr1(), why not handle the checking in ppc_store_sdr1() to avoid&&&&the extra function call. Note that ppc_store_sdr1() already stores the&&&&value in SPR_SDR1 anyway, so we were doing it twice.&&&&&&&&Signed-off-by: Suraj Jitindar Singh <sjitindarsingh@gmail.com>&&&&[dwg: Remove unnecessary error temporary]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," check-qdict: Simplify qdict_crumple_test_recursive() Use qdict_get_qdict(), qdict_get_qlist() instead of qdict_get()&&&&followed by qobject_to_qdict(), qobject_to_qlist().&&&&&&&&While there, drop some redundant code.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1487363905-9480-3-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," elf-loader: Allow late loading of elf The current QEMU ROM infrastructure rejects late loading of ROMs.&&&&And ELFs are currently loaded as ROM, this prevents delayed loading&&&&of ELFs. So when loading ELF, allow the user to specify if ELF should&&&&be loaded as ROM or not.&&&&&&&&If an ELF is not loaded as ROM, then they are not restored on a&&&&guest reboot/reset and so its upto the user to handle the reloading.&&&&&&&&Signed-off-by: Farhan Ali <alifm@linux.vnet.ibm.com>&&&&Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0, target-ppc: implement xsabsqp/xsnabsqp instruction xsabsqp:  VSX Scalar Absolute Quad-Precision&&&&xsnabsqp: VSX Scalar Negative Absolute Quad-Precision&&&&&&&&Signed-off-by: Nikunj A Dadhania <nikunj@linux.vnet.ibm.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," ARRAY_SIZE: check that argument is an array It's a familiar pattern: some code uses ARRAY_SIZE, then refactoring&&&&changes the argument from an array to a pointer to a dynamically&&&&allocated buffer.  Code keeps compiling but any ARRAY_SIZE calls now&&&&return the size of the pointer divided by element size.&&&&&&&&Let's add build time checks to ARRAY_SIZE before we allow more&&&&of these in the code-base.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0, util/mmap-alloc: check parameter before using Signed-off-by: Cao jin <caoj.fnst@cn.fujitsu.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0," pseries: Make cpu_update during CAS unconditional spapr_h_cas_compose_response() includes a cpu_update parameter which&&&&controls whether it includes updated information on the CPUs in the device&&&&tree fragment returned from the ibm,client-architecture-support (CAS) call.&&&&&&&&Providing the updated information is essential when CAS has negotiated&&&&compatibility options which require different cpu information to be&&&&presented to the guest.  However, it should be safe to provide in other&&&&cases (it will just override the existing data in the device tree with&&&&identical data).  This simplifies the code by removing the parameter and&&&&always providing the cpu update information.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&& "
0," hw/i386/kvmvapic: Remove dead code in patch_hypercalls() The patch_hypercalls() function sets up a 'patches'&&&&variable and checks it at the end of the function, but&&&&never modifies it in the middle. Remove this dead code,&&&&which seems to have been present since the function was&&&&added in commit e5ad936b0fd7 in 2012.&&&&&&&&(Spotted by Coverity: CID 1005581.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Acked-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," target-arm: Enable EL2 feature bit on A53 and A57 Enable the ARM_FEATURE_EL2 bit on Cortex-A52 and&&&&Cortex-A57, since this is all now sufficiently implemented&&&&to work with the GICv3. We provide the usual CPU property&&&&to disable it for backwards compatibility with the older&&&&virt boards.&&&&&&&&In this commit, we disable the EL2 feature on the&&&&virt and ZynpMP boards, so there is no overall effect.&&&&Another commit will expose a board-level property to&&&&allow the user to enable EL2.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 1483977924-14522-18-git-send-email-peter.maydell@linaro.org&&&& "
0," target/xtensa: fix ICACHE/DCACHE options detection Configuration overlay does not explicitly say whether there are ICACHE&&&&and DCACHE in the core. Current code uses XCHAL_[ID]CACHE_WAYS to detect&&&&if corresponding cache option is enabled, but that's not correct: on&&&&cores without cache these macros are defined as 1, not as 0.&&&&Check XCHAL_[ID]CACHE_SIZE instead.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
0," tcg/i386: Allow bmi2 shiftx to have non-matching operands Previously we could not have different constraints for different ISA levels,&&&&which prevented us from eliding the matching constraint for shifts.&&&&&&&&We do now have to make sure that the operands match for constant shifts.&&&&We can also handle some small left shifts via lea.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," HACKING: document #include order It was not obvious to me why ""qemu/osdep.h"" must be the first #include.&&&&This documents the rationale and the overall #include order.&&&&&&&&Cc: Fam Zheng <famz@redhat.com>&&&&Cc: Markus Armbruster <armbru@redhat.com>&&&&Cc: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1479307161-24658-1-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," virtio-net: enable ioeventfd even if vhost=off virtio-net-pci does not enable ioeventfd for historical reasons (and&&&&nobody ever checked whether it should be revisited).  Note that other&&&&backends do enable ioeventfd for virtio-net.&&&&&&&&However, it has a major effect on performance.  On Windows, throughput is&&&&_multiplied_ by 2 or 3 on TCP_STREAM (on small packets it is ""only"" a 30%&&&&improvement) and a little less so on TCP_MAERTS albeit still very much&&&&statistically significant.  Latency also has a single digit improvement.&&&&&&&&This is not visible when using vhost, which forces ioeventfd=on, but it&&&&is substantial without vhost.  In addition, also on Windows and with the&&&&RHEL 7.3 kernel, APICv seems to slow down virtio-net performance a bit,&&&&but the penalty with this patch goes from -25% to -7%.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," hw/ptimer: Suppress error messages under qtest Under qtest ptimer emits lots of warning messages. The messages are caused&&&&by the actual checking of the ptimer error conditions. Suppress those&&&&messages, so they do not distract.&&&&&&&&Signed-off-by: Dmitry Osipenko <digetx@gmail.com>&&&&Message-id: 44877fff4ff03205590698d3dc189ad6d091472f.1473252818.git.digetx@gmail.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," megasas: do not call pci_dma_unmap after having freed the frame once Commit 8cc4678 (""megasas: remove useless check for cmd->frame"", 2016-07-17) was&&&&wrong because I trusted Coverity too much.  It turns out that there _is_ a&&&&path through which cmd->frame can become NULL.  After megasas_handle_frame's&&&&switch (md->frame->header.frame_cmd), megasas_init_firmware can be called.&&&&From there, megasas_reset_frames will call megasas_unmap_frame which resets&&&&cmd->frame = NULL.&&&&&&&&However, there is another bug to fix in there, because megasas_unmap_frame&&&&is called again after setting the command status.  In this case QEMU should&&&&not do anything, instead it calls pci_dma_unmap again.  Harmless, but&&&&better fix it.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," test-qga: Avoid qobject_from_jsonv(""%""PRId64) The qobject_from_jsonv() function implements a pseudo-printf&&&&language for creating a QObject; however, it is hard-coded to&&&&only parse a subset of formats understood by -Wformat, and is&&&&not a straight synonym to bare printf().  In particular, any&&&&use of an int64_t integer works only if the system's&&&&definition of PRId64 matches what the parser expects; which&&&&works on glibc (%lld or %ld depending on 32- vs. 64-bit) and&&&&mingw (%I64d), but not on Mac OS (%qd).  Rather than enhance&&&&the parser, it is just as easy to use normal printf() for&&&&this particular conversion, matching what is done elsewhere&&&&in this file [1], which is safe in this instance because the&&&&format does not contain any of the problematic differences&&&&(bare '%' or the '%s' format).&&&&&&&&The use of PRId64 for a variable named 'pid' is gross, but it&&&&is a sad reality of the 64-bit mingw environment, which&&&&mistakenly defines pid_t as a 64-bit type even though getpid()&&&&returns 'int' on that platform [2].  Our definition of the&&&&QGA GuestExec type defines 'pid' as a 64-bit entity, and we&&&&can't tighten it to 'int32' unless the mingw header is fixed.&&&&Using 'long long' instead of 'int64_t' just so that we can&&&&stick with qobject_from_jsonv(""%lld"") instead of printf() is&&&&not any prettier, since we may have later type churn anyways.&&&&&&&&[1] see 'git grep -A2 strdup_printf tests/test-qga.c'&&&&[2] https://bugzilla.redhat.com/show_bug.cgi?id=1397787&&&&&&&&Reported by: G 3 <programmingkidx@gmail.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1479922617-4400-3-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," nbd: Treat flags vs. command type as separate fields Current upstream NBD documents that requests have a 16-bit flags,&&&&followed by a 16-bit type integer; although older versions mentioned&&&&only a 32-bit field with masking to find flags.  Since the protocol&&&&is in network order (big-endian over the wire), the ABI is unchanged;&&&&but dealing with the flags as a separate field rather than masking&&&&will make it easier to add support for upcoming NBD extensions that&&&&increase the number of both flags and commands.&&&&&&&&Improve some comments in nbd.h based on the current upstream&&&&NBD protocol (https://github.com/yoe/nbd/blob/master/doc/proto.md),&&&&and touch some nearby code to keep checkpatch.pl happy.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1476469998-28592-3-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ivshmem: Fix 64 bit memory bar configuration Device ivshmem property use64=0 is designed to make the device&&&&expose a 32 bit shared memory BAR instead of 64 bit one.  The&&&&default is a 64 bit BAR, except pc-1.2 and older retain a 32 bit&&&&BAR.  A 32 bit BAR can support only up to 1 GiB of shared memory.&&&&&&&&This worked as designed until commit 5400c02 accidentally flipped&&&&its sense: since then, we misinterpret use64=0 as use64=1 and vice&&&&versa.  Worse, the default got flipped as well.  Devices&&&&ivshmem-plain and ivshmem-doorbell are not affected.&&&&&&&&Fix by restoring the test of IVShmemState member not_legacy_32bit&&&&that got messed up in commit 5400c02.  Also update its&&&&initialization for devices ivhsmem-plain and ivshmem-doorbell.&&&&Without that, they'd regress to 32 bit BARs.&&&&&&&&Signed-off-by: Zhuang Yanying <ann.zhuangyanying@huawei.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1479385863-7648-1-git-send-email-ann.zhuangyanying@huawei.com>&&&& "
0," checkpatch: tweak ""struct should normally be const"" warning Avoid triggering on&&&&&&&&    typedef struct BlockJobDriver BlockJobDriver;&&&&&&&&or&&&&&&&&    struct BlockJobDriver {&&&&&&&&Cc: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, tests: enable virtio tests on SPAPR but disable MSI-X tests on SPAPR as we can't check the result&&&&(the memory region used on PC is not readable on SPAPR).&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," migration: Switch to COLO process after finishing loadvm Switch from normal migration loadvm process into COLO checkpoint process if&&&&COLO mode is enabled.&&&&&&&&We add three new members to struct MigrationIncomingState,&&&&'have_colo_incoming_thread' and 'colo_incoming_thread' record the COLO&&&&related thread for secondary VM, 'migration_incoming_co' records the&&&&original migration incoming coroutine.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Amit Shah <amit@amitshah.net>&&&& "
0, aspeed: add support for the SMC segment registers The SMC controller on the Aspeed SoC has a set of registers to&&&&configure the mapping of each flash module in the SoC address&&&&space. Writing to these registers triggers a remap of the memory&&&&region and the spec requires a certain number of checks before doing&&&&so.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Reviewed-by: Andrew Jeffery <andrew@aj.id.au>&&&&Message-id: 1474977462-28032-7-git-send-email-clg@kaod.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," qht: simplify qht_reset_size Sometimes gcc doesn't pick up the fact that 'new' is properly&&&&set if 'resize == true', which may generate an unnecessary&&&&build warning.&&&&&&&&Fix it by removing 'resize' and directly checking that 'new'&&&&is non-NULL.&&&&&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Message-Id: <1475706880-10667-2-git-send-email-cota@braap.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ps2: correctly handle 'get/set scancode' command When getting scancode, current scancode must be preceded from reply ack.&&&&When setting scancode, we must reject invalid scancodes.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Message-id: 1473969987-5890-3-git-send-email-hpoussin@reactos.org&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," xhci: use linked list for transfers xhci has a fixed number of 24 (TD_QUEUE) XHCITransfer structs per&&&&endpoint, which turns out to be a problem for usb3 devices with 32 (or&&&&more) bulk streams.  xhci re-checks the trb rings on every finished&&&&transfer to make sure it'll pick up any pending work.  But that scheme&&&&breaks in case the first transfer of a ring can't be started because we&&&&ran out of XHCITransfer structs already.&&&&&&&&So remove static XHCITransfer array from XHCIEPContext.  Use a linked&&&&list instead, and allocate/free XHCITransfer as needed.  Add helper&&&&functions to allocate & initialize and to cleanup & release&&&&XHCITransfer structs.  That also simplifies trb management, we never&&&&have to realloc XHCITransfer->trbs because we don't reuse XHCITransfer&&&&structs any more.&&&&&&&&New dynamic limit for in-flight xhci transfers per endpoint is&&&&number-of-streams + 16.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1474965172-30321-5-git-send-email-kraxel@redhat.com&&&& "
0," intel_iommu, amd_iommu: allow UNMAP notifiers x86 vIOMMUs still lack of a complete IOMMU notifier mechanism.&&&&Before that is achieved, let's open a door for vhost DMAR support,&&&&which only requires cache invalidations (UNMAP operations).&&&&&&&&Meanwhile, convert hw_error() to error_report() and exit(1), to make&&&&the error messages cleaner and obvious (no CPU registers will be dumped).&&&&&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Message-Id: <1474606948-14391-4-git-send-email-peterx@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, tests: add RTAS command in the protocol Add a first test to validate the protocol:&&&&&&&&- rtas/get-time-of-day compares the time&&&&  from the guest with the time from the host.&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," block: Don't queue the same BDS twice in bdrv_reopen_queue_child() bdrv_reopen_queue_child() assumes that a BlockDriverState is never&&&&added twice to BlockReopenQueue.&&&&&&&&That's however not the case: commit_start() adds 'base' (and its&&&&children) to a new reopen queue, and then 'overlay_bs' (and its&&&&children, which include 'base') to the same queue. The effect of this&&&&is that the first set of options is ignored and overriden by the&&&&second.&&&&&&&&We fixed this by swapping the order in which both BDSs were added to&&&&the queue in 3db2bd5508c86a1605258bc77c9672d93b5c350e. This patch&&&&checks if a BDS is already in the reopen queue and keeps its options.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, tests: add a test to check invalid args Check that invalid args on commands without arguments returns an error.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20160912091913.15831-15-marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& 
0," spapr: Introduce sPAPRCPUCoreClass Each spapr cpu core type defines an instance_init routine which just&&&&populates the CPU class name. This can be done in the class_init&&&&commonly for all core types which simplifies the registration.&&&&This is inspired by how PowerNV core types are registered.&&&&&&&&Certain types of spapr cpu cores ('host' and generic type based on host&&&&CPU) are initialized in target-ppc/kvm.c. To convert these type&&&&registrations to use class_init, we need to expose&&&&spapr_cpu_core_class_init() outside of spapr_cpu_core.c.&&&&&&&&Commit d11b268e1765 added a generic sPAPR CPU core family&&&&type to support cases like POWER8 CPU type on POWER8E host CPU.&&&&Switching to class_init would fix such scenarios to use the right&&&&CPU thread type instead of defaulting to host-powerpc64-cpu.&&&&&&&&In an unrelated cleanup, fix a typo in .get_hotplug_handler routine.&&&&&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," block: Accept node-name for change-backing-file In order to remove the necessity to use BlockBackend names in the&&&&external API, we want to allow node-names everywhere. This converts&&&&change-backing-file to accept a node-name without lifting the&&&&restriction that we're operating at a root node.&&&&&&&&In case of an invalid device name, the command returns the GenericError&&&&error class now instead of DeviceNotFound, because this is what&&&&qmp_get_root_bs() returns.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," block: Accept node-name for drive-mirror In order to remove the necessity to use BlockBackend names in the&&&&external API, we want to allow node-names everywhere. This converts&&&&drive-mirror to accept a node-name without lifting the restriction that&&&&we're operating at a root node.&&&&&&&&In case of an invalid device name, the command returns the GenericError&&&&error class now instead of DeviceNotFound, because this is what&&&&qmp_get_root_bs() returns.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," drive-backup: added support for data compression The idea is simple - backup is ""written-once"" data. It is written block&&&&by block and it is large enough. It would be nice to save storage&&&&space and compress it.&&&&&&&&The patch adds a flag to the qmp/hmp drive-backup command which enables&&&&block compression. Compression should be implemented in the format driver&&&&to enable this feature.&&&&&&&&There are some limitations of the format driver to allow compressed writes.&&&&We can write data only once. Though for backup this is perfectly fine.&&&&These limitations are maintained by the driver and the error will be&&&&reported if we are doing something wrong.&&&&&&&&Signed-off-by: Pavel Butsykin <pbutsykin@virtuozzo.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Jeff Cody <jcody@redhat.com>&&&&CC: Markus Armbruster <armbru@redhat.com>&&&&CC: Eric Blake <eblake@redhat.com>&&&&CC: John Snow <jsnow@redhat.com>&&&&CC: Stefan Hajnoczi <stefanha@redhat.com>&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," checkpatch: tweak the files in which TABs are checked Include Python and shell scripts, and make an exception for Perl&&&&scripts we imported from Linux or elsewhere.&&&&&&&&Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, intel_iommu: add SID validation for IR This patch enables SID validation. Invalid interrupts will be dropped.&&&&&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," net: fix incorrect access to pointer This is not dereferencing the pointer, and instead checking only&&&&the value of the pointer.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," megasas: remove useless check for cmd->frame megasas_enqueue_frame always returns with non-NULL cmd->frame.&&&&Remove the ""else"" part as it is dead code.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ioapic: register IOMMU IEC notifier for ioapic Let IOAPIC the first consumer of x86 IOMMU IEC invalidation&&&&notifiers. This is only used for split irqchip case, when vIOMMU&&&&receives IR invalidation requests, IOAPIC will be notified to update&&&&kernel irq routes. For simplicity, we just update all IOAPIC routes,&&&&even if the invalidated entries are not IOAPIC ones.&&&&&&&&Since now we are creating IOMMUs using ""-device"" parameter, IOMMU&&&&device will be created after IOAPIC.  We need to do the registration&&&&after machine done by leveraging machine_done notifier.&&&&&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," pc: Enforce adding CPUs contiguously and removing them in opposite order It will still allow us to use cpu_index as migration instance_id&&&&since when CPUs are added contiguously (from the first to the last)&&&&and removed in opposite order, cpu_index stays stable and it's&&&&reproducible on destination side.&&&&&&&&While there is work in progress to support migration when there&&&&are holes in cpu_index range resulting from out-of-order plug or&&&&unplug, this patch is intended as an interim solution until&&&&cpu_index usage is cleaned up.&&&&&&&&As result of this patch it would be possible to plug/unplug CPUs,&&&&but in limited order that doesn't break migration.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," checkpatch: consider git extended headers valid patches Renames look like this with git-diff(1) when diff.renames = true is set:&&&&&&&&  diff --git a/a b/b&&&&  similarity index 100%&&&&  rename from a&&&&  rename to b&&&&&&&&This raises the ""Does not appear to be a unified-diff format patch""&&&&error because checkpatch.pl only considers a diff valid if it contains&&&&at least one ""@@"" hunk.&&&&&&&&This patch accepts renames and copies too so that checkpatch.pl exits&&&&successfully when a diff only renames/copies files.  The git diff&&&&extended header format is described on the git-diff(1) man page.&&&&&&&&Reported-by: Colin Lord <clord@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1468576014-28788-1-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, vnc: make sure we finish disconnect It may happen that vnc connections linger in disconnecting state forever&&&&because VncState happens to be in a state where vnc_update_client()&&&&exists early and never reaches the vnc_disconnect_finish() call at the&&&&bottom of the function.  Fix that by doing an additinal check at the&&&&start of the function.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1352799&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1468405280-2571-1-git-send-email-kraxel@redhat.com&&&& 
0, hw/mips/cps: create GIC block inside CPS Add GIC to CPS and expose its interrupt pins instead of CPU's.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& 
0," target-mips: add exception base to MIPS CPU Replace hardcoded 0xbfc00000 with exception_base which is initialized with&&&&this default address so there is no functional change here.&&&&However, it is now exposed and consequently it will be possible to modify&&&&it from outside of the CPU.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
0," block: Use block_job_get() in find_block_job() find_block_job() looks for a block backend with a specified name,&&&&checks whether it has a block job and acquires its AioContext.&&&&&&&&We want to identify jobs by their ID and not by the block backend&&&&they're attached to, so this patch ignores the backends altogether and&&&&gets the job directly. Apart from making the code simpler, this will&&&&allow us to find block jobs once they start having user-specified IDs.&&&&&&&&To ensure backward compatibility we keep ERROR_CLASS_DEVICE_NOT_ACTIVE&&&&as the error class if the job doesn't exist. In subsequent patches&&&&we'll also need to keep the device name as the default job ID if the&&&&user doesn't specify a different one.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," input-linux: better capability checks, merge input_linux_event_{mouse, keyboard} Improve capability checks (count keys and buttons), store results.&&&&&&&&Merge the input_linux_event_mouse and input_linux_event_keyboard&&&&functions into one, dispatch into input_linux_handle_mouse and&&&&input_linux_handle_keyboard depending on device capabilities.&&&&&&&&Allow calling both handle functions, so we can handle mice which&&&&also send key events, by routing those key events to the keyboard.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1466067800-25434-4-git-send-email-kraxel@redhat.com&&&& "
0," block/qdev: Fix NULL access when using BB twice BlockBackend has only a single pointer to its guest device, so it makes&&&&sure that only a single guest device is attached to it. device-add&&&&returns an error if you try to attach a second device to a BB. In order&&&&to make the error message nicer, -device that manually connects to a&&&&if=none block device get a different message than -drive that implicitly&&&&creates a guest device. The if=... option is stored in DriveInfo.&&&&&&&&However, since blockdev-add exists, not every BlockBackend has a&&&&DriveInfo any more. Check that it exists before we dereference it.&&&&&&&&QMP reproducer resulting in a segfault:&&&&&&&&{""execute"":""blockdev-add"",""arguments"":{""options"":{""id"":""disk"",""driver"":""file"",""filename"":""/tmp/test.img""}}}&&&&{""execute"":""device_add"",""arguments"":{""driver"":""virtio-blk-pci"",""drive"":""disk""}}&&&&{""execute"":""device_add"",""arguments"":{""driver"":""virtio-blk-pci"",""drive"":""disk""}}&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," block: Give nonzero result to blk_get_max_transfer_length() Making all callers special-case 0 as unlimited is awkward,&&&&and we DO have a hard maximum of BDRV_REQUEST_MAX_SECTORS given&&&&our current block layer API limits.&&&&&&&&In the case of scsi, this means that we now always advertise a&&&&limit to the guest, even in cases where the underlying layers&&&&previously use 0 for no inherent limit beyond the block layer.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target-ppc: ppce500_spin.c uses SPR_PIR, should use SPR_BOOKE_PIR ppce500_spin.c uses SPR_PIR to initialize the spin table, however on&&&&Book E processors the correct SPR is SPR_BOOKE_PIR.&&&&&&&&Signed-off-by: Aaron Larson <alarson@ddci.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," block: Switch transfer length bounds to byte-based Sector-based limits are awkward to think about; in our on-going&&&&quest to move to byte-based interfaces, convert max_transfer_length&&&&and opt_transfer_length.  Rename them (dropping the _length suffix)&&&&so that the compiler will help us catch the change in semantics&&&&across any rebased code, and improve the documentation.  Use unsigned&&&&values, so that we don't have to worry about negative values and&&&&so that bit-twiddling is easier; however, we are still constrained&&&&by 2^31 of signed int in most APIs.&&&&&&&&When a value comes from an external source (iscsi and raw-posix),&&&&sanitize the results to ensure that opt_transfer is a power of 2.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," port92: handle A20 IRQ as GPIO The port92 device has outgouing IRQ line A20. Currently the IRQ is referenced&&&&by a pointer which normally is set during machine initialization. The&&&&pointer is never changed at runtime. Hence, common GPIO model can be applied&&&&to A20 IRQ line. Note that checking for IRQ to be connected as in&&&&previous version of code is not required qemu_set_irq will do it.&&&&&&&&Signed-off-by: Efimov Vasily <real@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," nvdimm: support nvdimm label Introduce a parameter, 'label-size', which is the size of nvdimm label&&&&data area which is reserved at the end of backend memory. It is required&&&&at least 128k&&&&&&&&Two callbacks, read_label_data() and write_label_data(), are used to&&&&operate the label area&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," piix: Set I440FXState member pci_info.w32 in one place Range pci_info.w32 records the location of the PCI hole.&&&&&&&&It's initialized to empty when QOM zeroes I440FXState.  That's a fine&&&&value for a still unknown PCI hole.&&&&&&&&i440fx_init() sets pci_info.w32.begin = below_4g_mem_size.  Changes&&&&the PCI hole from empty to [below_4g_mem_size, UINT64_MAX].  That's a&&&&bogus value.&&&&&&&&i440fx_pcihost_initfn() sets pci_info.end = IO_APIC_DEFAULT_ADDRESS.&&&&Since i440fx_init() ran already, this changes the PCI hole to&&&&[below_4g_mem_size, IO_APIC_DEFAULT_ADDRESS-1].  That's the correct&&&&value.&&&&&&&&Setting the bounds of the PCI hole in two separate places is&&&&confusing, and begs the question whether the bogus intermediate value&&&&could be used by something, or what would happen if we somehow managed&&&&to realize an i440FX device without having run the board init function&&&&i440fx_init() first.&&&&&&&&Avoid the confusion by setting the (constant) upper bound along with&&&&the lower bound in i440fx_init().&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&& "
0, pc-dimm: introduce get_vmstate_memory_region callback This callback returns the MemoryRegion that is the memory of dimm should&&&&be kept during live migration&&&&&&&&nvdimm device is different with pc-dimm as its memory includes not only&&&&the MemoryRegion directly mapping to guest's address space but also the&&&&memory used as label data&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," os-posix: include sys/mman.h qemu/osdep.h checks whether MAP_ANONYMOUS is defined, but this check&&&&is bogus without a previous inclusion of sys/mman.h.  Include it in&&&&sysemu/os-posix.h and remove it from everywhere else.&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-arm: Don't permit ARMv8-only Neon insns on ARMv7 The Neon instructions VCVTA, VCVTM, VCVTN, VCVTP, VRINTA, VRINTM,&&&&VRINTN, VRINTP, VRINTX, and VRINTZ were only introduced with ARMv8,&&&&so they need a guard to make them UNDEF if the CPU only supports ARMv7.&&&&(We got this right for all the other new-in-v8 insns, but forgot&&&&it for these Neon 2-reg-misc ops.)&&&&&&&&Reported-by: Christophe Lyon <christophe.lyon@linaro.org>&&&&Tested-by: Christophe Lyon <christophe.lyon@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1465492511-9333-1-git-send-email-peter.maydell@linaro.org&&&& "
0," block: Allow replacement of a BDS by its overlay change_parent_backing_link() asserts that the BDS to be replaced is not&&&&used as a backing file. However, we may want to replace a BDS by its&&&&overlay in which case that very link should not be redirected.&&&&&&&&For instance, when doing a sync=none drive-mirror operation, we may have&&&&the following BDS/BB forest before block job completion:&&&&&&&&  target&&&&&&&&  base <- source <- BlockBackend&&&&&&&&During job completion, we want to establish the source BDS as the&&&&target's backing node:&&&&&&&&          target&&&&            |&&&&            v&&&&  base <- source <- BlockBackend&&&&&&&&This makes the target a valid replacement for the source:&&&&&&&&          target <- BlockBackend&&&&            |&&&&            v&&&&  base <- source&&&&&&&&Without this modification to change_parent_backing_link() we have to&&&&inject the target into the graph before the source is its backing node,&&&&thus temporarily creating a wrong graph:&&&&&&&&  target <- BlockBackend&&&&&&&&  base <- source&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20160610185750.30956-2-mreitz@redhat.com&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," thunk: Drop unused NO_THUNK_TYPE_SIZE guards The thunk_type_size_array() and thunk_type_align_array() functions&&&&are only provided if NO_THUNK_TYPE_SIZE is not defined. However&&&&nothing in the codebase defines that, and so in fact these functions&&&&are always present. Drop the unnecessary #ifdefs.&&&&&&&&(Over a decade ago thunk.h used to be included by some softmmu&&&&files, which defined NO_THUNK_TYPE_SIZE, but these includes are&&&&long gone; see for instance commit f193c7979c2f7.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," vnc: add configurable keyboard delay Limits the rate kbd events from the vnc server are forwarded to the&&&&guest, so input devices which are typically low-bandwidth can keep&&&&up even on bulky input.&&&&&&&&v2: update documentation too.&&&&v3: spell fixes.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Tested-by: Yang Hongyang <hongyang.yang@easystack.cn>&&&&Message-id: 1464762150-25817-1-git-send-email-kraxel@redhat.com&&&& "
0," audio: pa: Set volume of recording stream instead of recording device Since pulseaudio 1.0 it's possible to set the individual stream volume&&&&rather than setting the device volume. With this, setting hardware mixer&&&&of a emulated sound card doesn't mess up the volume configuration of the&&&&host.&&&&&&&&A side effect is that this limits compatible pulseaudio version to 1.0&&&&which was released on 2011-09-27.&&&&&&&&Signed-off-by: Peter Krempa <pkrempa@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 78853815be2069971b89b3a2e3181837064dd8f3.1462962512.git.pkrempa@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," scsi: esp: check TI buffer index before read/write The 53C9X Fast SCSI Controller(FSC) comes with internal 16-byte&&&&FIFO buffers. One is used to handle commands and other is for&&&&information transfer. Three control variables 'ti_rptr',&&&&'ti_wptr' and 'ti_size' are used to control r/w access to the&&&&information transfer buffer ti_buf[TI_BUFSZ=16]. In that,&&&&&&&&'ti_rptr' is used as read index, where read occurs.&&&&'ti_wptr' is a write index, where write would occur.&&&&'ti_size' indicates total bytes to be read from the buffer.&&&&&&&&While reading/writing to this buffer, index could exceed its&&&&size. Add check to avoid OOB r/w access.&&&&&&&&Reported-by: Huawei PSIRT <psirt@huawei.com>&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-Id: <1465230883-22303-1-git-send-email-ppandit@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," vfio: Check that IOMMU MR translates to system address space At the moment IOMMU MR only translate to the system memory.&&&&However if some new code changes this, we will need clear indication why&&&&it is not working so here is the check.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," linux-user: Support for restarting system calls for CRIS targets Update the CRIS main loop and sigreturn code:&&&& * on TARGET_ERESTARTSYS, wind guest PC backwards to repeat syscall insn&&&& * set all guest CPU state within signal.c code on sigreturn&&&& * handle TARGET_QEMU_ESIGRETURN in the main loop as the indication&&&&   that the main loop should not touch any guest CPU state&&&&&&&&Signed-off-by: Timothy Edward Baldwin <T.E.Baldwin99@members.leeds.ac.uk>&&&&Message-id: 1441497448-32489-34-git-send-email-T.E.Baldwin99@members.leeds.ac.uk&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&[PMM: tweak commit message; drop TARGET_USE_ERESTARTSYS define]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," vfio: Create device specific region info helper Given a device specific region type and sub-type, find it.  Also&&&&cleanup return point on error in vfio_get_region_info() so that we&&&&always return 0 with a valid pointer or -errno and NULL.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Tested-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," tb hash: hash phys_pc, pc, and flags with xxhash For some workloads such as arm bootup, tb_phys_hash is performance-critical.&&&&The is due to the high frequency of accesses to the hash table, originated&&&&by (frequent) TLB flushes that wipe out the cpu-private tb_jmp_cache's.&&&&More info:&&&&  https://lists.nongnu.org/archive/html/qemu-devel/2016-03/msg05098.html&&&&&&&&To dig further into this I modified an arm image booting debian jessie to&&&&immediately shut down after boot. Analysis revealed that quite a bit of time&&&&is unnecessarily spent in tb_phys_hash: the cause is poor hashing that&&&&results in very uneven loading of chains in the hash table's buckets;&&&&the longest observed chain had ~550 elements.&&&&&&&&The appended addresses this with two changes:&&&&&&&&1) Use xxhash as the hash table's hash function. xxhash is a fast,&&&&   high-quality hashing function.&&&&&&&&2) Feed the hashing function with not just tb_phys, but also pc and flags.&&&&&&&&This improves performance over using just tb_phys for hashing, since that&&&&resulted in some hash buckets having many TB's, while others getting very few;&&&&with these changes, the longest observed chain on a single hash bucket is&&&&brought down from ~550 to ~40.&&&&&&&&Tests show that the other element checked for in tb_find_physical,&&&&cs_base, is always a match when tb_phys+pc+flags are a match,&&&&so hashing cs_base is wasteful. It could be that this is an ARM-only&&&&thing, though. UPDATE:&&&&On Tue, Apr 05, 2016 at 08:41:43 -0700, Richard Henderson wrote:&&&&> The cs_base field is only used by i386 (in 16-bit modes), and sparc (for a TB&&&&> consisting of only a delay slot).&&&&> It may well still turn out to be reasonable to ignore cs_base for hashing.&&&&&&&&BTW, after this change the hash table should not be called ""tb_hash_phys""&&&&anymore; this is addressed later in this series.&&&&&&&&This change gives consistent bootup time improvements. I tested two&&&&host machines:&&&&- Intel Xeon E5-2690: 11.6% less time&&&&- Intel i7-4790K: 19.2% less time&&&&&&&&Increasing the number of hash buckets yields further improvements. However,&&&&using a larger, fixed number of buckets can degrade performance for other&&&&workloads that do not translate as many blocks (600K+ for debian-jessie arm&&&&bootup). This is dealt with later in this series.&&&&&&&&Reviewed-by: Sergey Fedorov <sergey.fedorov@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Message-Id: <1465412133-3029-8-git-send-email-cota@braap.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," target-i386: Use xsave structs for ext_save_area This doesn't introduce any change in the code, as the offsets and&&&&struct sizes match what was present in the table. This can be&&&&validated by the QEMU_BUILD_BUG_ON lines on target-i386/cpu.h,&&&&which ensures the struct sizes and offsets match the existing&&&&values in ext_save_area.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0, spice: fix coverity complains Remove the unnecessary NULL check.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1463047028-123868-3-git-send-email-arei.gonglei@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," block: Don't check throttled reqs in bdrv_requests_pending() Checking whether there are throttled requests requires going to the&&&&associated BlockBackend, which we want to avoid.&&&&&&&&All users of bdrv_requests_pending() in block/io.c already call&&&&bdrv_parent_drained_begin() first, which restarts all throttled&&&&requests, so no throttled requests can be left here and this is removal&&&&of dead code.&&&&&&&&The remaining users (assertions during graph manipulation in block.c)&&&&don't care about requests that are still queued in the BlockBackend and&&&&haven't been issued for a BlockDriverState yet.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Acked-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, tcg: reorganize tb_find_physical loop Put some comments and improve code structure. This should help reading&&&&the code.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&[Sergey Fedorov: provide commit message; bring back resetting of&&&&tb_invalidated_flag]&&&&Signed-off-by: Sergey Fedorov <sergey.fedorov@linaro.org>&&&&Reviewed-by: Richard Henderson  <rth@twiddle.net>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," qemu-io: Use bool for command line flags We require a C99 compiler; let's use it to express what we&&&&really mean.&&&&&&&&(Yes, we now have an instance of 'if (bool + bool + bool > 1)',&&&&which, although semantically valid C, looks ugly; it gets&&&&cleaned up later.)&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1462677405-4752-4-git-send-email-eblake@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," vfio/pci: Intel graphics legacy mode assignment Enable quirks to support SandyBridge and newer IGD devices as primary&&&&VM graphics.  This requires new vfio-pci device specific regions added&&&&in kernel v4.6 to expose the IGD OpRegion, the shadow ROM, and config&&&&space access to the PCI host bridge and LPC/ISA bridge.  VM firmware&&&&support, SeaBIOS only so far, is also required for reserving memory&&&&regions for IGD specific use.  In order to enable this mode, IGD must&&&&be assigned to the VM at PCI bus address 00:02.0, it must have a ROM,&&&&it must be able to enable VGA, it must have or be able to create on&&&&its own an LPC/ISA bridge of the proper type at PCI bus address&&&&00:1f.0 (sorry, not compatible with Q35 yet), and it must have the&&&&above noted vfio-pci kernel features and BIOS.  The intention is that&&&&to enable this mode, a user simply needs to assign 00:02.0 from the&&&&host to 00:02.0 in the VM:&&&&&&&&  -device vfio-pci,host=0000:00:02.0,bus=pci.0,addr=02.0&&&&&&&&and everything either happens automatically or it doesn't.  In the&&&&case that it doesn't, we leave error reports, but assume the device&&&&will operate in universal passthrough mode (UPT), which doesn't&&&&require any of this, but has a much more narrow window of supported&&&&devices, supported use cases, and supported guest drivers.&&&&&&&&When using IGD in this mode, the VM firmware is required to reserve&&&&some VM RAM for the OpRegion (on the order or several 4k pages) and&&&&stolen memory for the GTT (up to 8MB for the latest GPUs).  An&&&&additional option, x-igd-gms allows the user to specify some amount&&&&of additional memory (value is number of 32MB chunks up to 512MB) that&&&&is pre-allocated for graphics use.  TBH, I don't know of anything that&&&&requires this or makes use of this memory, which is why we don't&&&&allocate any by default, but the specification suggests this is not&&&&actually a valid combination, so the option exists as a workaround.&&&&Please report if it's actually necessary in some environment.&&&&&&&&See code comments for further discussion about the actual operation&&&&of the quirks necessary to assign these devices.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Tested-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," Revert ""acpi: mark PMTIMER as unlocked"" This reverts commit 7070e085d490c396f9237c8f10bf8b6e69cd0066.&&&&&&&&Commit message claims locking is not needed, but that appears&&&&to not be true, seabios ehci driver runs into timekeeping problems&&&&with this, see&&&&	https://bugzilla.redhat.com/show_bug.cgi?id=1322713&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1460702609-25971-1-git-send-email-kraxel@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," block: plug whole tree at once, introduce bdrv_io_unplugged_begin/end Extract the handling of io_plug ""depth"" from linux-aio.c and let the&&&&main bdrv_drain loop do nothing but wait on I/O.&&&&&&&&Like the two newly introduced functions, bdrv_io_plug and bdrv_io_unplug&&&&now operate on all children.  The visit order is now symmetrical between&&&&plug and unplug, making it possible for formats to implement plug/unplug.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Acked-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qcow2: Prevent backing file names longer than 1023 We reject backing file names with a length of more than 1023 characters&&&&when opening a qcow2 file, so we should not produce such files&&&&ourselves.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," ppc: Fix the range check in the LSWI instruction There are two issues: First, the number of registers that are used has&&&&to be calculated with ""(nb + 3) / 4"" (i.e. round always up, not down).&&&&Second, the ""start <= ra && (start + nr - 32) > ra"" condition for the&&&&wrap-around case is wrong: It has to be tested with ""||"" instead of ""&&"".&&&&Since we can reuse this check later for the LSWX instruction, let's&&&&place the fixed code into a helper function, too.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, ivshmem: Inline check_shm_size() into its only caller Improve the error messages while there.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1458066895-20632-34-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& 
0," ipmi: remove the need of an ending record in the SDR table Currently, the code initializing the sdr table relies on an ending&&&&record with a recid of 0xffff. This patch changes the loop to use the&&&&sdr size as a breaking condition.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@fr.ibm.com>&&&&Acked-by: Corey Minyard <cminyard@mvista.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," dbdma: warn when using unassigned channel With this, it's easier to know if a guest uses an invalid and/or unimplemented&&&&DMA channel.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Acked-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," rng: move request queue cleanup from RngEgd to RngBackend RngBackend is now in charge of cleaning up the linked list on&&&&instance finalization. It also exposes a function to finalize&&&&individual RngRequest instances, called by its child classes.&&&&&&&&Signed-off-by: Ladi Prosek <lprosek@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Message-Id: <1456994238-9585-4-git-send-email-lprosek@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
0," ARM: PL061: Checking register r/w accesses to reserved area pl061.c emulates two GPIO devices, ARM PL061 and TI Stellaris, which&&&&share the same read/write functions (pl061_read and pl061_write).&&&&However PL061 and Stellaris have different GPIO register definitions&&&&and pl061_read()/pl061_write() doesn't check it. This patch enforces&&&&checking on offset, preventing R/W into the reserved memory area.&&&&&&&&Signed-off-by: Wei Huang <wei@redhat.com>&&&&Message-id: 1455814580-17699-1-git-send-email-wei@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," qapi: Update docs to match recent generator changes Several commits have been changing the generator, but not updating&&&&the docs to match:&&&&- The implicit tag member is named ""type"", not ""kind"".  Screwed up in&&&&commit 39a1815.&&&&- Commit 9f08c8ec made list types lazy, and thereby dropped&&&&UserDefOneList if nothing explicitly uses the list type.&&&&- Commit 51e72bc1 switched the parameter order with 'name' occurring&&&&earlier.&&&&- Commit e65d89bf changed the layout of UserDefOneList.&&&&- Prefer the term 'member' over 'field'.&&&&- We now expose visit_type_FOO_members() for objects.&&&&- etc.&&&&&&&&Rework the examples to show slightly more output (we don't want to&&&&show too much; that's what the testsuite is for), and regenerate the&&&&output to match all recent changes.  Also, rearrange output to show&&&&.h files before .c (understanding the interface first often makes&&&&the implementation easier to follow).&&&&&&&&Reported-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1457021813-10704-5-git-send-email-eblake@redhat.com>&&&& "
0," linux-user: Use restrictive mask when calling cpsr_write() When linux-user code is calling cpsr_write(), use a restrictive&&&&mask to ensure we are limiting the set of CPSR bits we update.&&&&In particular, don't allow the mode bits to be changed.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Message-id: 1455556977-3644-5-git-send-email-peter.maydell@linaro.org&&&& "
0," target-arm: Implement MDCR_EL3.TPM and MDCR_EL2.TPM traps Implement the performance monitor register traps controlled&&&&by MDCR_EL3.TPM and MDCR_EL2.TPM. Most of the performance&&&&registers already have an access function to deal with the&&&&user-enable bit, and the TPM checks can be added there. We&&&&also need a new access function which only implements the&&&&TPM checks for use by the few not-EL0-accessible registers&&&&and by PMUSERENR_EL0 (which is always EL0-readable).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1455892784-11328-3-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Acked-by: Alistair Francis <alistair.francis@xilinx.com>&&&& "
0, migration/postcopy-ram: Guard use of sys/eventfd.h with CONFIG_EVENTFD sys/eventfd.h was being guarded only by a check for linux but does&&&&not exist on older distributions like CentOS 5. Move the include&&&&into the code that uses it and add an appropriate guard.&&&&&&&&Signed-off-by: Matthew Fortune <matthew.fortune@imgtec.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Message-Id: <6D39441BF12EF246A7ABCE6654B023536BB85DEB@hhmail02.hh.imgtec.org>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& 
0," mips/kvm: Support FPU in MIPS KVM guests Support the new KVM_CAP_MIPS_FPU capability, which allows the host's FPU&&&&to be exposed to the KVM guest.&&&&&&&&The capability is enabled if the guest core has an FPU according to its&&&&Config1 register. Various config bits are now writeable so that KVM is&&&&aware of the configuration (Config1.FP) and so that QEMU can&&&&save/restore the guest modifiable bits (Config5.FRE, Config5.UFR,&&&&Config5.UFE). The FCSR/FIR registers and the floating point registers&&&&are now saved/restored (depending on the FR mode bit).&&&&&&&&Signed-off-by: James Hogan <james.hogan@imgtec.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
0," vhost: move virtio 1.0 check to cross-endian helper Indeed vhost doesn't need to ask for vring endian fixing if the device is&&&&virtio 1.0, since it is already handled by the in-kernel vhost driver. This&&&&patch simply consolidates the logic into the existing helper.&&&&&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Laurent Vivier <lvivier@redhat.com>&&&& "
0, scsi-generic: grab device and port SAS addresses from backend This lets a SAS adapter expose them through its own configuration&&&&mechanism.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," ipmi_bmc_sim: Add break to correct watchdog NMI check It was falling through when it should have been a break.  Found by&&&&Coverity.  The logic could be simplified a bit with a fallthrough,&&&&probably the original thought, but that would be less clear, I think.&&&&&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Cc: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Corey Minyard <cminyard@mvista.com>&&&&Message-Id: <1452519152-6500-3-git-send-email-minyard@acm.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, tcg: Change ts->mem_reg to ts->mem_base Chain the temporaries together via pointers intstead of indices.&&&&The mem_reg value is now mem_base->reg.  This will be important later.&&&&&&&&This does require that the frame pointer have a global temporary&&&&allocated for it.  This is simple bar the existing reserved_regs check.&&&&&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," arm: virt-acpi: each MADT.GICC entry as enabled unconditionally in current impl. condition&&&&&&&&build_madt() {&&&&  ...&&&&  if (test_bit(i, cpuinfo->found_cpus))&&&&&&&&is always true since loop handles only present CPUs&&&&in range [0..smp_cpus).&&&&But to fill usless cpuinfo->found_cpus we do unnecessary&&&&scan over QOM tree to find the same CPUs.&&&&So mark GICC as present always and drop not needed&&&&code that fills cpuinfo->found_cpus.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Message-id: 1454323689-248759-1-git-send-email-imammedo@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," usb: check page select value while processing iTD While processing isochronous transfer descriptors(iTD), the page&&&&select(PG) field value could lead to an OOB read access. Add&&&&check to avoid it.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-id: 1453233406-12165-1-git-send-email-ppandit@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," iotests: 019: Use TEST_IMG override instead of ""mv"" Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1450752561-9300-3-git-send-email-famz@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," block: Add ""file"" output parameter to block status query functions The added parameter can be used to return the BDS pointer which the&&&&valid offset is referring to. Its value should be ignored unless&&&&BDRV_BLOCK_OFFSET_VALID in ret is set.&&&&&&&&Until block drivers fill in the right value, let's clear it explicitly&&&&right before calling .bdrv_get_block_status.&&&&&&&&The ""bs->file"" condition in bdrv_co_get_block_status is kept now to keep iotest&&&&case 102 passing, and will be fixed once all drivers return the right file&&&&pointer.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1453780743-16806-2-git-send-email-famz@redhat.com&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0, acpi: add aml_derefof Implement DeRefOf term which is used by NVDIMM _DSM method in later patch&&&&&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," nvdimm: implement NVDIMM device abstract Introduce ""nvdimm"" device which is based on pc-dimm device type&&&&&&&&Currently, nothing is specific for nvdimm but hotplug is disabled&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," so the only thing we do is&&&&putting them right back into the QDict so that we check at the end that&&&&they are indeed unchanged.&&&&&&&&We will add new options soon that can actually be changed.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& """
0," block: Exclude nested options only for children in append_open_options() Some drivers have nested options (e.g. blkdebug rule arrays), which&&&&don't belong to a child node and shouldn't be removed. Don't remove all&&&&options with ""."" in their name, but check for the complete prefixes of&&&&actually existing child nodes.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," block: Fix reopen with semantically overlapping options This fixes bdrv_reopen() calls like the following one:&&&&&&&&    qemu-io -c 'open -o overlap-check.template=all /tmp/test.qcow2' \&&&&    -c 'reopen -o overlap-check=none'&&&&&&&&The approach taken so far would result in an options QDict that has both&&&&""overlap-check.template=all"" and ""overlap-check=none"", which obviously&&&&conflicts. In this case, the old option should be overridden by the&&&&newly specified option.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&& "
0," tests/ivshmem-test: Supply missing initializer in get_device() If the device isn't found, the assertion uses dev without&&&&initialization.  Fix that.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1448384789-14830-4-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& "
0," qobject: Simplify QObject The QObject hierarchy is small enough, and unlikely to grow further&&&&(since we only use it to map to JSON and already cover all JSON&&&&types), that we can simplify things by not tracking a separate&&&&vtable, but just inline the code element of the vtable QType&&&&directly into QObject (renamed to type), and track a separate array&&&&of destroy functions.  We can drop qnull_destroy_obj() in the&&&&process.&&&&&&&&The remaining QObject subclasses must export their destructor.&&&&&&&&This also has the nice benefit of moving the typename 'QType'&&&&out of the way, so that the next patch can repurpose it for a&&&&nicer name for 'qtype_code'.&&&&&&&&The various objects are still the same size (so no change in cache&&&&line pressure), but now have less indirection (although I didn't&&&&bother benchmarking to see if there is a noticeable speedup, as&&&&we don't have hard evidence that this was in a performance hotspot&&&&in the first place).&&&&&&&&A future patch could drop the refcnt size to 32 bits for a smaller&&&&struct on 64-bit architectures, if desired (we have limits on the&&&&largest JSON that we are willing to parse, and will probably never&&&&need to take full advantage of a 64-bit refcnt).&&&&&&&&Suggested-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1449033659-25497-2-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," iotests: Check for quorum support in test 139 The quorum driver is always built in, but it is disabled during&&&&run-time if there's no SHA256 support available (see commit e94867e).&&&&&&&&This patch skips the quorum test in iotest 139 in that case.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: 1447172891-20410-1-git-send-email-berto@igalia.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0, block: test 'blockdev-snapshot' using a file BDS as the overlay This test checks that it is not possible to create a snapshot if the&&&&requested overlay node is a BDS which does not support backing images.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," qapi: Track enum values by QAPISchemaMember, not string Rather than using just an array of strings, make enum.values be&&&&an array of the new QAPISchemaMember type, and add a helper&&&&member_names() method to get back at the original list of names.&&&&Likewise, creating an enum requires wrapping strings, via a new&&&&QAPISchema._make_enum_members() method.  The benefit of wrapping&&&&enum members in a QAPISchemaMember Python object is that we now&&&&share the existing code for C name clash detection (although the&&&&code is not yet active until a later commit removes the earlier&&&&ad hoc parser checks).&&&&&&&&In a related change, the QAPISchemaMember._pretty_owner() method&&&&needs to learn about one more implicit type name: the generated&&&&enum associated with a simple union.&&&&&&&&In the interest of keeping the changes of this patch local to one&&&&file, the visitor interface still passes just a list of names&&&&rather than the full list of QAPISchemaMember instances.  We may&&&&want to revisit this in the future, if the consistency with&&&&visit_object_type() is worth it.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1449033659-25497-12-git-send-email-eblake@redhat.com>&&&&[Eric's simplifying followup squashed in]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," input: Document why x-input-send-event is still experimental The x-input-send-event command was introduced in 2.2 with mention&&&&that it is experimental, but now that several releases have elapsed&&&&without any changes, it would be nice to document why that was done&&&&and should still remain experimental in 2.5.&&&&&&&&Meanwhile, our documentation states that we prefer 'lower-case',&&&&rather than 'CamelCase', for qapi enum values.  The InputButton and&&&&InputAxis enums violate this convention.  However, because they are&&&&currently used primarily for generating code that is used internally;&&&&and their only exposure through QMP is via the experimental&&&&'x-input-send-event' command, we are free to change their spelling.&&&&Of course, it would be nicer to delay such a change until the same&&&&time we promote the command to non-experimental.  Adding&&&&documentation will help us remember to do that rename.&&&&&&&&We have plans to tighten the qapi generator to flag instances of&&&&inconsistent use of naming conventions; if that lands first, it&&&&will just need to whitelist these exceptions until the time we&&&&settle on the final interface.&&&&&&&&Fix a typo in the docs for InputAxis while at it.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1447354243-31825-1-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0, virtio-scsi: convert to virtqueue_map Note: virtqueue_map already validates input&&&&so virtio-scsi does not have to.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&&&&&&&&& 
0, Rework loadvm path for subloops Postcopy needs to have two migration streams loading concurrently;&&&&one from memory (with the device state) and the other from the fd&&&&with the memory transactions.&&&&&&&&Split the core of qemu_loadvm_state out so we can use it for both.&&&&&&&&Allow the inner loadvm loop to quit and cause the parent loops to&&&&exit as well.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," qapi: Invoke exception superclass initializer pylint recommends that every exception class should explicitly&&&&invoke the superclass __init__, even though things seem to work&&&&fine without it.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1443565276-4535-4-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," vhost-user-test: use tmpfs by default Most people don't run make check by default, so they skip vhost-user&&&&unit tests.  Solve this by using tmpfs instead, unless hugetlbfs is&&&&specified (using an environment variable).&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& "
0," qapi: Prepare for errors during check() The next few patches will start migrating error checking from&&&&ad hoc parse methods into the QAPISchema*.check() methods.  But&&&&for an error message to display, we first have to fix the&&&&overall 'try' to catch those errors.  We also want to enable a&&&&few more assertions, such as making sure every attempt to&&&&raise a semantic error is passed a valid location info, or that&&&&various preconditions hold.&&&&&&&&The general approach for moving error checking will then be to&&&&relax an assertion into an if that raises an exception if the&&&&condition does not hold, and removing the counterpart ad hoc&&&&check done during the parse phase.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1444710158-8723-3-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," target-arm/translate.c: Handle non-executable page-straddling Thumb insns When the memory we're trying to translate code from is not executable we have&&&&to turn this into a guest fault. In order to report the correct PC for this&&&&fault, and to make sure it is not reported until after any other possible&&&&faults for instructions earlier in execution, we must terminate TBs at&&&&the end of a page, in case the next instruction is in a non-executable page.&&&&This is simple for T16, A32 and A64 instructions, which are always aligned&&&&to their size. However T32 instructions may be 32-bits but only 16-aligned,&&&&so they can straddle a page boundary.&&&&&&&&Correct the condition that checks whether the next instruction will touch&&&&the following page, to ensure that if we're 2 bytes before the boundary&&&&and this insn is T32 then we end the TB.&&&&&&&&Reported-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Reviewed-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, pc-bios/s390-ccw: avoid floating point operations Some gcc versions (e.g. Fedora 22 gcc 5.1.1) seem to use floating&&&&point registers for spilling and filling of general purpose registers.&&&&As the BIOS does not activate the AFP register setting of CR0 this can&&&&cause data exception program checks.&&&&Disallow floating point in the BIOS as a simple solution.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Message-Id: <1443689387-34473-2-git-send-email-jfrei@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& 
0," qapi: Replace dirty is_c_ptr() by method c_null() is_c_ptr() looks whether the end of the C text for the type looks like&&&&a pointer.  Works, but is fragile.&&&&&&&&We now have a better tool: use QAPISchemaType method c_null().  The&&&&initializers for non-pointers become prettier: 0, false or the&&&&enumeration constant with the value 0 instead of {0}.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1442401589-24189-13-git-send-email-armbru@redhat.com>&&&& "
0," hw/arm/virt: Add gic-version option to virt machine Add gic_version to VirtMachineState, set it to value of the option&&&&and pass it around where necessary. Instantiate devices and fdt&&&&nodes according to the choice.&&&&&&&&max_cpus for virt machine increased to 123 (calculated from redistributor&&&&space available in the memory map). GICv2 compatibility check happens&&&&inside arm_gic_common_realize().&&&&&&&&ITS region is added to the memory map too, however currently it not used,&&&&just reserved.&&&&&&&&Signed-off-by: Pavel Fedin <p.fedin@samsung.com>&&&&Tested-by: Ashok kumar <ashoks@broadcom.com>&&&&[PMM: Added missing cpu_to_le* calls, thanks to Shannon Zhao]&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," atapi: abort transfers with 0 byte limits We're supposed to abort on transfers like this, unless we fill&&&&Word 125 of our IDENTIFY data with a default transfer size, which&&&&we don't currently do.&&&&&&&&This is an ATA error, not a SCSI/ATAPI one.&&&&See ATA8-ACS3 sections 7.17.6.49 or 7.21.5.&&&&&&&&If we don't do this, QEMU will loop forever trying to transfer&&&&zero bytes, which isn't particularly useful.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1442253685-23349-2-git-send-email-jsnow@redhat.com&&&& "
0," target-mips: fix corner case in TLBWR causing QEMU to hang cpu_mips_get_random() function is used to generate a random index from&&&&CP0.Wired to TLBSize-1 range. Current implementation avoids generating&&&&the same as before value, hence the while loop. If the guest sets&&&&CP0.Wired to TLBSize-1 (which actually does not sound to be very&&&&practical) QEMU will get stuck in the loop infinitely as we always&&&&generate the same index.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, pc: memhotplug: keep reserved-memory-end broken on 2.4 and earlier machines it will prevent guests on old machines from seeing&&&&inconsistent memory mapping in firmware/ACPI views.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," qcow2: Make size_to_clusters() return uint64_t Sadly, some images may have more clusters than what can be represented&&&&using a plain int. We should be prepared for that case (in&&&&qcow2_check_refcounts() we actually were trying to catch that case, but&&&&since size_to_clusters() truncated the returned value, that check never&&&&did anything useful).&&&&&&&&Cc: qemu-stable <qemu-stable@nongnu.org>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, target-arm: Implement AArch64 TLBI operations on IPAs Implement the AArch64 TLBI operations which take an intermediate&&&&physical address and invalidate stage 2 translations.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Message-id: 1439548879-1972-7-git-send-email-peter.maydell@linaro.org&&&& 
0," dp8393x: Flush packets when link comes up .can_receive callback changes semantics that once return 0, backend will&&&&try sending again until explicitly flushed, change the device to meet&&&&that.&&&&&&&&dp8393x_can_receive checks SONIC_CR_RXEN bit in SONIC_CR register and&&&&SONIC_ISR_RBE bit in SONIC_ISR register, try flushing the queue when&&&&either bit is being updated.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Message-id: 1436955553-22791-12-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, block: keep bitmap if incremental backup job is cancelled Reclaim the dirty bitmap if an incremental backup block job is&&&&cancelled.  The ret variable may be 0 when the job is cancelled so it's&&&&not enough to check ret < 0.&&&&&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1434380534-7680-1-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& 
0," usbnet: Drop usbnet_can_receive usbnet_receive already drops packet if rndis_state is not&&&&RNDIS_DATA_INITIALIZED, and queues packet if in buffer is not available.&&&&The only difference is s->dev.config but that is similar to rndis_state.&&&&&&&&Drop usbnet_can_receive and move these checks to usbnet_receive, so that&&&&we don't need to explicitly flush the queue when s->dev.config changes&&&&value.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Message-id: 1436955553-22791-5-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, kvm-all: move internal types to kvm_int.h i386 code will have to define a different KVMMemoryListener.  Create&&&&an internal header so that KVMSlot is not exposed outside.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," linux-user: fix the breakpoint inheritance in spawned threads When a thread is spawned, cpu_copy re-initializes&&&&the bp & wp lists of current thread, instead of the ones&&&&of the new thread.&&&&The effect is that breakpoints are no longer hit.&&&&&&&&Signed-off-by: Thierry Bultel <thierry.bultel@basystemes.fr>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," block: Add bdrv_get_block_status_above Like bdrv_is_allocated_above, this function follows the backing chain until seeing&&&&BDRV_BLOCK_ALLOCATED.  Base is not included.&&&&&&&&Reimplement bdrv_is_allocated on top.&&&&&&&&[Initialized bdrv_co_get_block_status_above() ret to 0 to silence&&&&mingw64 compiler warning about the unitialized variable.  assert(bs !=&&&&base) prevents that case but I suppose the program could be compiled&&&&with -DNDEBUG.&&&&--Stefan]&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, target-mips: remove misleading comments in translate_init.c PABITS are not hardcoded to 36 bits and we do not model 59 PABITS (which is&&&&the architectural limit) in QEMU.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0," virtio-gpu-pci: add virtio pci support This patch adds virtio-gpu-pci, which is the pci proxy for the virtio&&&&gpu device.  With this patch in place virtio-gpu is functional.  You&&&&need a linux guest with a virtio-gpu driver though, and output will&&&&appear pretty late in boot, once the kernel initialized drm and fbcon.&&&&&&&&Written by Dave Airlie and Gerd Hoffmann.&&&&&&&&Signed-off-by: Dave Airlie <airlied@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," softmmu: Add probe_write() Probe for whether the specified guest write access is permitted.&&&&If it is not permitted then an exception will be taken in the same&&&&way as if this were a real write access (and we will not return).&&&&Otherwise the function will return, and there will be a valid&&&&entry in the TLB for this access.&&&&&&&&Signed-off-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
0," vl: allow full-blown QemuOpts syntax for -global -global does not work for drivers that have a dot in their name, such as&&&&cfi.pflash01.  This is just a parsing limitation, because such globals&&&&can be declared easily inside a -readconfig file.&&&&&&&&To allow this usage, support the full QemuOpts key/value syntax for -global&&&&too, for example ""-global driver=cfi.pflash01,property=secure,value=on"".&&&&The two formats do not conflict, because the key/value syntax does not have&&&&a period before the first equal sign.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," tpm: Probe for connected TPM 1.2 or TPM 2 In the TPM passthrough backend driver, modify the probing code so&&&&that we can check whether a TPM 1.2 or TPM 2 is being used&&&&and adapt the behavior of the TPM TIS accordingly.&&&&&&&&Move the code that tested for a TPM 1.2 into tpm_utils.c&&&&and extend it with test for probing for TPM 2. Have the&&&&function return the version of TPM found.&&&&&&&&Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, target-arm: Correct check for non-EL3 This fixes a compile warning from clang 3.5 (the assertion&&&&could never fire).&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Message-id: 1432881807-18164-2-git-send-email-edgar.iglesias@gmail.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&[PMM: added note in commit message that this is fixing a build warning]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," memory: differentiate memory_region_is_logging and memory_region_get_dirty_log_mask For now memory regions only track DIRTY_MEMORY_VGA individually, but&&&&this will change soon.  To support this, split memory_region_is_logging&&&&in two functions: one that returns a given bit from dirty_log_mask,&&&&and one that returns the entire mask.  memory_region_is_logging gets an&&&&extra parameter so that the compiler flags misuse.&&&&&&&&While VGA-specific users (including the Xen listener!) will want to keep&&&&checking that bit, KVM and vhost check for ""any bit except migration""&&&&(because migration is handled via the global start/stop listener&&&&callbacks).&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-arm: Don't halt on WFI unless we don't have any work Just NOP the WFI instruction if we have work to do.&&&&This doesn't make much difference currently (though it does avoid&&&&jumping out to the top level loop and immediately restarting),&&&&but the distinction between ""halt"" and ""don't halt"" will become&&&&more important when the decision to halt requires us to trap&&&&to a higher exception level instead.&&&&&&&&Suggested-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&& "
0," qapi: Fix C identifiers generated for names containing '.' c_fun() maps '.' to '_', c_var() doesn't.  Nothing prevents '.' in&&&&QAPI names that get passed to c_var().&&&&&&&&Which QAPI names get passed to c_fun(), to c_var(), or to both is not&&&&obvious.  Names of command parameters and struct type members get&&&&passed to c_var().&&&&&&&&c_var() strips a leading '*', but this cannot happen.  c_fun()&&&&doesn't.&&&&&&&&Fix c_var() to work exactly like c_fun().&&&&&&&&Perhaps they should be replaced by a single mapping function.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&[add 'import string']&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&& "
0," qapi: Better error messages for duplicated expressions The previous commit demonstrated that the generator overlooked&&&&duplicate expressions:&&&&- a complex type or command reusing a built-in type name&&&&- redeclaration of a type name, whether by the same or different&&&&metatype&&&&- redeclaration of a command or event&&&&- collision of a type with implicit 'Kind' enum for a union&&&&- collision with an implicit MAX enum constant&&&&&&&&Since the c_type() function in the generator treats all names&&&&as being in the same namespace, this patch adds a global array&&&&to track all known names and their source, to prevent collisions&&&&before it can cause further problems.  While valid .json files&&&&won't trigger any of these cases, we might as well be nicer to&&&&developers that make a typo while trying to add new QAPI code.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," qapi: Make c_type() consistently convert qapi names Continuing the string of cleanups for supporting downstream names&&&&containing '.', this patch focuses on ensuring c_type() can&&&&handle a downstream name.  This patch alone does not fix the&&&&places where generator output should be calling this function&&&&but was open-coding things instead, but it gets us a step closer.&&&&&&&&In particular, the changes to c_list_type() and type_name() mean&&&&that type_name(FOO) now handles the case when FOO contains '.',&&&&'-', or is a ticklish identifier other than a builtin (builtins&&&&are exempted because ['int'] must remain mapped to 'intList' and&&&&not 'q_intList').  Meanwhile, ['unix'] now maps to 'q_unixList'&&&&rather than 'unixList', to match the fact that 'unix' is ticklish;&&&&however, our naming conventions state that complex types should&&&&start with a capital, so no type name following conventions will&&&&ever have the 'q_' prepended.&&&&&&&&Likewise, changes to c_type() mean that c_type(FOO) properly&&&&handles an enum or complex type FOO with '.' or '-' in the&&&&name, or is a ticklish identifier (again, a ticklish identifier&&&&as a type name violates conventions).&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," virtio-scsi: Move DEFINE_VIRTIO_SCSI_FEATURES to virtio-scsi So far virtio-scsi-device can't expose host features to guest while&&&&using virtio-mmio because it doesn't set DEFINE_VIRTIO_SCSI_FEATURES on&&&&backend or transport.&&&&&&&&The host features belong to the backends while virtio-scsi-pci,&&&&virtio-scsi-s390 and virtio-scsi-ccw set the DEFINE_VIRTIO_SCSI_FEATURES&&&&on transports. But they already have the ability to forward property&&&&accesses to the backend child. So if we move the host features to&&&&backends, it doesn't break the backwards compatibility for them and&&&&make host features work while using virtio-mmio.&&&&&&&&Move DEFINE_VIRTIO_SCSI_FEATURES to the backend virtio-scsi. The&&&&transports just sync the host features from backends.&&&&&&&&Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," block: avoid unnecessary bottom halves bdrv_aio_* APIs can use coroutines to achieve asynchronicity.  However,&&&&the coroutine may terminate without having yielded back to the caller&&&&(for example because of something that invokes a nested event loop,&&&&or because the coroutine is doing nothing at all).  In this case,&&&&the bdrv_aio_* API must delay the completion to the next iteration&&&&of the main loop, because bdrv_aio_* will never invoke the callback&&&&before returning.&&&&&&&&This can be done with a bottom half, and indeed bdrv_aio_* is always&&&&using one for simplicity.  It is possible to gain some performance&&&&(~3%) by avoiding this in the common case.  A new field in the&&&&BlockAIOCBCoroutine struct is set to true until the first time the&&&&corotine has yielded to its creator, and completion goes through a&&&&new function bdrv_co_complete.  If the flag is false, bdrv_co_complete&&&&invokes the callback immediately.  If it is true, the caller will&&&&notice that the coroutine has completed and schedule the bottom&&&&half itself.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1427524638-28157-1-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, gtk: do not call gtk_widget_get_window if drawing area is not initialized This prevents gtk_widget_get_window to return a NULL pointer.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," qcow2: Fix header update with overridden backing file In recent qemu versions, it is possible to override the backing file&&&&name and format that is stored in the image file with values given at&&&&runtime. In such cases, the temporary override could end up in the&&&&image header if the qcow2 header was updated, while obviously correct&&&&behaviour would be to leave the on-disk backing file path/format&&&&unchanged.&&&&&&&&Fix this and add a test case for it.&&&&&&&&Reported-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1428411796-2852-1-git-send-email-kwolf@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-arm: Fix handling of STM (user) with r15 in register list The A32 encoding of LDM distinguishes LDM (user) from LDM (exception&&&&return) based on whether r15 is in the register list. However for&&&&STM (user) there is no equivalent distinction. We were incorrectly&&&&treating ""r15 in list"" as indicating exception return for both LDM&&&&and STM, with the result that an STM (user) involving r15 went into&&&&an infinite loop. Fix this; note that the value stored for r15&&&&in this case is the current PC regardless of our current mode.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1426015125-5521-1-git-send-email-peter.maydell@linaro.org&&&& "
0," monitor: Drop dead QMP check from monitor_read_password() Function is only called in HMP context since commit 333a96e ""qapi:&&&&Convert change"".&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qemu-img: Suppress unhelpful extra errors in convert, amend img_convert() and img_amend() use qemu_opts_do_parse(), which reports&&&&errors with qerror_report_err().  Its error messages aren't helpful&&&&here, the caller reports one that actually makes sense.  Reproducer:&&&&&&&&    $ qemu-img convert -o backing_format=raw in.img out.img&&&&    qemu-img: Invalid parameter 'backing_format'&&&&    qemu-img: Invalid options for file format 'raw'&&&&&&&&To fix, propagate errors through qemu_opts_do_parse().  This lifts the&&&&error reporting into callers.  Drop it from img_convert() and&&&&img_amend(), keep it in qemu_chr_parse_compat(), bdrv_img_create().&&&&&&&&Since I'm touching qemu_opts_do_parse() anyway, write a function&&&&comment for it.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," block/raw-posix: fix compilation warning on OSX block/raw-posix.c:947:19: warning: unused variable 's' [-Wunused-variable]&&&&    BDRVRawState *s = aiocb->bs->opaque;&&&&&&&&This variable is used only when on of the following macros are defined&&&&CONFIG_XFS, CONFIG_FALLOCATE, CONFIG_FALLOCATE_PUNCH_HOLE or&&&&CONFIG_FALLOCATE_ZERO_RANGE. Fortunately, CONFIG_FALLOCATE_PUNCH_HOLE&&&&and CONFIG_FALLOCATE_ZERO_RANGE could be defined only along with&&&&CONFIG_FALLOCATE. Therefore checking for CONFIG_XFS or CONFIG_FALLOCATE&&&&would be enough.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Peter Maydell <peter.maydell@linaro.org>&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," aes: remove a dead return statement bits is checked to be 128, 192 or 256 at the beginning of the function.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," qemu-option: Pair g_malloc() with g_free(), not free() Spotted by Coverity with preview checker ALLOC_FREE_MISMATCH enabled&&&&and my ""coverity: Model g_free() isn't necessarily free()"" model patch&&&&applied.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," nbd: Drop BDS backpointer Before this patch, the ""opaque"" pointer in an NBD BDS points to a&&&&BDRVNBDState, which contains an NbdClientSession object, which in turn&&&&contains a pointer to the BDS. This pointer may become invalid due to&&&&bdrv_swap(), so drop it, and instead pass the BDS directly to the&&&&nbd-client.c functions which then retrieve the NbdClientSession object&&&&from there.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1423256778-3340-2-git-send-email-mreitz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," cpu_ldst.h: Allow NB_MMU_MODES to be 7 Support guest CPUs which need 7 MMU index values.&&&&Add a comment about what would be required to raise the limit&&&&further (trivial for 8, TCG backend rework for 9 or more).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Greg Bellows <greg.bellows@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0," block/dmg: improve zeroes handling Disk images may contain large all-zeroes gaps (1.66k sectors or 812 MiB&&&&is seen in the real world). These blocks (type 2) do not need to be&&&&extracted into a temporary buffer, there is no need to allocate memory&&&&for these blocks nor to check its length.&&&&&&&&(For the test image, the maximum uncompressed size is 1054371 bytes,&&&&probably for a bzip2-compressed block.)&&&&&&&&Signed-off-by: Peter Wu <peter@lekensteyn.nl>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1420566495-13284-13-git-send-email-peter@lekensteyn.nl&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," exec: fix madvise of NULL pointer Coverity flags this as ""dereference after null check"".  Not quite a&&&&dereference, since it will just EFAULT, but still nice to fix.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-i386: do not memcpy in and out of xmm_regs After the next patch, we will move the high parts of AVX and AVX512 registers&&&&in the same array as the SSE registers.  This will make it impossible to&&&&memcpy an array of 128-bit values in and out of xmm_regs in one swoop.&&&&Use a for loop instead.&&&&&&&&Similarly, always use XMM_Q in translate.c.  This avoids introducing bugs&&&&such as the one fixed in the previous patch.&&&&&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," Fix FMULX not squashing denormalized inputs when FZ is set. While FMULX returns a 2.0f float when two operators are infinity and&&&&zero, those operators should be unpacked from raw inputs first. Inconsistent&&&&cases would occur when operators are denormalized floats in flush-to-zero&&&&mode. A wrong codepath will be entered and 2.0f will not be returned&&&&without this patch.&&&&Fix by checking whether inputs need to be flushed before running into&&&&different codepaths.&&&&&&&&Signed-off-by: Xiangyu Hu <libhu.so@gmail.com>&&&&Message-id: 1422459650-12490-1-git-send-email-libhu.so@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," PPC: mpc8554ds: Tell user about exceeding RAM limits The mpc8544ds board only supports up to 3GB of RAM due to its limited&&&&address space.&&&&&&&&When the user requests more, abort and tell him that he should use less.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, cpu-exec: reset exception_index correctly Exception index is reset at every entry at every entry into cpu_exec()&&&&function. This may cause missing the exceptions while replaying them.&&&&This patch moves exception_index reset to the locations where they are&&&&processed.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," cpu: initialize cpu->exception_index on reset This unbreaks linux-user (broken by e511b4d, cpu-exec: reset exception_index&&&&correctly, 2014-11-26).&&&&&&&&Reported-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Tested-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Tested-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-id: 1418989994-17244-2-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," target-arm: make VBAR banked When EL3 is running in Aarch32 (or ARMv7 with Security Extensions)&&&&VBAR has a secure and a non-secure instance, which are mapped to&&&&VBAR_EL1 and VBAR_EL3.&&&&&&&&Signed-off-by: Fabian Aggeler <aggelerf@ethz.ch>&&&&Signed-off-by: Greg Bellows <greg.bellows@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1416242878-876-24-git-send-email-greg.bellows@linaro.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," block/raw-posix: Fix preallocating write() loop write() may write less bytes than requested; in this case, the number of&&&&bytes written is returned. This is the byte count we should be&&&&subtracting from the number of bytes still to be written, and not the&&&&byte count we requested to write.&&&&&&&&Reported-by: L谩szl贸 脡rsek <lersek@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, scsi: devirtualize unrealize of SCSI devices All implementations are the same.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, linux-user: Fix fault address truncation AArch64 On AArch64 the si_addr field of siginfo_t is truncated to 32 bits&&&&because the fault address passes through an uint32_t variable.&&&&&&&&Follow Peters suggestion and drop the uint32_t variable&&&&since its only used once in the Aarch64 loop.&&&&&&&&Reported-by: Amanieu d'Antras <amanieu@gmail.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
0," pc: Fix disabling of vapic for compat PC models We used to be able to address both the QEMU and the KVM APIC via ""apic"".&&&&This doesn't work anymore. So we need to use their parent class to turn&&&&off the vapic on machines that should not expose them.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
0, blockdev: check for BLOCK_OP_TYPE_INTERNAL_SNAPSHOT The BLOCK_OP_TYPE_INTERNAL_SNAPSHOT op blocker exists but was never&&&&used!  Let's fix that so internal snapshots can be blocked.&&&&&&&&[Fixed s/external/internal/ typo as pointed out by Paolo Bonzini and Max&&&&Reitz.&&&&--Stefan]&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1416566940-4430-5-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, tests: virtio-scsi: Check if hot-plug/unplug works Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
0," hw/arm/virt: mark timer in fdt as v8-compatible check if the first cpu is an armv8 cpu, and if so, put&&&&arm,armv8-timer in the compatible string list.&&&&&&&&Note that due to this check, this patch moves the creation&&&&of the timer fdt node to after the cpu creation loop.&&&&&&&&Signed-off-by: Claudio Fontana <claudio.fontana@huawei.com>&&&&Message-id: 1411736960-24206-1-git-send-email-hw.claudio@gmail.com&&&&[PMM: updated to list arm,armv8-timer first]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," qcow2: Use sizeof(**refcount_table) When implementing variable refcounts, we want to be able to easily find&&&&all the places in qemu which are tied to a certain refcount order.&&&&Replace sizeof(uint16_t) in the check code by sizeof(**refcount_table)&&&&so we can later find it more easily.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qapi: Ignore files created during make check After an in-tree build and run of 'make check-{qapi-schema,unit}',&&&&I noticed some leftover files.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Wenchao Xia <wenchaoqemu@gmail.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," usb-serial: only check speed once at realize time Whatever the chardev is open or not, we should assure&&&&the speed is matched each other. So, call usb_check_attach()&&&&check speed. And then pass &error_abort at all calls to&&&&usb_device_attach().&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," usb-bus: introduce a wrapper function to check speed In this way, we can check speed directly, don't need&&&&call usb_device_attach(), which has other conditions,&&&&such as checking the chardev is open.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, docs: add blkdebug block driver documentation The blkdebug block driver is undocumented.  Documenting it is worthwhile&&&&since it offers powerful error injection features that are used by&&&&qemu-iotests test cases.&&&&&&&&This document will make it easier for people to learn about and use&&&&blkdebug.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," scsi-bus: Convert DeviceClass init to realize Replace ""init/destroy"" with ""realize/unrealize"" in SCSIDeviceClass,&&&&which has errp as a parameter. So all the implementations now use&&&&error_setg instead of error_report for reporting error.&&&&&&&&Also in scsi_bus_legacy_handle_cmdline, report the error when&&&&initializing the if=scsi devices, before returning it, because in the&&&&callee, error_report is changed to error_setg. And the callers don't&&&&have the right locations (e.g. ""-drive if=scsi"").&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," curl: Don't deref NULL pointer in call to aio_poll. In commit 63f0f45f2e89b60ff8245fec81328ddfde42a303 the following&&&&mechanical change was made:&&&&&&&&         if (!state) {&&&&-            qemu_aio_wait();&&&&+            aio_poll(state->s->aio_context, true);&&&&         }&&&&&&&&The new code now checks if state is NULL and then dereferences it&&&&('state->s') which is obviously incorrect.&&&&&&&&This commit replaces state->s->aio_context with&&&&bdrv_get_aio_context(bs), fixing this problem.  The two other hunks&&&&are concerned with getting the BlockDriverState pointer bs to where it&&&&is needed.&&&&&&&&The original bug causes a segfault when using libguestfs to access a&&&&VMware vCenter Server and doing any kind of complex read-heavy&&&&operations.  With this commit the segfault goes away.&&&&&&&&Signed-off-by: Richard W.M. Jones <rjones@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Beno卯t Canet <benoit.canet@nodalink.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," qemu-img: always goto out in img_snapshot() error paths The out label has the qemu_progress_end() and other cleanup calls.&&&&Always goto out in error paths so the cleanup happens.  These error&&&&paths now return 1 instead of -1.&&&&&&&&Note that bdrv_unref(NULL) is safe.  We just need to initialize bs to&&&&NULL at the top of the function.&&&&&&&&We can now remove the obsolete bs_old_backing = NULL and bs_new_backing&&&&= NULL for safe mode.  Originally it was necessary in commit 3e85c6fd&&&&(""qemu-img rebase"") but became useless in commit c2abcce (""qemu-img:&&&&avoid calling exit(1) to release resources properly"") because the&&&&variables are already initialized during declaration.&&&&&&&&Reported-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0, prep: Remove CPU reset entry point hack related to OpenHack'Ware Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&& 
0, xen: build on ARM Collection of fixes to build QEMU with Xen support on ARM:&&&&- use xenstore_read_fe_uint64 to retrieve the page-ref (xenfb);&&&&- use xen_pfn_t instead of unsigned long in xenfb;&&&&- unsigned long/xenpfn_t in xen_remove_from_physmap;&&&&- in xen-mapcache.c use HOST_LONG_BITS to check for QEMU's address space&&&&size.&&&&&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," Enforce stack protector usage If --enable-stack-protector is used is used, configure script try to use&&&&--fstack-protector-strong. In case it's not supported, --fstack-protector-all&&&&is enabled. If both protectors are not supported, configure does not use&&&&any protector at all without any notification.&&&&&&&&This patch reports error when user requests stack protector to be used and&&&&both protector modes are not supported. Behavior is not changed in case&&&&user do not use any of --enable-stack-protector/--disable-stack-protector.&&&&&&&&Signed-off-by: Miroslav Rezanina <mrezanin@redhat.com>&&&&[Fix non-POSIX operator in test. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," pc-bios/s390-ccw: make checkpatch happy Remove tabs, tweak whitespace and comments.&&&&&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Eugene (jno) Dvurechenski <jno@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0, tests: vmstate static checker: remove Description inside Fields Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," ui/cocoa: Add utility method to check if point is within window Add a utility method to check whether a point is within the current window&&&&bounds, and use it in the various places in the mouse handling code that&&&&were opencoding the check.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1403516125-14568-3-git-send-email-peter.maydell@linaro.org&&&& "
0," iotests: Simplify qemu-iotests-quick.sh As of the ""iotests: Allow out-of-tree run"" series, the qemu-iotests may&&&&(and should) be run directly in the build tree and will then guess the&&&&binary paths themselves. Therefore, qemu-iotests-quick.sh does not need&&&&to (and should not) enter the source path anymore; also, it does not&&&&need to specify the binaries because ""check"" will guess them&&&&automatically.&&&&&&&&As a side-effect, tests using qemu may now be added to the quick group.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, tests: vmstate static checker: remove Fields Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," target-ppc: Enable DABRX SPR and limit it to <=POWER7 This adds DABRX SPR.&&&&&&&&As DABR(X) are present in POWER CPUs till POWER7 only and POWER8 does not&&&&have them (as it implements more powerful facility instead), this limits&&&&DABR/DABRX registration by POWER7 (inclusive).&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," QemuOpts: check NULL input for qemu_opts_del To simplify later using of qemu_opts_del, accept NULL input.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Leandro Dorileo <l@dorileo.org>&&&&Signed-off-by: Chunyan Liu <cyliu@suse.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-ppc: Introduce DFP Helper Utilities Add a new file (dfp_helper.c) to the PowerPC implementation for Decimal Floating&&&&Point (DFP) emulation.  This first version of the file declares a structure that&&&&will be used by DFP helpers.  It also implements utilities that will initialize&&&&such a structure for either a long (64 bit) DFP instruction or an extended (128&&&&bit, aka ""quad"") instruction.&&&&&&&&Some utility functions are annotated with the unused attribute in order to preserve&&&&build bisection.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&[agraf: Add never reached assert on dfp_prepare_rounding_mode()]&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," spapr: Limit threads per core according to current compatibility mode This puts a limit to the number of threads per core based on the current&&&&compatibility mode. Although PowerISA specs do not specify the maximum&&&&threads per core number, the linux guest still expects that&&&&PowerISA2.05-compatible CPU supports only 2 threads per core as this&&&&is what POWER6 (2.05 compliant CPU) implements, the same is for&&&&POWER7 (2.06, 4 threads) and POWER8 (2.07, 8 threads).&&&&&&&&This calls spapr_fixup_cpu_smt_dt() with the maximum allowed number of&&&&threads which affects ibm,ppc-interrupt-server#s and&&&&ibm,ppc-interrupt-gserver#s properties.&&&&&&&&The number of CPU nodesremains unchanged.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, xhci: child detach fix xhci_child_detach() zaps the wrong slot when unplugging a device&&&&connected via usb-hub:  Instead of the device's slot the slot of the&&&&usb-hub is used.  Fix it.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1075846&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&& 
0," qemu-img: Report error even with --oformat=json img_check() should report that the format of the given image does not&&&&support checks even if JSON output is desired. JSON data is output to&&&&stdout, as opposed to error messages, which are (in the case of&&&&qemu-img) printed to stderr. Therefore, it is easy to distinguish&&&&between the two.&&&&&&&&Also, img_info() does already use error_report() for human-readable&&&&messages even though JSON output is desired (through&&&&collect_image_info_list()).&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," block: Add backing_blocker in BlockDriverState This makes use of op_blocker and blocks all the operations except for&&&&commit target, on each BlockDriverState->backing_hd.&&&&&&&&The asserts for op_blocker in bdrv_swap are removed because with this&&&&change, the target of block commit has at least the backing blocker of&&&&its child, so the assertion is not true. Callers should do their check.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," libcacard/vcard_emul_nss: Drop a redundant conditional Bailing out when PK11_FindGenericObjects() returns null ensures the&&&&loop that follows it executes at least once.  The ""loop did not&&&&execute"" test right after it is useless.  Drop it.&&&&&&&&Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, migration: expose xbzrle cache miss rate expose xbzrle cache miss rate&&&&&&&&Signed-off-by: ChenLiang <chenliang88@huawei.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," iohandler.c: Properly initialize sigaction struct The code in qemu_init_child_watch() wasn't clearing the 'struct&&&&sigaction' before passing it to sigaction(); this meant that we&&&&would block a random set of signals while executing the SIGCHLD&&&&handler. Initialize properly by using memset() on the struct,&&&&as we do in similar cases elsewhere.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," savevm: Remove all the unneeded version_minimum_id_old (usb) After previous Peter patch, they are redundant.  This way we don't&&&&assign them except when needed.  Once there, there were lots of case&&&&where the "".fields"" indentation was wrong:&&&&&&&&     .fields = (VMStateField []) {&&&&and&&&&     .fields =      (VMStateField []) {&&&&&&&&Change all the combinations to:&&&&&&&&     .fields = (VMStateField[]){&&&&&&&&The biggest problem (appart from aesthetics) was that checkpatch complained&&&&when we copy&pasted the code from one place to another.&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Acked-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," tcg-aarch64: Use MOVN in tcg_out_movi When profitable, initialize the register with MOVN instead of MOVZ,&&&&before setting the remaining lanes with MOVK.&&&&&&&&Reviewed-by: Claudio Fontana <claudio.fontana@huawei.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," Fix vga_interface_type for command line argument '-device VGA' Some machine (like pseries) initialization code determines if it has&&&&graphics according to vga_interface_type. In the original code,&&&&vga_interface_type is evaluated to VGA_NONE even if a VGA is added&&&&via '-device VGA'. It causes the machine not aware of the graphics&&&&device configured. Add a new VGA device type to indicate that it has a&&&&VGA device, which will be initialized in QOM device initialization.&&&&&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Mark Wu <wudxw@linux.vnet.ibm.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," target-mips: fix MTHC1 and MFHC1 when FPU in FR=0 mode Previous implementation presumed that FPU registers are 64-bit and are&&&&working in 64-bit mode. This change first checks MIPS_HFLAG_F64 and if not&&&&set, it does load/store from the odd numbered register pair.&&&&Patch by Matthew Fortune.&&&&&&&&Signed-off-by: Matthew Fortune <matthew.fortune@imgtec.com>&&&&Signed-off-by: Petar Jovanovic <petar.jovanovic@imgtec.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," spapr: Fix return value of vga initialization Before spapr_vga_init will returned false if the vga is specified by&&&&the command '-device VGA' because vga_interface_type was evaluated to&&&&VGA_NONE. With the change in previous patch of this series,&&&&spapr_vga_init should return true if it's told that the vga will be&&&&initialized in flow of the generic devices initialization.&&&&&&&&To keep '-nodefaults' have the semantics of bare minimum, it adds a&&&&check of 'has_defaults' in usb_enabled() to avoid that a USB controller&&&&is added by '-nodefautls, -device VGA' implicitly.&&&&&&&&This patch also makes two cleanups:&&&&1. skip initialization for VGA_NONE&&&&2. remove the useless 'break'&&&&&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Mark Wu <wudxw@linux.vnet.ibm.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, target-ppc: VSX Stage 4: Add xssqrtsp This patch adds the VSX Scalar Square Root Single Precision (xssqrtsp)&&&&instruction.&&&&&&&&The existing VSX_SQRT() macro is modified to support rounding of the&&&&intermediate double-precision result to single-precision.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," iothread: add I/O thread object This is a stand-in for Michael Roth's QContext.  I expect this to be&&&&replaced once QContext is completed.&&&&&&&&The IOThread object is an AioContext event loop thread.  This patch adds&&&&the concept of multiple event loop threads, allowing users to define&&&&them.&&&&&&&&When SMP guests run on SMP hosts it makes sense to instantiate multiple&&&&IOThreads.  This spreads event loop processing across multiple cores.&&&&Note that additional patches are required to actually bind a device to&&&&an IOThread.&&&&&&&&[Andreas F盲rber <afaerber@suse.de> pointed out that the embedded parent&&&&object instance should be called ""parent_obj"" and have a newline&&&&afterwards.  This patch has been changed to reflect this.&&&&-- Stefan]&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-ppc: VSX Stage 4: Add Scalar SP Fused Multiply-Adds This patch adds the Single Precision VSX Scalar Fused Multiply-Add&&&&instructions: xsmaddasp, xsmaddmsp, xssubasp, xssubmsp, xsnmaddasp,&&&&xsnmaddmsp, xsnmsubasp, xsnmsubmsp.&&&&&&&&The existing VSX_MADD() macro is modified to support rounding of the&&&&intermediate double precision result to single precision.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," qapi script: check correctness of union Since line info is remembered as QAPISchema.line now, this patch&&&&uses it as additional info for every expr in QAPISchema inside qapi.py,&&&&then improves error message with it in checking of exprs.&&&&&&&&For common union the patch will check whether base is a valid complex&&&&type if specified. For flat union it will check whether base presents,&&&&whether discriminator is found in base, whether the key of every branch&&&&is correct when discriminator is an enum type.&&&&&&&&Signed-off-by: Wenchao Xia <wenchaoqemu@gmail.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, target-ppc: VSX Stage 4: Add xsaddsp and xssubsp This patch adds the VSX Scalar Add Single-Precision (xsaddsp) and&&&&VSX Scalar Subtract Single-Precision (xssubsp) instructions.&&&&&&&&The existing VSX_ADD_SUB macro is modified to support the rounding&&&&of the (intermediate) result to single-precision.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0, Add check for cache size smaller than page size Signed-off-by: Orit Wasserman <owasserm@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," target-arm: A64: Add SIMD across-lanes instructions Add support for the SIMD ""across lanes"" instruction group (C3.6.4).&&&&&&&&Signed-off-by: Michael Matz <matz@suse.de>&&&&[PMM: Updated to current codebase, added fp min/max ops,&&&& added unallocated encoding checks]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0," sheepdog: fix 'qemu-img map' It was muted in the previous commit 4bc74be9. Let's revive it since nothing&&&&prevents us to do it.&&&&&&&&With this patch, following command will work as other formats:&&&&&&&&$ qemu-img map sheepdog:image&&&&&&&&Cc: qemu-devel@nongnu.org&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Liu Yuan <namei.unix@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," rng: initialize file descriptor to -1 The file descriptor is never initialized to -1, which makes rng-random&&&&close stdin if an object is created and immediately destroyed.  If we&&&&change it to -1, we also need to protect qemu_set_fd_handler from&&&&receiving a bogus file descriptor.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Tested-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," vfio: Filter out bogus mappings Since 57271d63 we now see spurious mappings with the upper bits set&&&&if 64bit PCI BARs are sized while enabled.  The guest writes a mask&&&&of 0xffffffff to the lower BAR to size it, then restores it, then&&&&writes the same mask to the upper BAR resulting in a spurious BAR&&&&mapping into the last 4G of the 64bit address space.  Most&&&&architectures do not support or make use of the full 64bits address&&&&space for PCI BARs, so we filter out mappings with the high bit set.&&&&Long term, we probably need to think about vfio telling us the&&&&address width limitations of the IOMMU.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, softfloat: Add float to 16bit integer conversions. ARMv8 requires support for converting 32 and 64bit floating point&&&&values to signed and unsigned 16bit integers.&&&&&&&&Signed-off-by: Will Newton <will.newton@linaro.org>&&&&[PMM: updated not to incorrectly set Inexact for Invalid inputs]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0," ui/cocoa: Redraw at correct size when switching surface If the surface switch involved a resize, we were doing the redraw&&&&at the old size rather than the new, because the update of&&&&screen.width and screen.height was being done after the setFrame&&&&method calls which triggered a redraw. Normally this isn't very&&&&noticeable because typically after the guest triggers the window&&&&resize it also draws something to it, which will in turn cause&&&&us to redraw. However, the combination of a guest which never&&&&draws to the display and a command line setting of a screen size&&&&larger than the default can reveal odd effects.&&&&&&&&Move most of the handling of resizes to the top of the method,&&&&and guard it with a check that the surface size actually changed,&&&&to avoid unnecessary operations (including some user visible ones&&&&like ""recenter the window on the screen"") if the surface is the&&&&same size as the old one.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1387853507-26298-2-git-send-email-peter.maydell@linaro.org&&&& "
0, target-i386: Convert 'check' and 'enforce' to static properties * Additionally convert check_cpuid & enforce_cpuid to bool and make them&&&&  members of X86CPU&&&&* Make 'enforce' feature independent from 'check'&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
0," block: expect get_block_status errors in bdrv_make_zero during testing around with 4k LUNs a bad target implementation&&&&triggert an -EIO in iscsi_get_block_status, but it got never caught&&&&resulting in an infinite loop.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target-arm: A64: add support for conditional branches This patch adds emulation for the conditional branch (b.cond) instruction.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&[claudio: adapted to new decoder structure,&&&&          reused arm infrastructure for checking the flags]&&&&Signed-off-by: Claudio Fontana <claudio.fontana@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0, iscsi: simplify iscsi_co_discard now that bdrv_co_discard can handle limits we do not need&&&&the request split logic here anymore.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, sheepdog: check if '-o redundancy' is passed from user This fix a segfault (that is caused by b3af018f3) of following command:&&&&&&&&$ qemu-img convert some_img sheepdog:some_img&&&&&&&&Cc: qemu-devel@nongnu.org&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Liu Yuan <namei.unix@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," eeprom93xx: fix coding style scripts/checkpatch.pl reports about some style problems,&&&&this commit fixes some of them:&&&&&&&&ERROR: space prohibited before open square bracket '['&&&&+    .fields      = (VMStateField []) {&&&&&&&&ERROR: space prohibited after that '!' (ctx:BxW)&&&&+    if (! eeprom->eecs && eecs) {&&&&         ^&&&&&&&&ERROR: space prohibited after that '!' (ctx:WxW)&&&&+    } else if (eeprom->eecs && ! eecs) {&&&&                                ^&&&&&&&&ERROR: space prohibited after that '!' (ctx:WxW)&&&&+    } else if (eecs && ! eeprom->eesk && eesk) {&&&&                        ^&&&&&&&&ERROR: switch and case should be at the same indent&&&&                     switch (address >> (eeprom->addrbits - 2)) {&&&&+                        case 0:&&&&[...]&&&&+                        case 1:&&&&[...]&&&&+                        case 2:&&&&[...]&&&&+                        case 3:&&&&&&&&ERROR: return is not a function, parentheses are not required&&&&+    return (eeprom->eedo);&&&&&&&&ERROR: switch and case should be at the same indent&&&&     switch (nwords) {&&&&+        case 16:&&&&+        case 64:&&&&[...]&&&&+        case 128:&&&&+        case 256:&&&&[...]&&&&+        default:&&&&&&&&Signed-off-by: Antony Pavlov <antonynpavlov@gmail.com>&&&&Cc: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: Stefan Weil <sw@weilnetz.de>&&&&Cc: qemu-trivial@nongnu.org&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, vfio-pci: Fix multifunction=on When an assigned device is initialized it copies the device config&&&&space into the emulated config space.  Unfortunately multifunction is&&&&setup prior to the device initfn and gets clobbered.  We need to&&&&restore it just like pci-assign does.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Reviewed-by: Bandan Das <bsd@redhat.com>&&&&Message-id: 20131112185059.7262.33780.stgit@bling.home&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Anthony Liguori <aliguori@amazon.com>&&&& 
0," block: fix backing file overriding Providing backing.file.filename doesn't override backing file as expected:&&&&&&&&    $ x86_64-softmmu/qemu-system-x86_64 -drive \&&&&        file=/tmp/child.qcow2,backing.file.filename=/tmp/fake.qcow2&&&&&&&&    qemu-system-x86_64: -drive \&&&&        file=/tmp/child.qcow2,backing.file.filename=/tmp/fake.qcow2: could not&&&&        open disk image /tmp/child.qcow2: Can't specify 'file' and 'filename'&&&&        options at the same time&&&&&&&&With&&&&&&&&    $ qemu-img info /tmp/child.qcow2&&&&    image: /tmp/child.qcow2&&&&    file format: qcow2&&&&    virtual size: 1.0G (1073741824 bytes)&&&&    disk size: 196K&&&&    cluster_size: 65536&&&&    backing file: /tmp/fake.qcow2&&&&&&&&This fixes it by calling bdrv_get_full_backing_filename only if&&&&backing.file.filename is not provided. Also save the backing file name&&&&to bs->backing_file so the information is correct with HMP ""info block"".&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," memory: Change MemoryRegion priorities from unsigned to signed When memory regions overlap, priority can be used to specify&&&&which of them takes priority. By making the priority values signed&&&&rather than unsigned, we make it more convenient to implement&&&&a situation where one ""background"" region should appear only&&&&where no other region exists: rather than having to explicitly&&&&specify a high priority for all the other regions, we can let them take&&&&the default (zero) priority and specify a negative priority for the&&&&background region.&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Marcel Apfelbaum <marcel.a@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," lsi: ignore write accesses to CTEST0 registers 53C895A datasheet says that this register is read/write, and that the value&&&&returned on read access is dependant of DMA FIFO state. However, nothing is&&&&said for written value.&&&&&&&&53C810A datasheet gives more insight about this register:&&&&""This was a general purpose read/write register in previous SYM53C8XX&&&&family chips. Although it is still a read/write register, Symbios reserves&&&&the right to use these bits for future 53C8XX family enhancements.""&&&&&&&&This prevents going to the default case, which prints an error message.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," iscsi: split discard requests in multiple parts Replace .bdrv_aio_discard with .bdrv_co_discard so that discard&&&&requests can be split in multiple parts, each for a small amount&&&&of sectors.&&&&&&&&This is useful because we expose a generic API with no limit&&&&on the amount of sectors that can be unmapped in one request.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, qemu-iotests: Adjust test result 039 The moved OFLAG_COPIED check in qcow2_check_refcounts results in a&&&&different output from test 039 (mismatches are now found after the&&&&general refcount check (as far as any remain)). This patch adjusts the&&&&expected test result accordingly.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," vmdk: check granularity field in opening Granularity is used to calculate the cluster size and allocate r/w&&&&buffer. Check the value from image before using it, so we don't abort()&&&&for unbounded memory allocation.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qemu-ga: build it even if !system Move qemu-ga build check out of if softmmu.. into its own section.&&&&We want to build qemu-ga for _guest_ even if system build isn't&&&&done.  It is controlled separately using --enable-guest-agent.&&&&Additionally, give error message if guest agent is requested but&&&&not supported.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, Initialize IA32_FEATURE_CONTROL MSR in reset and migration The recent KVM patch adds IA32_FEATURE_CONTROL support. QEMU needs&&&&to clear this MSR when reset vCPU and keep the value of it when&&&&migration. This patch add this feature.&&&&&&&&Signed-off-by: Arthur Chunqi Li <yzt356@gmail.com>&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&& 
0," dump: populate guest_phys_blocks While the machine is paused, in guest_phys_blocks_append() we register a&&&&one-shot MemoryListener, solely for the initial collection of the valid&&&&guest-physical memory ranges that happens at listener registration time.&&&&&&&&For each range that is reported to guest_phys_blocks_region_add(), we&&&&attempt to merge the range with the preceding one.&&&&&&&&Ranges can only be joined if they are contiguous in both guest-physical&&&&address space, and contiguous in host virtual address space.&&&&&&&&The ""maximal"" ranges that remain in the end constitute the guest-physical&&&&memory map that the dump will be based on.&&&&&&&&Related RHBZ: https://bugzilla.redhat.com/show_bug.cgi?id=981582&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," kvm: Free current_cpu identifier Since CPU loops are done as last step in kvm_{insert,remove}_breakpoint()&&&&and kvm_remove_all_breakpoints(), we do not need to distinguish between&&&&invoking CPU and iterated CPUs and can thereby free the identifier for&&&&use as a global variable.&&&&&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, PPC: Newworld: Add second uninorth control register set Mac OS X requires a second uninorth register set to be mapped a few&&&&bytes above the first one. Let's just expose it to make it happy.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," cpu: Turn cpu_unassigned_access() into a CPUState hook Use it for all targets, but be careful not to pass invalid CPUState.&&&&cpu_single_env can be NULL, e.g. on Xen.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," tcg-i386: Use QEMU_BUILD_BUG_ON instead of assert for frame size We can check the condition at compile time, rather than run time.&&&&&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," target-ppc: Drop redundant flags assignments from CPU families Previous code has #define POWERPC_INSNS2_<family> PPC_NONE in some&&&&places for macrofied assignment to insns_flags2 field.&&&&&&&&PPC_NONE is defined as zero though and QOM classes are zero-initialized,&&&&so drop any pcc->insns_flags2 = PPC_NONE; assignments.&&&&&&&&PPC_NONE itself is still in use in translate.c.&&&&&&&&Suggested-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," smbios: Convert to error_report() Improves diagnistics from ad hoc messages like&&&&&&&&    Invalid SMBIOS UUID string&&&&&&&&to&&&&&&&&    qemu-system-x86_64: -smbios type=1,uuid=gaga: Invalid UUID&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Laszlo ""ever the optimist"" Ersek <lersek@redhat.com>&&&&Message-id: 1370610036-10577-4-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," cpu: Guard cpu_{save,load}() definitions A few targets already managed to implement cpu_save() and cpu_load()&&&&without defining CPU_SAVE_VERSION that causes them to be registered.&&&&&&&&Guard the prototypes with CPU_SAVE_VERSION to avoid this happening again&&&&until all targets are converted to VMState (or QIDL).&&&&&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," memory_mapping: Drop qemu_get_memory_mapping() stub dump.c:dump_init() never checked for the return code anyway.&&&&If paging is not enabled, it will fall back to an identity map.&&&&If paging is enabled and getting memory mapping list is not&&&&implemented, qemu_get_guest_memory_mapping() will return an error.&&&&&&&&Since the targets not implementing memory mapping also don't implement&&&&dump support, we will not reach this code today and can worry about&&&&changing cpu_paging_enabled() default when the need arises.&&&&&&&&This allows us to drop CONFIG_HAVE_GET_MEMORY_SUPPORT.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," memory: add address_space_access_valid The old-style IOMMU lets you check whether an access is valid in a&&&&given DMAContext.  There is no equivalent for AddressSpace in the&&&&memory API, implement it with a lookup of the dispatch tree.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, xilinx_spips: lqspi: Dont touch config register The LQSPI mode is supposed to work via the automatic CS mode feature&&&&rather than manipulate CS lines itself. Now that auto CS is implemented&&&&remove LQSPIs CS mode override logic. There is still a need to&&&&manipulate the U_PAGE bit in LQSPI config register to implement&&&&dual-stack mode however.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&Message-id: 000c8dd54df09523f17052638100722ef0f5a3af.1369117359.git.peter.crosthwaite@xilinx.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," main-loop: partial revert of 5e3bc73 This patch reverts part of 5e3bc735d93dd23f074b5116fd11e1ad8cd4962f.&&&&&&&&Paolo Bonzini wrote this patch and commented:&&&&&&&&""WSAEventSelect is edge-triggered and the event will not be signaled if&&&&the socket handler does not consume all the data in the socket buffer.""&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1368718561-7816-3-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, qom/object: Don't poll cast cache for NULL objects object_dynamic_cast_assert used to be tolerant of NULL objects and not&&&&assert. It's clear from the implementation that this is the expected&&&&behavior.&&&&&&&&The preceding check of the cast cache dereferences obj however causing&&&&a segfault. Fix by conditionalizing the cast cache logic on obj being&&&&non-null.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&Message-id: 8e2bef6a55753869c50bfa32226f7fcf0439ca62.1369183592.git.peter.crosthwaite@xilinx.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," block: initial VHDX driver support framework - supports open and probe This is the initial block driver framework for VHDX image support&&&&(i.e. Hyper-V image file formats), that supports opening VHDX files, and&&&&parsing the headers.&&&&&&&&This commit does not yet enable:&&&&    - reading&&&&    - writing&&&&    - updating the header&&&&    - differencing files (images with parents)&&&&    - log replay / dirty logs (only clean images)&&&&&&&&This is based on Microsoft's VHDX specification:&&&&    ""VHDX Format Specification v0.95"", published 4/12/2012&&&&    https://www.microsoft.com/en-us/download/details.aspx?id=29681&&&&&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, stream: Remove app argument hack The uint32_t *app argument doesn't exist in real hardware. It was a hack in&&&&xilinx_axidma/enet to fake the (secondary) control stream connection. Removed&&&&the argument and added the second stream to axienet/dma.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
0, block: drop duplicated slice extension code The current slice is extended when an I/O request exceeds the limit.&&&&There is no need to extend the slice every time we check a request.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Tested-By: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, target-ppc: Remove address check for logging One LOG_MMU statement in mmu_helper.c has an odd check on the effective&&&&address being translated.  I can see no reason for this; I suspect it was&&&&a debugging hack from long ago.  This patch removes it.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," target-i386: SSE4.2: fix pcmpXstrX instructions in ""Equal each"" mode pcmpXstrX instructions in ""Equal each"" mode force both invalid element&&&&pair to true. It means (upper - MAX(valids, validd)) bits should be set&&&&to 1, not (upper - MAX(valids, validd) + 1).&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," qcow2: make is_allocated return true for zero clusters Otherwise, live migration of the top layer will miss zero clusters and&&&&let the backing file show through.  This also matches what is done in qed.&&&&&&&&QCOW2_CLUSTER_ZERO clusters are invalid in v2 image files.  Check this&&&&directly in qcow2_get_cluster_offset instead of replicating the test&&&&everywhere.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," PPC/GDB: handle read and write of fpscr Although the support of this register may be uncomplete, there are no&&&&reason to prevent the debugger from reading or writing it.&&&&&&&&Signed-off-by: Fabien Chouteau <chouteau@adacore.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, s390: Lowcore mapping helper. Create a lowcore mapping helper that includes a check for sufficient&&&&length.&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," openpic: remove pcsr (CPU sensitivity register) I could not find this register in any spec (FSL, IBM, or OpenPIC)&&&&and the code doesn't do anything with it but initialize, save,&&&&or restore it.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," migration: do not nest flushing of device data Completion of migration is currently done with a ""nested"" loop that&&&&invokes buffered_flush: migrate_fd_completed is called by&&&&buffered_file_thread, which calls migrate_fd_cleanup, which calls&&&&buffered_close (via qemu_fclose), which flushes the buffer.&&&&&&&&Simplify this, by reusing the buffered_flush call of buffered_file_thread.&&&&Then if qemu_savevm_state_complete was called, and the buffer is empty&&&&(including the QEMUFile buffer, for which we need the previous patch), we&&&&are done.&&&&&&&&Reviewed-by: Orit Wasserman <owasserm@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0," Add support for cancelling of a TPM command This patch adds support for cancelling an executing TPM command.&&&&In Linux for example a user can cancel a command through the TPM's&&&&sysfs 'cancel' entry using&&&&&&&&echo ""1"" > /sysfs/class/misc/tpm0/device/cancel&&&&&&&&This patch propagates the cancellation of a command inside a VM&&&&to the host TPM's sysfs entry.&&&&It also uses the possibility to cancel the command before QEMU VM&&&&shutdown or reboot, which helps in preventing QEMU from hanging while&&&&waiting for the completion of the command.&&&&To relieve higher layers or users from having to determine the TPM's&&&&cancel sysfs entry, the driver searches for the entry in well known&&&&locations.&&&&&&&&Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Reviewed-by: Corey Bryant <coreyb@linux.vnet.ibm.com>&&&&Reviewed-by: Joel Schopp <jschopp@linux.vnet.ibm.com>&&&&Message-id: 1361987275-26289-7-git-send-email-stefanb@linux.vnet.ibm.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," janitor: do not rely on indirect inclusions of or from qemu-char.h Various header files rely on qemu-char.h including qemu-config.h or&&&&main-loop.h, but they really do not need qemu-char.h at all (particularly&&&&interesting is the case of the block layer!).  Clean this up, and also&&&&add missing inclusions of qemu-char.h itself.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," raw-posix: inline paio_ioctl into hdev_aio_ioctl clang now warns about an unused function:&&&&  CC    block/raw-posix.o&&&&block/raw-posix.c:707:26: warning: unused function paio_ioctl&&&&[-Wunused-function]&&&&static BlockDriverAIOCB *paio_ioctl(BlockDriverState *bs, int fd,&&&&                         ^&&&&1 warning generated.&&&&&&&&because the only use of paio_ioctl() is inside a #if defined(__linux__)&&&&guard and it is static now.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, seccomp: adding new syscalls (bugzilla 855162) According to the bug 855162[0] - there's the need of adding new syscalls&&&&to the whitelist when using Qemu with Libvirt.&&&&&&&&[0] - https://bugzilla.redhat.com/show_bug.cgi?id=855162&&&&&&&&Reported-by: Paul Moore <pmoore@redhat.com>&&&&Tested-by: Paul Moore <pmoore@redhat.com>&&&&Signed-off-by: Eduardo Otubo <otubo@linux.vnet.ibm.com>&&&&Signed-off-by: Corey Bryant <coreyb@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," pc: Drop redundant test for ROM memory region Just a few lines above, we already initialize rom_memory accordingly.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," exynos4210/mct: Avoid infinite loop on non incremental timers Check for a 0 ""distance"" value to avoid infinite loop when the&&&&expired FCR timer was not programed with auto-increment.&&&&&&&&With this change the behavior is coherent with the same type&&&&of code in the exynos4210_gfrc_restart() function in the same&&&&file.&&&&&&&&Linux seems to mostly use this timer with auto-increment&&&&which explain why it is not a problem most of the time.&&&&&&&&However other OS might have a problem with this if they&&&&don't use the auto-increment feature.&&&&&&&&Signed-off-by: Jean-Christophe DUBOIS <jcd@tribudubois.net>&&&&Reviewed-by: Evgeny Voevodin <e.voevodin@samsung.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, hw/pl110: Use LOG_GUEST_ERROR rather than hw_error() Use LOG_GUEST_ERROR to report guest accesses to invalid register&&&&offsets.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," uhci: Immediately free queues on device disconnect There is no need to just cancel any in-flight packets, and then wait&&&&for validate-end to clean things up, we can simply clean things up&&&&immediately on device removal.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," virtio-serial-bus: post_load send_event when vm is running Alexander Larsson found irq injection to Windows guests stopped after a&&&&migration.  The symptom was the mouse stopped working.&&&&&&&&Reproduction steps are:&&&&1. On src, start qemu with a virtio-serial port without any backend&&&&2. On dest, start qemu with a virtio-serial port with a backend&&&&3. Migrate.&&&&&&&&Upon migration, the older code detected the change in backend connection&&&&status, and sent a notification to the guest.  However, it's not&&&&guaranteed that the apic is ready to inject irqs into the guest, and the&&&&irq line remained high, resulting in any future interrupts going&&&&unnoticed by the guest as well.&&&&&&&&Add a new timer based on vm_clock for 1 ns in the future from post_load&&&&to do the event send in case host_connected differs between migration&&&&source and target.&&&&&&&&RHBZ: 867366&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com> # verbose commit log&&&& "
0, audio: Fix warning from static code analysis smatch report:&&&&audio/audio_template.h:416 AUD_open_out(18) warn:&&&& variable dereferenced before check 'as' (see line 414)&&&&&&&&Moving the ldebug statement after the statement which checks 'as'&&&&fixes that warning.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& 
0," pci: Return PCI_INTX_DISABLED when no bus INTx routing support Rather than assert, simply return PCI_INTX_DISABLED when we don't&&&&have a pci_route_irq_fn.  PIIX already returns DISABLED for an&&&&invalid pin, so users already deal with this state.  Users of this&&&&interface should only be acting on an ENABLED or INVERTED return&&&&value (though we really have no support for INVERTED).  Also&&&&complain loudly when we hit this so we don't forget it's missing.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Acked-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
0," block: move aio initialization into a helper function Move AIO initialization for raw-posix block driver into a helper function.&&&&&&&&In addition to just code motion, the aio_ctx pointer is checked for NULL,&&&&prior to calling laio_init(), to make sure laio_init() is only run once.&&&&&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," ehci: handle TD deactivation of inflight packets Check the TDs of inflight packets, cancel&&&&packets in case the guest clears the active bit.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, qed: mark image clean after repair succeeds The dirty bit is cleared after image repair succeeds in qed_open().&&&&Move this into qed_check() so that all callers benefit from this&&&&behavior when fix=true.&&&&&&&&This is necessary so qemu-img check can call .bdrv_check() and mark the&&&&image clean.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," qmp: don't emit the RESET event on wakeup from S3 QEMU is basically using reset logic when waking up from S3. This&&&&causes the QMP RESET event to be emitted, which is wrong. Also,&&&&the runstate checks done in reset are not necessary for S3 wakeup.&&&&&&&&Fix this by untangling wakeup from reset logic and passing&&&&VMRESET_SILENT to qemu_system_reset() to avoid emitting the RESET&&&&event.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Acked-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, scsi-disk: split scsi-disk reqops Only checks for present medium were still done in scsi_send_command&&&&for emulated commands.  So move those to scsi_disk_emulate_command&&&&and return different SCSIReqOps depending on the kind of command.&&&&&&&&Checks for present medium can be done unconditionally for the&&&&scsi_disk_dma_reqops case.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," target-sparc: fix fcmp{s,d,q} instructions wrt exception fcmp{s,d,q} instructions are supposed to ignore quiet NaN (contrary to&&&&the fcmpe{s,d,q} instructions), but the current code is wrongly setting&&&&the NV exception in that case. Moreover the current code is duplicated:&&&&first the arguments are checked for NaN to generate an exception, and&&&&later in case the comparison is unordered (which can only happens if one&&&&of the argument is a NaN), the same check is done to generate an&&&&exception.&&&&&&&&Fix that by calling clear_float_exceptions() followed by&&&&check_ieee_exceptions() as for the other floating point instructions.&&&&Use the _compare_quiet functions for fcmp{s,d,q} and the _compare ones&&&&for fcmpe{s,d,q}. Simplify the flag setting by not clearing a flag that&&&&is set the line just below.&&&&&&&&This fix allows the math glibc testsuite to pass.&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," blockdev: Don't limit DriveInfo serial to 20 characters All current users (IDE, SCSI and virtio-blk) happen to share this 20&&&&characters limit.  Still, it should be left to device models.  They&&&&already enforce their limits.  They have to, as the DriveInfo limit&&&&only affects legacy -drive serial=..., not the qdev properties.&&&&&&&&usb-storage, which doesn't limit serial number length, also uses&&&&DriveInfo for -usbdevice.  But that doesn't provide access to&&&&DriveInfo serial.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, stream: move rate limiting to a separate header file Make the code reusable.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," x86: Fixed incorrect segment base address addition in 64-bits mode According to the Intel manual&&&&""Intel庐 64 and IA-32 Architectures Software Developer鈥檚 Manual&&&&Volume 3"", ""3.4.4 Segment Loading Instructions in IA-32e Mode"":&&&&&&&&""When in compatibility mode, FS and GS overrides operate as defined by&&&&32-bit mode behavior regardless of the value loaded into the upper 32&&&&linear-address bits of the hidden descriptor register base field.&&&&Compatibility mode ignores the upper 32 bits when calculating an effective address.""&&&&&&&&However, the code misses the 64-bit mode case, where an instruction with&&&&address and segment size override would be translated incorrectly. For example,&&&&inc dword ptr gs:260h[ebx*4] gets incorrectly translated to:&&&&&&&&(uint32_t)(gs.base + ebx * 4 + 0x260)&&&&instead of&&&&gs.base + (uint32_t)(ebx * 4 + 0x260)&&&&&&&&Signed-off-by: Vitaly Chipounov <vitaly.chipounov@epfl.ch>&&&&Reviewed-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, qemu-iotests: add 036 autoclear feature bit test This new test validates the autoclear feature bit behavior.  When QEMU&&&&opens a qcow2v3 image file with an unknown autoclear feature bit the bit&&&&should be cleared in the image file header.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," qemu_find_file: check name as a straight path even if it has no '/' Make qemu_find_file() check for the passed in name as a straight&&&&pathname even if it doesn't have any path separator character in it.&&&&This means that ""-bios foo"", ""-dtb foo"" etc will find a file 'foo'&&&&in the current directory.&&&&This removes an inconsistency with -kernel and -initrd, which both&&&&accept plain filenames as meaning files in the current directory.&&&&It's also less confusing for the user than an undocumented restriction&&&&that ""this option accepts a filename, except for the special case&&&&where the filename you pass happens not to have a '/' in it, in&&&&which case we'll ignore it.""&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," qdev: Remove PropertyInfo range checking Range checking in PropertyInfo is now used only for pci_devfn&&&&properties and some error reporting.  Remove all code that implements&&&&it in the various property types, and the now unused fields.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&[AF: Fix blocksize min/max for 32-bit hosts by using const int64_t.]&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," qcow2: Ignore reserved bits in check_refcounts Also don't infer the cluster type directly from the L2 entries, but use&&&&qcow2_get_cluster_type() to keep everything in a single place.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qemu-ga: guest-suspend-ram: don't emit a success response Today, qemu-ga may not be able to emit a success response when&&&&guest-suspend-ram completes. This happens because the VM may&&&&suspend before qemu-ga is able to emit a response.&&&&&&&&This semantic is a bit confusing, as it's not clear for clients if&&&&they should wait for a response or how they should check for success.&&&&&&&&This commit solves that problem by changing guest-suspend-ram to&&&&never emit a success response and suggests in the documentation&&&&what clients should do to check for success.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0, qemu-img: add image fragmentation statistics Discussion can be found at:&&&&http://patchwork.ozlabs.org/patch/128730/&&&&&&&&This patch add image fragmentation statistics while using qemu-img check.&&&&&&&&Signed-off-by: Dong Xu Wang <wdongxu@linux.vnet.ibm.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, alpha-linux-user: Initialize fpu to round-to-normal. Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," target-xtensa: fix tb invalidation for IBREAK and LOOP Instruction breakpoint/zero overhead loop handling code is built into&&&&TBs pointed to by IBREAKA/LEND SRs. When these or related SRs get&&&&changed TBs at virtual addresses corresponding to their old and their&&&&new values must be invalidated.&&&&&&&&Virtual address range is passed to the tb_invalidate_phys_page_range,&&&&which is incorrect in system emulation mode.&&&&&&&&To fix it use guest TLB/MMU to translate virtual address to physical&&&&address.&&&&&&&&However the guest may not have virtual-to-physical mapping at the moment&&&&of IBREAKA/LEND change, thus this fix is not 100% accurate.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," pseries: Consolidate hack for RTAS display-character usage Currently the pseries machine contains not one but two somewhat ugly hacks&&&&to allow printing of early debug messages before the guest has properly&&&&read the device tree.&&&&&&&&First, we special case H_PUT_TERM_CHAR so that a vtermno of 0 (usually&&&&invalid) will look for a suitable vty and use that.  This supports Linux's&&&&early debug code which will use H_PUT_TERM_CHAR with vtermno==0 before&&&&reading the device tree.  Second, we support the RTAS display-character call.&&&&This takes no vtermno so we assume the address of the default first VTY.&&&&&&&&This patch makes things more consistent by folding the second hack into the&&&&first.  Now, display-character uses the existing vty_lookup() function to&&&&do the same search for a suitable VTY.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," Purge migration of (almost) everything to do with monitors The Monitor object is passed back and forth within the migration/savevm&&&&code so that it can print errors and progress to the user.&&&&&&&&However, that approach assumes a HMP monitor, being completely invalid&&&&in QMP.&&&&&&&&This commit drops almost every single usage of the Monitor object, all&&&&monitor_printf() calls have been converted into DPRINTF() ones.&&&&&&&&There are a few remaining Monitor objects, those are going to be dropped&&&&by the next commit.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," target-xtensa: implement instruction breakpoints Add IBREAKA/IBREAKENABLE SRs and implement debug exception, BREAK and&&&&BREAK.N instructions and IBREAK breakpoints.&&&&&&&&IBREAK breakpoint address is considered constant for TB lifetime.&&&&On IBREAKA/IBREAKENABLE change corresponding TBs are invalidated.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
0," target-xtensa: add DBREAK data breakpoints Add DBREAKA/DBREAKC SRs and implement DBREAK breakpoints as debug&&&&watchpoints.&&&&&&&&This implementation is not fully compliant to ISA: when a breakpoint is&&&&set to an unmapped/inaccessible memory address it generates TLB/memory&&&&protection exception instead of debug exception.&&&&&&&&See ISA, 4.7.7.3, 4.7.7.6 for more details.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
0," linux-user: fake /proc/self/auxv Gtk tries to read /proc/self/auxv to find its auxv table instead of&&&&taking it from its own program memory space.&&&&&&&&However, when running with linux-user, we see the host's auxv which&&&&clearly exposes wrong information. so let's instead expose the guest&&&&memory backed auxv tables via /proc/self/auxv as well.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0, block: rate-limit streaming operations This patch implements rate-limiting for image streaming.  If we've&&&&exceeded the bandwidth quota for a 100 ms time slice we sleep the&&&&coroutine until the next slice begins.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," sdl: Limit sdl_grab_end in handle_activation to Windows hosts There are scenarios on Linux with some SDL versions where&&&&handle_activation is continuous invoked with state = SDL_APPINPUTFOCUS&&&&and gain = 0 while we grabbed the input. This causes a ping-pong when we&&&&grab the input after an absolute mouse entered the window.&&&&&&&&As this sdl_grab_end was once introduced to work around a Windows-only&&&&issue (0294ffb9c8), limit it to that platform.&&&&&&&&CC: Erik Rull <erik.rull@rdsoftware.de>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, qapi: Introduce change-vnc-password New QMP command to change the VNC password.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
0," kvm: x86: Add user space part for in-kernel APIC This introduces the alternative APIC device which makes use of KVM's&&&&in-kernel device model. External NMI injection via LINT1 is emulated by&&&&checking the current state of the in-kernel APIC, only injecting a NMI&&&&into the VCPU if LINT1 is unmasked and configured to DM_NMI.&&&&&&&&MSI is not yet supported, so we disable this when the in-kernel model is&&&&in use.&&&&&&&&CC: Lai Jiangshan <laijs@cn.fujitsu.com>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
0," nbd: fix error handling in the server bdrv_read and bdrv_write return negative errno values, not -1.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," usb-ehci: Fix and simplify nakcnt handling The nakcnt code in ehci_execute_complete() marked transactions as finished&&&&when a packet completed with a result of USB_RET_NAK, but USB_RET_NAK&&&&means that the device cannot receive / send data at that time and that&&&&the transaction should be retried later, which is also what the usb-uhci&&&&and usb-ohci code does.&&&&&&&&Note that there already was some special code in place to handle this&&&&for interrupt endpoints in the form of doing a return from&&&&ehci_execute_complete() when reload == 0, but that for bulk transactions&&&&this was not handled correctly (where as for example the usb-ccid device does&&&&return USB_RET_NAK for bulk packets).&&&&&&&&Besides that the code in ehci_execute_complete() decrement nakcnt by 1&&&&on a packet result of USB_RET_NAK, but&&&&-since the transaction got marked as finished,&&&& nakcnt would never be decremented again&&&&-there is no code checking for nakcnt becoming 0&&&&-there is no use in re-trying the transaction within the same usb frame /&&&& usb-ehci frame-timer call, since the status of emulated devices won't change&&&& as long as the usb-ehci frame-timer is running&&&&So we should simply set the nakcnt to 0 when we get a USB_RET_NAK, thus&&&&claiming that we've tried reload times (or as many times as possible if&&&&reload is 0).&&&&&&&&Besides the code in ehci_execute_complete() handling USB_RET_NAK there&&&&was also code handling it in ehci_state_executing(), which calls&&&&ehci_execute_complete(), and then does its own handling on top of the handling&&&&in ehci_execute_complete(), this code would decrement nakcnt *again* (if not&&&&already 0), or restore the reload value (which was never changed) on success.&&&&&&&&Since the double decrement was wrong to begin with, and is no longer needed&&&&now that we set nakcnt directly to 0 on USB_RET_NAK, and the restore of reload&&&&is not needed either, this patch simply removes all nakcnt handling from&&&&ehci_state_executing().&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, ppce500_pci: remove sysbus_init_mmio_cb2 usage Expose only one container MemoryRegion to sysbus.&&&&(Peter Maydell's idea)&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Beno卯t Canet <benoit.canet@gmail.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, net: truncate output file when using dump backend This prevents data of a previous run to be seen in the new dump file.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, hw/9pfs: Use read-write lock for protecting fid path. On rename we take the write lock and this ensure path&&&&doesn't change as we operate on them.&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& 
0," PPC: Drop initial ESCC mapping We are mapping ESCC to a static (incorrect) address on machine init. This&&&&overlaps with our vram, rendering the screen barely usable.&&&&&&&&Since openBIOS is clever enough to map ESCC to where it needs to be, we can&&&&just drop that invalid map and everyone's happy.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," configure: avoid screening of --{en, dis}able-usb-redir options --*dir) option pattern precede --{en,dis}able-usb-redir) patterns in the&&&&option analysis switch, making the latter options have no effect.&&&&&&&&There were some --*dir that are supported by Autoconf and not by QEMU configure.&&&&The aim was to let QEMU packagers use the rpm (or similar) macro that overrides&&&&directories for their distribution.&&&&&&&&Replace --*dir with exact option names.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, xen: move to new pci initializers move ids to pci info structure&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," checkpatch: Fix bracing false positives on #if 789f88d0b21fedfd4251d56bb7a9fbfbda7a4ac7 only fixed #else,&&&&fix also #if.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," vl.c: Don't limit node count by smp count [I've sent this patch couple of months ago and noticed it&&&& didn't make it's way in - so I'm sending it again]&&&&&&&&It is possible to create CPU-less NUMA nodes, node amount shouldn't be&&&&limited by amount of CPUs.&&&&&&&&Tested-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Acked-by: Andre Przywara <andre.przywara@amd.com>&&&&Signed-off-by: Sasha Levin <levinsasha928@gmail.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," savevm: Include writable devices with removable media savevm and loadvm silently ignore block devices with removable media,&&&&such as floppies and SD cards.  Rolling back a VM to a previous&&&&checkpoint will *not* roll back writes to block devices with removable&&&&media.&&&&&&&&Moreover, bdrv_is_removable() is a confused mess, and wrong in at&&&&least one case: it considers ""-drive if=xen,media=cdrom -M xenpv""&&&&removable.  It'll be cleaned up later in this series.&&&&&&&&Read-only block devices are also ignored, but that's okay.&&&&&&&&Fix by ignoring only read-only block devices and empty block devices.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," kvm: x86: Pass KVMState to kvm_arch_get_supported_cpuid kvm_arch_get_supported_cpuid checks for global cpuid restrictions, it&&&&does not require any CPUState reference. Changing its interface allows&&&&to call it before any VCPU is initialized.&&&&&&&&CC: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," usb-ehci: drop EXECUTING checks. The state machine doesn't stop in EXECUTING state any more when async&&&&packets are in flight, so the checks are not needed any more and can&&&&be dropped.&&&&&&&&Also kick out the check for the frame timer.  As we don't stop & sleep&&&&any more on async packets this is obsolete.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, hw/sh_pci.c: convert to PCIDeviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, hw/qxl.c: convert to PCIDeviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, hw/es1370.c: convert to PCIDeviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, xen: Initialize event channels and io rings Open and bind event channels; map ioreq and buffered ioreq rings.&&&&&&&&Signed-off-by: Arun Sharma <arun.sharma@intel.com>&&&&Signed-off-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," target-alpha: Fix translation of PALmode memory insns. All of the ""raw"" memory accesses should be ""phys"" instead.  Fix&&&&some confusion about argument ordering of the store routines.&&&&Fix the implementation of store-conditional.&&&&&&&&Delete the ""alt-mode"" helpers.  Because we only implement two&&&&mmu modes, let /a imply user-mode unconditionally.&&&&&&&&Leave some combinations of virt access without permission&&&&checks as unimplemented.  There are too many hoops through&&&&which to jump, and these insns will not be needed in the&&&&emulation palcode.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0, xen: Adds a cap to the number of map cache entries. Adds a cap to the number of map cache entries. This prevents the map&&&&cache from overwhelming system memory.&&&&&&&&I also removed the bitmap macros and #included bitmap.h instead.&&&&&&&&Signed-off-By: John Baboval <john.baboval@virtualcomputer.com>&&&&Signed-off-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," qemu-img resize: Fix option parsing For shrinking images, you're supposed to use a negative size. However, the&&&&leading minus makes getopt think that it's an option and so you get the help&&&&text if you don't use -- like in 'qemu-img resize test.img -- -1G'.&&&&&&&&This patch handles the size first and removes it from the argument list so that&&&&getopt won't even try to interpret it and you don't need -- any more.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," [v2] linux-user: bigger default stack PTHREAD_STACK_MIN (16KB) is somewhat inadequate for a new stack for new&&&&QEMU threads. Set new limit to 256K which should be enough, yet doesn't&&&&increase memory pressure significantly.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@nokia.com>&&&&Reviewed-by: Nathan Froyd <froydnj@codesourcery.com>&&&& "
0, protect qemu_cpu_kick_self for Win32 Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," Expose thread_id in info cpus Based on patch by Glauber Costa:&&&&&&&&To allow management applications like libvirt to apply CPU affinities to&&&&the VCPU threads, expose their ID via info cpus. This patch provides the&&&&pre-existing and used interface from qemu-kvm.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," hw/pflash_cfi02: Fix lazy reset of ROMD mode When checking pfl->rom_mode for when to lazily reenter ROMD mode,&&&&the value was check was the opposite of what it should have been.&&&&This prevent the part from returning to ROMD mode after a write&&&&was made to the CFI rom region.&&&&&&&&Signed-off-by: Jordan Justen <jordan.l.justen@intel.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," usb-bus: fix no params After commit 702f3e0fb52c124c07f215426eeadb70a716643f, the params is&&&&nerver NULL. It should check *params instead of params to determine&&&&whether the params is empty.&&&&&&&&Signed-off-by: TeLeMan <geleman@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, kvm: x86: Fix a few coding style violations No functional changes.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& 
0," Leave inner main_loop faster on pending requests If there is any pending request that requires us to leave the inner loop&&&&if main_loop, makes sure we do this as soon as possible by enforcing&&&&non-blocking IO processing.&&&&&&&&At this change, move variable definitions out of the inner loop to&&&&improve readability.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0, target-arm: fix vmsav6 access control Override access control checks (including execute) for mmu translation&&&&table descriptors assigned to manager domains.&&&&&&&&Signed-off-by: Juha Riihim盲ki <juha.riihimaki@nokia.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0," pci: fix device paths Patch a6a7005d14b3c32d4864a718fb1cb19c789f58a5 generated&&&&broken device paths. We snprintf with a length shorter&&&&than the output, so the last character is discarded and replaced&&&&by the null byte. Fix it up by snprintf to a buffer&&&&which is larger by 1 byte and then memcpy the data (without&&&&the null byte) to where we need it.&&&&&&&&Reported-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," pcnet: Do not receive external frames in loopback mode While not explicitly stated in the spec, it was observed on real systems&&&&that enabling loopback testing on the pcnet controller disables&&&&reception of external frames. And some legacy software relies on it, so&&&&provide this behavior.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, [virtio-9p] Qemu 9p commandline options validity checks Signed-off-by: Harsh Prateek Bora <harsh@linux.vnet.ibm.com>&&&&Signed-off-by: Venkateswararao Jujjuri <jvrao@linux.vnet.ibm.com>&&&& 
0," HACKING: add string management rules Add string management rules, somewhat like libvirt HACKING.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," ide: Reject invalid CHS geometry drive_init() doesn't permit invalid CHS for if=ide, but that's&&&&worthless: we get it via if=none and -device.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, pci: don't ignore invalid parameter for pci_register_bar(). Abort when invalid value for region_num is passed to pci_register_bar.&&&&That is caller's bug. Abort instead of silently ignoring invalid value.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," vvfat: Fix segfault on write to read-only disk vvfat tries to set the readonly flag in its open function, but nowadays&&&&this is overwritted with the readonly=... command line option. Check in&&&&bdrv_write if the vvfat was opened read-only and return an error in this&&&&case.&&&&&&&&Without this check, vvfat tries to access the qcow bs, which is NULL&&&&without enabled write support.&&&&&&&&Signed-off-by: Kevin Wolf <mail@kevin-wolf.de>&&&& "
0, Fix more wrong usermode virtual address types Fixes warning:&&&&  CC    sparc-bsd-user/exec.o&&&&/src/qemu/exec.c: In function `page_check_range':&&&&/src/qemu/exec.c:2375: warning: comparison is always true due to limited range of data type&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," ide: Change ide_init_drive() to require valid dinfo argument IDEState members drive_serial_str and version are now left empty until&&&&an actual drive is connected.  Before, they got a default value that&&&&was overwritten when a drive got connected.  Doesn't matter, because&&&&they're used only while a drive is connected.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," QMP: Move STOP event into do_vm_stop() I've introduced the STOP event in the main loop, this is wrong&&&&as it will be only emitted if the io thread is enabled.&&&&&&&&This fixes that by moving the STOP event to do_vm_stop().&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," boot: remove unused boot_devices_bitmap variable In addition to removing the variable, this also renames the parse_bootdevices()&&&&function to validate_bootdevices(), as we don't need its return value anymore.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Acked-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," virtio-blk: add topology support Export all topology information in the block config structure,&&&&guarded by a new VIRTIO_BLK_F_TOPOLOGY feature flag.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," target-alpha: Initialize fpcr Linux, at least, disables exceptions by default.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, PPC: Uninorth config space accessor The Uninorth PCI bridge requires different layouts in its PCI config space&&&&accessors.&&&&&&&&This patch introduces a conversion function that makes it compatible with&&&&the way Linux accesses it.&&&&&&&&I also kept an OpenBIOS compatibility hack in. I think it'd be better to&&&&take small steps here and do the config space access rework in OpenBIOS&&&&later on. When that's done we can remove that hack.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, msix: function mask support Function mask is a mandatory feature in MSIX&&&&spec so not implementing it is a spec violation.&&&&Implement.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," S390: Bail out without KVM Currently only the S390 KVM target works. To keep users from accidently not&&&&using KVM, let's not even initialize the machine when KVM is not used.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," block migration: Initialize remaining BlkMigState fields In case we restart a migration, submitted, read_done, transferred, and&&&&print_completion need to be reinitialized to 0.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," monitor: Introduce MONITOR_USE_CONTROL flag This flag will be set when Monitor enters ""control mode"", in&&&&which the output will be defined by the QEMU Monitor Protocol.&&&&&&&&This also introduces a macro to check if the flag is set.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Make -kernel for linux work with bochsbios While trying to run -kernel with -bios pc-bios/pcbios.bin, I realized&&&&that I was actually writing data to %es, but only set up %ds to a 32-bit&&&&segment we want to write to.&&&&&&&&So at the end of the day the data hasn't actually been copied. Oops.&&&&&&&&So here's a fix to set ES instead of DS, which makes -kernel work with&&&&BOCHS bios again (and actually makes the code do the correct thing)!&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, cpu-all.h: fix cpu_get_real_ticks on mips host Fix cpu_get_real_ticks:&&&&- check should be done on __mips and not __mips_isa_rev&&&&- linux kernels >= 2.6.25 are emulating the 2 needed rdhwr functions&&&&  so it's safe to use rdhwr.&&&&&&&&This is better than what's currently in but it doesn't mean it works nicely&&&&Some tests needs to be done imho&&&&&&&&Signed-off-by: Arnaud Patard <arnaud.patard@rtp-net.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0, eepro100: Replace sprintf by snprintf Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0, mc145818rtc: fix saving of rtc-td hack properly upgrading the version number Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," qemu: allow pulseaudio to be the default We're seeing various issues with the SDL audio backend and want to&&&&switch to the pulseaudio backend. See e.g.&&&&&&&&  https://bugzilla.redhat.com/495964&&&&  https://bugzilla.redhat.com/519540&&&&  https://bugzilla.redhat.com/496627&&&&&&&&The pulseaudio backend seems to work well, so we should allow it to be&&&&selected as the default.&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
0, kvm_arch_get_registers() shouldn't be called directly Direct call to kvm_arch_get_registers() bypass logic in&&&&cpu_synchronize_state()&&&&&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," VMState: Fix sub-structs versioning We can't check the version in a substruct, it is not stored anywhere&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, qemu: init all queues to NO_VECTOR value initialize vectors for all vqs to VIRTIO_NO_VECTOR rather than 0 which&&&&is a valid vector. This fixes migration which happened before driver&&&&was loaded.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reported-by: Amit Shah <amit.shah@redhat.com>&&&&Tested-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," check for PR_SET_NAME being defined Depending on what glibc/kernel headers you are compiling against,&&&&PR_SET_NAME may or may not be defined.  Do the right thing if&&&&PR_SET_NAME isn't defined and skip setting the process name.&&&&&&&&Signed-off-by: Nathan Froyd <froydnj@codesourcery.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Message-Id: &&&& "
0," this patch fixes a typo where armv4l was incorrectly spelled arm4l, preventing the correct handling of --cpu=armv4l. Laurent&&&&&&&&Signed-off-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Signed-off-by: Andrzej Zaborowski <andrew.zaborowski@intel.com>&&&& "
0," allow overriding of CPUID level on command line The CPUID level determines how many CPUID leafs are exposed to the guest.&&&&Some features (like multi-core) cannot be propagated without the proper&&&&level, but guests maybe confused by bogus entries in some leafs.&&&&So add level= and xlevel= to the list of -cpu options to allow the user to&&&&override the default settings. While at it, merge unnecessary local&&&&variables into one and allow hexadecimal arguments.&&&&&&&&Signed-off-by: Andre Przywara <andre.przywara@amd.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," sparc64: mmu bypass mode correction This Implement physical address truncation in mmu bypass mode.&&&&IMMU bypass is also active when cpu enters RED_STATE&&&&&&&&Signed-off-by: igor.v.kovalenko@gmail.com&&&&&&&&--&&&&Kind regards,&&&&Igor V. Kovalenko&&&& "
0," Initialize PS2 keyboard / mouse state on reset Currently only common PS2 state is initialized, leaving keyboard and&&&&mouse specific state to contain stale values.&&&&&&&&Signed-off-by: Dinesh Subhraveti聽<dineshs@us.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," qemu-io: add flag to mark files growable Add a -g flag to the open command and the main qemu-io command line to&&&&allow opening a file growable.  This is only allowed for protocols,&&&&mirroring the limitation exposed through bdrv_file_open.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, target-ppc: expose cpu capability flags Do this so other pieces of code can make decisions based on the&&&&capabilities of the CPU we're emulating.&&&&&&&&Signed-off-by: Nathan Froyd <froydnj@codesourcery.com>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& 
0, net: Check device passed to host_net_remove (Jan Kiszka) Make sure that we do not delete guest NICs via host_net_remove.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7195 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Make binary stripping conditional (Riku Voipio) Currently qemu unconditionally strips binaries on install. This&&&&is a problem for packagers who may want to store/ship debug symbols&&&&of compiled packages for debugging purposes.&&&&&&&&Keep stripping as default for the oldtimers and add a&&&& --disable-strip flag to override.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@iki.fi>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6983 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, block-vpc: Don't silently create smaller image than requested The algorithm from the VHD specification for CHS calculation silently limits&&&&images to 127 GB which may confuse a user who requested a larger image. Better&&&&output an error message and abort.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7109 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Fix VM state change handlers running out of order When a VM state change handler changes VM state, other VM state change&&&&handlers can see the state transitions out of order.&&&&&&&&bmdma_map(), scsi_disk_init() and virtio_blk_init() install VM state&&&&change handlers to restart DMA.  These handlers can vm_stop() by&&&&running into a write error on a drive with werror=stop.  This throws&&&&the VM state change handler callback into disarray.  Here's an example&&&&case I observed:&&&&&&&&0. The virtual IDE drive goes south.  All future writes return errors.&&&&&&&&1. Something encounters a write error, and duly stops the VM with&&&&   vm_stop().&&&&&&&&2. vm_stop() calls vm_state_notify(0).&&&&&&&&3. vm_state_notify() runs the callbacks in list vm_change_state_head.&&&&   It contains ide_dma_restart_cb() installed by bmdma_map().  It also&&&&   contains audio_vm_change_state_handler() installed by audio_init().&&&&&&&&4. audio_vm_change_state_handler() stops audio stuff.&&&&&&&&5. User continues VM with monitor command ""c"".  This runs vm_start().&&&&&&&&6. vm_start() calls vm_state_notify(1).&&&&&&&&7. vm_state_notify() runs the callbacks in vm_change_state_head.&&&&&&&&8. ide_dma_restart_cb() happens to come first.  It does its work, runs&&&&   into a write error, and duly stops the VM with vm_stop().&&&&&&&&9. vm_stop() runs vm_state_notify(0).&&&&&&&&10. vm_state_notify() runs the callbacks in vm_change_state_head.&&&&&&&&11. audio_vm_change_state_handler() stops audio stuff.  Which isn't&&&&   running.&&&&&&&&12. vm_stop() finishes, ide_dma_restart_cb() finishes, step 7's&&&&   vm_state_notify() resumes running handlers.&&&&&&&&13. audio_vm_change_state_handler() starts audio stuff.  Oopsie.&&&&&&&&Fix this by moving the actual write from each VM state change handler&&&&into a new bottom half (suggested by Gleb Natapov).&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, Remove gcc 3.4 check Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5911 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Avoid infinite loop around timed condition variable This can happen due to spurious wakeups&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6631 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," qcow2: fix image creation for large, > ~2TB, images (Chris Wright) When creating large disk images w/ qcow2 format, qcow2_create is hard&&&&coded to creating a single refcount block.  This is insufficient for&&&&large images, and will cause qemu-img to segfault as it walks off the&&&&end of the refcount block.  Keep track of the space needed during image&&&&create and create proper number of refcount blocks accordingly.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=491943&&&&&&&&Signed-off-by: Chris Wright <chrisw@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6982 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, Migrate to check_define git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6302 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," monitor: Rework early disk password inquiry (Jan Kiszka) Reading the passwords for encrypted hard disks during early startup is&&&&broken (I guess for quiet a while now):&&&& - No monitor terminal is ready for input at this point&&&& - Forcing all mux'ed terminals into monitor mode can confuse other&&&&   users of that channels&&&&&&&&To overcome these issues and to lay the ground for a clean decoupling of&&&&monitor terminals, this patch changes the initial password inquiry as&&&&follows:&&&& - Prevent autostart if there is some encrypted disk&&&& - Once the user tries to resume the VM, prompt for all missing&&&&   passwords&&&& - Only resume if all passwords were accepted&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6707 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Check NIC model in some NIC init functions (Mark McLoughlin) Some NIC init functions are only called when that model is&&&&the only valid model. In that case, it makes sense to use&&&&qemu_check_nic_model() from the NIC init function itself.&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6286 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, ETRAX: Always provide a valid net model. Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6226 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," target-alpha: fix cmpbge instruction The cmpbge instruction should compare all 8 bytes of one 64-bit value with&&&&another.  However, we were looping with a < 7 condition which was skipping&&&&the top byte.  So if we were doing a compare where the top byte was&&&&important, we could get the wrong result (this notably breaks the strlen()&&&&function with certain sized strings).&&&&&&&&(Vince Weaver)&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5667 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Support ACLs for controlling VNC access (""Daniel P. Berrange"") This patch introduces a generic internal API for access control lists&&&&to be used by network servers in QEMU. It adds support for checking&&&&these ACL in the VNC server, in two places. The first ACL is for the&&&&SASL authentication mechanism, checking the SASL username. This ACL&&&&is called 'vnc.username'. The second is for the TLS authentication&&&&mechanism, when x509 client certificates are turned on, checking against&&&&the Distinguished Name of the client. This ACL is called 'vnc.x509dname'&&&&&&&&The internal API provides for an ACL with the following characteristics&&&&&&&& - A unique name, eg  vnc.username, and vnc.x509dname.&&&& - A default policy, allow or deny&&&& - An ordered series of match rules, with allow or deny policy&&&&&&&&If none of the match rules apply, then the default policy is&&&&used.&&&&&&&&There is a monitor API to manipulate the ACLs, which I'll describe via&&&&examples&&&&&&&&  (qemu) acl show vnc.username&&&&  policy: allow&&&&  (qemu) acl policy vnc.username denya&&&&  acl: policy set to 'deny'&&&&  (qemu) acl allow vnc.username fred&&&&  acl: added rule at position 1&&&&  (qemu) acl allow vnc.username bob&&&&  acl: added rule at position 2&&&&  (qemu) acl allow vnc.username joe 1&&&&  acl: added rule at position 1&&&&  (qemu) acl show vnc.username&&&&  policy: deny&&&&  0: allow fred&&&&  1: allow joe&&&&  2: allow bob&&&&&&&&&&&&  (qemu) acl show vnc.x509dname&&&&  policy: allow&&&&  (qemu) acl policy vnc.x509dname deny&&&&  acl: policy set to 'deny'&&&&  (qemu) acl allow vnc.x509dname C=GB,O=ACME,L=London,CN=*&&&&  acl: added rule at position 1&&&&  (qemu) acl allow vnc.x509dname C=GB,O=ACME,L=Boston,CN=bob&&&&  acl: added rule at position 2&&&&  (qemu) acl show vnc.x509dname&&&&  policy: deny&&&&  0: allow C=GB,O=ACME,L=London,CN=*&&&&  1: allow C=GB,O=ACME,L=Boston,CN=bob&&&&&&&&By default the VNC server will not use any ACLs, allowing access to&&&&the server if the user successfully authenticates. To enable use of&&&&ACLs to restrict user access, the ',acl' flag should be given when&&&&starting QEMU. The initial ACL activated will be a 'deny all' policy&&&&and should be customized using monitor commands.&&&&&&&&eg enable SASL auth and ACLs&&&&&&&&    qemu ....  -vnc localhost:1,sasl,acl&&&&&&&&The next patch will provide a way to load a pre-defined ACL when&&&&starting up&&&&&&&&&&&& Makefile        |    6 +&&&& b/acl.c         |  185 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++&&&& b/acl.h         |   74 ++++++++++++++++++++++&&&& configure       |   18 +++++&&&& monitor.c       |   95 ++++++++++++++++++++++++++++&&&& qemu-doc.texi   |   49 ++++++++++++++&&&& vnc-auth-sasl.c |   16 +++-&&&& vnc-auth-sasl.h |    7 ++&&&& vnc-tls.c       |   19 +++++&&&& vnc-tls.h       |    3 &&&& vnc.c           |   21 ++++++&&&& vnc.h           |    3 &&&& 12 files changed, 491 insertions(+), 5 deletions(-)&&&&&&&&   Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6726 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," sockets: switch over tcp/telnet/unix serial line to new helper functions (Gerd Hoffman) This switches the tcp, telnet and unix socket support for character&&&&devices (serial/parallel, ...) to the new socket helpers.  Thereby they&&&&gain IPv6 support and also get ability to search for a free tcp port.&&&&Syntax is the same as for vnc, using a to= option, like this:&&&&&&&&	-serial tcp:localhost:5000,to=5099,server&&&&&&&&This will check the 5000 -> 5099 port range (inclusive) for a free tcp&&&&port.  Likewise you can get auto-allocated unix sockets by specifying an&&&&empty path:&&&&&&&&	-serial unix:,server&&&&&&&&qemu will create a randomly named socket in $TMPDIR then.&&&&&&&&tcp also got new ""ipv4"" and ""ipv6"" options to make qemu try only the&&&&specified internet protocol version.&&&&&&&&You can use the ""info chardev"" command added by the first patch in this&&&&series to figure the tcp port / unix socket actually allocated.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5697 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, Really fix the BSD build this time struct aioinit isn't defined on BSD it appears so we need to guard everything&&&&in an #if defined(__linux__).&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5325 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," which means we need a&&&&timer to periodically check if device is still there. So I removed&&&&fd exception stuff and implemented it with the timer.&&&&&&&&Signed-off-by: Max Krasnyansky <maxk@kernel.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5047 c046a42c-6fe2-441c-8c8c-71466251a162&&&& """
0, EBase is limited to KSEG0/KSEG1 even on 64bit CPUs. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2351 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," VNC password authentication, by Daniel P. Berrange. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3135 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, More cache tuning fixes: * fix the tunable cache line size probe for PowerPC 970. * initialize HID5 so cache line is 32 bytes long when running in user-mode only git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3322 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, hack for bootp support git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1089 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, make the bios be a ROM memory - glibc hacks for setvbuf and signals - correct century storage in CMOS emulation git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@526 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, full TSS support - IO map check support - conforming segment check fixes - iret in vm86 mode fix git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@450 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, correct value for ADDSEG is real mode (fixes GRUB boot) - update static protected mode state - use generic tlb_set_page() git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@506 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, fixed invalid Linux asm/unistd.h header for PowerPC and gcc 3.3 git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@367 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, sdhci: refactor common sysbus/pci unrealize() into sdhci_common_unrealize() Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 20180115182436.2066-7-f4bug@amsat.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, configure: add dependency This dependency is required for adequate Parallels images support.&&&&Typically the disk consists of several images which are glued by&&&&XML disk descriptor. Also XML hides inside several important parameters&&&&which are not available in the image header.&&&&&&&&The patch also adds clause to checkpatch.pl to understand libxml2 types.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Signed-off-by: Klim Kireev <klim.kireev@virtuozzo.com>&&&&Signed-off-by: Edgar Kaziakhmedov <edgar.kaziakhmedov@virtuozzo.com>&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Message-id: 20180112090122.1702-3-klim.kireev@virtuozzo.com&&&&CC: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," uhci: rewrite UHCI emulator, fully async operation with multiple outstanding transactions (Max Krasnyansky) This is esentially a re-write of the QEMU UHCI layer. My initial goal&&&&was to support fully async operation with multiple outstanding async&&&&transactions. Along the way I realized that I can greatly simplify&&&&and cleanup the overall logic. There was a lot of duplicate and confusing&&&&code in the UHCI data structure parsing and other places.&&&&We were actually violating UHCI spec in handling async ISOC transaction&&&&(host controller is not supposed to write into the frame pointer).&&&&&&&&The reason I wanted to support fully async operation is because current&&&&synchronous version is unusable with most devices exported from host&&&&(via usb-linux.c). Transactions take a long time and the whole VM becomes&&&&slow as hell.&&&&&&&&Current async support is very rudimentory and for the most part&&&&non-functional. Single transaction at a time is simply not enough. I have&&&&a device for which XP driver submits both IN and OUT packets at the same&&&&time. IN packet always times out unless OUT packet makes it to the device.&&&&Hence we must be able to process both in order for that device to work.&&&&&&&&The new code is backwards compatible and was first tested agains original&&&&synchronous usb-linux.c and builtin usb devices like tablet which is also&&&&synchronous. Rewrite of the usb-linux.c is coming up next.&&&&&&&&Async support was tested against various XP versions (ie XP, SP2, SP3) and&&&&a bunch of different USB devices: serial port controllers, mice, keyboard,&&&&JTAG dongles (from Xilinx and Altera).&&&&&&&&ISOC support was only lighly tested and needs more work. It's not any worse&&&&than current code though.&&&&&&&&UHCI parser changes are probably somewhat hard to review without the&&&&understanding of the UHCI spec.&&&&The async design should be fairly easy to follow. Basically we have a list&&&&of async objects for each pending transfer. Async objects are tagged with&&&&the original TD (transfer descriptor) address and token. We now support&&&&unlimited number of outstanding isoc and one outstanding bulk/intr/ctrl&&&&transfer per QH (queue head). UHCI spec does not have a clear protocol for&&&&the cancelation of the trasfer requests. Driver can yank out TDs on any&&&&frame boundary. In oder to handle that I added somewhat fancy TD validation&&&&logic logic to avoid unnecessary cancelations.&&&&&&&&Signed-off-by: Max Krasnyansky <maxk@kernel.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5050 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, pread/pwrite syscalls - use page_unprotect_range() in vital cases to avoid problems if the kernel writes data in protected page (needed for self-modifying code support) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@164 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," block/sheepdog: remove spurious NULL check 'tag' is already checked in the lines immediately preceding this check,&&&&and set to non-NULL if NULL.  No need to check again, it hasn't changed.&&&&&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Darren Kenny <darren.kenny@oracle.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," target/arm: Make disas_thumb2_insn() generate its own UNDEF exceptions Refactor disas_thumb2_insn() so that it generates the code for raising&&&&an UNDEF exception for invalid insns, rather than returning a flag&&&&which the caller must check to see if it needs to generate the UNDEF&&&&code. This brings the function in to line with the behaviour of&&&&disas_thumb_insn() and disas_arm_insn().&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1513080506-17703-1-git-send-email-peter.maydell@linaro.org&&&& "
0," build: disarm the TCG unit test trap Developers sometimes mistakenly run 'make test' instead of 'make check'.&&&&'make test' triggers the ancient, unmaintained tcg unit tests in&&&&tests/tcg/Makefile which have long since ceased compiling.&&&&&&&&Even if someone fixes the TCG tests, it makes little sense to put&&&&them in a 'make test' target, rather they should be 'make check-tcg',&&&&possibly wired up as a dependency of 'make check'.&&&&&&&&In the meantime, this patch disarms the 'make test' trap by simply&&&&deleting it so users get an immediate error. This should be enough&&&&for them to remember to type 'make check' instead (or 'make help'&&&&to learn). It also deletes 'make speed' which is another route&&&&into the tcg tests.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Kashyap Chamarthy <kchamart@redhat.com>&&&&Reviewed-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>&&&&Message-id: 20171121142538.22072-1-berrange@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," ui: track how much decoded data we consumed when doing SASL encoding When we encode data for writing with SASL, we encode the entire pending output&&&&buffer. The subsequent write, however, may not be able to send the full encoded&&&&data in one go though, particularly with a slow network. So we delay setting the&&&&output buffer offset back to zero until all the SASL encoded data is sent.&&&&&&&&Between encoding the data and completing sending of the SASL encoded data,&&&&however, more data might have been placed on the pending output buffer. So it&&&&is not valid to set offset back to zero. Instead we must keep track of how much&&&&data we consumed during encoding and subtract only that amount.&&&&&&&&With the current bug we would be throwing away some pending data without having&&&&sent it at all. By sheer luck this did not previously cause any serious problem&&&&because appending data to the send buffer is always an atomic action, so we&&&&only ever throw away complete RFB protocol messages. In the case of frame buffer&&&&updates we'd catch up fairly quickly, so no obvious problem was visible.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Darren Kenny <darren.kenny@oracle.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 20171218191228.31018-6-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qcow2: Fix overly broad madvise() @mem_size and @offset are both size_t, thus subtracting them from one&&&&another will just return a big size_t if mem_size < offset -- even more&&&&obvious here because the result is stored in another size_t.&&&&&&&&Checking that result to be positive is therefore not sufficient to&&&&exclude the case that offset > mem_size.  Thus, we currently sometimes&&&&issue an madvise() over a very large address range.&&&&&&&&This is triggered by iotest 163, but with -m64, this does not result in&&&&tangible problems.  But with -m32, this test produces three segfaults,&&&&all of which are fixed by this patch.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20171114184127.24238-1-mreitz@redhat.com&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Darren Kenny <darren.kenny@oracle.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," arm: check regime, not current state, for ATS write PAR format In do_ats_write(), rather than using extended_addresses_enabled() to&&&&decide whether the value we get back from get_phys_addr() is a 64-bit&&&&format PAR or a 32-bit one, use arm_s1_regime_using_lpae_format().&&&&&&&&This is not really the correct answer, because the PAR format&&&&depends on the AT instruction being used, not just on the&&&&translation regime. However getting this correct requires a&&&&significant refactoring, so that get_phys_addr() returns raw&&&&information about the fault which the caller can then assemble&&&&into a suitable FSR/PAR/syndrome for its purposes, rather than&&&&get_phys_addr() returning a pre-formatted FSR.&&&&&&&&However this change at least improves the situation by making&&&&the PAR work correctly for address translation operations done&&&&at AArch64 EL2 on the EL2 translation regime. In particular,&&&&this is necessary for Xen to be able to run in our emulation,&&&&so this seems like a safer interim fix given that we are in freeze.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Tested-by: Stefano Stabellini <sstabellini@kernel.org>&&&&Message-id: 1509719814-6191-1-git-send-email-peter.maydell@linaro.org&&&& "
0," highbank: validate register offset before access An 'offset' parameter sent to highbank register r/w functions&&&&could be greater than number(NUM_REGS=0x200) of hb registers,&&&&leading to an OOB access issue. Add check to avoid it.&&&&&&&&Reported-by: Moguofang (Dennis mo) <moguofang@huawei.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-id: 20171113062658.9697-1-ppandit@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," msf2: Remove dead code reported by Coverity Fixed incorrect frame size mask, validated maximum frame&&&&size in spi_write and removed dead code.&&&&&&&&Signed-off-by: Subbaraya Sundeep <sundeep.lkml@gmail.com>&&&&Reviewed-by: Darren Kenny <darren.kenny@oracle.com>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 1508898544-10307-1-git-send-email-sundeep.lkml@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," nbd/server: fix nbd_negotiate_handle_info namelen should be here, length is unrelated, and always 0 at this&&&&point.  Broken in introduction in commit f37708f6, but mostly&&&&harmless (replying with '' as the name does not violate protocol,&&&&and does not confuse qemu as the nbd client since our implementation&&&&does not ask for the name; but might confuse some other client that&&&&does ask for the name especially if the default export is different&&&&than the export name being queried).&&&&&&&&Adding an assert makes it obvious that we are not skipping any bytes&&&&in the client's message, as well as making it obvious that we were&&&&using the wrong variable.&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&CC: qemu-stable@nongnu.org&&&&Message-Id: <20171101154204.27146-1-vsementsov@virtuozzo.com>&&&&[eblake: improve commit message, squash in assert addition]&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&& "
0, s390x/css: be more consistent if broken beyond repair Calling do_subchannel_work with no function control flags set in SCSW is&&&&a programming error. Currently we handle this differently in&&&&do_subchannel_work_virtual and do_subchannel_work_passthrough. Let's be&&&&consistent and guard with a common assert against this programming error.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Message-Id: <20171004154144.88995-2-pasic@linux.vnet.ibm.com>&&&&Reviewed-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& 
0," ppc: move '-cpu foo,compat=xxx' parsing into ppc_cpu_parse_featurestr() there is a dedicated callback CPUClass::parse_features&&&&which purpose is to convert -cpu features into a set of&&&&global properties AND deal with compat/legacy features&&&&that couldn't be directly translated into CPU's properties.&&&&&&&&Create ppc variant of it (ppc_cpu_parse_featurestr) and&&&&move 'compat=val' handling from spapr_cpu_core.c into it.&&&&That removes a dependency of board/core code on cpu_model&&&&parsing and would let to reuse common -cpu parsing&&&&introduced by 6063d4c0&&&&&&&&Set ""max-cpu-compat"" property only if it exists, in practice&&&&it should limit 'compat' hack to spapr machine and allow&&&&to avoid including machine/spapr headers in target/ppc/cpu.c&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," crypto: expose encryption sector size in APIs While current encryption schemes all have a fixed sector size of&&&&512 bytes, this is not guaranteed to be the case in future. Expose&&&&the sector size in the APIs so the block layer can remove assumptions&&&&about fixed 512 byte sectors.&&&&&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170927125340.12360-3-berrange@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," tpm-backend: Initialize and free data members in it's own methods Initialize and free TPMBackend data members in it's own instance_init() and&&&&instance_finalize methods.&&&&&&&&Took the opportunity to remove unneeded destroy() method from TpmDriverOps&&&&interface as TPMBackend is a Qemu Object, we can use object_unref() inplace of&&&&tpm_backend_destroy() to free the backend object, hence removed destroy() from&&&&TPMDriverOps interface.&&&&&&&&Signed-off-by: Amarnath Valluri <amarnath.valluri@intel.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&& "
0," s390x/css: fix cc handling for XSCH The function ioinst_handle_xsch is presenting cc 2 when it's supposed to&&&&present cc 1 and the other way around, because css_do_xsch has the error&&&&codes mixed up. Because cc 1 has precedence over cc 2 we also have to&&&&swap the two checks.&&&&&&&&Let us fix this.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Reported-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Message-Id: <20170831121828.85885-1-pasic@linux.vnet.ibm.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0, wm8750: add record buffer underrun check Reported-by: niuguoxiang@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170901131409.6712-1-kraxel@redhat.com&&&& 
0, booke206: fix booke206_tlbnps for mav 2.0 This fixes booke206_tlbnps for MAV 2.0 by checking the MMUCFG register and&&&&return directly the right tlbnps instead of computing it from non existing&&&&field.&&&&&&&&Signed-off-by: KONRAD Frederic <frederic.konrad@adacore.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," target/arm: [a64] Move page and ss checks to init_disas_context Since AArch64 uses a fixed-width ISA, we can pre-compute the number of&&&&insns remaining on the page.  Also, we can check for single-step once.&&&&&&&&Reviewed-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," target/arm: Use M_REG_NUM_BANKS rather than hardcoding 2 Use a symbolic constant M_REG_NUM_BANKS for the array size for&&&&registers which are banked by M profile security state, rather&&&&than hardcoding lots of 2s.&&&&&&&&Suggested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 1505137930-13255-2-git-send-email-peter.maydell@linaro.org&&&& "
0," target/arm: Implement ARMv8M's PMSAv8 registers As part of ARMv8M, we need to add support for the PMSAv8 MPU&&&&architecture.&&&&&&&&PMSAv8 differs from PMSAv7 both in register/data layout (for instance&&&&using base and limit registers rather than base and size) and also in&&&&behaviour (for example it does not have subregions); rather than&&&&trying to wedge it into the existing PMSAv7 code and data structures,&&&&we define separate ones.&&&&&&&&This commit adds the data structures which hold the state for a&&&&PMSAv8 MPU and the register interface to it.  The implementation of&&&&the MPU behaviour will be added in a subsequent commit.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1503414539-28762-2-git-send-email-peter.maydell@linaro.org&&&& "
0, target/i386: [tcg] Port to tb_stop Incrementally paves the way towards using the generic instruction translation&&&&loop.&&&&&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Reviewed-by: Emilio G. Cota <cota@braap.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-Id: <150002219289.22386.17959138704858928730.stgit@frigg.lan>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0, target/i386: [tcg] Port to translate_insn Incrementally paves the way towards using the generic instruction translation&&&&loop.&&&&&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Emilio G. Cota <cota@braap.org>&&&&Message-Id: <150002195074.22386.16195894320027075398.stgit@frigg.lan>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0, target/i386: [tcg] Port to init_disas_context Incrementally paves the way towards using the generic instruction translation&&&&loop.&&&&&&&&Reviewed-by: Emilio G. Cota <cota@braap.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Alex Benne茅 <alex.benee@linaro.org>&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Message-Id: <150002122448.22386.16854673576827449259.stgit@frigg.lan>&&&&[rth: Adjust for max_insns interface change.]&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0, monitor: use DIV_ROUND_UP I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Acked-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0, ui: use DIV_ROUND_UP I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0, vpc: use DIV_ROUND_UP I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0," target-i386: kvm_get/put_vcpu_events don't handle sipi_vector qemu call kvm_get_vcpu_events, and kernel return sipi_vector always&&&&0, never valid when reporting to user space. But when qemu calls&&&&kvm_put_vcpu_events will make sipi_vector in kernel be 0. This will&&&&accidently modify sipi_vector when sipi_vector in kernel is not 0.&&&&&&&&Signed-off-by: Peng Hao <peng.hao2@zte.com.cn>&&&&Reviewed-by: Liu Yi <liu.yi24@zte.com.cn>&&&&Message-Id: <1500047256-8911-1-git-send-email-peng.hao2@zte.com.cn>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," spapr/htab: fix savevm Commit 3a38429 (""spapr: Add a ""no HPT"" encoding to HTAB migration stream"")&&&&allows to migrate an empty HPT, but doesn't mark correctly the&&&&end of the migration stream.&&&&&&&&The end condition (value returned by htab_save_iterate())&&&&should be 1, whereas in 3a38429 it returns 0.&&&&&&&&The problem can be reproduced with QEMU monitor command ""savevm"":&&&&the command never stops and the disk image grows without limit.&&&&&&&&Fixes: 3a38429748aa4f74abaecf16c4c087e8a325e12a&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," vfio/ccw: fix initialization of the Object DeviceState pointer in the common base-device Commit 7da624e2 (""vfio: Test realized when using VFIOGroup.device_list&&&&iterator"") introduced a pointer to the Object DeviceState in the VFIO&&&&common base-device and skipped non-realized devices as we iterate&&&&VFIOGroup.device_list. While it missed to initialize the pointer for&&&&the vfio-ccw case. Let's fix it.&&&&&&&&Fixes: 7da624e2 (""vfio: Test realized when using VFIOGroup.device_list&&&&                  iterator"")&&&&&&&&Cc: Alex Williamson <alex.williamson@redhat.com>&&&&Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Signed-off-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>&&&&Reviewed-by: Alex Williamson <alex.williamson@redhat.com>&&&&Message-Id: <20170718014926.44781-3-bjsdjshi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0, gdbstub: modernise DEBUG_GDB Convert the a gdb_debug helper which compiles away to nothing when not&&&&used but still ensures the format strings are checked. There is some&&&&minor code motion for the incorrect checksum message to report it&&&&before we attempt to send the reply.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Message-Id: <20170712105216.747-2-alex.bennee@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," exec: use qemu_ram_ptr_length to access guest ram When accessing guest's ram block during DMA operation, use&&&&'qemu_ram_ptr_length' to get ram block pointer. It ensures&&&&that DMA operation of given length is possible; And avoids&&&&any OOB memory access situations.&&&&&&&&Reported-by: Alex <broscutamaker@gmail.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-Id: <20170712123840.29328-1-ppandit@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, s390x/kvm: Rework cmma management Let's keep track of cmma enablement and move the mem_path check into&&&&the actual enablement. This now also warns users that do not use&&&&cpu-models about disabled cmma when using huge pages.&&&&&&&&Signed-off-by: Janosch Frank <frankja@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cohuck@redhat.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& 
0, pci: Add comment for pci_add_capability2() Comments for pci_add_capability2() to explain the return&&&&value. This may help to make a correct return value check&&&&for its callers.&&&&&&&&Cc: mst@redhat.com&&&&Cc: marcel@redhat.com&&&&Cc: armbru@redhat.com&&&&Signed-off-by: Mao Zhongyi <maozy.fnst@cn.fujitsu.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," block: Don't try to set *errp directly Assigning directly to *errp is not valid, as errp may be NULL,&&&&&error_fatal, or &error_abort.  Use error_propagate() instead.&&&&&&&&With this, there's no need to check if errp is NULL anymore, as&&&&error_propagate() and error_prepend() are able to handle that.&&&&&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Max Reitz <mreitz@redhat.com>&&&&Cc: qemu-block@nongnu.org&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-Id: <20170608133906.12737-3-ehabkost@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," char: chardevice hotswap This patch adds a possibility to change a char device without a frontend&&&&removal.&&&&&&&&Ideally, it would have to happen transparently to a frontend, i.e.&&&&frontend would continue its regular operation.&&&&However, backends are not stateless and are set up by the frontends&&&&via qemu_chr_fe_<> functions, and it's not (generally) possible to replay&&&&that setup entirely in a backend code, as different chardevs respond&&&&to the setup calls differently, so do frontends work differently basing&&&&on those setup responses.&&&&Moreover, some frontend can generally get and save the backend pointer&&&&(qemu_chr_fe_get_driver()), and it will become invalid after backend change.&&&&&&&&So, a frontend which would like to support chardev hotswap has to register&&&&a ""backend change"" handler, and redo its backend setup there.&&&&&&&&Signed-off-by: Anton Nefedov <anton.nefedov@virtuozzo.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Message-Id: <1499342940-56739-4-git-send-email-anton.nefedov@virtuozzo.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," spapr: Clean up DRC set_isolation_state() path There are substantial differences in the various paths through&&&&set_isolation_state(), both for setting to ISOLATED versus UNISOLATED&&&&state and for logical versus physical DRCs.&&&&&&&&So, split the set_isolation_state() method into isolate() and unisolate()&&&&methods, and give it different implementations for the two DRC types.&&&&&&&&Factor some minimal common checks, including for valid indicator values&&&&(which we weren't previously checking) into rtas_set_isolation_state().&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0, tests: add more int/number ranges checks Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20170607163635.17635-5-marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&[test_visitor_in_uint() tightened slightly]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& 
0," migration: Don't try to set *errp directly Assigning directly to *errp is not valid, as errp may be NULL,&&&&&error_fatal, or &error_abort.  Use error_propagate() instead.&&&&&&&&Cc: Juan Quintela <quintela@redhat.com>&&&&Cc: ""Dr. David Alan Gilbert"" <dgilbert@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0, virtio: force VIRTIO_F_IOMMU_PLATFORM We allow vhost to clear VIRITO_F_IOMMU_PLATFORM which is wrong since&&&&VIRTIO_F_IOMMU_PLATFORM is mandatory for security. Fixing this by&&&&enforce it after vdc->get_features().&&&&&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," block/rbd: enable filename option and parsing When enabling option parsing and blockdev-add for rbd, we removed the&&&&'filename' option.  Unfortunately, this was a bit optimistic, as&&&&previous versions of QEMU allowed the use of the option in backing&&&&filenames via json.  This means that without parsing this option, we&&&&cannot open existing images that used to work fine.&&&&&&&&See bug: https://bugzilla.redhat.com/show_bug.cgi?id=1457088&&&&&&&&Tested-by: Richard W.M. Jones <rjones@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Message-id: 937dc9fde348d13311eb8e23444df3bc3190b612.1497444637.git.jcody@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," ide-test: check return of fwrite To quiet patchew, add an assert for fwrite's return value.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Laurent Vivier <lvivier@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, char: make chr_fe_deinit() optionaly delete backend This simplifies removing a backend for a frontend user (no need to&&&&retrieve the associated driver and separate delete call etc).&&&&&&&&NB: many frontends have questionable handling of ending a chardev. They&&&&should probably delete the backend to prevent broken reusage.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& 
0," blockjob: use deferred_to_main_loop to indicate the coroutine has ended All block jobs are using block_job_defer_to_main_loop as the final&&&&step just before the coroutine terminates.  At this point,&&&&block_job_enter should do nothing, but currently it restarts&&&&the freed coroutine.&&&&&&&&Now, the job->co states should probably be changed to an enum&&&&(e.g. BEFORE_START, STARTED, YIELDED, COMPLETED) subsuming&&&&block_job_started, job->deferred_to_main_loop and job->busy.&&&&For now, this patch eliminates the problematic reenter by&&&&removing the reset of job->deferred_to_main_loop (which served&&&&no purpose, as far as I could see) and checking the flag in&&&&block_job_enter.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 20170508141310.8674-12-pbonzini@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0, migration/i386: Remove support for pre-0.12 formats Remove support for versions of the CPU state prior to 11&&&&which is the version used in qemu 0.12 - you'd be pretty&&&&lucky if you got a migration stream to work from anything&&&&that old anyway.  This doesn't affect the machine type&&&&definition in any way.&&&&&&&&My main reason for doing this is the hack for sysenter_esp/eip&&&&that uses .get/.put's in state versions less than 7 (that's&&&&prior to somewhere before 0.10).&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Message-Id: <20170405190024.27581-4-dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," shutdown: Preserve shutdown cause through replay With the recent addition of ShutdownCause, we want to be able to pass&&&&a cause through any shutdown request, and then faithfully replay that&&&&cause when later replaying the same sequence.  The easiest way is to&&&&expand the reply event mechanism to track a series of values for&&&&EVENT_SHUTDOWN, one corresponding to each value of ShutdownCause.&&&&&&&&We are free to change the replay stream as needed, since there are&&&&already no guarantees about being able to use a replay stream by&&&&any other version of qemu than the one that generated it.&&&&&&&&The cause is not actually fed back until the next patch changes the&&&&signature for requesting a shutdown; a TODO marks that upcoming change.&&&&&&&&Yes, this uses the gcc/clang extension of a ranged case label,&&&&but this is not the first time we've used non-C99 constructs.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20170515214114.15442-4-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," i386: rewrite way CPUID index is validated Change the nested if statements into a flat format, to make&&&&it clearer what validation / capping is being performed on&&&&different CPUID index values.&&&&&&&&NB this changes behaviour when ""index > env->cpuid_xlevel2"".&&&&This won't have any guest-visible effect because no there is&&&&no CPUID[0xC0000001] feature supported by TCG, and KVM code&&&&will never call cpu_x86_cpuid() with such an index value.&&&&&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <20170509132736.10071-2-berrange@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," MAINTAINERS: Update paths for main loop Moved by c2b38b2 (""block: move AioContext, QEMUTimer, main-loop to&&&&libqemuutil""), let's update MAINTAINERS too.&&&&&&&&Reported-by: Laurent Vivier <lvivier@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, maintainers: add maintainer for replay* files Updating MAINTAINERS to set Pavel Dovgalyuk as record/replay maintainer&&&&and Paolo Bonzini as a reviewer.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-id: 20170503113304.8704.13997.stgit@PASHA-ISP&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," qcow2: Make distinction between zero cluster types obvious Treat plain zero clusters differently from allocated ones, so that&&&&we can simplify the logic of checking whether an offset is present.&&&&Do this by splitting QCOW2_CLUSTER_ZERO into two new enums,&&&&QCOW2_CLUSTER_ZERO_PLAIN and QCOW2_CLUSTER_ZERO_ALLOC.&&&&&&&&I tried to arrange the enum so that we could use&&&&'ret <= QCOW2_CLUSTER_ZERO_PLAIN' for all unallocated types, and&&&&'ret >= QCOW2_CLUSTER_ZERO_ALLOC' for allocated types, although&&&&I didn't actually end up taking advantage of the layout.&&&&&&&&In many cases, this leads to simpler code, by properly combining&&&&cases (sometimes, both zero types pair together, other times,&&&&plain zero is more like unallocated while allocated zero is more&&&&like normal).&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170507000552.20847-7-eblake@redhat.com&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," slirp: VMStatify remaining except for loop This converts the remaining components, except for the top level&&&&loop, to VMState.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>&&&& "
0," qga-win: Enable 'can-offline' field in 'guest-get-vcpus' reply The QGA schema states:&&&&&&&&@can-offline: Whether offlining the VCPU is possible. This member&&&&               is always filled in by the guest agent when the structure&&&&               is returned, and always ignored on input (hence it can be&&&&               omitted then).&&&&&&&&Currently 'can-offline' is missing entirely from the reply. This causes&&&&errors in libvirt which is expecting the reply to be compliant with the&&&&schema docs.&&&&&&&&BZ#1438735: https://bugzilla.redhat.com/show_bug.cgi?id=1438735&&&&&&&&Signed-off-by: Sameeh Jubran <sameeh@daynix.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0, ipmi: introduce an ipmi_bmc_sdr_find() API This patch exposes a new IPMI routine to query a sdr entry from the&&&&sdr table maintained by the IPMI BMC simulator. The API is very&&&&similar to the internal sdr_find_entry() routine and should be used&&&&the same way to query one or all sdrs.&&&&&&&&A typical use would be to loop on the sdrs to build nodes of a device&&&&tree.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Acked-by: Corey Minyard <cminyard@mvista.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," ppc/pnv: add initial IPMI sensors for the BMC simulator Skiboot, the firmware for the PowerNV platform, expects the BMC to&&&&provide some specific IPMI sensors. These sensors are exposed in the&&&&device tree and their values are updated by the firmware at boot time.&&&&&&&&Sensors of interest are :&&&&&&&&	""FW Boot Progress""&&&&	""Boot Count""&&&&&&&&As such a device is defined on the command line, we can only detect&&&&its presence at reset time.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, console: add same displaychangelistener registration pre-condition Catch an invalid state. Mainly useful for documentation purposes.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 20170406120513.638-3-marcandre.lureau@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," tcx: switch to load_image_mr() and remove prom_addr hack Previous to the existence of load_image_mr(), the only way to load in the&&&&FCode ROM image was to pass in its physical address via qdev properties&&&&and use load_image_targphys().&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," memory: add MemoryRegionIOMMUOps.replay() callback Originally we have one memory_region_iommu_replay() function, which is&&&&the default behavior to replay the translations of the whole IOMMU&&&&region. However, on some platform like x86, we may want our own replay&&&&logic for IOMMU regions. This patch adds one more hook for IOMMUOps for&&&&the callback, and it'll override the default if set.&&&&&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Eric Auger <eric.auger@redhat.com>&&&&Reviewed-by: \""Michael S. Tsirkin\"" <mst@redhat.com>&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Message-Id: <1491562755-23867-6-git-send-email-peterx@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," target/ppc: Implement ISA V3.00 radix page fault handler ISA V3.00 introduced a new radix mmu model. Implement the page fault&&&&handler for this so we can run a tcg guest in radix mode and perform&&&&address translation correctly.&&&&&&&&In real mode (mmu turned off) addresses are masked to remove the top&&&&4 bits and then are subject to partition scoped translation, since we only&&&&support pseries at this stage it is only necessary to perform the masking&&&&and then we're done.&&&&&&&&In virtual mode (mmu turned on) address translation if performed as&&&&follows:&&&&&&&&1. Use the quadrant to determine the fully qualified address.&&&&&&&&The fully qualified address is defined as the combination of the effective&&&&address, the effective logical partition id (LPID) and the effective&&&&process id (PID). Based on the quadrant (EA63:62) we set the pid and lpid&&&&like so:&&&&&&&&quadrant 0: lpid = LPIDR, pid = PIDR&&&&quadrant 1: HV only (not allowed in pseries)&&&&quadrant 2: HV only (not allowed in pseries)&&&&quadrant 3: lpid = LPIDR, pid = 0&&&&&&&&If we can't get the fully qualified address we raise a segment interrupt.&&&&&&&&2. Find the guest radix tree&&&&&&&&We ask the virtual hypervisor for the partition table which was registered&&&&with H_REGISTER_PROC_TBL which points us to the process table in guest&&&&memory. We then index this table by pid to get the process table entry&&&&which points us to the appropriate radix tree to translate the address.&&&&&&&&If the process table isn't big enough to contain an entry for the current&&&&pid then we raise a storage interrupt.&&&&&&&&3. Walk the radix tree&&&&&&&&Next we walk the radix tree where each level is a table of page directory&&&&entries indexed by some number of bits from the effective address, where&&&&the number of bits is determined by the table size. We continue to walk&&&&the tree (while entries are valid and the table is of minimum size) until&&&&we reach a table of page table entries, indicated by having the leaf bit&&&&set. The appropriate pte is then checked for sufficient access permissions,&&&&the reference and change bits are updated and the real address is&&&&calculated from the real page number bits of the pte and the low bits of&&&&the effective address.&&&&&&&&If we can't find an entry or can't access the entry bacause of permissions&&&&then we raise a storage interrupt.&&&&&&&&Signed-off-by: Suraj Jitindar Singh <sjitindarsingh@gmail.com>&&&&[dwg: Add missing parentheses to macro]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," intel_iommu: allow dynamic switch of IOMMU region This is preparation work to finally enabled dynamic switching ON/OFF for&&&&VT-d protection. The old VT-d codes is using static IOMMU address space,&&&&and that won't satisfy vfio-pci device listeners.&&&&&&&&Let me explain.&&&&&&&&vfio-pci devices depend on the memory region listener and IOMMU replay&&&&mechanism to make sure the device mapping is coherent with the guest&&&&even if there are domain switches. And there are two kinds of domain&&&&switches:&&&&&&&&  (1) switch from domain A -> B&&&&  (2) switch from domain A -> no domain (e.g., turn DMAR off)&&&&&&&&Case (1) is handled by the context entry invalidation handling by the&&&&VT-d replay logic. What the replay function should do here is to replay&&&&the existing page mappings in domain B.&&&&&&&&However for case (2), we don't want to replay any domain mappings - we&&&&just need the default GPA->HPA mappings (the address_space_memory&&&&mapping). And this patch helps on case (2) to build up the mapping&&&&automatically by leveraging the vfio-pci memory listeners.&&&&&&&&Another important thing that this patch does is to seperate&&&&IR (Interrupt Remapping) from DMAR (DMA Remapping). IR region should not&&&&depend on the DMAR region (like before this patch). It should be a&&&&standalone region, and it should be able to be activated without&&&&DMAR (which is a common behavior of Linux kernel - by default it enables&&&&IR while disabled DMAR).&&&&&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: \""Michael S. Tsirkin\"" <mst@redhat.com>&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Message-Id: <1491562755-23867-9-git-send-email-peterx@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," qapi2texi: Present the table of members more clearly The table of members follows the main descriptive text immediately.&&&&Makes it hard to see what it is about.  Start a new paragraph, and&&&&lead with a line ""Members:"" for object and alternate types, ""Values:""&&&&for enumeration types, and ""Arguments:"" for commands and events.&&&&&&&&Example change (qemu-qmp-ref.txt):&&&&&&&&  -- Command: set_link&&&&&&&&      Sets the link status of a virtual network adapter.&&&&+&&&&+     Arguments:&&&&      'name'&&&&           the device name of the virtual network adapter&&&&      'up'&&&&           true to set the link status to be up&&&&&&&&      Returns: Nothing on success If 'name' is not a valid network&&&&      device, DeviceNotFound&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1489582656-31133-22-git-send-email-armbru@redhat.com>&&&& "
0," vvfat: Implement .bdrv_child_perm() vvfat is the last remaining driver that can have children, but doesn't&&&&implement .bdrv_child_perm() yet. The default handlers aren't suitable&&&&here, so let's implement a very simple driver-specific one that protects&&&&the internal child from being used by other users as good as our&&&&permissions permit.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Acked-by: Fam Zheng <famz@redhat.com>&&&& "
0," migration: use """" as the default for tls-creds/hostname The tls-creds parameter has a default value of NULL indicating&&&&that TLS should not be used. Setting it to non-NULL enables&&&&use of TLS. Once tls-creds are set to a non-NULL value via the&&&&monitor, it isn't possible to set them back to NULL again, due&&&&to current implementation limitations. The empty string is not&&&&a valid QObject identifier, so this switches to use """" as the&&&&default, indicating that TLS will not be used&&&&&&&&The tls-hostname parameter has a default value of NULL indicating&&&&the the hostname from the migrate connection URI should be used.&&&&Again, once tls-hostname is set non-NULL, to override the default&&&&hostname for x509 cert validation, it isn't possible to reset it&&&&back to NULL via the monitor. The empty string is not a valid&&&&hostname, so this switches to use """" as the default, indicating&&&&that the migrate URI hostname should be used.&&&&&&&&Using """" as the default for both, also means that the monitor&&&&commands ""info migrate_parameters"" / ""query-migrate-parameters""&&&&will report existance of tls-creds/tls-parameters even when set&&&&to their default values.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0," usb: replace handle_destroy with unrealize Curiously, unrealize() is not being used, but it seems more&&&&appropriate than handle_destroy() together with realize(). It is more&&&&ubiquitous destroy name in qemu code base and may throw errors.&&&&&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 20170221141451.28305-25-marcandre.lureau@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, block: document fields protected by AioContext lock Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170213135235.12274-19-pbonzini@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, vmstate registration: check return values Check qdev's call to vmstate_register_with_alias_id; that gets&&&&most of the common uses; there's hundreds of calls via vmstate_register&&&&which could get fixed over time.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Message-Id: <20170202125956.21942-4-dgilbert@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," xen: use qdev_unplug() instead of g_free() in xen_pv_find_xendev() The error exits of xen_pv_find_xendev() free the new xen-device via&&&&g_free() which is wrong.&&&&&&&&As the xen-device has been initialized as qdev it must be removed&&&&via qdev_unplug().&&&&&&&&This bug has been introduced with commit 3a6c9172ac5951e6dac2b3f6&&&&(""xen: create qdev for each backend device"").&&&&&&&&Reported-by: Roger Pau Monn茅 <roger.pau@citrix.com>&&&&Tested-by: Roger Pau Monn茅 <roger.pau@citrix.com>&&&&Signed-off-by: Juergen Gross <jgross@suse.com>&&&&Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>&&&& "
0," ui: fix reporting of VNC auth in query-vnc-servers Currently the VNC authentication info is emitted at the&&&&top level of the query-vnc-servers data. This is wrong&&&&because the authentication scheme differs between plain&&&&and websockets when TLS is enabled. We should instead&&&&report auth against the individual servers. e.g.&&&&&&&&(QEMU) query-vnc-servers&&&&{&&&&    ""return"": [&&&&        {&&&&            ""clients"": [],&&&&            ""id"": ""default"",&&&&            ""auth"": ""vencrypt"",&&&&            ""vencrypt"": ""x509-vnc"",&&&&            ""server"": [&&&&                {&&&&                    ""host"": ""127.0.0.1""&&&&                    ""service"": ""5901"",&&&&                    ""websocket"": false,&&&&                    ""family"": ""ipv4"",&&&&                    ""auth"": ""vencrypt"",&&&&                    ""vencrypt"": ""x509-vnc""&&&&                },&&&&                {&&&&                    ""host"": ""127.0.0.1"",&&&&                    ""service"": ""5902"",&&&&                    ""websocket"": true,&&&&                    ""family"": ""ipv4"",&&&&                    ""auth"": ""vnc""&&&&                }&&&&            ]&&&&        }&&&&    ]&&&&}&&&&&&&&This also future proofs the QMP schema so that we can&&&&cope with multiple VNC server instances, listening on&&&&different interfaces or ports, with different auth&&&&setup.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170203120649.15637-3-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," ui: refactor code for populating SocketAddress from vnc_display_open The code which interprets the CLI args to populate the SocketAddress&&&&objects for plain & websockets VNC is quite complex already and will&&&&need further enhancements shortly. Refactor it into separate methods&&&&to avoid vnc_display_open getting even larger. As a side effect of&&&&the refactoring, it is now possible to specify a listen address for&&&&the websocket server explicitly. e.g,&&&&&&&&  -vnc localhost:5900,websockets=0.0.0.0:8080&&&&&&&&will listen on localhost for the plain VNC server, but expose the&&&&websockets VNC server on the public interface. This refactoring&&&&also removes the restriction that prevents enabling websockets&&&&when the plain VNC server is listening on a UNIX socket.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170203120649.15637-5-berrange@redhat.com&&&&&&&&[ kraxel: squashed clang build fix ]&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," char-win: do not override chr_free For some unclear reason to me, char-file does not have chr_free on&&&&win32. Since we want to switch to instance finalizer instead of class&&&&chr_free, we should be able to run the base WinChardev class finalizer&&&&in any case. Use a boolean to skip free to ease the transition to&&&&instance finalizer.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," qemu-img: remove dead check options must be non-NULL here, because it has been checked before.&&&&Reported by Coverity.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0, replay: save/load initial state This patch implements initial vmstate creation or loading at the start&&&&of record/replay. It is needed for rewinding the execution in the replay mode.&&&&&&&&v4 changes:&&&& - snapshots are not created by default anymore&&&&&&&&v3 changes:&&&& - added rrsnapshot option&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20170124071746.4572.61449.stgit@PASHA-ISP>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," ppc: Prevent inifnite loop in decrementer auto-reload. If the DECAR register is set to 0, QEMU tries to reload the decrementer with&&&&zero in an inifinite loop. According to PPC documentation, the decrementer is&&&&triggered on 1->0 transition, so avoid reloading the decrementer if if is&&&&already zero.&&&&&&&&The problem does not manifest under Linux, but it is valid to set DECAR to zero&&&&(and may make sense as part of decrementer initialization when interrupts are&&&&disabled).&&&&&&&&Signed-off-by: Roman Kapl <rka@sysgo.com>&&&&[dwg: Fixed style nit]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," target/xtensa: tests: clean up interrupt tests Don't use hardcoded software interrupt masks, use XCHAL macros.&&&&Mask off timer interrupt bits that are not checked for.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
0," quorum: Inline quorum_fifo_aio_cb() Inlining the function removes some boilerplace code and replaces&&&&recursion by a simple loop, so the code becomes somewhat easier to&&&&understand.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," target-i386: Fix eflags.TF/#DB handling of syscall/sysret insns The syscall and sysret instructions behave a bit differently:&&&&TF is checked after the instruction completes.&&&&This allows the o/s to disable #DB at a syscall by adding TF to FMASK.&&&&And then when the sysret is executed the #DB is taken ""as if"" the&&&&syscall insn just completed.&&&&&&&&Signed-off-by: Doug Evans <dje@google.com>&&&&Message-Id: <94eb2c0bfa1c6a9fec0543057483@google.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," rules.mak: speedup save-vars load-vars Unnesting variables spends a lot of time parsing and executing foreach&&&&and if functions.  Because actually very few variables have to be&&&&saved and restored, a good strategy is to remember what has to be done&&&&in load-vars, and only iterate the right variables in load-vars.&&&&For save-vars, unroll the foreach loop to provide another small&&&&improvement.&&&&&&&&This speeds up a ""noop"" build from around 15.5 seconds on my laptop&&&&to 11.7 (25% roughly).&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," xen: slightly simplify bufioreq handling There's no point setting fields always receiving the same value on each&&&&iteration, as handle_ioreq() doesn't alter them anyway. Set state and&&&&count once ahead of the loop, drop the redundant clearing of&&&&data_is_ptr, and avoid the meaningless (because count is 1) setting of&&&&df altogether.&&&&&&&&Also avoid doing an unsigned long calculation of size when the field to&&&&be initialized is only 32 bits wide (and the shift value in the range&&&&0...3).&&&&&&&&Signed-off-by: Jan Beulich <jbeulich@suse.com>&&&&Reviewed-by: Paul Durrant <paul.durrant@citrix.com>&&&&Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>&&&&Signed-off-by: Stefano Stabellini <sstabellini@kernel.org>&&&& "
0, checkpatch: allow spaces before parenthesis for 'coroutine_fn' Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Message-Id: <83b0fae0728906e18849c971d22d077d7fc0f179.1478010883.git.jcody@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," main-loop: Suppress I/O thread warning under qtest We do not want to display the ""I/O thread spun"" warning for test cases&&&&that run under qtest. The first attempt for this (commit&&&&01c22f2cdd4fcf02276ea10f48253850a5fd7259) tested whether qtest_enabled()&&&&was true.&&&&&&&&Commit 21a24302e85024dd7b2a151158adbc1f5dc5c4dd correctly recognized&&&&that just testing qtest_enabled() is not sufficient since there are some&&&&tests that do not use the qtest accelerator but just the qtest character&&&&device, and thus replaced qtest_enabled() by qtest_driver().&&&&&&&&However, there are also some tests that only use the qtest accelerator&&&&and not the qtest chardev; perhaps most notably the bash iotests.&&&&Therefore, we have to check both qtest_enabled() and qtest_driver().&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Message-Id: <20161017180939.27912-1-mreitz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," nvdimm acpi: introduce _FIT _FIT is required for hotplug support, guest will inquire the updated&&&&device info from it if a hotplug event is received&&&&&&&&As FIT buffer is not completely mapped into guest address space, so a&&&&new function, Read FIT whose UUID is UUID&&&&648B9CF2-CDA1-4312-8AD9-49C4AF32BD62, handle 0x10000, function index&&&&is 0x1, is reserved by QEMU to read the piece of FIT buffer. The buffer&&&&is concatenated before _FIT return&&&&&&&&Refer to docs/specs/acpi-nvdimm.txt for detailed design&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," block: Add QMP support for streaming to an intermediate layer This patch makes the 'device' parameter of the 'block-stream' command&&&&accept a node name that is not a root node. The presence of this&&&&feature can't be directly tested with introspection; soon we'll&&&&introduce a 'base-node' parameter whose presence can be checked for&&&&this purpose.&&&&&&&&In addition to that, operation blockers will be checked in all&&&&intermediate nodes between the top and the base node.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qga: drop unnecessary GA_CHANNEL_UNIX_LISTEN checks Throughout the code there are c->listen_channel checks which manage the&&&&listen socket file descriptor (waiting for accept(2), closing the file&&&&descriptor, etc).  These checks are currently preceded by explicit&&&&c->method == GA_CHANNEL_UNIX_LISTEN checks.&&&&&&&&Explicit GA_CHANNEL_UNIX_LISTEN checks are not necessary since serial&&&&channel types do not create the listen channel (c->listen_channel).&&&&&&&&As more listen channel types are added, explicitly checking all of them&&&&becomes messy.  Rely on c->listen_channel to determine whether or not a&&&&listen socket file descriptor is used.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0," audio: intel-hda: check stream entry count during transfer Intel HDA emulator uses stream of buffers during DMA data&&&&transfers. Each entry has buffer length and buffer pointer&&&&position, which are used to derive bytes to 'copy'. If this&&&&length and buffer pointer were to be same, 'copy' could be&&&&set to zero(0), leading to an infinite loop. Add check to&&&&avoid it.&&&&&&&&Reported-by: Huawei PSIRT <psirt@huawei.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1476949224-6865-1-git-send-email-ppandit@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, pc: Require IRQ remapping and EIM if there could be x2APIC CPUs It would prevent starting guest with incorrect configs&&&&where interrupts couldn't be delivered to CPUs with&&&&APIC IDs > 255.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Radim Kr膷m谩艡 <rkrcmar@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," exec: split cpu_exec_init() Put in cpu_exec_initfn() what initializes the CPU,&&&&and leave in cpu_exec_init() what adds it to the environment.&&&&&&&&As cpu_exec_initfn() is called by all XX_cpu_initfn(), call it&&&&directly in cpu_common_initfn().&&&&cpu_exec_init() is now a realize function, it will be renamed&&&&to cpu_exec_realizefn() and moved to the XX_cpu_realizefn()&&&&function in a following patch.&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," s390: avoid always-true comparison in s390_pci_generate_fid() Coverity points out that the comparison ""fid <= ZPCI_MAX_FID""&&&&in s390_pci_generate_fid() is always true (because fid&&&&is 32 bits and ZPCI_MAX_FID is 0xffffffff). This isn't a&&&&bug because the real loop termination condition is&&&&expressed later via an ""if (...) break;"" inside the loop,&&&&but it is a bit odd. Rephrase the loop to avoid the&&&&unnecessary duplicate-but-never-true conditional.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," block: Hide HBitmap in block dirty bitmap interface HBitmap is an implementation detail of block dirty bitmap that should be hidden&&&&from users. Introduce a BdrvDirtyBitmapIter to encapsulate the underlying&&&&HBitmapIter.&&&&&&&&A small difference in the interface is, before, an HBitmapIter is initialized&&&&in place, now the new BdrvDirtyBitmapIter must be dynamically allocated because&&&&the structure definition is in block/dirty-bitmap.c.&&&&&&&&Two current users are converted too.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1476395910-8697-2-git-send-email-jsnow@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," timer: a9gtimer: remove loop to auto-increment comparator ARM A9MP processor has a peripheral timer with an auto-increment&&&&register, which holds an increment step value. A user could set&&&&this value to zero. When auto-increment control bit is enabled,&&&&it leads to an infinite loop in 'a9_gtimer_update' while&&&&updating comparator value. Remove this loop incrementing the&&&&comparator value.&&&&&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-id: 1476733226-11635-1-git-send-email-ppandit@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," usb: fix serial generator snprintf return value is *not* the number of chars written into the&&&&buffer, but the number of chars needed.  So in case the buffer is too&&&&small you can go alloc a bigger one and try again.  But that also means&&&&you can't simply use the return value for the next snprintf call&&&&without checking beforehand that things did actually fit.&&&&&&&&Problem is that usb_desc_create_serial didn't perform that check, so a&&&&loooong path string (can happen with deep pci-bridge nesting) results in&&&&the third snprintf call smashing the stack.&&&&&&&&Fix this by throwing out all the snpintf calls and use g_strdup_printf&&&&instead.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1381630&&&&&&&&Reported-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1475659998-22045-1-git-send-email-kraxel@redhat.com&&&& "
0," block: Use 'detect-zeroes' option for 'blockdev-change-medium' Instead of modifying the new BDS after it has been opened, use the newly&&&&supported 'detect-zeroes' option in bdrv_open_common() so that all&&&&requirements are checked (detect-zeroes=unmap requires discard=unmap).&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," i2c: Fix SMBus read transactions to avoid double events Change 2293c27faddf (i2c: implement broadcast write) added broadcast&&&&capability to the I2C bus, but it broke SMBus read transactions.&&&&An SMBus read transaction does two i2c_start_transaction() calls&&&&without an intervening i2c_end_transfer() call.  This will&&&&result in i2c_start_transfer() adding the same device to the&&&&current_devs list twice, and then the ->event() for the same&&&&device gets called twice in the second call to i2c_start_transfer(),&&&&resulting in the smbus code getting confused.&&&&&&&&Note that this happens even with pure I2C devices when simulating&&&&SMBus over I2C.&&&&&&&&This fix only scans the bus if the current set of devices is empty.&&&&This means that the current set of devices stays fixed until&&&&i2c_end_transfer() is called, which is really what you want.&&&&&&&&This also deletes the empty check from the top of i2c_end_transfer().&&&&It's unnecessary, and it prevents the broadcast variable from being&&&&set to false at the end of the transaction if no devices were on&&&&the bus.&&&&&&&&Cc: KONRAD Frederic <fred.konrad@greensocs.com>&&&&Cc: Alistair Francis <alistair.francis@xilinx.com>&&&&Cc: Peter Crosthwaite <crosthwaite.peter@gmail.com>&&&&Cc: Kwon <hyun.kwon@xilinx.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Corey Minyard <cminyard@mvista.com>&&&&Reviewed-by: KONRAD Frederic <fred.konrad@greensocs.com>&&&&Tested-by: KONRAD Frederic <fred.konrad@greensocs.com>&&&&Message-id: 1470153614-6657-1-git-send-email-minyard@acm.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, replay: vmstate for replay module This patch introduces vmstate for replay data structures.&&&&It allows saving and loading vmstate while replaying.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20160926080810.6992.68420.stgit@PASHA-ISP>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," cpus-common: simplify locking for start_exclusive/end_exclusive It is not necessary to hold qemu_cpu_list_mutex throughout the&&&&exclusive section, because no other exclusive section can run&&&&while pending_cpus != 0.&&&&&&&&exclusive_idle() is called in cpu_exec_start(), and that prevents&&&&any CPUs created after start_exclusive() from entering cpu_exec()&&&&during an exclusive section.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-i386: Don't try to enable PT State xsave component The code that calculates the set of supported XSAVE components on&&&&CPUID looks at ext_save_areas to find out which components should&&&&be enabled. However, if there are zeroed entries in the&&&&ext_save_areas array, the&&&&  ((env->features[esa->feature] & esa->bits) == esa->bits)&&&&check will always succeed and QEMU will unconditionally try to&&&&enable the component.&&&&&&&&Luckily this never caused any problems because the only missing&&&&entry in ext_save_areas is the PT State component (bit 8), and&&&&KVM currently doesn't support it (so it was cleared on ena_mask).&&&&But the code was still incorrect and would break if KVM starts&&&&returning CPUID[EAX=0xD,ECX=0].EAX[bit 8] as supported on&&&&GET_SUPPORTED_CPUID.&&&&&&&&Fix the problem by changing the code to not enable a XSAVE&&&&component if ExtSaveArea::bits is zero.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0, mirror: auto complete active commit Auto complete mirror job in background to prevent from&&&&blocking synchronously&&&&&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Changlong Xie <xiecl.fnst@cn.fujitsu.com>&&&&Signed-off-by: Wang WeiWei <wangww.fnst@cn.fujitsu.com>&&&&Message-id: 1469602913-20979-7-git-send-email-xiecl.fnst@cn.fujitsu.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," tcg: Optimize fence instructions This commit optimizes fence instructions.  Two optimizations are&&&&currently implemented: (1) unnecessary duplicate fence instructions,&&&&and (2) merging weaker fences into a stronger fence.&&&&&&&&[rth: Merge tcg_optimize_mb back into tcg_optimize, so that we only&&&&loop over the opcode stream once.  Merge ""unrelated"" weaker barriers&&&&into one stronger barrier.]&&&&&&&&Signed-off-by: Pranith Kumar <bobby.prani@gmail.com>&&&&Message-Id: <20160823134825.32578-1-bobby.prani@gmail.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0, tcg: Prepare safe tb_jmp_cache lookup out of tb_lock Ensure atomicity of CPU's 'tb_jmp_cache' access for future translation&&&&block lookup out of 'tb_lock'.&&&&&&&&Note that this patch does *not* make CPU's TLB invalidation safe if it&&&&is done from some other thread while the CPU is in its execution loop.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Signed-off-by: Sergey Fedorov <sergey.fedorov@linaro.org>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-Id: <20160715175852.30749-4-sergey.fedorov@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," memory: introduce IOMMUNotifier and its caps IOMMU Notifier list is used for notifying IO address mapping changes.&&&&Currently VFIO is the only user.&&&&&&&&However it is possible that future consumer like vhost would like to&&&&only listen to part of its notifications (e.g., cache invalidations).&&&&&&&&This patch introduced IOMMUNotifier and IOMMUNotfierFlag bits for a&&&&finer grained control of it.&&&&&&&&IOMMUNotifier contains a bitfield for the notify consumer describing&&&&what kind of notification it is interested in. Currently two kinds of&&&&notifications are defined:&&&&&&&&- IOMMU_NOTIFIER_MAP:    for newly mapped entries (additions)&&&&- IOMMU_NOTIFIER_UNMAP:  for entries to be removed (cache invalidates)&&&&&&&&When registering the IOMMU notifier, we need to specify one or multiple&&&&types of messages to listen to.&&&&&&&&When notifications are triggered, its type will be checked against the&&&&notifier's type bits, and only notifiers with registered bits will be&&&&notified.&&&&&&&&(For any IOMMU implementation, an in-place mapping change should be&&&& notified with an UNMAP followed by a MAP.)&&&&&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Message-Id: <1474606948-14391-2-git-send-email-peterx@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, spapr: remove extra type variable The sPAPR CPU core typename is already available in the upper&&&&block. Let's use it and move the check upward also.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0, optionrom: add -fno-stack-protector This is required by OpenBSD.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," s390x/cpumodel: let the CPU model handle feature checks If we have certain features enabled, we have to migrate additional state&&&&(e.g. vector registers or runtime-instrumentation registers). Let the&&&&CPU model control that unless we have no ""host"" CPU model in the KVM&&&&case. This will later on be the case for compatibility machines, so&&&&migration from QEMU versions without the CPU model will still work.&&&&&&&&Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Message-Id: <20160905085244.99980-12-dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," s390x/cpumodel: expose features and feature groups as properties Let's add all features and feature groups as properties to all CPU models.&&&&If the ""host"" CPU model is unknown, we can neither query nor change&&&&features. KVM will just continue to work like it did until now.&&&&&&&&We will not allow to enable features that were not part of the original&&&&CPU model, because that could collide with the IBC in KVM.&&&&&&&&Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Message-Id: <20160905085244.99980-11-dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," hw/ppc/spapr: Look up CPU alias names instead of hard-coding the aliases Hard-coding the CPU alias names in the spapr_cores[] array has&&&&two big disadvantages:&&&&&&&&1) We register a real type with the CPU alias name in&&&&   spapr_cpu_core_register_types() - this prevents us from registering&&&&   a CPU family name in kvm_ppc_register_host_cpu_type() with the same&&&&   name (as we do it for the non-hotpluggable CPU types).&&&&&&&&2) It's quite cumbersome to maintain the aliases here in sync with the&&&&   ppc_cpu_aliases list from target-ppc/cpu-models.c.&&&&&&&&So let's simply add proper alias lookup to the spapr cpu core code,&&&&too (by checking whether the given model can be used directly, and&&&&if not by trying to look up the given model as an alias name instead).&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, virtio: check vring descriptor buffer length virtio back end uses set of buffers to facilitate I/O operations.&&&&An infinite loop unfolds in virtqueue_pop() if a buffer was&&&&of zero size. Add check to avoid it.&&&&&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, hw/pxb: declare pxb devices as not hot-pluggable Prevent future issues when hotplug will work for devices&&&&attached to pxbs.&&&&&&&&Suggested-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Tested-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," linuxboot_dma: avoid guest ABI breakage on gcc vs. clang compilation Recent GCC compiles linuxboot_dma.c to 921 bytes, while CentOS 6 needs&&&&1029 and clang needs 1527.  Because the size of the ROM, rounded to the&&&&next 512 bytes, must match, this causes the API to break between a <1K&&&&ROM and one that is bigger.&&&&&&&&We want to make the ROM 1.5 KB in size, but it's better to make clang&&&&produce leaner ROMs, because currently it is worryingly close to the limit.&&&&To fix this prevent clang's happy inlining (which -Os cannot prevent).&&&&This only requires adding a noinline attribute.&&&&&&&&Second, the patch makes sure that the ROM has enough padding to prevent&&&&ABI breakage on different compilers.  The size is now hardcoded in the file&&&&that is passed to signrom.py, as was the case before commit 6f71b77&&&&(""scripts/signrom.py: Allow option ROM checksum script to write the size&&&&header."", 2016-05-23); signrom.py however will still pad the input to&&&&the requested size.  This ensures that the padding goes beyond the&&&&next multiple of 512 if necessary, and also avoids the need for&&&&-fno-toplevel-reorder which clang doesn't support.  signrom.py can then&&&&error out if the requested size is too small for the actual size of the&&&&compiled ROM.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, tests/docker/docker.py: check and run .pre script The docker script will now search for an associated $dockerfile.pre&&&&script which gets run in the same build context as the dockerfile will&&&&be. This is to support pre-seeding the build context before running the&&&&docker build.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-id: 1468934445-32183-4-git-send-email-famz@redhat.com&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&& 
0, net: Don't use error_is_set() to suppress additional errors Using error_is_set(errp) that way can sweep programming errors under&&&&the carpet when we get called incorrectly with an error set.&&&&&&&&qmp_query_rx_filter() breaks its loop when it detects an error.  It&&&&needs to set another error when the loop completes normally.&&&&&&&&Return right away instead of merely breaking the loop.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," mirror: double performance of the bulk stage if the disc is full Mirror can do up to 16 in-flight requests, but actually on full copy&&&&(the whole source disk is non-zero) in-flight is always 1. This happens&&&&as the request is not limited in size: the data occupies maximum available&&&&capacity of s->buf.&&&&&&&&The patch limits the size of the request to some artificial constant&&&&(1 Mb here), which is not that big or small. This effectively enables&&&&back parallelism in mirror code as it was designed.&&&&&&&&The result is important: the time to migrate 10 Gb disk is reduced from&&&&~350 sec to 170 sec.&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Message-id: 1468516741-82174-1-git-send-email-vsementsov@virtuozzo.com&&&&CC: Stefan Hajnoczi <stefanha@redhat.com>&&&&CC: Fam Zheng <famz@redhat.com>&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&CC: Max Reitz <mreitz@redhat.com>&&&&CC: Jeff Cody <jcody@redhat.com>&&&&CC: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0, main-loop: check return value before using pointer pointer 'qemu_aio_context' should be checked first before it is used.&&&&qemu_bh_new() will use it.&&&&&&&&Signed-off-by: Cao jin <caoj.fnst@cn.fujitsu.com>&&&&Message-Id: <1467799740-26079-2-git-send-email-caoj.fnst@cn.fujitsu.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," linux-user: Clean up target_structs.h header guards These headers all use TARGET_STRUCTS_H as header guard symbol.  Reuse&&&&of the same guard symbol in multiple headers is okay as long as they&&&&cannot be included together.&&&&&&&&Since we can avoid guard symbol reuse easily, do so: use guard symbol&&&&$target_TARGET_STRUCTS_H for linux-user/$target/target_structs.h.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0," msmouse: fix buffer handling The msmouse chardev backend writes data without checking whenever there&&&&is enough space.&&&&&&&&That happens to work with linux guests, probably by pure luck because&&&&the linux driver enables the fifo and the serial port emulation accepts&&&&more data than announced via qemu_chr_be_can_write() in that case.&&&&&&&&Handle this properly by adding a buffer to MouseState.  Hook up a&&&&CharDriverState->accept_input() handler which feeds the buffer to the&&&&serial port.  msmouse_event() only fills the buffer now, and calls the&&&&accept_input handler too to kick off the transmission.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1467625375-31774-3-git-send-email-kraxel@redhat.com&&&& "
0," range: Eliminate direct Range member access Users of struct Range mess liberally with its members, which makes&&&&refactoring hard.  Create a set of methods, and convert all users to&&&&call them instead of accessing members.  The methods have carefully&&&&worded contracts, and use assertions to check them.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," hmp: use snapshot name to determine whether a snapshot is 'fully available' Currently qemu uses snapshot id to determine whether a snapshot is fully&&&&available, It causes incorrect output in some scenario.&&&&&&&&For instance:&&&&(qemu) info block&&&&drive_image1 (#block113): /opt/vms/SLES12-SP1-JeOS-x86_64-GM/disk0.qcow2&&&&(qcow2)&&&&    Cache mode:       writeback&&&&&&&&drive_image2 (#block349): /opt/vms/SLES12-SP1-JeOS-x86_64-GM/disk1.qcow2&&&&(qcow2)&&&&    Cache mode:       writeback&&&&(qemu)&&&&(qemu) info snapshots&&&&There is no snapshot available.&&&&(qemu)&&&&(qemu) snapshot_blkdev_internal drive_image1 snap1&&&&(qemu)&&&&(qemu) info snapshots&&&&There is no suitable snapshot available&&&&(qemu)&&&&(qemu) savevm checkpoint-1&&&&(qemu)&&&&(qemu) info snapshots&&&&ID        TAG                 VM SIZE                DATE       VM CLOCK&&&&1         snap1                     0 2016-05-22 16:57:31   00:01:30.567&&&&(qemu)&&&&&&&&$ qemu-img snapshot -l disk0.qcow2&&&&Snapshot list:&&&&ID        TAG                 VM SIZE                DATE       VM CLOCK&&&&1         snap1                     0 2016-05-22 16:57:31   00:01:30.567&&&&2         checkpoint-1           165M 2016-05-22 16:58:07   00:02:06.813&&&&&&&&$ qemu-img snapshot -l disk1.qcow2&&&&Snapshot list:&&&&ID        TAG                 VM SIZE                DATE       VM CLOCK&&&&1         checkpoint-1              0 2016-05-22 16:58:07   00:02:06.813&&&&&&&&The patch uses snapshot name instead of snapshot id to determine whether a&&&&snapshot is fully available and uses '--' instead of snapshot id in output&&&&because the snapshot id is not guaranteed to be the same on all images.&&&&For instance:&&&&(qemu) info snapshots&&&&List of snapshots present on all disks:&&&& ID        TAG                 VM SIZE                DATE       VM CLOCK&&&& --        checkpoint-1           165M 2016-05-22 16:58:07   00:02:06.813&&&&&&&&Signed-off-by: Lin Ma <lma@suse.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1467869164-26688-2-git-send-email-lma@suse.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," target-i386: Cleanup 'foo' feature handling Features check, enforce, hv_relaxed and hv_vapic are treated as boolean&&&&set to 'on' when passed from command line, so it's not necessary to&&&&handle each of them separately. Collapse them to one catch-all branch&&&&which will treat any feature in format 'foo' as boolean set to 'on'.&&&&&&&&Any unknown feature will be rejected by CPU property setter so there is no&&&&need to check for unknown feature in cpu_x86_parse_featurestr(), therefore&&&&it's replaced by above mentioned catch-all handler.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," pci-assign: Move ""Invalid ROM"" error message to pci-assign-load-rom.c In function pci_assign_dev_load_option_rom, For those pci devices don't&&&&have 'rom' file under sysfs or if loading ROM from external file, The&&&&function returns NULL, and won't set the passed 'size' variable.&&&&&&&&In these 2 cases, qemu still reports ""Invalid ROM"" error message, Users&&&&may be confused by it.&&&&&&&&Signed-off-by: Lin Ma <lma@suse.com>&&&&Message-Id: <1466010327-22368-1-git-send-email-lma@suse.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," net: mipsnet: check transmit buffer size before sending When processing MIPSnet I/O port write operation, it uses a&&&&transmit buffer tx_buffer[MAX_ETH_FRAME_SIZE=1514]. Two indices&&&&'s->tx_written' and 's->tx_count' are used to control data written&&&&to this buffer. If the two were to be equal before writing, it'd&&&&lead to an OOB write access beyond tx_buffer. Add check to avoid it.&&&&&&&&Reported-by: Li Qiang <qiang6-s@360.cn>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," migration: refine ram_save_compressed_page Use qemu_put_compression_data to do the compression directly&&&&instead of using do_compress_ram_page, avoid some data copy.&&&&very small improvement, at the same time, add code to check&&&&if the compression is successful.&&&&&&&&Signed-off-by: Liang Li <liang.z.li@intel.com>&&&&Message-Id: <1462433579-13691-6-git-send-email-liang.z.li@intel.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
0," pxa2xx: Unconditionally enable USB controller Simplify initialization logic by removing the usb_enabled()&&&&check. The USB controller is part of the SoC, so it doesn't make&&&&sense to create a system where it is not present.&&&&&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Andrzej Zaborowski <balrogg@gmail.com>&&&&Cc: qemu-arm@nongnu.org,&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1465419025-21519-2-git-send-email-ehabkost@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," pc-dimm: introduce realize callback nvdimm needs to  check if the backend memory is large enough to contain&&&&label data and init its memory region when the device is realized, so&&&&introduce realize callback which is called after common dimm has been&&&&realize&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," test: Postcopy This is a postcopy test (x86 only) that actually runs the guest&&&&and checks the memory contents.&&&&&&&&The test runs from an x86 boot block with the hex embedded in the test;&&&&the source for this is:&&&&&&&&...........&&&&&&&&.code16&&&&.org 0x7c00&&&&	.file	""fill.s""&&&&	.text&&&&	.globl	start&&&&	.type	start, @function&&&&start:             # at 0x7c00 ?&&&&        cli&&&&        lgdt gdtdesc&&&&        mov $1,%eax&&&&        mov %eax,%cr0  # Protected mode enable&&&&        data32 ljmp $8,$0x7c20&&&&&&&&.org 0x7c20&&&&.code32&&&&        # A20 enable - not sure I actually need this&&&&        inb $0x92,%al&&&&        or  $2,%al&&&&        outb %al, $0x92&&&&&&&&        # set up DS for the whole of RAM (needed on KVM)&&&&        mov $16,%eax&&&&        mov %eax,%ds&&&&&&&&        mov $65,%ax&&&&        mov $0x3f8,%dx&&&&        outb %al,%dx&&&&&&&&        # bl keeps a counter so we limit the output speed&&&&        mov $0, %bl&&&&mainloop:&&&&        # Start from 1MB&&&&        mov $(1024*1024),%eax&&&&innerloop:&&&&        incb (%eax)&&&&        add $4096,%eax&&&&        cmp $(100*1024*1024),%eax&&&&        jl innerloop&&&&&&&&        inc %bl&&&&        jnz mainloop&&&&&&&&        mov $66,%ax&&&&        mov $0x3f8,%dx&&&&        outb %al,%dx&&&&&&&&	jmp mainloop&&&&&&&&        # GDT magic from old (GPLv2)  Grub startup.S&&&&        .p2align        2       /* force 4-byte alignment */&&&&gdt:&&&&        .word   0, 0&&&&        .byte   0, 0, 0, 0&&&&&&&&        /* -- code segment --&&&&         * base = 0x00000000, limit = 0xFFFFF (4 KiB Granularity), present&&&&         * type = 32bit code execute/read, DPL = 0&&&&         */&&&&        .word   0xFFFF, 0&&&&        .byte   0, 0x9A, 0xCF, 0&&&&&&&&        /* -- data segment --&&&&         * base = 0x00000000, limit 0xFFFFF (4 KiB Granularity), present&&&&         * type = 32 bit data read/write, DPL = 0&&&&         */&&&&        .word   0xFFFF, 0&&&&        .byte   0, 0x92, 0xCF, 0&&&&&&&&gdtdesc:&&&&        .word   0x27                    /* limit */&&&&        .long   gdt                     /* addr */&&&&&&&&/* I'm a bootable disk */&&&&.org 0x7dfe&&&&        .byte 0x55&&&&        .byte 0xAA&&&&&&&&...........&&&&&&&&and that can be assembled by the following magic:&&&&    as --32 -march=i486 fill.s -o fill.o&&&&    objcopy -O binary fill.o fill.boot&&&&    dd if=fill.boot of=bootsect bs=256 count=2 skip=124&&&&    xxd -i bootsect&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Message-id: 1465816605-29488-5-git-send-email-dgilbert@redhat.com&&&&Message-Id: <1465816605-29488-5-git-send-email-dgilbert@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
0," usb-host: add special case for bus+addr This patch changes usb-host behavior in case we hostbus= and hostaddr=&&&&properties are used to identify the usb device in question.  Instead of&&&&adding the device to the hotplug watchlist we try to open directly using&&&&the given bus number and device address.&&&&&&&&Putting a device specified by hostaddr to the hotplug watchlist isn't&&&&a great idea as the address isn't a fixed property.  It changes every&&&&time the device is plugged in.  So considering this case as ""use the&&&&device at bus:addr _now_"" is more sane.  Also usb-host will throw errors&&&&in case it can't initialize the host device.&&&&&&&&Note: For devices on the hotplug watchlist (hostport or vendorid or&&&&productid specified) qemu continues to ignore errors and keeps&&&&monitoring the usb bus to see if the device eventually shows up.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1464945175-28939-1-git-send-email-kraxel@redhat.com&&&& "
0, acpi: do not use TARGET_PAGE_SIZE This is a #define used by the CPU.  NVDIMM can just use 4K&&&&unconditionally.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," i.MX: Fix FEC code for MDIO operation selection According to the FEC chapter of i.MX25 reference manual&&&&&&&&When writing the MMFR register, bit 29 and 28 select the requested operation.&&&& * 10 means read operation with valid MII mgmt frame&&&& * 11 means read operation with non compliant MII mgmt frame&&&& * 01 means write operation with valid MII mgmt frame&&&& * 00 means write operation with non compliant MII mgmt frame&&&&&&&&So while bit 28 does change beween read/write for valid MII mgmt frame, the&&&&mening is inverted for non compliant MII mgmt frame.&&&&&&&&Bit 29 on the other hand means read/write whatever the type of mgmt frame&&&&involved.&&&&&&&&So this patch change the operation selection from bit 28 to bit 29 as it is&&&&more generic.&&&&&&&&Signed-off-by: Jean-Christophe Dubois <jcd@tribudubois.net>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," target-i386: kvm: Increase MSR_BUF_SIZE We are dangerously close to the array limits in kvm_put_msrs()&&&&and kvm_get_msrs(): with the default mcg_cap configuration, we&&&&can set up to 148 MSRs in kvm_put_msrs(), and if we allow mcg_cap&&&&to be changed, we can write up to 236 MSRs.&&&&&&&&Use 4096 bytes for the buffer, that can hold 255 kvm_msr_entry&&&&structs.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," block: Invalidate all children Currently we only recurse to bs->file, which will miss the children in quorum&&&&and VMDK.&&&&&&&&Recurse into the whole subtree to avoid that.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, xen-hvm: ignore background I/O sections Since Xen will correctly handle accesses to unimplemented I/O ports (by&&&&returning all 1's for reads and ignoring writes) there is no need for&&&&QEMU to register backgroud I/O sections.&&&&&&&&This patch therefore adds checks to xen_io_add/del so that sections with&&&&memory-region ops pointing at 'unassigned_io_ops' are ignored.&&&&&&&&Signed-off-by: Paul Durrant <paul.durrant@citrix.com>&&&&Cc: Stefano Stabellini <sstabellini@kernel.org>&&&&Cc: Anthony Perard <anthony.perard@citrix.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1462811480-16295-1-git-send-email-paul.durrant@citrix.com>&&&&Acked-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," nbd: Switch to byte-based block access Sector-based blk_read() should die; switch to byte-based&&&&blk_pread() instead.&&&&&&&&Add a constant for our magic number 512, to make it obvious&&&&that this size will NOT change even if BDRV_SECTOR_SIZE does,&&&&even though the two happen to be the same for now.  Split&&&&assignments from conditionals to keep checkpatch.pl happy.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," usb: Support compilation without poll.h This is a hack to support compilation with Mingw-w64 which provides&&&&a libusb-1.0 package, but no poll.h.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Message-id: 1458630800-10088-1-git-send-email-sw@weilnetz.de&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," configure: build SDL if only SDL2 available Right now if SDL2 is installed but not SDL1, default configure will&&&&entirely disable SDL. Check upfront for SDL2 using pkg-config, but&&&&still prefer SDL1 if both versions are installed.&&&&&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Message-id: c9e570b5964d128a3595efe3170129a3da459776.1462557436.git.crobinso@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," linux-user: arm: Handle (ignore) EXCP_YIELD in ARM cpu_loop() The new-in-ARMv8 YIELD instruction has been implemented to throw&&&&an EXCP_YIELD back up to the QEMU main loop. In system emulation&&&&we use this to decide to schedule a different guest CPU in SMP&&&&configurations. In usermode emulation there is nothing to do,&&&&so just ignore it and resume the guest.&&&&&&&&This prevents an abort with ""unhandled CPU exception 0x10004""&&&&if the guest process uses the YIELD instruction.&&&&&&&&Reported-by: Hunter Laux <hunterlaux@gmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1456833171-31900-1-git-send-email-peter.maydell@linaro.org&&&& "
0," spice: Disallow use of gl + TCP port Currently, virgl support has to go through a local unix socket, trying&&&&to connect to a VM using -spice gl through spice://localhost:5900 will&&&&only result in a black screen.&&&&This commit errors out when the user tries to start a VM with both GL&&&&support and a port/tls-port set.&&&&This would fit better in spice-server, but currently QEMU does not call&&&&into spice-server when parsing 'gl' on its command line, so we have to&&&&do this check in QEMU instead.&&&&&&&&Signed-off-by: Christophe Fergeau <cfergeau@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1457955672-28758-1-git-send-email-cfergeau@redhat.com&&&&&&&&[ applied codestyle fix: break long line ]&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," exec: fix error handling in file_ram_alloc One instance of double closing, and invalid close(-1) in some cases&&&&of ""goto error"".&&&&&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," contrib/ivshmem-server: Print ""not for production"" warning The code is okay for illustrating how things work and for testing, but&&&&its error handling make it unfit for production use.  Print a warning&&&&to protect the innocent.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1458066895-20632-41-git-send-email-armbru@redhat.com>&&&& "
0, target-tricore: Move general CHECK_REG_PAIR of decode_rrr_divide The add.f and sub.f to be implemented don't use 64 bit registers&&&&and a general usage of CHECK_REG_PAIR would always generate an&&&&exception for them.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Bastian Koppelmann <kbastian@mail.uni-paderborn.de>&&&&Message-Id: <1457708597-3025-3-git-send-email-kbastian@mail.uni-paderborn.de>&&&& 
0," vfio: Eliminate vfio_container_ioctl() vfio_container_ioctl() was a bad interface that bypassed abstraction&&&&boundaries, had semantics that sat uneasily with its name, and was unsafe&&&&in many realistic circumstances.  Now that spapr-pci-vfio-host-bridge has&&&&been folded into spapr-pci-host-bridge, there are no more users, so remove&&&&it.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Acked-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," qapi: Simplify semantics of visit_next_list() The semantics of the list visit are somewhat baroque, with the&&&&following pseudocode when FooList is used:&&&&&&&&start()&&&&for (prev = head; cur = next(prev); prev = &cur) {&&&&    visit(&cur->value)&&&&}&&&&&&&&Note that these semantics (advance before visit) requires that&&&&the first call to next() return the list head, while all other&&&&calls return the next element of the list; that is, every visitor&&&&implementation is required to track extra state to decide whether&&&&to return the input as-is, or to advance.  It also requires an&&&&argument of 'GenericList **' to next(), solely because the first&&&&iteration might need to modify the caller's GenericList head, so&&&&that all other calls have to do a layer of dereferencing.&&&&&&&&Thankfully, we only have two uses of list visits in the entire&&&&code base: one in spapr_drc (which completely avoids&&&&visit_next_list(), feeding in integers from a different source&&&&than uint8List), and one in qapi-visit.py.  That is, all other&&&&list visitors are generated in qapi-visit.c, and share the same&&&&paradigm based on a qapi FooList type, so we can refactor how&&&&lists are laid out with minimal churn among clients.&&&&&&&&We can greatly simplify things by hoisting the special case&&&&into the start() routine, and flipping the order in the loop&&&&to visit before advance:&&&&&&&&start(head)&&&&for (tail = *head; tail; tail = next(tail)) {&&&&    visit(&tail->value)&&&&}&&&&&&&&With the simpler semantics, visitors have less state to track,&&&&the argument to next() is reduced to 'GenericList *', and it&&&&also becomes obvious whether an input visitor is allocating a&&&&FooList during visit_start_list() (rather than the old way of&&&&not knowing if an allocation happened until the first&&&&visit_next_list()).  As a minor drawback, we now allocate in&&&&two functions instead of one, and have to pass the size to&&&&both functions (unless we were to tweak the input visitors to&&&&cache the size to start_list for reuse during next_list, but&&&&that defeats the goal of less visitor state).&&&&&&&&The signature of visit_start_list() is chosen to match&&&&visit_start_struct(), with the new parameters after 'name'.&&&&&&&&The spapr_drc case is a virtual visit, done by passing NULL for&&&&list, similarly to how NULL is passed to visit_start_struct()&&&&when a qapi type is not used in those visits.  It was easy to&&&&provide these semantics for qmp-output and dealloc visitors,&&&&and a bit harder for qmp-input (several prerequisite patches&&&&refactored things to make this patch straightforward).  But it&&&&turned out that the string and opts visitors munge enough other&&&&state during visit_next_list() to make it easier to just&&&&document and require a GenericList visit for now; an assertion&&&&will remind us to adjust things if we need the semantics in the&&&&future.&&&&&&&&Several pre-requisite cleanup patches made the reshuffling of&&&&the various visitors easier; particularly the qmp input visitor.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1461879932-9020-24-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0, ipmi: remove IPMI_CHECK_RESERVATION() macro Some IPMI command handlers in the BMC simulator use a macro&&&&IPMI_CHECK_RESERVATION() to check a SDR reservation but the macro&&&&implicitly uses local variables. This patch simply removes it.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@fr.ibm.com>&&&&Acked-by: Corey Minyard <cminyard@mvista.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, acpi: add aml_create_field() It will be used by nvdimm acpi&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," block: Remove dirty bitmaps from bdrv_move_feature_fields() This patch changes dirty bitmaps from following a BlockBackend in graph&&&&changes to sticking with the node they were created at. For the full&&&&discussion, read the following mailing list thread:&&&&&&&&  [Qemu-block] block: Dirty bitmaps and COR in bdrv_move_feature_fields()&&&&  https://lists.nongnu.org/archive/html/qemu-block/2016-02/msg00745.html&&&&&&&&In summary, the justification for this change is:&&&&&&&&* When moving the dirty bitmap to the top of the tree was introduced in&&&&  bdrv_append() in commit a9fc4408, it didn't actually have any effect&&&&  because there could never be a bitmap in use when bdrv_append() was&&&&  called (op blockers would prevent this). This is still true today for&&&&  all internal uses of dirty bitmaps.&&&&&&&&* Support for user-defined dirty bitmaps was introduced in 2.4, but we&&&&  discouraged users from using it because we didn't consider it ready&&&&  yet.&&&&&&&&  Moreover, in 2.5, the bdrv_swap() removal introduced a bug that left&&&&  dangling pointers if a dirty bitmap was present (the anchors of the&&&&  dirty bitmap were swapped, but the back link in the first element&&&&  wasn't updated), so it didn't even work correctly.&&&&&&&&* block-dirty-bitmap-add takes an arbitrary node name, even if no&&&&  BlockBackend is attached. This suggests that it is a node level&&&&  operation and not a BlockBackend one. Consequently, there is no reason&&&&  for dirty bitmaps to stay with a BlockBackend that was attached to the&&&&  node they were created for.&&&&&&&&* It was suggested that block-dirty-bitmap-add could track the node if a&&&&  node name was specified, and track the BlockBackend if the device name&&&&  was specified. This would however be inconsistent with other QMP&&&&  commands. Commands that accept both device and node names currently&&&&  interpret the device name just as an alias for the current root node&&&&  of that BlockBackend.&&&&&&&&* Dirty bitmaps have a name that is only unique amongst the bitmaps in a&&&&  specific node. Moving bitmaps could lead to name clashes. Automatic&&&&  renaming would involve too much magic.&&&&&&&&* Persistent bitmaps are stored in a specific node. Moving them around&&&&  automatically might be at least surprising, but it would probably also&&&&  become a real problem because that would have to happen atomically&&&&  without the management tool knowing of the operation.&&&&&&&&At the end of the day it seems to be very clear that it was a mistake to&&&&include dirty bitmaps in bdrv_move_feature_fields(). The functionality&&&&of moving bitmaps and/or attaching them to a BlockBackend instead will&&&&probably be needed, but it should be done with a new explicit QMP&&&&command or option.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," ivshmem: Clean up MSI-X conditions There are three predicates related to MSI-X:&&&&&&&&* ivshmem_has_feature(s, IVSHMEM_MSI) is true unless the non-MSI-X&&&&  variant of the device is selected with msi=off.&&&&&&&&* msix_present() is true when the device has the PCI capability MSI-X.&&&&  It's initially false, and becomes true during successful realize of&&&&  the MSI-X variant of the device.  Thus, it's the same as&&&&  ivshmem_has_feature(s, IVSHMEM_MSI) for realized devices.&&&&&&&&* msix_enabled() is true when msix_present() is true and guest software&&&&  has enabled MSI-X.&&&&&&&&Code that differs between the non-MSI-X and the MSI-X variant of the&&&&device needs to be guarded by ivshmem_has_feature(s, IVSHMEM_MSI) or&&&&by msix_present(), except the latter works only for realized devices.&&&&&&&&Code that depends on whether MSI-X is in use needs to be guarded with&&&&msix_enabled().&&&&&&&&Code review led me to two minor messes:&&&&&&&&* ivshmem_vector_notify() calls msix_notify() even when&&&&  !msix_enabled(), unlike most other MSI-X-capable devices.  As far as&&&&  I can tell, msix_notify() does nothing when !msix_enabled().  Add&&&&  the guard anyway.&&&&&&&&* Most callers of ivshmem_use_msix() guard it with&&&&  ivshmem_has_feature(s, IVSHMEM_MSI).  Not necessary, because&&&&  ivshmem_use_msix() does nothing when !msix_present().  That's&&&&  ivshmem's only use of msix_present(), though.  Guard it&&&&  consistently, and drop the now redundant msix_present() check.&&&&  While there, rename ivshmem_use_msix() to ivshmem_msix_vector_use().&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1458066895-20632-20-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& "
0," s390x/css: Use static initialization for channel_subsys fields machine_init() will be gone, but we don't need it if we just&&&&initialize the channel_subsys fields statically.&&&&&&&&Cc: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Cc: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Cc: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-Id: <1455656347-29033-4-git-send-email-ehabkost@redhat.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&[adapted on top of indicator changes]&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," pcie_aer: expose pcie_aer_msg() interface For vfio device, we need to propagate the aer error to&&&&Guest OS. we use the pcie_aer_msg() to send aer error&&&&to guest.&&&&&&&&Signed-off-by: Chen Fan <chen.fan.fnst@cn.fujitsu.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," balloon: Use only 'pc-dimm' type dimm for ballooning For now there are only two dimm's: pc-dimm and nvdimm. This patch is&&&&actually needed to disable ballooning on nvdimm. But, to avoid future&&&&bugs, instead of disallowing nvdimm, we allow only pc-dimm. So, if&&&&someone adds new dimm which should be balloon-able, then this ability&&&&should be explicitly specified here.&&&&&&&&Why ballooning for nvdimm should be disabled for now:&&&&&&&&NVDIMM for now is planned to use as a backing store for DAX filesystem&&&&in the guest and thus this memory is excluded from guest memory&&&&management and LRUs.&&&&&&&&In this case libvirt running QEMU along with configured balloon almost&&&&immediately inflates balloon and effectively kill the guest as&&&&qemu counts nvdimm as part of the ram.&&&&&&&&Counting dimm devices as part of the ram for ballooning was started from&&&&commit 463756d03:&&&& virtio-balloon: Fix balloon not working correctly when hotplug memory&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," vhost: simplify vhost_needs_vring_endian() After the call to virtio_vdev_has_feature(), we only care for legacy&&&&devices, so we don't need the extra check in virtio_is_big_endian().&&&&&&&&Also the device_endian field is always set (VIRTIO_DEVICE_ENDIAN_UNKNOWN&&&&may only happen on a virtio_load() path that cannot lead here), so we&&&&don't need the assert() either.&&&&&&&&This open codes the device_endian checking in vhost_needs_vring_endian().&&&&It also adds a comment to explain the logic, as recent reviews showed the&&&&cross-endian tweaks aren't that obvious.&&&&&&&&Signed-off-by: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," char: fix handling of QIO_CHANNEL_ERR_BLOCK If io_channel_send_full gets QIO_CHANNEL_ERR_BLOCK it&&&&and has already sent some of the data, it should return&&&&that amount of data, not EAGAIN, as that would cause&&&&the caller to re-try already sent data.&&&&&&&&Unfortunately due to a previous rebase conflict resolution&&&&error, the code for dealing with this was in the wrong&&&&part of the conditional, and so mistakenly ran on other&&&&I/O errors.&&&&&&&&This be seen running&&&&&&&&   qemu-system-x86_64 -monitor stdio&&&&&&&&and entering 'info mtree', when running on a slow console&&&&(eg a slow remote ssh session). The monitor would get into&&&&an indefinite loop writing the same data until it managed&&&&to send it all without getting EAGAIN.&&&&&&&&Reported-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1455288410-27046-1-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," nbd: always query export list in fixed new style protocol With the new style protocol, the NBD client will currenetly&&&&send NBD_OPT_EXPORT_NAME as the first (and indeed only)&&&&option it wants. The problem is that the NBD protocol spec&&&&does not allow for returning an error message with the&&&&NBD_OPT_EXPORT_NAME option. So if the server mandates use&&&&of TLS, the client will simply see an immediate connection&&&&close after issuing NBD_OPT_EXPORT_NAME which is not user&&&&friendly.&&&&&&&&To improve this situation, if we have the fixed new style&&&&protocol, we can sent NBD_OPT_LIST as the first option&&&&to query the list of server exports. We can check for our&&&&named export in this list and raise an error if it is not&&&&found, instead of going ahead and sending NBD_OPT_EXPORT_NAME&&&&with a name that we know will be rejected.&&&&&&&&This improves the error reporting both in the case that the&&&&server required TLS, and in the case that the client requested&&&&export name does not exist on the server.&&&&&&&&If the server does not support NBD_OPT_LIST, we just ignore&&&&that and carry on with NBD_OPT_EXPORT_NAME as before.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1455129674-17255-12-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," sd: limit 'req.cmd' while using as an array index While processing standard SD commands, the 'req.cmd' value could&&&&lead to OOB read when used as an index into 'sd_cmd_type' or&&&&'sd_cmd_class' arrays. Limit 'req.cmd' value to avoid such an&&&&access.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1453315857-1352-1-git-send-email-ppandit@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," .travis.yml: run make check for all matrix targets We only ran make check once before it used to be an unreliable target.&&&&It was only a stop gap measure and we should be able to revert it now.&&&&This also stops us needing a large all-MMU build.&&&&&&&&We disable ""make check"" for a couple of the extra config targets which&&&&are currently broken.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Tested-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, target-arm: Rename check_s2_startlevel to check_s2_mmu_setup Rename check_s2_startlevel to check_s2_mmu_setup in preparation&&&&for additional checks.&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-id: 1453932970-14576-3-git-send-email-edgar.iglesias@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," get_maintainer.pl: fall back to git if only lists are found It's not 100% obvious to project newcomers that all patches should be sent&&&&there; checkpatch doesn't say so, and since it mentions other lists to CC,&&&&the wording ""the list"" from the SubmitAPatch wiki page can be taken&&&&to mean only those lists, not the main list too.  We would like therefore&&&&to add a catch-all entry for qemu-devel@nongnu.org.&&&&&&&&On its own, this would break fallback to git, because now every file&&&&has a maintainer of sorts.  Modify get_maintainer.pl so that mailing&&&&lists (L: lines) no longer prevent the fallback, only humans (M:&&&&entries).&&&&&&&&Several pre-existing entries have a list but no human.  These now&&&&fall back to git.  That's a feature.&&&&&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Markus Armbruster <armbru@redhat.com>&&&&Cc: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Stephen Warren <swarren@wwwdotorg.org>&&&&Message-Id: <1454987065-12961-1-git-send-email-swarren@wwwdotorg.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, intel_iommu: large page support Current intel_iommu only supports 4K page which may not be sufficient&&&&to cover guest working set. This patch tries to enable 2M and 1G mapping&&&&for intel_iommu. This is also useful for future device IOTLB&&&&implementation to have a better hit rate.&&&&&&&&Major work is adding a page mask field on IOTLB entry to make it&&&&support large page. And also use the slpte level as key to do IOTLB&&&&lookup. MAMV was increased to 18 to support direct invalidation for 1G&&&&mapping.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Cc: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," 9pfs: rename virtio-9p-coth.{c,h} to coth.{c,h} Those two files are not virtio specific. Rename them to use generic&&&&names.&&&&&&&&Fix includes in various C files. Change define guards and comments in&&&&header files.&&&&&&&&Signed-off-by: Wei Liu <wei.liu2@citrix.com>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& "
0," iotests: 034: Use TEST_IMG override instead of ""mv"" Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1450752561-9300-7-git-send-email-famz@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0, vmdk: Clean up control flow in vmdk_parse_extents() a bit Factor out loop stepping to turn a while-loop with goto into a&&&&for-loop with continue.&&&&&&&&Cc: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Message-Id: <1450452927-8346-18-git-send-email-armbru@redhat.com>&&&& 
0," scripts/kvm/kvm_stat: Fixup filtering When filtering, the group leader event should not be disabled, as all&&&&other events under it will also be disabled. Also we should make sure&&&&that values from disabled fields will not be displayed.&&&&&&&&This also filters the fields from the log and batch output for better&&&&readability.&&&&&&&&Also the drilldown update now directly checks for the stats' field&&&&filter and (un)sets drilldown accordingly.&&&&&&&&Signed-off-by: Janosch Frank <frankja@linux.vnet.ibm.com>&&&&Message-Id: <1452525484-32309-33-git-send-email-frankja@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," io: bind to loopback IP addrs in test suite The test suite currently binds to 0.0.0.0 or ::, which covers&&&&all interfaces of the machine. It is bad practice for test&&&&suite to open publically accessible ports on a machine, so&&&&switch to use loopback addrs 127.0.0.1 or ::1.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
0," main-loop: suppress warnings under qtest commit 01c22f2cdd4fcf02276ea10f48253850a5fd7259 (""main-loop: Suppress&&&&""I/O thread spun"" warnings for qtest"") doesn't actually disable the&&&&warning for everyone since some tests don't run under the qtest&&&&accelerator.&&&&&&&&Check qtest_driver instead.&&&&&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Message-Id: <1448882964-22433-1-git-send-email-mst@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-i386/hyperv: Hyper-V SynIC SINT routing and vcpu exit Hyper-V SynIC(synthetic interrupt controller) helpers for&&&&Hyper-V SynIC irq routing setup, irq injection, irq ack&&&&notifications event/message pages changes tracking for future use.&&&&&&&&Signed-off-by: Andrey Smetanin <asmetanin@virtuozzo.com>&&&&Reviewed-by: Roman Kagan <rkagan@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Richard Henderson <rth@twiddle.net>&&&&CC: Eduardo Habkost <ehabkost@redhat.com>&&&&CC: ""Andreas F盲rber"" <afaerber@suse.de>&&&&CC: Marcelo Tosatti <mtosatti@redhat.com>&&&&CC: Roman Kagan <rkagan@virtuozzo.com>&&&&CC: Denis V. Lunev <den@openvz.org>&&&&CC: kvm@vger.kernel.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," tests/guest-debug: introduce basic gdbstub tests The aim of these tests is to combine with an appropriate kernel&&&&image (with symbol-file vmlinux) and check it behaves as it should.&&&&Given a kernel it checks:&&&&&&&&  - single step&&&&  - software breakpoint&&&&  - hardware breakpoint&&&&  - access, read and write watchpoints&&&&&&&&On success it returns 0 to the calling process.&&&&&&&&I've not plumbed this into the ""make check"" logic though as we need a&&&&solution for providing non-host binaries to the tests. However the test&&&&is structured to work with pretty much any Linux kernel image as it&&&&uses the basic kernel_init code which is common across architectures.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-id: 1449599553-24713-7-git-send-email-alex.bennee@linaro.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," ui/cocoa.m: Prevent activation clicks from going to guest When QEMU is brought to the foreground, the click event that activates QEMU&&&&should not go to the guest. Accidents happen when they do go to the guest&&&&without giving the user a chance to handle them. In particular, if the&&&&guest input device is not an absolute-position one then the location of&&&&the guest cursor (and thus the click) will likely not be the location of&&&&the host cursor when it is clicked, and could be completely obscured&&&&below another window. Don't send mouse clicks to QEMU unless the&&&&window either has focus or has grabbed mouse events.&&&&&&&&Reported-by: John Arbuckle <programmingkidx@gmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: John Arbuckle <programmingkidx@gmail.com>&&&&Message-id: 1448551168-13196-1-git-send-email-peter.maydell@linaro.org&&&& "
0," hw/ppc/ppc405_boards: Fix infinite recursion by converting taihu_cpld from old_mmio The taihu_cpld_writel() function had an obvious typo that meant that&&&&if it was ever called it would go into an infinite recursion. Newer&&&&versions of clang will detect and warn about this:&&&&  hw/ppc/ppc405_boards.c:481:1: warning: all paths through this function will call itself [-Winfinite-recursion]&&&&&&&&Fix this by converting taihu_cpld from the legacy old_mmio accessors&&&&to new-style ones, with an impl {} declaration to cause the core&&&&memory code to do the splitting of 16 bit and 32 bit accesses into&&&&multiple 8-bit accesses.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," target-i386: kvm: Abort if MCE bank count is not supported by host Instead of silently changing the number of banks in mcg_cap based&&&&on kvm_get_mce_cap_supported(), abort initialization if the host&&&&doesn't support MCE_BANKS_DEF banks.&&&&&&&&Note that MCE_BANKS_DEF was always 10 since it was introduced in&&&&QEMU, and Linux always returned 32 at KVM_CAP_MCE since&&&&KVM_CAP_MCE was introduced, so no behavior is being changed and&&&&the error can't be triggered by any Linux version. The point of&&&&the new check is to ensure we won't silently change the bank&&&&count if we change MCE_BANKS_DEF or make the bank count&&&&configurable in the future.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&[Avoid Yoda condition and \n at end of error_report. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1448471956-66873-8-git-send-email-pbonzini@redhat.com>&&&& "
0," s390x/pci: fix up IOMMU size Present code uses @size==UINT64_MAX to initialize IOMMU. It infers that it&&&&can map any 64-bit IOVA whatsoever. But in fact, the largest DMA range for&&&&each PCI Device on s390x is from ZPCI_SDMA_ADDR to ZPCI_EDMA_ADDR. The largest&&&&value is returned from hardware, which is to indicate the largest range&&&&hardware can support. But the real IOMMU size for specific PCI Device is&&&&obtained once qemu intercepts mpcifc instruction that guest is requesting a&&&&DMA range for that PCI Device. Therefore, before intercepting mpcifc instruction,&&&&qemu cannot be aware of the size of IOMMU region that guest will use.&&&&&&&&Moreover, iommu replay during device initialization for the whole region in&&&&4k steps takes a very long time.&&&&&&&&In conclusion, this patch intializes IOMMU region for each PCI Device when&&&&intercept mpcifc instruction which is to register DMA range for the PCI Device.&&&&And then, destroy IOMMU region when guest wants to deregister IOAT.&&&&&&&&Signed-off-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," qga: Better mapping of SEEK_* in guest-file-seek Exposing OS-specific SEEK_ constants in our qapi was a mistake&&&&(if the host has SEEK_CUR as 1, but the guest has it as 2, then&&&&the semantics are unclear what should happen); if we had a time&&&&machine, we would instead expose only a symbolic enum.  It's too&&&&late to change the fact that we have an integer in qapi, but we&&&&can at least document what mapping we want to enforce for all&&&&qga clients (and luckily, it happens to be the mapping that both&&&&Linux and Windows use); then fix the code to match that mapping.&&&&It also helps us filter out unsupported SEEK_DATA and SEEK_HOLE.&&&&&&&&In the future, we may wish to move our QGA_SEEK_* constants into&&&&qga/qapi-schema.json, along with updating the schema to take an&&&&alternate type (either the integer, or the string value of the&&&&enum name) - but that's too much risk during hard freeze.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0," makefile: fix qemu-ga make install for --disable-tools ab59e3e introduced a fix for `make install` on w32 that involved&&&&filtering out qemu-ga from $TOOLS install recipe so that we could&&&&append $(EXESUF) to it before attempting to install the binary&&&&via install-prog function.&&&&&&&&install-prog takes a list of binaries to install to a particular&&&&directory. If the list is empty it breaks. We guard against this&&&&by ensuring $TOOLS is not empty prior to calling.&&&&&&&&However, ab59e3e introduces extra filtering after this check which&&&&can still result on us attempting to call install-prog with an&&&&empty list of binaries. In particular, this occurs if we&&&&build with the --disable-tools configure option, which results&&&&in qemu-ga being the only member of $TOOLS.&&&&&&&&Fix this by doing a simple s/qemu-ga/qemu-ga$(EXESUF)/ pass through&&&&$TOOLS instead of filtering out qemu-ga to handle it seperately.&&&&&&&&Reported-by: Steve Ellcey <sellcey@imgtec.com>&&&&Cc: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0, disas/arm: avoid clang shifting negative signed warning clang 3.7.0 on x86_64 warns about the following:&&&&&&&&  disas/arm.c:1782:17: warning: shifting a negative signed value is undefined [-Wshift-negative-value]&&&&    imm |= (-1 << 7);&&&&            ~~ ^&&&&&&&&Note that this patch preserves the tab indent in this source file&&&&because the surrounding code still uses tabs.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," target-mips: Fix exceptions while UX=0 Commit 01f728857941 (""target-mips: Status.UX/SX/KX enable 32-bit address&&&&wrapping"") added a new hflag MIPS_HFLAG_AWRAP, which indicates that&&&&64-bit addressing is disallowed in the current mode, so hflag users&&&&don't need to worry about the complexities of working that out, for&&&&example checking both MIPS_HFLAG_KSU and MIPS_HFLAG_UX.&&&&&&&&However when exceptions are taken outside of exception level,&&&&mips_cpu_do_interrupt() manipulates the env->hflags directly rather than&&&&using compute_hflags() to update them, and this code wasn't updated&&&&accordingly. As a result, when UX is cleared, MIPS_HFLAG_AWRAP is set,&&&&but it doesn't get cleared on entry back into kernel mode due to an&&&&exception. Kernel mode then cannot access the 64-bit segments resulting&&&&in a nested exception loop. The same applies to errors and debug&&&&exceptions.&&&&&&&&Fix by updating mips_cpu_do_interrupt() to clear the MIPS_HFLAG_WRAP&&&&flag when necessary, according to compute_hflags().&&&&&&&&Fixes: 01f728857941 (""target-mips: Status.UX/SX/KX enable 32-bit..."")&&&&Signed-off-by: James Hogan <james.hogan@imgtec.com>&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
0," qom: Replace object property list with GHashTable ARM GICv3 systems with large number of CPUs create lots of IRQ pins. Since&&&&every pin is represented as a property, number of these properties becomes&&&&very large. Every property add first makes sure there's no duplicates.&&&&Traversing the list becomes very slow, therefore QEMU initialization takes&&&&significant time (several seconds for e. g. 16 CPUs).&&&&&&&&This patch replaces list with GHashTable, making lookup very fast. The only&&&&drawback is that object_child_foreach() and object_child_foreach_recursive()&&&&cannot add or remove properties during traversal, since GHashTableIter does&&&&not have modify-safe version. However, the code seems not to modify objects&&&&via these functions.&&&&&&&&Signed-off-by: Pavel Fedin <p.fedin@samsung.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Tested-by: Pavel Fedin <p.fedin@samsung.com>&&&&[AF: Fixed object_property_del_{all,child}() issues;&&&&     g_hash_table_contains() -> g_hash_table_lookup(), suggested by Daniel]&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," arm: highbank: Implement PSCI and dummy monitor Firstly, enable monitor mode and PSCI, both of which are features of&&&&this board.&&&&&&&&In addition to PSCI, this board also uses SMC for cache maintenance&&&&ops. This means we need a secure monitor to catch these and nop them.&&&&Use the ARM boot board-setup feature to implement this. The SMC trap&&&&implements the needed nop while all other traps will pen the CPU.&&&&&&&&As a KVM CPU cannot run in secure mode, do not do the board-setup if&&&&not running TCG. Report a warning explaining the limitation in this&&&&case.&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Crosthwaite <crosthwaite.peter@gmail.com>&&&&Message-id: 0fd0d12f0fa666c86616c89447861a70dbe27312.1447007690.git.crosthwaite.peter@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, replay: initialization and deinitialization This patch introduces the functions for enabling the record/replay and for&&&&freeing the resources when simulator closes.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20150917162507.8676.90232.stgit@PASHA-ISP.def.inno>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&& 
0," aio: Introduce aio-epoll.c To minimize code duplication, epoll is hooked into aio-posix's&&&&aio_poll() instead of rolling its own. This approach also has both&&&&compile-time and run-time switchability.&&&&&&&&1) When QEMU starts with a small number of fds in the event loop, ppoll&&&&is used.&&&&&&&&2) When QEMU starts with a big number of fds, or when more devices are&&&&hot plugged, epoll kicks in when the number of fds hits the threshold.&&&&&&&&3) Some fds may not support epoll, such as tty based stdio. In this&&&&case, it falls back to ppoll.&&&&&&&&A rough benchmark with scsi-disk on virtio-scsi dataplane (epoll gets&&&&enabled from 64 onward). Numbers are in MB/s.&&&&&&&&===============================================&&&&             |     master     |     epoll&&&&             |                |&&&&scsi disks # | read    randrw | read    randrw&&&&-------------|----------------|----------------&&&&1            | 86      36     | 92      45&&&&8            | 87      43     | 86      41&&&&64           | 71      32     | 70      38&&&&128          | 48      24     | 58      31&&&&256          | 37      19     | 57      28&&&&===============================================&&&&&&&&To comply with aio_{disable,enable}_external, we always use ppoll when&&&&aio_external_disabled() is true.&&&&&&&&[Removed #ifdef CONFIG_EPOLL around AioContext epollfd field declaration&&&&since the field is also referenced outside CONFIG_EPOLL code.&&&&--Stefan]&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1446177989-6702-4-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," backends/hostmem-file: Allow to specify full pathname for backing file This allows to explicitly specify file name to use with the backend. This&&&&is important when using it together with ivshmem in order to make it backed&&&&by hugetlbfs. By default filename is autogenerated using mkstemp(), and the&&&&file is unlink()ed after creation, effectively making it anonymous. This is&&&&not very useful with ivshmem because it ends up in a memory which cannot be&&&&accessed by something else.&&&&&&&&Distinction between directory and file name is done by stat() check. If an&&&&existing directory is given, the code keeps old behavior. Otherwise it&&&&creates or opens a file with the given pathname.&&&&&&&&Signed-off-by: Pavel Fedin <p.fedin@samsung.com>&&&&Tested-by: Igor Skalkin <i.skalkin@samsung.com>&&&&Message-Id: <004301d11166$9672fe30$c358fa90$@samsung.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ivshmem: initialize max_peer to -1 There is no peer when device is initialized, do not let doorbell for&&&&inexisting peer 0.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Claudio Fontana <claudio.fontana@huawei.com>&&&& "
0, vhost-user-test: remove useless static check Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Tested-by: Thibaut Collet <thibaut.collet@6wind.com>&&&& 
0," pc: memhp: do not emit inserting event for coldplugged DIMMs currently acpi_memory_plug_cb() sets is_inserting for&&&&cold- and hot-plugged DIMMs as result ASL MHPD.MSCN()&&&&method issues device check even for every coldplugged&&&&DIMM. There isn't much harm in it but if we try to&&&&unplug such DIMM, OSPM will issue device check&&&&intstead of device eject event. So OSPM won't eject&&&&memory module as expected and it will try to eject it&&&&only when another memory device is hot-(un)plugged.&&&&&&&&As a fix do not set 'is_inserting' event and do not&&&&issue SCI for cold-plugged DIMMs as they are&&&&enumerated and activated by OSPM during guest's boot.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
0, configure: probe for memfd Check if memfd_create() is part of system libc.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Tested-by: Thibaut Collet <thibaut.collet@6wind.com>&&&& 
0," hw/arm/virt: don't use a15memmap directly We should always go through VirtBoardInfo when we need the memmap.&&&&To avoid using a15memmap directly, in this case, we need to defer&&&&the max-cpus check from class init time to instance init time. In&&&&class init we now use MAX_CPUMASK_BITS for max_cpus initialization,&&&&which is the maximum QEMU supports, and also, incidentally, the&&&&maximum KVM/gicv3 currently supports. Also, a nice side-effect of&&&&delaying the max-cpus check is that we now get more appropriate&&&&error messages for gicv2 machines that try to configure more than&&&&123 cpus. Before this patch it would complain that the requested&&&&number of cpus was greater than 123, but for gicv2 configs, it&&&&should complain that the number is greater than 8.&&&&&&&&Signed-off-by: Andrew Jones <drjones@redhat.com>&&&&Message-id: 1445189728-860-3-git-send-email-drjones@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," ui/cocoa.m: eliminate normalWindow warning Eliminate this warning associated with the setting of the normalWindow's title:&&&&&&&&ui/cocoa.m: In function '-[QemuCocoaAppController init]':&&&&ui/cocoa.m:888:9: warning: format not a string literal and no format arguments&&&& [-Wformat-security]&&&&         [normalWindow setTitle:[NSString stringWithFormat:@""QEMU""]];&&&&&&&&Signed-off-by: John Arbuckle <programmingkidx@gmail.com>&&&&Message-id: 57057D6E-C108-4AE1-8370-E7E6855B2F2C@gmail.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," virtio-ccw: feature bits > 31 handling We currently switch off the VERSION_1 feature bit if the guest has&&&&not negotiated at least revision 1. As no feature bits beyond 31 are&&&&valid however unless VERSION_1 has been negotiated, make sure that&&&&legacy guests never see a feature bit beyond 31.&&&&&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," target-tilegx: Decode ill pseudo-instructions Notice raise and bpt, decoding the constants embedded in the&&&&nop addil instruction in the x0 slot.&&&&&&&&[rth: Generalize TILEGX_EXCP_OPCODE_ILL to TILEGX_EXCP_SIGNAL.&&&&Drop validation of signal values.]&&&&&&&&Signed-off-by: Chen Gang <gang.chen.5i5j@gmail.com>&&&&Message-Id: <1443243635-4886-1-git-send-email-gang.chen.5i5j@gmail.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0, vfio/pci: Make interrupt bypass runtime configurable Tracing is more effective when we can completely disable all KVM&&&&bypass paths.  Make these runtime rather than build-time configurable.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& 
0," target-ppc: fix xscmpodp and xscmpudp decoding The xscmpodp and xscmpudp instructions only have the AX, BX bits in&&&&there encoding, the lowest bit (usually TX) is marked as an invalid&&&&bit. We therefore can't decode them with GEN_XX2FORM, which decodes&&&&the two lowest bit.&&&&&&&&Introduce a new form GEN_XX2FORM, which decodes AX and BX and mark&&&&the lowest bit as invalid.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Tested-by: Richard W.M. Jones <rjones@redhat.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," vfio/pci: Cleanup ROM blacklist quirk Create a vendor:device ID helper that we'll also use as we rework the&&&&rest of the quirks.  Re-reading the config entries, even if we get&&&&more blacklist entries, is trivial overhead and only incurred during&&&&device setup.  There's no need to typedef the blacklist structure,&&&&it's a static private data type used once.  The elements get bumped&&&&up to uint32_t to avoid future maintenance issues if PCI_ANY_ID gets&&&&used for a blacklist entry (avoiding an actual hardware match).  Our&&&&test loop is also crying out to be simplified as a for loop.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," target-sh4: improve shld instruction The SH4 shld instruction can shift in both direction, depending on the&&&&sign of the shift. This is currently implemented using branches, which&&&&is not really efficient and prevents the optimizer to do its job. In&&&&practice it is often used with a constant loaded in a register just&&&&before.&&&&&&&&Simplify the implementation by computing both the value shifted to the&&&&left and to the right, and then selecting the correct one with a&&&&movcond. As with a negative value the shift amount can go up to 32 which&&&&is undefined, we shift the value in two steps.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, qapi: Reject -p arguments that break qapi-event.py qapi-event.py breaks when you ask for a funny prefix like '@'.&&&&Protect it.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
0," qapi: Drop one of two ""simple union must not have base"" checks The first check ensures the second one can't trigger.  Drop the first&&&&one, because the second one is in a more logical place, and emits a&&&&nicer error message.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," target-arm/arm-semi.c: Implement A64 specific SyncCacheRange call The A64 semihosting ABI defines a new call SyncCacheRange&&&&for doing a 'clean D-cache and invalidate I-cache' sequence.&&&&Since QEMU doesn't implement caches, we can implement this as a nop.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Christopher Covington <christopher.covington@linaro.org>&&&&Tested-by: Christopher Covington <cov@codeaurora.org>&&&&Message-id: 1439483745-28752-8-git-send-email-peter.maydell@linaro.org&&&& "
0," Makefile.target: include top level build dir in vpath Using ccache with CCACHE_BASEDIR set to $(SRC_PATH) or a parent will&&&&rewrite all absolute paths to relative paths. This interacts poorly with&&&&QEMU's two-level build directory scheme. For example, lets say&&&&BUILD_DIR=$(SRC_PATH)/build so build/blockdev.d will contain:&&&&&&&&  blockdev.o: ../blockdev.c ../include/sysemu/block-backend.h \&&&&&&&&Now the target build under build/x86_64-softmmu or similar will depend&&&&on ../blockdev.o which in turn will get make to source ../blockdev.d to&&&&check its dependencies. Since make always considers paths relative to&&&&the current working directory rather than the makefile the path appeared&&&&in the relative path to ../blockdev.c is useless.&&&&&&&&This change simply adds the top level build directory to vpath so paths&&&&relative to the source directory, top build directory, and target build&&&&directory all work just fine.&&&&&&&&Signed-off-by: Michael Marineau <michael.marineau@coreos.com>&&&&Message-Id: <1439103775-11836-1-git-send-email-michael.marineau@coreos.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," qga: copy argument strings Following patch will return allocated strings, so we must correctly&&&&initialize alloc & free them. The nice side effect is that we no longer&&&&have to check for ""fixed_state_dir"" to call ga_install_service() with a&&&&NULL state dir. The default values are set after parsing the command&&&&line options.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Denis V. Lunev <den@openvz.org>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0," pcnet: Drop pcnet_can_receive pcnet_receive already checks the conditions and drop packets if false.&&&&Due to the new semantics since 6e99c63 (""net/socket: Drop&&&&net_socket_can_send""), having .can_receive returning 0 requires us to&&&&explicitly flush the queued packets when the conditions are becoming&&&&true, but queuing the packets when guest driver is not ready doesn't&&&&make much sense.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Message-id: 1436955553-22791-3-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," qemu-char: Fix missed data on unix socket Commit 812c1057 introduced HUP detection on unix and tcp sockets prior&&&&to a read in tcp_chr_read. This unfortunately broke CloudStack 4.2&&&&which relied on the old behaviour where data on a socket was readable&&&&even if a HUP was present.&&&&&&&&A working solution is to properly check the return values from recv,&&&&handling a closed socket once there is no more data to read.&&&&&&&&Also enable polling for G_IO_NVAL to ensure the callback is called&&&&for all possible events as these should now be possible to handle&&&&with the improved error detection.&&&&&&&&Signed-off-by: Nils Carlson <pyssling@ludd.ltu.se>&&&&Message-Id: <1437338396-22336-1-git-send-email-pyssling@ludd.ltu.se>&&&&[Do not handle EINTR; use socket_error(). - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," net: add missing ""netmap"" to host_net_devices[] Although hmp-commands.hx lists ""netmap"" as a valid host_net_add type,&&&&the command rejects it because it's missing from the list.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1432743412-15943-2-git-send-email-stefanha@redhat.com&&&& "
0," ich9: add TCO interface emulation This interface provides some registers within a 32-byte range and can be&&&&acessed through PCI-to-LPC bridge interface (PMBASE + 0x60).&&&&&&&&It's commonly used as a watchdog timer to detect system lockups through&&&&SMIs that are generated -- if TCO_EN bit is set -- on every timeout. If&&&&NO_REBOOT bit is not set in GCS (General Control and Status register),&&&&the system will be resetted upon second timeout if TCO_RLD register&&&&wasn't previously written to prevent timeout.&&&&&&&&This patch adds support to TCO watchdog logic and few other features&&&&like mapping NMIs to SMIs (NMI2SMI_EN bit), system intruder detection,&&&&etc. are not implemented yet.&&&&&&&&Signed-off-by: Paulo Alcantara <pcacjr@zytor.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, target-s390x: correctly initialize ext interrupt queue env->ext_index should be initialized to -1 to mark the external&&&&interrupt queue as emtpy. This should not be done in s390_cpu_initfn&&&&as all the interrupt fields are later reset to 0 by the memset in&&&&s390_cpu_initial_reset or s390_cpu_full_reset. Move the initialization&&&&there.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," main-loop: introduce qemu_mutex_iothread_locked This function will be used to avoid recursive locking of the iothread lock&&&&whenever address_space_rw/ld*/st* are called with the BQL held, which is&&&&almost always the case.&&&&&&&&Tracking whether the iothread is owned is very cheap (just use a TLS&&&&variable) but requires some care because now the lock must always be&&&&taken with qemu_mutex_lock_iothread().  Previously this wasn't the case.&&&&Outside TCG mode this is not a problem.  In TCG mode, we need to be&&&&careful and avoid the ""prod out of compiled code"" step if already&&&&in a VCPU thread.  This is easily done with a check on current_cpu,&&&&i.e. qemu_in_vcpu_thread().&&&&&&&&Hopefully, multithreaded TCG will get rid of the whole logic to kick&&&&VCPUs whenever an I/O event occurs!&&&&&&&&Cc: Frederic Konrad <fred.konrad@greensocs.com>&&&&Message-Id: <1434646046-27150-3-git-send-email-pbonzini@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, tcg/optimize: fold temp copies test in tcg_opt_gen_mov Each call to tcg_opt_gen_mov is preceeded by a test to check if the&&&&source and destination temps are copies. Fold that into the&&&&tcg_opt_gen_mov function.&&&&&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Message-Id: <1433447607-31184-4-git-send-email-aurelien@aurel32.net>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," arm: Add has-mpu property For processors that support MPUs, add a property to de-feature it. This&&&&is similar to the implementation of the EL3 feature.&&&&&&&&The processor definition in init sets ARM_FEATURE_MPU if it can support&&&&an MPU. post_init exposes the property, defaulting to true. If cleared&&&&by the instantiator, ARM_FEATURE_MPU is then removed at realize time.&&&&&&&&This is to support R profile processors that may or may-not have an MPU&&&&configured.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Message-id: 632918cc48786e868ea18aa6bd12f70597994cad.1434066412.git.peter.crosthwaite@xilinx.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," target-s390x: optimize (negative-) abs computation Now that movcond exists, it's easy to write (negative-) absolute value&&&&using TCG code instead of an helper.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," exec: only check relevant bitmaps for cleanliness Most of the time, not all bitmaps have to be marked as dirty;&&&&do not do anything if the interesting ones are already dirty.&&&&Previously, any clean bitmap would have cause all the bitmaps to be&&&&marked dirty.&&&&&&&&In fact, unless running TCG most of the time bitmap operations need&&&&not be done at all, because memory_region_is_logging returns zero.&&&&In this case, skip the call to cpu_physical_memory_range_includes_clean&&&&altogether as well.&&&&&&&&With this patch, cpu_physical_memory_set_dirty_range is called&&&&unconditionally, so there need not be anymore a separate call to&&&&xen_modified_memory.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, virtio-ccw: introduce ccw specific queue limit Cc: Alexander Graf <agraf@suse.de>&&&&Cc: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Cc: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, block/parallels: rename catalog_ names to bat_ BAT means 'block allocation table'. Thus this name is clean and shorter&&&&on writing.&&&&&&&&Some obvious formatting fixes in the old code were made to make checkpatch&&&&happy.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Roman Kagan <rkagan@parallels.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Roman Kagan <rkagan@parallels.com>&&&&Message-id: 1430207220-24458-15-git-send-email-den@openvz.org&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, spapr_pci: Make find_phb()/find_dev() public This makes find_phb()/find_dev() public and changed its names&&&&to spapr_pci_find_phb()/spapr_pci_find_dev() as they are going to&&&&be used from other parts of QEMU such as VFIO DDW (dynamic DMA window)&&&&or VFIO PCI error injection or VFIO EEH handling - in all these&&&&cases there are RTAS calls which are addressed to BUID+config_addr&&&&in IEEE1275 format.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," qapi: Check for member name conflicts with a base class Our type inheritance for both 'struct' and for flat 'union' merges&&&&key/value pairs from the base class with those from the type in&&&&question.  Although the C code currently boxes things so that there&&&&is a distinction between which member is referred to, the QMP wire&&&&format does not allow passing a key more than once in a single&&&&object.  Besides, if we ever change the generated C code to not be&&&&quite so boxy, we'd want to avoid duplicate member names there,&&&&too.&&&&&&&&Fix a testsuite entry added in an earlier patch, as well as adding&&&&a couple more tests to ensure we have appropriate coverage.  Ensure&&&&that collisions are detected, regardless of whether there is a&&&&difference in opinion on whether the member name is optional.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," qapi: Require ASCII in schema Python 2 and Python 3 have a wild history of whether strings&&&&default to ascii or unicode, where Python 3 requires checking&&&&isinstance(foo, basestr) to cover all strings, but where that&&&&code is not portable to Python 2.  It's simpler to just state&&&&that we don't care about Unicode strings, and to just always&&&&use the simpler isinstance(foo, str) everywhere.&&&&&&&&I'm no python expert, so I'm basing it on this conversation:&&&&https://lists.gnu.org/archive/html/qemu-devel/2014-09/msg05278.html&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0, exec: Protect map_client_list with mutex So that accesses from multiple threads are safe.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-Id: <1426496617-10702-4-git-send-email-famz@redhat.com>&&&&[Remove #if from cpu_exec_init_all. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," qapi: Segregate anonymous unions into alternates in generator Special-casing 'discriminator == {}' for handling anonymous unions&&&&is getting awkward; since this particular type is not always a&&&&dictionary on the wire, it is easier to treat it as a completely&&&&different class of type, ""alternate"", so that if a type is listed&&&&in the union_types array, we know it is not an anonymous union.&&&&&&&&This patch just further segregates union handling, to make sure that&&&&anonymous unions are not stored in union_types, and splitting up&&&&check_union() into separate functions.  A future patch will change&&&&the qapi grammar, and having the segregation already in place will&&&&make it easier to deal with the distinct meta-type.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," qapi: Require valid names Previous commits demonstrated that the generator overlooked various&&&&bad naming situations:&&&&- types, commands, and events need a valid name&&&&- enum members must be valid names, when combined with prefix&&&&- union and alternate branches cannot be marked optional&&&&&&&&Valid upstream names match [a-zA-Z][a-zA-Z0-9_-]*; valid downstream&&&&names match __[a-zA-Z][a-zA-Z0-9._-]*.  Enumerations match the&&&&weaker [a-zA-Z0-9._-]+ (in part thanks to QKeyCode picking an enum&&&&that starts with a digit, which we can't change now due to&&&&backwards compatibility).  Rather than call out three separate&&&&regex, this patch just uses a broader combination that allows both&&&&upstream and downstream names, as well as a small hack that&&&&realizes that any enum name is merely a suffix to an already valid&&&&name prefix (that is, any enum name is valid if prepending _ fits&&&&the normal rules).&&&&&&&&We could reject new enumeration names beginning with a digit by&&&&whitelisting existing exceptions.  We could also be stricter&&&&about the distinction between upstream names (no leading&&&&underscore, no use of dot) and downstream (mandatory leading&&&&double underscore), but it is probably not worth the bother.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0, xen-pt: fix Negative array index read Coverity spot:&&&&Function xen_pt_bar_offset_to_index() may return a negative&&&&value (-1) which is used as an index to d->io_regions[] down&&&&the line.&&&&&&&&Let's pass index directly as an argument to&&&&xen_pt_bar_reg_parse().&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0, pc: pcihp: expose MMIO base and len as properties it will be used later to dynamically reserve MMIO region&&&&instead of manually punching holes in PCI0._CRS&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," target-ppc: force update of msr bits in cpu_post_load Since env->msr has already been restored by the time cpu_post_load is called,&&&&make sure that ppc_store_msr() is explicitly called with all msr bits except&&&&MSR_TGPR marked as invalid.&&&&&&&&This solves the issue where MSR flags aren't set correctly when restoring a VM&&&&snapshot, in particular the internal env->excp_prefix value when MSR_EP has&&&&been altered by a guest.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," target-arm: fix get_phys_addr_v6/SCTLR_AFE access check Introduce simple_ap_to_rw_prot(), which has the same behavior as&&&&ap_to_rw_prot(), but takes the 2-bit simple AP[2:1] instead of&&&&the 3-bit AP[2:0]. Use this in get_phys_addr_v6 when SCTLR_AFE&&&&is set, as that bit indicates we should be using the simple AP&&&&format.&&&&&&&&It's unlikely this path is getting used. I don't see CR_AFE&&&&getting used by Linux, so possibly not. If it had been, then&&&&the check would have been wrong for all but AP[2:1] = 0b11.&&&&Anyway, this should fix it up, in case it ever does get used.&&&&&&&&Signed-off-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1426099139-14463-3-git-send-email-drjones@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, virtio: add feature checking helpers Add a helper function for checking whether a bit is set in the guest&&&&features for a vdev as well as one that works on a feature bit set.&&&&&&&&Convert code that open-coded this: It cleans up the code and makes it&&&&easier to extend the guest feature bits.&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," acpi-build: fix ACPI RAM management This fixes multiple issues around ACPI RAM management:&&&&&&&&RSDP and linker RAM aren't currently marked dirty&&&&on update, so they won't be migrated correctly.&&&&&&&&Let's handle all tables in the same way: set correct size (assert if&&&&too big), update, mark RAM dirty.&&&&&&&&This also drops assert checking that table size didn't change: table&&&&size is fundamentally dynamic and depends on hw configuration,&&&&just set the correct size and use that (memory core asserts if size is&&&&too large).&&&&&&&&This also means we can drop tracking table size, memory core does this&&&&for us now.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
0," virtio: feature bit manipulation helpers Add virtio_{add,clear}_feature helper functions for manipulating a&&&&feature bits variable. This has some benefits over open coding:&&&&- add check that the bit is in a sane range&&&&- make it obvious at a glance what is going on&&&&- have a central point to change when we want to extend feature bits&&&&&&&&Convert existing code manipulating features to use the new helpers.&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," vl.c: Remove unnecessary zero-initialization of NUMA globals There's no need to zero-initialize globals, they are automatically&&&&initialized to zero.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," qemu-iotests: add 116 invalid QED input file tests These tests exercise error code paths in the QED image format.  The&&&&tests are very simple, they just prove that the error path exits&&&&cleanly.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1421065893-18875-3-git-send-email-stefanha@redhat.com&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," spapr_vio: Pair g_malloc() with g_free(), not free() Spotted by Coverity with preview checker ALLOC_FREE_MISMATCH enabled&&&&and my ""coverity: Model g_free() isn't necessarily free()"" model patch&&&&applied.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," apic: do not dereference pointer before it is checked for NULL Right now you only get to apic_init_reset if you have an APIC&&&&(do_cpu_init is reached only if CPU_INTERRUPT_INIT is set and&&&&that only happens in hw/intc/apic.c).  However, this is wrong&&&&because for example a port 92 or keyboard controller reset is&&&&really an INIT, and that can happen also with no APIC.  So&&&&keep the check and fix the error that Coverity reported.&&&&&&&&Reported-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," s390x/ipl: drop reipl parameters on resets Whenever a reboot initiated by the guest is done, the reipl parameters should&&&&remain valid. The disk configured by the guest is to be used for&&&&ipl'ing. External reboot/reset request (e.g. via virsh reset guest) should&&&&completely reset the guest to the initial state, and therefore also reset the&&&&reipl parameters, resulting in an ipl behaviour of the initially configured&&&&guest. This could be an external kernel or a disk.&&&&&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Signed-off-by: Fan Zhang <zhangfan@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0," iotests: Filter out ""I/O thread spun..."" warning Filter out the ""main loop: WARNING: I/O thread spun for..."" warning from&&&&qemu output (it hardly matters for code specifically testing I/O).&&&&&&&&Furthermore, use _filter_qemu in all the custom functions which run&&&&qemu.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, bootdevice: add validate check for qemu_boot_set() Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& 
0," exec.c: Drop TARGET_HAS_ICE define and checks The TARGET_HAS_ICE #define is intended to indicate whether a target-*&&&&guest CPU implementation supports the breakpoint handling. However,&&&&all our guest CPUs have that support (the only two which do not&&&&define TARGET_HAS_ICE are unicore32 and openrisc, and in both those&&&&cases the bp support is present and the lack of the #define is just&&&&a bug). So remove the #define entirely: all new guest CPU support&&&&should include breakpoint handling as part of the basic implementation.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-id: 1420484960-32365-1-git-send-email-peter.maydell@linaro.org&&&& "
0," i386: do not cross the pages boundaries in replay mode This patch denies crossing the boundary of the pages in the replay mode,&&&&because it can cause an exception. Do it only when boundary is&&&&crossed by the first instruction in the block.&&&&If current instruction already crossed the bound - it's ok,&&&&because an exception hasn't stopped this code.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, icount: introduce cpu_get_icount_raw Separate accessing the instruction counter from the compensation for&&&&speed and halting that are introduced by qemu_icount_bias.  This&&&&introduces new infrastructure used by the record/replay patches.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, valgrind/i386: avoid false positives on KVM_SET_VCPU_EVENTS ioctl struct kvm_vcpu_events contains reserved fields. Let's use a&&&&designated initializer to avoid false positives in valgrind.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, valgrind: avoid false positives in KVM_GET_DIRTY_LOG ioctl struct kvm_dirty_log contains padding fields that trigger false&&&&positives in valgrind. Let's use a designated initializer to avoid&&&&false positives from valgrind/memcheck.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, target-arm: make IFAR/DFAR banked When EL3 is running in AArch32 (or ARMv7 with Security Extensions)&&&&IFAR and DFAR have a secure and a non-secure instance.&&&&&&&&Signed-off-by: Fabian Aggeler <aggelerf@ethz.ch>&&&&Signed-off-by: Greg Bellows <greg.bellows@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1416242878-876-22-git-send-email-greg.bellows@linaro.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," target-arm: respect SCR.FW, SCR.AW and SCTLR.NMFI Add checks of SCR AW/FW bits when performing writes of CPSR.  These SCR bits&&&&are used to control whether the CPSR masking bits can be adjusted from&&&&non-secure state.&&&&&&&&Signed-off-by: Fabian Aggeler <aggelerf@ethz.ch>&&&&Signed-off-by: Greg Bellows <greg.bellows@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1416242878-876-15-git-send-email-greg.bellows@linaro.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," qemu-img: Check create_opts before image creation If a driver supports image creation, it needs to set the .create_opts&&&&field. We can use that to make sure .create_opts for both drivers&&&&involved is not NULL for the target image in qemu-img convert, which is&&&&important so that the create_opts pointer in img_convert() is not NULL&&&&after the qemu_opts_append() calls and when going into&&&&qemu_opts_create().&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," KVM_CAP_IRQFD and KVM_CAP_IRQFD_RESAMPLE checks Compute kvm_irqfds_allowed by checking the KVM_CAP_IRQFD extension.&&&&Remove direct settings in architecture specific files.&&&&&&&&Add a new kvm_resamplefds_allowed variable, initialized by&&&&checking the KVM_CAP_IRQFD_RESAMPLE extension. Add a corresponding&&&&kvm_resamplefds_enabled() function.&&&&&&&&A special notice for s390 where KVM_CAP_IRQFD was not immediatly&&&&advirtised when irqfd capability was introduced in the kernel.&&&&KVM_CAP_IRQ_ROUTING was advertised instead.&&&&&&&&This was fixed in ""KVM: s390: announce irqfd capability"",&&&&ebc3226202d5956a5963185222982d435378b899 whereas irqfd support&&&&was brought in 84223598778ba08041f4297fda485df83414d57e,&&&&""KVM: s390: irq routing for adapter interrupts"".  Both commits&&&&first appear in 3.15 so there should not be any kernel&&&&version impacted by this QEMU modification.&&&&&&&&Signed-off-by: Eric Auger <eric.auger@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," pcihp: remove unused AcpiPciHpPciStatus.device_present field Remove now unused 'device_present' field wich was obsoleted by&&&&patch ""pcihp: reduce number of device check events""&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," block: acquire AioContext in generic blockjob QMP commands block-job-set-speed, block-job-cancel, block-job-pause,&&&&block-job-resume, and block-job-complete must acquire the&&&&BlockDriverState AioContext so that it is safe to access bs.&&&&&&&&At the moment bs->job is always NULL when dataplane is active because op&&&&blockers prevent blockjobs from starting.  Once the rest of the blockjob&&&&API has been made aware of AioContext we can drop the op blocker.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1413889440-32577-2-git-send-email-stefanha@redhat.com&&&& "
0, block: let mirror blockjob run in BDS AioContext The mirror block job must run in the BlockDriverState AioContext so that&&&&it works with dataplane.&&&&&&&&Acquire the AioContext in blockdev.c so starting the block job is safe.&&&&&&&&Note that to_replace is treated separately from other BlockDriverStates&&&&in that it does not need to be in the same AioContext.  Explicitly&&&&acquire/release to_replace's AioContext when accessing it.&&&&&&&&The completion code in block/mirror.c must perform BDS graph&&&&manipulation and bdrv_reopen() from the main loop.  Use&&&&block_job_defer_to_main_loop() to achieve that.&&&&&&&&The bdrv_drain_all() call is not allowed outside the main loop since it&&&&could lead to lock ordering problems.  Use bdrv_drain(bs) instead&&&&because we have acquired the AioContext so nothing else can sneak in&&&&I/O.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1413889440-32577-10-git-send-email-stefanha@redhat.com&&&& 
0," Revert ""main-loop.c: Handle SIGINT, SIGHUP and SIGTERM synchronously"" This reverts commit 15124e142034d21341ec9f1a304a1dc5a6c25681. It breaks&&&&debuggability of qemu and is no longer needed as the problem has&&&&now been addressed in a different way.&&&&&&&&Instead we provide a comment about why these signals must be&&&&handled asynchronously.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&[PMM: added comment]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," MAINTAINERS: grab more files from Anthony's pile I am picking up character devices and the main loop, as agreed during&&&&QEMU Summit.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," hw/scsi/virtio-scsi.c: fix the ""type"" use error in virtio_scsi_handle_ctrl The local variable ""type"" in virtio_scsi_handle_ctl represents the tmf&&&&command type from the guest and it has the same meaning as the&&&&req->req.tmf.type. However, before the invoking of virtio_scsi_parse_req&&&&the req->req.tmf.type doesn't has the correct value(just initialized to&&&&zero). Therefore, we need to use the ""type"" variable to judge the case.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Bin Wu <wu.wubin@huawei.com>&&&&[Actually make it compile, ""type"" must be uint32_t in order to pass&&&& it to virtio_tswap32s. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," block.c: Fix type of IoOperationType variable in send_qmp_error_event() The local variable 'ac' in send_qmp_error_event() is declared with the&&&&wrong type, which causes clang to complain when it is initialized&&&&and again when it is used:&&&&&&&&block.c:3655:20: warning: implicit conversion from enumeration type 'enum IoOperationType' to different enumeration type 'BlockErrorAction' (aka 'enum BlockErrorAction') [-Wenum-conversion]&&&&    ac = is_read ? IO_OPERATION_TYPE_READ : IO_OPERATION_TYPE_WRITE;&&&&       ~           ^~~~~~~~~~~~~~~~~~~~~~&&&&block.c:3655:45: warning: implicit conversion from enumeration type 'enum IoOperationType' to different enumeration type 'BlockErrorAction' (aka 'enum BlockErrorAction') [-Wenum-conversion]&&&&    ac = is_read ? IO_OPERATION_TYPE_READ : IO_OPERATION_TYPE_WRITE;&&&&       ~                                    ^~~~~~~~~~~~~~~~~~~~~~~&&&&block.c:3656:62: warning: implicit conversion from enumeration type 'BlockErrorAction' (aka 'enum BlockErrorAction') to different enumeration type 'IoOperationType' (aka 'enum IoOperationType') [-Wenum-conversion]&&&&    qapi_event_send_block_io_error(bdrv_get_device_name(bs), ac, action,&&&&    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                           ^~&&&&&&&&Correct the type to IoOperationType, and rename the variable&&&&to 'optype' to match its correct type.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Message-id: 1412969583-21045-1-git-send-email-peter.maydell@linaro.org&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," tcg: Always enable TCGv type checking Instead of using structures, which imply some amount of overhead&&&&on certain ABIs, use pointer types.&&&&&&&&This actually reduces the size of the binaries vs a NON-debug&&&&build on ppc64 and x86_64, due to a reduction in the number of&&&&sign-extension insns.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," qxl: keep going if reaching guest bug on empty area Xorg server hangs when using xfig and typing a text with space:&&&& #0  qxl_wait_for_io_command (qxl=<value optimized out>) at qxl_io.c:47&&&& #1  0x00007f826a49a299 in qxl_download_box (surface=0x221d030, x1=231, y1=259,&&&&     x2=<value optimized out>, y2=<value optimized out>) at qxl_surface.c:143&&&&&&&&       while (!(ram_header->int_pending & QXL_INTERRUPT_IO_CMD))&&&&         usleep (1);&&&&&&&&The QXL driver is calling QXL_IO_UPDATE_AREA with an empty area. This&&&&is a guest bug. The call is async and no ack is sent back on guest&&&&bug, so the X server will hang. The driver should be improved to avoid&&&&this situation and also to abort on QXL_INTERRUPT_ERROR. This will be&&&&a different patch series for the driver. However, it is simple enough&&&&to keep qemu running on empty areas update, which is what this patch&&&&provides.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1151363&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," block: Specify -drive legacy option aliases in array Instead of a series of qemu_opt_rename() calls, use an array that&&&&contains all of the renames and call qemu_opt_rename() in a loop. This&&&&will keep the code readable even when we add an error return to&&&&qemu_opt_rename().&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Beno卯t Canet <benoit.canet@nodalink.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," virtio-pci: fix migration for pci bus master Current support for bus master (clearing OK bit)&&&&together with the need to support guests which do not&&&&enable PCI bus mastering, leads to extra state in&&&&VIRTIO_PCI_FLAG_BUS_MASTER_BUG bit, which isn't robust&&&&in case of cross-version migration for the case when&&&&guests use the device before setting DRIVER_OK.&&&&&&&&Rip out VIRTIO_PCI_FLAG_BUS_MASTER_BUG and implement a simpler&&&&work-around: treat clearing of PCI_COMMAND as a virtio reset.  Old&&&&guests never touch this bit so they will work.&&&&&&&&As reset clears device status, DRIVER and MASTER bits are&&&&now in sync, so we can fix up cross-version migration simply&&&&by synchronising them, without need to detect a buggy guest&&&&explicitly.&&&&&&&&Drop tracking VIRTIO_PCI_FLAG_BUS_MASTER_BUG completely.&&&&&&&&As reset makes the device quiescent, in the future we'll be able to drop&&&&checking OK bit in a bunch of places.&&&&&&&&Cc: Jason Wang <jasowang@redhat.com>&&&&Cc: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," intel-iommu: add Intel IOMMU emulation to q35 and add a machine option ""iommu"" as a switch Add Intel IOMMU emulation to q35 chipset and expose it to the guest.&&&&1. Add a machine option. Users can use ""-machine iommu=on|off"" in the command&&&&line to enable/disable Intel IOMMU. The default is off.&&&&2. Accroding to the machine option, q35 will initialize the Intel IOMMU and&&&&use pci_setup_iommu() to setup q35_host_dma_iommu() as the IOMMU function for&&&&the pci bus.&&&&3. q35_host_dma_iommu() will return different address space according to the&&&&bus_num and devfn of the device.&&&&&&&&Signed-off-by: Le Tan <tamlokveer@gmail.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," target-arm: Adjust debug ID registers per-CPU Allow each CPU type to specify the value for the debug ID&&&&registers, by putting them in the ARMCPU struct, and use&&&&the resulting information to only expose the correct number&&&&of watchpoint and breakpoint registers for the CPU.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&& "
0," vmxnet3: Pad short frames to minimum size (60 bytes) When running VMware ESXi under qemu-kvm the guest discards frames&&&&that are too short. Short ARP Requests will be dropped, this prevents&&&&guests on the same bridge as VMware ESXi from communicating. This patch&&&&simply adds the padding on the network device itself.&&&&&&&&Signed-off-by: Ben Draper <ben@xrsa.net>&&&&Reviewed-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," block: delete cow block driver This patch removes support for the cow file format.&&&&&&&&Normally we do not break backwards compatibility but in this case there&&&&is no impact and it is the most logical option.  Extraordinary claims&&&&require extraordinary evidence so I will show why removing the cow block&&&&driver is the right thing to do.&&&&&&&&The cow file format is the disk image format for Usermode Linux, a way&&&&of running a Linux system in userspace.  The performance of UML was&&&&never great and it was hacky, but it enjoyed some popularity before&&&&hardware virtualization support became mainstream.&&&&&&&&QEMU's block/cow.c is supposed to read this image file format.&&&&Unfortunately the file format was underspecified:&&&&&&&&1. Earlier Linux versions used the MAXPATHLEN constant for the backing&&&&   filename field.  The value of MAXPATHLEN can change, so Linux&&&&   switched to a 4096 literal but QEMU has a 1024 literal.&&&&&&&&2. Padding was not used on the header struct (both in the Linux kernel&&&&   and in QEMU) so the struct layout varied across architectures.  In&&&&   particular, i386 and x86_64 were different due to int64_t alignment&&&&   differences.  Linux now uses __attribute__((packed)), QEMU does not.&&&&&&&&Therefore:&&&&&&&&1. QEMU cow images do not conform to the Linux cow image file format.&&&&&&&&2. cow images cannot be shared between different host architectures.&&&&&&&&This means QEMU cow images are useless and QEMU has not had bug reports&&&&from users actually hitting these issues.&&&&&&&&Let's get rid of this thing, it serves no purpose and no one will be&&&&affected.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1410877464-20481-1-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-i386: Loop-based copying and setting/unsetting of feature words Now that we have the feature word arrays, we don't need to manually copy&&&&each array item, we can simply iterate through each feature word.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, tests: vmstate static checker: remove last field in a struct Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," char: report frontend open/closed state in 'query-chardev' In addition to the on-line reporting added in the previous patch, allow&&&&libvirt to query frontend state independently of events.&&&&&&&&Libvirt's path to identify the guest agent channel it cares about differs&&&&between the event added in the previous patch and the QMP response field&&&&added here. The event identifies the frontend device, by ""id"". The&&&&'query-chardev' QMP command identifies the backend device (again by ""id"").&&&&The association is under libvirt's control.&&&&&&&&RHBZ: https://bugzilla.redhat.com/show_bug.cgi?id=1080376&&&&&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, hostmem: add properties for NUMA memory policy Signed-off-by: Hu Tao <hutao@cn.fujitsu.com>&&&&[Raise errors on setting properties if !CONFIG_NUMA.  Add BUILD_BUG_ON&&&& checks. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&&Signed-off-by: Hu Tao <hutao@cn.fujitsu.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," qemu-char: make writes thread-safe This will let threads other than the I/O thread raise QMP events.&&&&&&&&GIOChannel is thread-safe, and send and receive state is usually&&&&well-separated.  The only driver that requires some care is the&&&&pty driver, where some of the state is shared by the read and write&&&&sides.  That state is protected with the chr_write_lock too.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, virtio-scsi: start preparing for any_layout - Introduce virtio_scsi_init_req and virtio_scsi_free_req&&&&&&&&- rename qemu_sgl_init_external to qemu_sgl_concat&&&&&&&&- move virtio_scsi_parse_req from virtio_scsi_pop_req to callers&&&&  and add header length checks to virtio_scsi_parse_req.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," well-defined listing order for machine types Commit 261747f1 (""vl: Use MachineClass instead of global QEMUMachine&&&&list"") broke the ordering of the machine types in the user-visible output&&&&of&&&&&&&&  qemu-system-XXXX -M \?&&&&&&&&This occurred because registration was rebased from a manually maintained&&&&linked list to GLib hash tables:&&&&&&&&  qemu_register_machine()&&&&    type_register()&&&&      type_register_internal()&&&&        type_table_add()&&&&          g_hash_table_insert()&&&&&&&&and because the listing was rebased accordingly, from the traversal of the&&&&list to the traversal of the hash table (rendered as an ad-hoc list):&&&&&&&&  machine_parse()&&&&    object_class_get_list(TYPE_MACHINE)&&&&      object_class_foreach()&&&&        g_hash_table_foreach()&&&&&&&&The current order is a ""random"" one, for practical purposes, which is&&&&annoying for users.&&&&&&&&Introduce new members QEMUMachine.family and MachineClass.family, allowing&&&&machine types to be ""clustered"". Introduce a comparator function that&&&&establishes a total ordering between machine types, ordering machine types&&&&in the same family next to each other. In machine_parse(), list the&&&&supported machine types sorted with the comparator function.&&&&&&&&The comparator function:&&&&- sorts whole families before standalone machine types,&&&&- sorts whole families between each other in alphabetically increasing&&&&  order,&&&&- sorts machine types inside the same family in alphabetically decreasing&&&&  order,&&&&- sorts standalone machine types between each other in alphabetically&&&&  increasing order.&&&&&&&&After this patch, all machine types are considered standalone, and&&&&accordingly, the output is alphabetically ascending. This will be refined&&&&in the following patches.&&&&&&&&Effects on the x86_64 output:&&&&&&&&Before:&&&&&&&&> Supported machines are:&&&&> pc-0.13              Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-2.0        Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.0               Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-2.1        Standard PC (i440FX + PIIX, 1996)&&&&> pc-q35-1.7           Standard PC (Q35 + ICH9, 2009)&&&&> pc-1.1               Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.14              Standard PC (i440FX + PIIX, 1996)&&&&> pc-q35-2.0           Standard PC (Q35 + ICH9, 2009)&&&&> pc-i440fx-1.4        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.5        Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.15              Standard PC (i440FX + PIIX, 1996)&&&&> pc-q35-1.4           Standard PC (Q35 + ICH9, 2009)&&&&> isapc                ISA-only PC&&&&> pc                   Standard PC (i440FX + PIIX, 1996) (alias of pc-i440fx-2.2)&&&&> pc-i440fx-2.2        Standard PC (i440FX + PIIX, 1996) (default)&&&&> pc-1.2               Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.10              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.11              Standard PC (i440FX + PIIX, 1996)&&&&> pc-q35-2.1           Standard PC (Q35 + ICH9, 2009)&&&&> q35                  Standard PC (Q35 + ICH9, 2009) (alias of pc-q35-2.2)&&&&> pc-q35-2.2           Standard PC (Q35 + ICH9, 2009)&&&&> pc-i440fx-1.6        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.7        Standard PC (i440FX + PIIX, 1996)&&&&> none                 empty machine&&&&> pc-q35-1.5           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.6           Standard PC (Q35 + ICH9, 2009)&&&&> pc-0.12              Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.3               Standard PC (i440FX + PIIX, 1996)&&&&&&&&After:&&&&&&&&> Supported machines are:&&&&> isapc                ISA-only PC&&&&> none                 empty machine&&&&> pc-0.10              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.11              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.12              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.13              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.14              Standard PC (i440FX + PIIX, 1996)&&&&> pc-0.15              Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.0               Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.1               Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.2               Standard PC (i440FX + PIIX, 1996)&&&&> pc-1.3               Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.4        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.5        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.6        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-1.7        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-2.0        Standard PC (i440FX + PIIX, 1996)&&&&> pc-i440fx-2.1        Standard PC (i440FX + PIIX, 1996)&&&&> pc                   Standard PC (i440FX + PIIX, 1996) (alias of pc-i440fx-2.2)&&&&> pc-i440fx-2.2        Standard PC (i440FX + PIIX, 1996) (default)&&&&> pc-q35-1.4           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.5           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.6           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-1.7           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-2.0           Standard PC (Q35 + ICH9, 2009)&&&&> pc-q35-2.1           Standard PC (Q35 + ICH9, 2009)&&&&> q35                  Standard PC (Q35 + ICH9, 2009) (alias of pc-q35-2.2)&&&&> pc-q35-2.2           Standard PC (Q35 + ICH9, 2009)&&&&&&&&Effects on the aarch64 output:&&&&&&&&Before:&&&&&&&&> Supported machines are:&&&&> lm3s811evb           Stellaris LM3S811EVB&&&&> canon-a1100          Canon PowerShot A1100 IS&&&&> vexpress-a15         ARM Versatile Express for Cortex-A15&&&&> vexpress-a9          ARM Versatile Express for Cortex-A9&&&&> xilinx-zynq-a9       Xilinx Zynq Platform Baseboard for Cortex-A9&&&&> connex               Gumstix Connex (PXA255)&&&&> n800                 Nokia N800 tablet aka. RX-34 (OMAP2420)&&&&> lm3s6965evb          Stellaris LM3S6965EVB&&&&> versatileab          ARM Versatile/AB (ARM926EJ-S)&&&&> borzoi               Borzoi PDA (PXA270)&&&&> tosa                 Tosa PDA (PXA255)&&&&> cheetah              Palm Tungsten|E aka. Cheetah PDA (OMAP310)&&&&> midway               Calxeda Midway (ECX-2000)&&&&> mainstone            Mainstone II (PXA27x)&&&&> n810                 Nokia N810 tablet aka. RX-44 (OMAP2420)&&&&> terrier              Terrier PDA (PXA270)&&&&> highbank             Calxeda Highbank (ECX-1000)&&&&> cubieboard           cubietech cubieboard&&&&> sx1-v1               Siemens SX1 (OMAP310) V1&&&&> sx1                  Siemens SX1 (OMAP310) V2&&&&> realview-eb-mpcore   ARM RealView Emulation Baseboard (ARM11MPCore)&&&&> kzm                  ARM KZM Emulation Baseboard (ARM1136)&&&&> akita                Akita PDA (PXA270)&&&&> z2                   Zipit Z2 (PXA27x)&&&&> musicpal             Marvell 88w8618 / MusicPal (ARM926EJ-S)&&&&> realview-pb-a8       ARM RealView Platform Baseboard for Cortex-A8&&&&> versatilepb          ARM Versatile/PB (ARM926EJ-S)&&&&> realview-eb          ARM RealView Emulation Baseboard (ARM926EJ-S)&&&&> realview-pbx-a9      ARM RealView Platform Baseboard Explore for Cortex-A9&&&&> spitz                Spitz PDA (PXA270)&&&&> none                 empty machine&&&&> virt                 ARM Virtual Machine&&&&> collie               Collie PDA (SA-1110)&&&&> smdkc210             Samsung SMDKC210 board (Exynos4210)&&&&> verdex               Gumstix Verdex (PXA270)&&&&> nuri                 Samsung NURI board (Exynos4210)&&&&> integratorcp         ARM Integrator/CP (ARM926EJ-S)&&&&&&&&After:&&&&&&&&> Supported machines are:&&&&> akita                Akita PDA (PXA270)&&&&> borzoi               Borzoi PDA (PXA270)&&&&> canon-a1100          Canon PowerShot A1100 IS&&&&> cheetah              Palm Tungsten|E aka. Cheetah PDA (OMAP310)&&&&> collie               Collie PDA (SA-1110)&&&&> connex               Gumstix Connex (PXA255)&&&&> cubieboard           cubietech cubieboard&&&&> highbank             Calxeda Highbank (ECX-1000)&&&&> integratorcp         ARM Integrator/CP (ARM926EJ-S)&&&&> kzm                  ARM KZM Emulation Baseboard (ARM1136)&&&&> lm3s6965evb          Stellaris LM3S6965EVB&&&&> lm3s811evb           Stellaris LM3S811EVB&&&&> mainstone            Mainstone II (PXA27x)&&&&> midway               Calxeda Midway (ECX-2"
0, signal/all: remove return value from setup_sigcontext Make all implementations of setup_sigcontext void and&&&&remove checking it's return value from functions calling&&&&setup_sigcontext.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," Add the vhost-user netdev backend to the command line The supplied chardev id will be inspected for supported options. Only&&&&a socket backend, with a set path (i.e. a Unix socket) and optionally&&&&the server parameter set, will be allowed. Other options (nowait, telnet)&&&&will make the chardev unusable and the netdev will not be initialised.&&&&&&&&Additional checks for validity:&&&&  - requires `-numa node,memdev=..`&&&&  - requires `-device virtio-net-*`&&&&&&&&The `vhostforce` option is used to force vhost-net when we deal with&&&&non-MSIX guests.&&&&&&&&Signed-off-by: Antonios Motakis <a.motakis@virtualopensystems.com>&&&&Signed-off-by: Nikolay Nikolaev <n.nikolaev@virtualopensystems.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Acked-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0, tests: Check empty QMP output visitor Checks the output visitor behaviour for NULL values.&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel.a@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Acked-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
0," usb: add usb_pick_speed We can pick the usb port speed in generic code, by looking at the port&&&&and device speed masks and looking for the fastest match.  So add a&&&&function to do exactly that, and drop the speed setting code from&&&&usb_desc_attach as it isn't needed any more.&&&&&&&&This way we can set the device speed before calling port->ops->attach,&&&&which fixes some xhci hotplug issues.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1046873&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, target-i386: unify reserved bits and NX bit check Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, qemu-socket: Clean up inet_connect_opts() Separate the search for a working addrinfo from the code that does&&&&something with it.  Makes for a clearer search loop.&&&&&&&&Use a local Error * to simplify resetting the error in the search&&&&loop.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," Use error_is_set() only when necessary (again) error_is_set(&var) is the same as var != NULL, but it takes&&&&whole-program analysis to figure that out.  Unnecessarily hard for&&&&optimizers, static checkers, and human readers.  Commit 84d18f0 dumbed&&&&it down to obvious, but a few more have crept in since, and&&&&documentation was overlooked.  Dumb these down, too.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," block: Catch duplicate IDs in bdrv_new() Since commit f298d071, block devices added with blockdev-add don't have&&&&a QemuOpts around in dinfo->opts. Consequently, we can't rely any more&&&&on QemuOpts catching duplicate IDs for block devices.&&&&&&&&This patch adds a new check for duplicate IDs to bdrv_new(), and moves&&&&the existing check that the ID isn't already taken for a node-name there&&&&as well.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," qmp: Don't use error_is_set() to suppress additional errors Using error_is_set(errp) that way can sweep programming errors under&&&&the carpet when we get called incorrectly with an error set.&&&&&&&&encrypted_bdrv_it() does it, because there's no way to make&&&&bdrv_iterate() break its loop.  Actually safe, because qmp_cont()&&&&clears the error before the loop.  Clean it up anyway: replace&&&&bdrv_iterate() by bdrv_next(), break the loop on error.&&&&&&&&Replace both occurrences, for consistency.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," ui: Update MAINTAINERS entry. With Amazon eating Anthonys time status ""Maintained"" certainly isn't&&&&true any more.  Update entry accordingly.&&&&&&&&Also add myself, so scripts/get_maintainer.pl will Cc: me, to reduce&&&&the chance ui patches fall through the cracks on our pretty loaded&&&&qemu-devel mailing list.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, qapi script: remember explicitly defined enum values Later other scripts will need to check the enum values.&&&&&&&&Signed-off-by: Wenchao Xia <wenchaoqemu@gmail.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
0," prep: Update ppc_rom.bin Functionally, this is a revert of Jocelyn's r3309 /&&&&55aa45ddde3283cdd781326d001f7456bf02f684 (Quickly hack PowerPC BIOS&&&&able to boot on CDROM again.), for which we do not have the sources.&&&&&&&&Therefore the sources used are v0.4.1 plus pc-bios/ohw.diff plus a&&&&workaround turning IDE errors into warnings.&&&&&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&& "
0, qemu-iotests: Check qemu-img command line parsing Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
0," PCIE: fix regression with coldplugged multifunction device PCIE is causing asserts each time a multifunction device is added&&&&on command line (coldplug).&&&&&&&&This is caused by&&&&commit a66e657e18cd9b70e9f57ae5512c07faf2bc508f&&&&    pci/pcie: convert PCIE hotplug to use hotplug-handler API&&&&QEMU abort is caused by misplaced assertion, which should&&&&be checked only when device is hotplugged.&&&&&&&&Reference to regression report:&&&& http://www.mail-archive.com/qemu-devel@nongnu.org/msg216226.html&&&&&&&&Fixes: a66e657e18cd9b70e9f57ae5512c07faf2bc508f&&&&&&&&Reported-By: Nigel Kukard <nkukard+qemu@lbsd.net>&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," target-arm: Restrict check_ap() use of S and R bits to v6 and earlier The SCTLR bits S and R (8 and 9) only exist in ARMv6 and earlier.&&&&In ARMv7 these bits RAZ, and in ARMv8 they are reassigned. Guard&&&&the use of them in check_ap() so that we don't get incorrect results&&&&for ARMv8 CPUs.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&& "
0," block: Don't call ROUND_UP with negative values The behaviour of the ROUND_UP macro with negative numbers isn't obvious.&&&&It happens to do the right thing in this please, but better avoid it.&&&&&&&&Suggested-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&& "
0, tests: Add test for qdict_array_split() Add a test case for qdict_array_split() in tests/check-qdict.c.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, block/iscsi: always fill bs->bl.opt_transfer_length the opt_transfer_length has nothing to do with logical&&&&block provisioning stuff so always copy it from&&&&the block limits VPD page.&&&&&&&&Reported-By: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," target-i386: Fix I/O bitmap checks for in/out Commit 1b90d56e changed the implementation of in/out imm to not assign&&&&the accessed port number to cpu_T[0] as it appeared unnecessary.&&&&However, currently gen_check_io() makes use of cpu_T[0] to implement the&&&&I/O bitmap checks, so it's in fact still used and the change broke the&&&&check, leading to #GP in legitimate cases (and probably also allowing&&&&access to ports that shouldn't be allowed).&&&&&&&&This patch reintroduces the missing assignment for these cases.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0," xen_pt: Fix passthrough of device with ROM. QEMU does not need and should not allocate memory for the ROM of a&&&&passthrough PCI device. So this patch initialize the particular region&&&&like any other PCI BAR of a passthrough device.&&&&&&&&When a guest will access the ROM, Xen will take care of the IO, QEMU&&&&will not be involved in it.&&&&&&&&Xen set a limit of memory available for each guest, allocating memory&&&&for a ROM can hit this limit.&&&&&&&&Signed-off-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Reported-and-Tested-by: Konrad Rzeszutek Wilk <konrad.wilk@oracle.com>&&&& "
0," qemu-iotests: Add _default_cache_mode and _supported_cache_modes This replaces _unsupported_qemu_io_options and check for support of&&&&current cache mode, and allow to provide a default if user didn't&&&&specify.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Wenchao Xia <xiawenc@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," exec: memory radix tree page level compression At the moment, memory radix tree is already variable width, but it can&&&&only skip the low bits of address.&&&&&&&&This is efficient if we have huge memory regions but inefficient if we&&&&are only using a tiny portion of the address space.&&&&&&&&After we have built up the map, detect&&&&configurations where a single L2 entry is valid.&&&&&&&&We then speed up the lookup by skipping one or more levels.&&&&In case any levels were skipped, we might end up in a valid section&&&&instead of erroring out. We handle this by checking that&&&&the address is in range of the resulting section.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," block: handle ENOTSUP from discard in generic code Similar to write_zeroes, let the generic code receive a ENOTSUP for&&&&discard operations.  Since bdrv_discard has advisory semantics,&&&&we can just swallow the error.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, block: add BlockLimits structure to BlockDriverState this patch adds BlockLimits which introduces discard and write_zeroes&&&&limits and alignment information to the BlockDriverState.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," microblaze: At swx, check that the reserved word is unmodified This improves the reservation check for system emulation, making&&&&it possible to catch stores that modify reserved word.&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& "
0," tests: Multiboot mmap test case This adds a test case for Multiboot memory map in the tests/multiboot&&&&directory, where future i386 test kernels can be dropped. Because this&&&&requires an x86 build host and an installed 32 bit libgcc, the test is&&&&not part of a regular 'make check'.&&&&&&&&The reference output for the test is verified against test runs of the&&&&same multiboot kernel booted by some GRUB 0.97.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," kvmvapic: Enter inactive state on hardware reset ROM layout may change after reset of devices are hotplugged, so we have&&&&to pick up the physical address again when the ROM is initialized. This&&&&is best achieved by resetting the state to INACTIVE.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," pci: remove explicit check to 64K ioport size This check is useless, as bigger addresses will be ignored when&&&&added to 'io' MemoryRegion, which has a size of 64K.&&&&&&&&However, some architectures don't use the 'io' MemoryRegion, like&&&&the alpha and versatile platforms. They create a PCI I/O region&&&&bigger than 64K, so let them handle PCI I/O BARs in the higher range.&&&&&&&&MST: reinstated work-around for BAR sizing.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," usb-host-libusb: Configuration 0 may be a valid configuration Quoting from: linux/Documentation/ABI/stable/sysfs-bus-usb:&&&&&&&&	Note that some devices, in violation of the USB spec, have a&&&&	configuration with a value equal to 0. Writing 0 to&&&&	bConfigurationValue for these devices will install that&&&&	configuration, rather then unconfigure the device.&&&&&&&&So don't compare the configuration value against 0 to check for unconfigured&&&&devices, instead check for a LIBUSB_ERROR_NOT_FOUND return from&&&&libusb_get_active_config_descriptor().&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, aio / timers: Remove legacy interface Remove the legacy interface from include/qemu/timers.h.&&&&&&&&Ensure struct QEMUClock is not exposed at all.&&&&&&&&Signed-off-by: Alex Bligh <alex@alex.org.uk>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, hpet: Use QOM realize for hpet Signed-off-by: Hu Tao <hutao@cn.fujitsu.com>&&&&[AF: Avoided SYS_BUS_DEVICE() in loop]&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
0," exec: Support 64-bit operations in address_space_rw Honor the implementation maximum access size, and at least check&&&&the minimum access size.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," linux-user: fix signal number range check When translating between host and target signal numbers keep negative&&&&numbers unchanged, avoiding access beyond array bounds.&&&&&&&&Signed-off-by: Andreas Schwab <schwab@linux-m68k.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 878v2b8sek.fsf@igel.home&&&& "
0," rdma: check if RDMAControlHeader::len match transferred byte RDMAControlHeader::len is provided from remote, so check if the value&&&&match the actual transferred byte_len.&&&&&&&&Reviewed-by: Orit Wasserman <owasserm@redhat.com>&&&&Reviewed-by: Michael R. Hines <mrhines@us.ibm.com>&&&&Signed-off-by: Isaku Yamahata <yamahata@private.email.ne.jp>&&&&Signed-off-by: Michael R. Hines <mrhines@us.ibm.com>&&&&Message-id: 1376078746-24948-4-git-send-email-mrhines@linux.vnet.ibm.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, qemu-socket: zero-initialize SocketAddress Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0," spapr-pci: rework MSI/MSIX On the sPAPR platform a guest allocates MSI/MSIX vectors via RTAS&&&&hypercalls which return global IRQ numbers to a guest so it only&&&&operates with those and never touches MSIMessage.&&&&&&&&Therefore MSIMessage handling is completely hidden in QEMU.&&&&&&&&Previously every sPAPR PCI host bridge implemented its own MSI window&&&&to catch msi_notify()/msix_notify() calls from QEMU devices (virtio-pci&&&&or vfio) and route them to the guest via qemu_pulse_irq().&&&&MSIMessage used to be encoded as:&&&&	.addr - address within the PHB MSI window;&&&&	.data - the device index on PHB plus vector number.&&&&The MSI MR write function translated this MSIMessage to a global IRQ&&&&number and called qemu_pulse_irq().&&&&&&&&However the total number of IRQs is not really big (at the moment it is&&&&1024 IRQs starting from 4096) and even 16bit data field of MSIMessage&&&&seems to be enough to store an IRQ number there.&&&&&&&&This simplifies MSI handling in sPAPR PHB. Specifically, this does:&&&&1. remove a MSI window from a PHB;&&&&2. add a single memory region for all MSIs to sPAPREnvironment&&&&and spapr_pci_msi_init() to initialize it;&&&&3. encode MSIMessage as:&&&&    * .addr - a fixed address of SPAPR_PCI_MSI_WINDOW==0x40000000000ULL;&&&&    * .data as an IRQ number.&&&&4. change IRQ allocator to align first IRQ number in a block for MSI.&&&&MSI uses lower bits to specify the vector number so the first IRQ has to&&&&be aligned. MSIX does not need any special allocator though.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," Allow use of pc machine type (accel=xen) for Xen HVM domains. Xen HVM domains normally spawn QEMU with a dedicated xenfv machine type. The&&&&initialization code for this machine type can easily be pulled into the&&&&generic pc initialization code and guarded with a test for whether the xen&&&&accelerator options is specified, which is more consistent with the way&&&&other accelerators are used.&&&&&&&&Signed-off-by: Paul Durrant <paul.durrant@citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&& "
0," fix -net user checks by reordering checks reorder slirp config options. first check the dns-server-address,&&&&then check the first-dhcp-address. the original code was comparing&&&&the first-dhcp-address with the default dns-server-address, not&&&&the configured dns-server-address.&&&&&&&&Signed-off-by: Bas van Sisseren <bas@quarantainenet.nl>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
0," Move hardcoded initialization of xen-platform device. Creation of the xen-platform device is currently hardcoded into machine&&&&type pc's initialization code, guarded by a test for the whether the xen&&&&accelerator is enabled. This patch moves the creation of xen-platform into&&&&the initialization code of the xenfv machine type. This maintains backwards&&&&compatibility for that machine type but allows more flexibility if another&&&&machine type is used with Xen HVM domains.&&&&&&&&Signed-off-by: Paul Durrant <paul.durrant@citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&& "
0, exec: expect mr->ops to be initialized for ROM There is no need to use the special phys_section_rom section.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," cpu: Add helper cpu_exists(), to check if CPU with specified id exists Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, target-ppc: emulate store doubleword pair instructions Needed for Power ISA version 2.05 compliance. The check for odd register&&&&pairs is done using the invalid bits.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," build-sys: must link with -fstack-protector It is needed to give that flag to the linker as well, but latest&&&&libtool 2.4.2 still swallows that argument, so let's pass it with&&&&libtool -Wc argument.&&&&&&&&qemu-1.4.0/stubs/arch-query-cpu-def.c:6: undefined reference to `__stack_chk_guard'&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <mlureau@redhat.com>&&&&Reviewed-by: Alon Levy <alevy@redhat.com>&&&& "
0," pcspk: initialize PC speaker if compiled in PC speaker has been moved to target-independant code in 71093711589dafcb920dc3bc9bb811eaf8b14101,&&&&so do not depend of target to include it or not.&&&&&&&&Cc: malc <av1474@comtv.ru>&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Herv? Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
0," qemu-char: simplify pty polling There is no need to use a timer and pty_chr_read to detect a connected&&&&pty.  It is simpler to just call g_poll periodically and check for POLLHUP.&&&&It is done once per second, and only if the pty is disconnected, so it&&&&is cheap enough.&&&&&&&&Tested with ""-monitor pty"" and ""-serial mon:pty"", both of which work&&&&correctly and do not freeze QEMU.  (How to test ptys?  ""socat -,raw,echo=0&&&&/dev/pts/4,raw"").&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1366385529-10329-3-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," iotests: Add 'check -ssh' option to test Secure Shell block device. Note in order to run these tests on ssh, you must be running a local&&&&ssh daemon, and that daemon must accept loopback connections, and&&&&ssh-agent has to be set up to allow logins on the local daemon.  In&&&&other words, the following command should just work without demanding&&&&any passphrase:&&&&&&&& ssh localhost&&&&&&&&Signed-off-by: Richard W.M. Jones <rjones@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," check-qjson: Test noncharacters other than U+FFFE, U+FFFF in strings Test cases cover the two noncharacters in the BMP.  Add tests for the&&&&other 64 noncharacters.&&&&&&&&Three existing test cases involve noncharacters U+FFFF and U+10FFFF.&&&&Instead of deleting them as now duplicates, adjust them to use U+FFFC&&&&and U+10FFFFD.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," qcow2: Improve check for overlapping allocations The old code detected an overlapping allocation even when the&&&&allocations didn't actually overlap, but were only adjacent.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, xilinx_spips: Fix bus setup conditional check The R_LQPSI_CFG register has the LQSPI_CFG_SEP_BUS and LQSPI_CFG_TWO_MEM bits.&&&&&&&&Signed-off-by: Nathan Rossi <nathan.rossi@xilinx.com>&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Message-id: d76c8e364c80a42352ae4f0661aff2cd17ad32a4.1362373359.git.peter.crosthwaite@xilinx.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," qcow2: Handle dependencies earlier Handling overlapping allocations isn't just a detail of cluster&&&&allocation. It is rather one of three ways to get the host cluster&&&&offset for a write request:&&&&&&&&1. If a request overlaps an in-flight allocations, the cluster offset&&&&   can be taken from there (this is what handle_dependencies will evolve&&&&   into) or the request must just wait until the allocation has&&&&   completed. Accessing the L2 is not valid in this case, it has&&&&   outdated information.&&&&&&&&2. Outside overlapping areas, check the clusters that can be written to&&&&   as they are, with no COW involved.&&&&&&&&3. If a COW is required, allocate new clusters&&&&&&&&Changing the code to reflect this doesn't change the behaviour because&&&&overlaps cannot exist for clusters that are kept in step 2. It does&&&&however make it easier for later patches to work on clusters that belong&&&&to an allocation that is still in flight.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-ppc: Rework get_physical_address() Currently get_physical_address() first checks to see if translation is&&&&enabled in the MSR, then in the translation on case switches on the mmu&&&&type.  Except that for BookE MMUs, translation is always on, and so it&&&&has to switch in the ""translation off"" case as well and do the same thing&&&&as the translation on path for those MMUs.  Plus, even translation off&&&&doesn't behave exactly the same on the various MMU types so there are&&&&further mmu type checks in the ""translation off"" path.&&&&&&&&As a first step to cleaning this up, this patch moves the switch on mmu&&&&type to the top level, then makes the translation on/off check just for&&&&those mmu types where it is meaningful.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," block: fix I/O throttling accounting blind spot I/O throttling relies on bdrv_acct_done() which is called when a request&&&&completes.  This leaves a blind spot since we only charge for completed&&&&requests, not submitted requests.&&&&&&&&For example, if there is 1 operation remaining in this time slice the&&&&guest could submit 3 operations and they will all be submitted&&&&successfully since they don't actually get accounted for until they&&&&complete.&&&&&&&&Originally we probably thought this is okay since the requests will be&&&&accounted when the time slice is extended.  In practice it causes&&&&fluctuations since the guest can exceed its I/O limit and it will be&&&&punished for this later on.&&&&&&&&Account for I/O upon submission so that I/O limits are enforced&&&&properly.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Tested-By: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," target-ppc: Drop nested TARGET_PPC64 guard for POWER7 It is within a large TARGET_PPC64 section from 970 to 620,&&&&so an #endif /* TARGET_PPC64 */ is confusing. Clean this up.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," PPC: xnu kernel expects FLUSH to be cleared on STOP otherwise it gets stuck in a loop&&&&so clear it when unsetting run when flush is set&&&&&&&&void&&&&IODBDMAStop( volatile IODBDMAChannelRegisters *registers)&&&&{&&&&&&&&	IOSetDBDMAChannelControl( registers,&&&&	IOClearDBDMAChannelControlBits( kdbdmaRun )&&&&		| IOSetDBDMAChannelControlBits(  kdbdmaFlush ));&&&&&&&&DBDMA: writel 0x0000000000000b00 <= 0xa0002000&&&&DBDMA: channel 0x16 reg 0x0&&&&DBDMA:     status 0x00002000&&&&&&&&	while( IOGetDBDMAChannelStatus( registers) & (&&&&			kdbdmaActive | kdbdmaFlush))&&&&		eieio();&&&&&&&&DBDMA: readl 0x0000000000000b04 => 0x00002000&&&&DBDMA: channel 0x16 reg 0x1&&&&DBDMA: readl 0x0000000000000b04 => 0x00002000&&&&DBDMA: channel 0x16 reg 0x1&&&&DBDMA: readl 0x0000000000000b04 => 0x00002000&&&&DBDMA: channel 0x16 reg 0x1&&&&DBDMA: readl 0x0000000000000b04 => 0x00002000&&&&DBDMA: channel 0x16 reg 0x1&&&&it continues to get printed&&&&&&&&}&&&&&&&&Signed-off-by: Amadeusz S艂awi艅ski <amade@asmblr.net>&&&&[agraf: replace tabs with spaces]&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," linux-user: Fix layout of usage table to account for option text The linux-user usage message attempts to line up the columns in&&&&its table by calculating the maximum width of any item in them.&&&&However for the 'Argument' column it was only accounting for the&&&&length of the option switch (eg ""-d""), not the additional example&&&&text (eg ""item[,...]""). This currently has no adverse effects&&&&because the widest item in the column happens to be the argumentless&&&&""-singlestep"" option, but improving the ""-d"" option help to read&&&&""-d item[,...]"" exceeds that limit.&&&&&&&&Fix this by correctly calculating maxarglen as the width of the&&&&first column text including a possible option argument, and&&&&adjusting its uses to match.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," iscsi: retry read, write, flush and unmap on unit attention check conditions the storage might return a check condition status for various reasons.&&&&(e.g. bus reset, capacity change, thin-provisioning info etc.)&&&&&&&&currently all these informative status responses lead to an I/O error&&&&which is populated to the guest. this patch introduces a retry mechanism&&&&to avoid this.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," block: complete all IOs before .bdrv_truncate bdrv_truncate() invalidates the bdrv_check_request() result for&&&&in-flight requests, so there should better be none.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Reported-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, target-i386: use gen_jcc1 to compile loopz Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," slirp: slirp/slirp.c coding style cleanup The slirp glue code uses tabs in some places.  Since the next patch will&&&&modify the file, convert tabs to spaces and fix checkpatch.pl issues.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Message-id: 1361356113-11049-5-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, target-cris: Introduce CRISCPU subclasses Use class_init functions to initialize the VR in preparation for&&&&overriding v32+ behavior there.&&&&&&&&Move cpu_cris_init() to cpu.c and hook up a class_by_name callback.&&&&&&&&This change leads to unknown -cpu model names no longer falling back&&&&to a CPU with VR 32 but instead returning NULL.&&&&&&&&Acked-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
0," sheepdog: multiplex the rw FD to flush cache This will reduce sockfds connected to the sheep server to one, which simply the&&&&future hacks.&&&&&&&&Cc: MORITA Kazutaka <morita.kazutaka@lab.ntt.co.jp>&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Liu Yuan <tailai.ly@taobao.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," block-migration: fix blk_mig_save_dirty_block() return value checking Commit 43be3a25c931a7f61a76fbfc9d35584cbfc5fb58 changed the&&&&blk_mig_save_dirty_block() return code handling.  The function's doc&&&&comment says:&&&&&&&&  /* return value:&&&&   * 0: too much data for max_downtime&&&&   * 1: few enough data for max_downtime&&&&   */&&&&&&&&Because of the 1 return value, callers must check for ret < 0 instead of&&&&just:&&&&&&&&  if (ret) { ... }&&&&&&&&We do not want to bail when 1 is returned, only on error.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1360534366-26723-3-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," qom: Make object_resolve_path_component() path argument const A usage with a hardcoded partial path such as&&&&&&&&  object_resolve_path_component(obj, ""foo"")&&&&&&&&is totally valid but currently leads to a compilation error. Fix this.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," raw-posix: fix bdrv_aio_ioctl When the raw-posix aio=thread code was moved from posix-aio-compat.c&&&&to block/raw-posix.c, there was an unintended change to the ioctl code.&&&&The code used to return the ioctl command, which posix_aio_read()&&&&would later morph into a zero.  This hack is not necessary anymore,&&&&and in fact breaks scsi-generic (which expects a zero return code).&&&&Remove it.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," slirp: switch to GPollFD Slirp uses rfds/wfds/xfds more extensively than other QEMU components.&&&&&&&&The rarely-used out-of-band TCP data feature is used.  That means we&&&&need the full table of select(2) to g_poll(3) events:&&&&&&&&  rfds -> G_IO_IN | G_IO_HUP | G_IO_ERR&&&&  wfds -> G_IO_OUT | G_IO_ERR&&&&  xfds -> G_IO_PRI&&&&&&&&I came up with this table by looking at Linux fs/select.c which maps&&&&select(2) to poll(2) internally.&&&&&&&&Another detail to watch out for are the global variables that reference&&&&rfds/wfds/xfds during slirp_select_poll().  sofcantrcvmore() and&&&&sofcantsendmore() use these globals to clear fd_set bits.  When&&&&sofcantrcvmore() is called, the wfds bit is cleared so that the write&&&&handler will no longer be run for this iteration of the event loop.&&&&&&&&This actually seems buggy to me since TCP connections can be half-closed&&&&and we'd still want to handle data in half-duplex fashion.  I think the&&&&real intention is to avoid running the read/write handler when the&&&&socket has been fully closed.  This is indicated with the SS_NOFDREF&&&&state bit so we now check for it before invoking the TCP write handler.&&&&Note that UDP/ICMP code paths don't care because they are&&&&connectionless.&&&&&&&&Note that slirp/ has a lot of tabs and sometimes mixed tabs with spaces.&&&&I followed the style of the surrounding code.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Message-id: 1361356113-11049-6-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, qemu-ga: qmp_guest_file_close(): fix fclose() error check fclose() returns EOF on error.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& 
0," block: fix initialization in bdrv_io_limits_enable() bdrv_io_limits_enable() starts a new slice, but does not set io_base&&&&correctly for that slice.&&&&&&&&Here is how io_base is used:&&&&&&&&    bytes_base  = bs->nr_bytes[is_write] - bs->io_base.bytes[is_write];&&&&    bytes_res   = (unsigned) nb_sectors * BDRV_SECTOR_SIZE;&&&&&&&&    if (bytes_base + bytes_res <= bytes_limit) {&&&&        /* no wait */&&&&    } else {&&&&        /* operation needs to be throttled */&&&&    }&&&&&&&&As a result, any I/O operations that are triggered between now and&&&&bs->slice_end are incorrectly limited.  If 10 MB of data has been&&&&written since the VM was started, QEMU thinks that 10 MB of data has&&&&been written in this slice. This leads to a I/O lockup in the guest.&&&&&&&&We fix this by delaying the start of a new slice to the next&&&&call of bdrv_exceed_io_limits().&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-i386: check/enforce: Check all feature words This adds the following feature words to the list of flags to be checked&&&&by kvm_check_features_against_host():&&&&&&&& - cpuid_7_0_ebx_features&&&& - ext4_features&&&& - kvm_features&&&& - svm_features&&&&&&&&This will ensure the ""enforce"" flag works as it should: it won't allow&&&&QEMU to be started unless every flag that was requested by the user or&&&&defined in the CPU model is supported by the host.&&&&&&&&This patch may cause existing configurations where ""enforce"" wasn't&&&&preventing QEMU from being started to abort QEMU. But that's exactly the&&&&point of this patch: if a flag was not supported by the host and QEMU&&&&wasn't aborting, it was a bug in the ""enforce"" code.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, msix: expose access to masked/pending state For use by poll handler.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, qxl: save qemu_create_displaysurface_from result Spotted by Coverity.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=885644&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reported-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0, spice-qemu-char: register spicevmc ports during qemu_spice_init() Do the delayed registration of spicevmc ports after Spice server is&&&&initialized.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," target-i386: check/enforce: Check SVM flag support as well When nested SVM is supported, the kernel returns the SVM flag on&&&&GET_SUPPORTED_CPUID[1], so we can check the SVM flag safely in&&&&kvm_check_features_against_host().&&&&&&&&I don't know why the original code ignored the SVM flag. Maybe it was&&&&because kvm_cpu_fill_host() used the CPUID instruction directly instead&&&&of GET_SUPPORTED_CPUID&&&&&&&&[1] Older kernels (before v2.6.37) returned the SVM flag even if nested&&&&    SVM was _not_ supported. So the only cases where this patch should&&&&    change behavior is when SVM is being requested by the user or the&&&&    CPU model, but not supported by the host. And on these cases we&&&&    really want QEMU to abort if the ""enforce"" option is set.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," openpic: remove irq_out The current openpic emulation contains half-ready code for bypass mode.&&&&Remove it, so that when someone wants to finish it they can start from a&&&&clean state.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, main-loop: use aio_notify for qemu_notify_event Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, usb-serial: only expose device in guest when the chardev is open Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, vl.c: check for qxl availability Check for qxl availability in vl.c. This will allow to remove #ifdef&&&&CONFIG_SPICE .. #endif later in this series&&&&&&&&Cc: Anthony Liguori <aliguori@us.ibm.com>&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0," i386: kvm: kvm_arch_get_supported_cpuid: move R_EDX hack outside of for loop The for loop will become a separate function, so clean it up so it can&&&&become independent from the bit hacking for R_EDX.&&&&&&&&No behavior change[1], just code movement.&&&&&&&&[1] Well, only if the kernel returned CPUID leafs 1 or 0x80000001 as&&&&    unsupported, but there's no kernel version that does that.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," qapi: do not protect enum values from namespace pollution Enum values are always preceded by the uppercase name of the enum, so&&&&they do not conflict with reserved words.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, target-i386: Allow tsc-frequency to be larger then 2.147G The check using INT_MAX (2147483647) is wrong in this case.&&&&&&&&Signed-off-by: Fred Oliveira <foliveira@cloudswitch.com>&&&&Signed-off-by: Don Slutz <Don@CloudSwitch.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@gmail.com>&&&& 
0, qxl/update_area_io: guest_bug on invalid parameters Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," Revert ""i8259: add -no-spurious-interrupt-hack option"" This reverts commit f278d4947fff814dcde2ef2acad36d172ff8be35.&&&&&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
0," pseries: Use new method to correct reset sequence A number of things need to occur during reset of the PAPR&&&&paravirtualized platform in a specific order.  For example, the hash&&&&table needs to be cleared before the CPUs are reset, so that they&&&&initialize their register state correctly, and the CPUs need to have&&&&their main reset called before we set up the entry point state on the&&&&boot cpu.  We also need to have the main qdev reset happen before the&&&&creation and installation of the device tree for the new boot, because&&&&we need the state of the devices settled to correctly construct the&&&&device tree.&&&&&&&&We currently do the pseries once-per-reset initializations done from a&&&&reset handler.  However we can't adequately control when this handler&&&&is called during the reset - in particular we can't guarantee it&&&&happens after all the qdev resets (since qdevs might be registered&&&&after the machine init function has executed).&&&&&&&&This patch uses the new QEMUMachine reset method to to fix this&&&&problem, ensuring the various order dependent reset steps happen in&&&&the correct order.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, pseries: added allocator for a block of IRQs The patch adds a simple helper which allocates a consecutive sequence&&&&of IRQs calling spapr_allocate_irq for each and checks that allocated&&&&IRQs go consequently.&&&&&&&&The patch is required for upcoming support of MSI/MSIX on POWER.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0, hmp: hmp_cont(): don't rely on QERR_DEVICE_ENCRYPTED This commit changes hmp_cont() to loop through all block devices&&&&and proactively set an encryption key for any encrypted device&&&&missing a key.&&&&&&&&This change is needed because QERR_DEVICE_ENCRYPTED is going to be&&&&dropped by a future commit.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& 
0," configure: Fix xen probe with Xen 4.2 and later The xs.h header is now deprecated and produces a warning. This prevents the&&&&configure script from enabling Xen with xen-unstable whom will become 4.2. As&&&&this header is not anymore common to every version of Xen, we just remove it&&&&from the early probe for Xen.&&&&&&&&Signed-off-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&& "
0, qapi: add test case for deallocating traversal of incomplete structure v3:&&&&- new patch&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
0," qemu-img check -r for repairing images The QED block driver already provides the functionality to not only&&&&detect inconsistencies in images, but also fix them. However, this&&&&functionality cannot be manually invoked with qemu-img, but the&&&&check happens only automatically during bdrv_open().&&&&&&&&This adds a -r switch to qemu-img check that allows manual invocation&&&&of an image repair.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," Allow QEMUMachine to override reset sequencing qemu_system_reset() function always performs the same basic actions on&&&&all machines.  This includes running all the reset handler hooks,&&&&however the order in which these will run is not always easily predictable.&&&&&&&&This patch splits the core of qemu_system_reset() - the invocation of&&&&the reset handlers - out into a new qemu_devices_reset() function.&&&&qemu_system_reset() will usually call qemu_devices_reset(), but that&&&&can be now overriden by a new reset method in the QEMUMachine&&&&structure.&&&&&&&&Individual machines can use this reset method, if necessary, to&&&&perform any extra, machine specific initializations which have to&&&&occur before or after the bulk of the reset handlers.  It's expected&&&&that the method will call qemu_devices_reset() at some point, but if&&&&the machine has really strange ordering requirements between devices&&&&resets it could even override that with it's own reset sequence (with&&&&great care, obviously).&&&&&&&&For a specific example of when this might be needed: a number of&&&&machines (but not PC) load images specified with -kernel or -initrd&&&&directly into the machine RAM before booting the guest.  This mostly&&&&works at the moment, but to make this actually safe requires that this&&&&load occurs after peripheral devices are reset - otherwise they could&&&&have active DMAs in progress which would clobber the in memory images.&&&&Some machines (notably pseries) also have other entry conditions which&&&&need to be set up as the last thing before executing in guest space -&&&&some of this could be considered ""emulated firmware"" in the sense that&&&&the actions of the firmware are emulated directly by qemu rather than&&&&by executing a firmware image within the guest.  When the platform's&&&&firmware to OS interface is sufficiently well specified, this saves&&&&time both in implementing the ""firmware"" and executing it.&&&&&&&&aliguori: don't unconditionally dereference current_machine&&&&&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," slirp: Avoid redefining MAX_TCPOPTLEN MAX_TCPOPTLEN is being defined as 32. Darwin already has it as 40,&&&&causing a warning. The value is only used to declare an array,&&&&into which currently 4 bytes are written at most.&&&&&&&&Therefore always override MAX_TCPOPTLEN for now.&&&&&&&&Suggested-by: Jan Kiszka <jan.kiszka@web.de>&&&&Reviewed-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
0," tests: Add rtc-test (fix test regression) Commit 93e9eb6808c886f5f1c903b7ced1eed65de2ba39 added fdc-test,&&&&but accidentally removed rtc-test because check-qtest-i386-y was&&&&not enhanced but set twice.&&&&&&&&This patch adds rtc-test again (and sorts both tests alphabetically).&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," qapi: introduce OptsVisitor This visitor supports parsing&&&&&&&&  -option [type=]discriminator[,optarg1=val1][,optarg2=val2][,...]&&&&&&&&style QemuOpts objects into ""native"" C structures. After defining the type&&&&tree in the qapi schema (see below), a root type traversal with this&&&&visitor linked to the underlying QemuOpts object will build the ""native"" C&&&&representation of the option.&&&&&&&&The type tree in the schema, corresponding to an option with a&&&&discriminator, must have the following structure:&&&&&&&&  struct&&&&    scalar member for non-discriminated optarg 1 [*]&&&&    list for repeating non-discriminated optarg 2 [*]&&&&      wrapper struct&&&&        single scalar member&&&&    union&&&&      struct for discriminator case 1&&&&        scalar member for optarg 3 [*]&&&&        list for repeating optarg 4 [*]&&&&          wrapper struct&&&&            single scalar member&&&&        scalar member for optarg 5 [*]&&&&      struct for discriminator case 2&&&&        ...&&&&&&&&The ""type"" optarg name is fixed for the discriminator role. Its schema&&&&representation is ""union of structures"", and each discriminator value must&&&&correspond to a member name in the union.&&&&&&&&If the option takes no ""type"" descriminator, then the type subtree rooted&&&&at the union must be absent from the schema (including the union itself).&&&&&&&&Optarg values can be of scalar types str / bool / integers / size.&&&&&&&&Members marked with [*] may be defined as optional in the schema,&&&&describing an optional optarg.&&&&&&&&Repeating an optarg is supported; its schema representation must be ""list&&&&of structure with single mandatory scalar member"". If an optarg is not&&&&described as repeating in the schema (ie. it is defined as a scalar field&&&&instead of a list), its last occurrence will take effect. Ordering between&&&&differently named optargs is not preserved.&&&&&&&&A mandatory list (or an optional one which is reported to be available),&&&&corresponding to a repeating optarg, has at least one element after&&&&successful parsing.&&&&&&&&v1->v2:&&&&- Update opts_type_size() prototype to uint64_t.&&&&- Add opts_type_uint64() for options needing the full uint64_t range.&&&&  (Internals could be extracted to ""cutils.c"".)&&&&- Allow negative values in opts_type_int().&&&&- Rebase to nested Makefiles.&&&&&&&&v2->v3:&&&&- Factor opts_visitor_insert() out of opts_start_struct() and call it&&&&  separately for opts_root->id if there's any.&&&&- Don't require non-negative values in opts_type_int()'s error message.&&&&- g_malloc0() may return NULL for zero-sized requests. Support empty&&&&  structures by requesting 1 byte for them instead.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
0," Fixes related to processing of qemu's -numa option The -numa option to qemu is used to create [fake] numa nodes&&&&and expose them to the guest OS instance.&&&&&&&&There are a couple of issues with the -numa option:&&&&&&&&a) Max VCPU's that can be specified for a guest while using&&&&   the qemu's -numa option is 64. Due to a typecasting issue&&&&   when the number of VCPUs is > 32 the VCPUs don't show up&&&&   under the specified [fake] numa nodes.&&&&&&&&b) KVM currently has support for 160VCPUs per guest. The&&&&   qemu's -numa option has only support for upto 64VCPUs&&&&   per guest.&&&&This patch addresses these two issues.&&&&&&&&Below are examples of (a) and (b)&&&&&&&&a) >32 VCPUs are specified with the -numa option:&&&&&&&&/usr/local/bin/qemu-system-x86_64 \&&&&-enable-kvm \&&&&71:01:01 \&&&&-net tap,ifname=tap0,script=no,downscript=no \&&&&-vnc :4&&&&&&&&...&&&&Upstream qemu :&&&&--------------&&&&&&&&QEMU 1.1.50 monitor - type 'help' for more information&&&&(qemu) info numa&&&&6 nodes&&&&node 0 cpus: 0 1 2 3 4 5 6 7 8 9 32 33 34 35 36 37 38 39 40 41&&&&node 0 size: 131072 MB&&&&node 1 cpus: 10 11 12 13 14 15 16 17 18 19 42 43 44 45 46 47 48 49 50 51&&&&node 1 size: 131072 MB&&&&node 2 cpus: 20 21 22 23 24 25 26 27 28 29 52 53 54 55 56 57 58 59&&&&node 2 size: 131072 MB&&&&node 3 cpus: 30&&&&node 3 size: 131072 MB&&&&node 4 cpus:&&&&node 4 size: 131072 MB&&&&node 5 cpus: 31&&&&node 5 size: 131072 MB&&&&&&&&With the patch applied :&&&&-----------------------&&&&&&&&QEMU 1.1.50 monitor - type 'help' for more information&&&&(qemu) info numa&&&&6 nodes&&&&node 0 cpus: 0 1 2 3 4 5 6 7 8 9&&&&node 0 size: 131072 MB&&&&node 1 cpus: 10 11 12 13 14 15 16 17 18 19&&&&node 1 size: 131072 MB&&&&node 2 cpus: 20 21 22 23 24 25 26 27 28 29&&&&node 2 size: 131072 MB&&&&node 3 cpus: 30 31 32 33 34 35 36 37 38 39&&&&node 3 size: 131072 MB&&&&node 4 cpus: 40 41 42 43 44 45 46 47 48 49&&&&node 4 size: 131072 MB&&&&node 5 cpus: 50 51 52 53 54 55 56 57 58 59&&&&node 5 size: 131072 MB&&&&&&&&b) >64 VCPUs specified with -numa option:&&&&&&&&/usr/local/bin/qemu-system-x86_64 \&&&&-enable-kvm \&&&&-cpu Westmere,+rdtscp,+pdpe1gb,+dca,+pdcm,+xtpr,+tm2,+est,+smx,+vmx,+ds_cpl,+monitor,+dtes64,+pclmuldq,+pbe,+tm,+ht,+ss,+acpi,+d-vnc :4&&&&&&&&...&&&&&&&&Upstream qemu :&&&&--------------&&&&&&&&only 63 CPUs in NUMA mode supported.&&&&only 64 CPUs in NUMA mode supported.&&&&QEMU 1.1.50 monitor - type 'help' for more information&&&&(qemu) info numa&&&&8 nodes&&&&node 0 cpus: 6 7 8 9 38 39 40 41 70 71 72 73&&&&node 0 size: 65536 MB&&&&node 1 cpus: 10 11 12 13 14 15 16 17 18 19 42 43 44 45 46 47 48 49 50 51 74 75 76 77 78 79&&&&node 1 size: 65536 MB&&&&node 2 cpus: 20 21 22 23 24 25 26 27 28 29 52 53 54 55 56 57 58 59 60 61&&&&node 2 size: 65536 MB&&&&node 3 cpus: 30 62&&&&node 3 size: 65536 MB&&&&node 4 cpus:&&&&node 4 size: 65536 MB&&&&node 5 cpus:&&&&node 5 size: 65536 MB&&&&node 6 cpus: 31 63&&&&node 6 size: 65536 MB&&&&node 7 cpus: 0 1 2 3 4 5 32 33 34 35 36 37 64 65 66 67 68 69&&&&node 7 size: 65536 MB&&&&&&&&With the patch applied :&&&&-----------------------&&&&&&&&QEMU 1.1.50 monitor - type 'help' for more information&&&&(qemu) info numa&&&&8 nodes&&&&node 0 cpus: 0 1 2 3 4 5 6 7 8 9&&&&node 0 size: 65536 MB&&&&node 1 cpus: 10 11 12 13 14 15 16 17 18 19&&&&node 1 size: 65536 MB&&&&node 2 cpus: 20 21 22 23 24 25 26 27 28 29&&&&node 2 size: 65536 MB&&&&node 3 cpus: 30 31 32 33 34 35 36 37 38 39&&&&node 3 size: 65536 MB&&&&node 4 cpus: 40 41 42 43 44 45 46 47 48 49&&&&node 4 size: 65536 MB&&&&node 5 cpus: 50 51 52 53 54 55 56 57 58 59&&&&node 5 size: 65536 MB&&&&node 6 cpus: 60 61 62 63 64 65 66 67 68 69&&&&node 6 size: 65536 MB&&&&node 7 cpus: 70 71 72 73 74 75 76 77 78 79&&&&&&&&Signed-off-by: Chegu Vinod <chegu_vinod@hp.com>, Jim Hull <jim.hull@hp.com>, Craig Hada <craig.hada@hp.com>&&&&Tested-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," qemu-ga: guest-suspend-disk: don't emit a success response Today, qemu-ga may not be able to emit a success response when&&&&guest-suspend-disk completes. This happens because the VM may&&&&vanish before qemu-ga is able to emit a response.&&&&&&&&This semantic is a bit confusing, as it's not clear for clients if&&&&they should wait for a response or how they should check for success.&&&&&&&&This commit solves that problem by changing guest-suspend-disk to&&&&never emit a success response and suggests in the documentation&&&&what clients could do to check for success.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0," runstate: introduce suspended state QEMU enters in this state when the guest suspends to ram (S3).&&&&&&&&This is important so that HMP users and QMP clients can know that&&&&the guest is suspended. QMP also has an event for this, but events&&&&are not reliable and are limited (ie. a client can connect to QEMU&&&&after the event has been emitted).&&&&&&&&Having a different state for S3 brings a new issue, though. Every&&&&device that doesn't run when the VM is stopped but wants to run&&&&when the VM is suspended has to check for RUN_STATE_SUSPENDED&&&&explicitly. This is the case for the keyboard and mouse devices,&&&&for example.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Acked-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, usb-redir: An interface count of 0 is a valid value An interface-count of 0 happens when a device is in unconfigured state when&&&&it gets redirected. So we should not use 0 to detect not having received&&&&interface info from our peer.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," target-arm: Move OMAP cp15_i_{max,min} reset to cpu_state_reset Move the OMAP-specific cp15_i_{max,min} reset to cpu_state_reset;&&&&since these registers are only accessible on CPUs with the&&&&OMAPCP feature set there's no need to guard this reset with&&&&either a CPUID or feature bit check.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," usb-ehci: Ensure frindex writes leave a valid frindex value frindex is a 14 bits counter, so bits 31-14 should always be 0, and&&&&after the commit titled ""usb-ehci: frindex always is a 14 bits counter""&&&&we rely on frindex always being a multiple of 8. I've not seen this in&&&&practice, but theoretically a guest can write a value >= 0x4000 or a value&&&&which is not a multiple of 8 value to frindex, this patch ensures that&&&&things will still work when that happens.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, qdev: give all devices a canonical path A strong limitation of QOM right now is that unconverted ports&&&&(e.g. all...) do not give a canonical path to devices that are&&&&part of the board.  This in turn makes it impossible to replace&&&&PROP_PTR with a QOM link for example.&&&&&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," spice: fix broken initialization Commit 1b71f7c14fab6f00c2680d4489fbee7baf796e4f moved MODULE_INIT_QOM to&&&&way before MODULE_INIT_MACHINE, thereby breaking assumptions made in&&&&spice-core.c which registered both a type initializer and a machine&&&&intializer.&&&&&&&&This fix removes the type registration, and replaces it with calling&&&&qemu_spice_init in vl.c after command line parsing (second pass) is&&&&done, and after timers are armed, required by spice server.&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," pci: fix bridge IO/BASE commit 5caef97a16010f818ea8b950e2ee24ba876643ad introduced&&&&a regression: we do not make IO base/limit upper 16&&&&bit registers writeable, so we should report a 16 bit&&&&IO range type, not a 32 bit one.&&&&Note that PCI_PREF_RANGE_TYPE_32 is 0x0, but PCI_IO_RANGE_TYPE_32 is 0x1.&&&&&&&&In particular, this broke sparc64.&&&&&&&&Note: this just reverts to behaviour prior to the commit above.&&&&Making PCI_IO_BASE_UPPER16 and PCI_IO_LIMIT_UPPER16&&&&registers writeable should, and seems to, work just as well, but&&&&as no system seems to actually be interested in 32 bit IO,&&&&let's not make unnecessary changes.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," qxl: remove flipped Tested on linux and windows guests. For negative stride, qxl_flip copies&&&&directly to vga->ds->surface->data, for positive it's reallocated to&&&&share qxl->guest_primary.data&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," fdc: add CCR (Configuration Control Register) write register DIR and CCR registers share the same address ; DIR is read-only&&&&while CCR is write-only&&&&&&&&CCR register is used to change media transfer rate, which will be&&&&checked in following changes.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, qom: accept any compatible type when setting a link property Links had limited utility before as they only allowed a concrete type to be&&&&specified.  Now we can support abstract types and interfaces which means it's&&&&now possible to have a link<PCIDevice>.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," linux-user: fake /proc/self/maps glibc's pthread_attr_getstack tries to find the stack range from&&&&/proc/self/maps. Unfortunately, /proc is usually the host's /proc&&&&which means linux-user guests see qemu's stack there.&&&&&&&&Fake the file with a constructed maps entry that exposes the guest's&&&&stack range.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0, qdev: remove baked in notion of aliases (v2) Limit them to the device_add functionality.  Device aliases were a hack based&&&&on the fact that virtio was modeled the wrong way.  The mechanism for aliasing&&&&is very limited in that only one alias can exist for any device.&&&&&&&&We have to support it for the purposes of compatibility but we only need to&&&&support it in device_add so restrict it to that piece of code.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&---&&&&v1 -> v2&&&& - Use a table for aliases (Paolo)&&&& 
0," do not chdir(/) in qemu-nbd before opening all files When qemu-nbd becomes a daemon it calls daemon(3) with&&&&nochdir=0, so daemon(3) changes current directory to /.&&&&But at this time, qemu-nbd did not open any user-specified&&&&files yet, so by changing current directory, all non-absolute&&&&paths becomes wrong.  The solution is to pass nochdir=1 to&&&&daemon(3) function, and to chdir(""/"") after all init has&&&&been performed, before entering the main loop, -- just like&&&&a good daemon should do.&&&&&&&&This patch is applicable for -stable.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, PPC: booke206: allow NULL raddr in ppcmas_tlb_check We might want to call the tlb check function without actually caring about&&&&the real address resolution. Check if we really should write the value&&&&back.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," virtfs-proxy-helper: Add missing printf format attribute Every function with printf like arguments must have it&&&&(see file HACKING), so add it.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
0," hw/pl110.c: Add post-load hook to invalidate display Add a post-load hook which invalidates the display. In particular, if we&&&&don't do this and the display size we've just reloaded is larger than&&&&the default then we will segfault trying to read off the end of the buffer.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, configure: Pull linux-headers/asm symlink creation out of loop Pull the creation of the linux-headers/asm symlink out of the loop&&&&so we don't pointlessly delete and recreate it once for each target.&&&&Also move the setting of the includes variable up so that it is&&&&in the same place as the other code which sets this variable.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
0," migrate_fd_cleanup: accept any negative qemu_fclose() value as error Also, we now return the qemu_fclose() value unchanged to the caller. For&&&&reference, the migrate_fd_cleanup() callers are the following:&&&&&&&&- migrate_fd_completed(): any negative value is considered an&&&&  error, so the change is OK.&&&&- migrate_fd_error(): doesn't check the migrate_fd_cleanup() return value&&&&- migrate_fd_cancel(): doesn't check the migrate_fd_cleanup() return&&&&  value&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," add test-coroutine to checks There is a ""test-coroutine"" which isn't in the list.&&&&Add it so ""make check"" runs it too.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, hw/9pfs: Use export flag for indicating security model This helps to remove some of the structure members&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& 
0, hw/9pfs: Initialize rest of qid field to zero. Since qid is allocated out of stack we need to intialize&&&&the field to zero. Otherwise we will send wrong qid value&&&&to client.&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& 
0," pseries: Correct RAM size check for SLOF The SLOF firmware used on the pseries machine needs a reasonable amount of&&&&(guest) RAM in order to run, so we have a check in the machine init&&&&function to check that this is available.  However, SLOF runs in real mode&&&&(MMU off) which means it can only actually access the RMA (Real Mode Area),&&&&not all of RAM.  In many cases the RMA is the same as all RAM, but when&&&&running with Book3S HV KVM on PowerPC 970, the RMA must be especially&&&&allocated to be (host) physically contiguous.  In this case, the RMA size&&&&is determined by what the host admin allocated at boot time, and will&&&&usually be less than the whole guest RAM size.&&&&&&&&This patch corrects the test to see if SLOF has enough memory for this&&&&case.&&&&&&&&In addition, more recent versions of SLOF that were committed earlier don't&&&&need quite as much memory as earlier versions.  Therefore, this patch also&&&&reduces the amount of RAM we require to run SLOF.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," tcg-i386: Introduce limited deposit support x86 cannot provide an optimized generic deposit implementation. But at&&&&least for a few special cases, namely for writing bits 0..7, 8..15, and&&&&0..15, versions using only a single instruction are feasible.&&&&Introducing such limited support improves emulating 16-bit x86 code on&&&&x86, but also rarer cases where 32-bit or 64-bit code accesses bytes or&&&&words.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," linux-user: Add support for more VT ioctls DirectFB-1.0 uses at least two of the four added ioctls, and the two&&&&others were added for completeness.  This patch was validated with the&&&&program ""vlock -all/-new"".&&&&&&&&Signed-off-by: C茅dric VINCENT <cedric.vincent@st.com>&&&&Cc: Riku Voipio <riku.voipio@iki.fi>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," memory: abstract cracking of write access ops into a function The memory API automatically cracks large reads and writes into smaller&&&&ones when needed.  Factor out this mechanism, which is now duplicated between&&&&memory reads and memory writes, into a function.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, usb-linux: Ensure devep != 0 So that we don't index endp_table with a negative index.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0," pseries: Add device tree properties for VMX/VSX and DFP under kvm Sufficiently recent PAPR specifications define properties ""ibm,vmx""&&&&and ""ibm,dfp"" on the CPU node which advertise whether the VMX vector&&&&extensions (or the later VSX version) and/or the Decimal Floating&&&&Point operations from IBM's recent POWER CPUs are available.&&&&&&&&Currently we do not put these in the guest device tree and the guest&&&&kernel will consequently assume they are not available.  This is good,&&&&because they are not supported under TCG.  VMX is similar enough to&&&&Altivec that it might be trivial to support, but VSX and DFP would&&&&both require significant work to support in TCG.&&&&&&&&However, when running under kvm on a host which supports these&&&&instructions, there's no reason not to let the guest use them.  This&&&&patch, therefore, checks for the relevant support on the host CPU&&&&and, if present, advertises them to the guest as well.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," configure: Don't create symlinks to nonexistent targets When we create the symlinks to source tree files, don't create them&&&&if the file is not actually present in the source tree; this will&&&&happen if the file is in a git submodule that wasn't checked out.&&&&&&&&This also avoids the odd effect where an in-source-tree configure&&&&will end up creating the missing file as a symlink to itself.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
0, virtio-pci.c: convert to PCIDEviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, hw/ac97.c: convert to PCIDeviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, json-lexer: reset the lexer state on an invalid token Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," target-sparc: Do not check CPU_INTERRUPT_TIMER. This bit is never set, therefore we should not read it either.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," kvm: Enable CPU SMEP feature This patchset enables a new CPU feature SMEP (Supervisor Mode Execution&&&&Protection) in QEMU-KVM. SMEP prevents kernel from executing code in application.&&&&Updated Intel SDM describes this CPU feature. The document will be published soon.&&&&&&&&SMEP is identified by CPUID leaf 7 EBX[7], which is 0 before. Get the right value by query KVM kernel module, so that guest can get SMEP through CPUID.&&&&&&&& Signed-off-by: Yang, Wei <wei.y.yang@intel.com>&&&& Singed-off-by: Shan, Haitao <haitao.shan@intel.com>&&&& Singed-off-by: Li, Xin <xin.li@intel.com>&&&&&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0, lm32: use lookup table for opcodes Instead of a for loop use a faster lookup table.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
0," kvm: Drop return values from kvm_arch_pre/post_run We do not check them, and the only arch with non-empty implementations&&&&always returns 0 (this is also true for qemu-kvm).&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&CC: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," Refactor thread retrieval and check We have qemu_cpu_self and qemu_thread_self. The latter is retrieving the&&&&current thread, the former is checking for equality (using CPUState). We&&&&also have qemu_thread_equal which is only used like qemu_cpu_self.&&&&&&&&This refactors the interfaces, creating qemu_cpu_is_self and&&&&qemu_thread_is_self as well ass qemu_thread_get_self.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," so only dump&&&&those when printing the CPU state.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& """
0," arm: basic support for ARMv4/ARMv4T emulation Currently target-arm/ assumes at least ARMv5 core. Add support for&&&&handling also ARMv4/ARMv4T. This changes the following instructions:&&&&&&&&BX(v4T and later)&&&&&&&&BKPT, BLX, CDP2, CLZ, LDC2, LDRD, MCRR, MCRR2, MRRC, MCRR, MRC2, MRRC,&&&&MRRC2, PLD QADD, QDADD, QDSUB, QSUB, STRD, SMLAxy, SMLALxy, SMLAWxy,&&&&SMULxy, SMULWxy, STC2 (v5 and later)&&&&&&&&All instructions that are ""v5TE and later"" are also bound to just v5, as&&&&that's how it was before.&&&&&&&&This patch doesn _not_ include disabling of cp15 access and base-updated&&&&data abort model (that will be required to emulate chips based on a&&&&ARM7TDMI), because:&&&&* no ARM7TDMI chips are currently emulated (or planned)&&&&* those features aren't strictly necessary for my purposes (SA-1 core&&&&  emulation).&&&&&&&&All v5 models are handled as they are v5T. Internally we still have a&&&&check if the model is a v5(T) or v5TE, but as all emulated cores are&&&&v5TE, those two cases are simply aliased (for now).&&&&&&&&Patch is heavily based on patch by Filip Navara <filip.navara@gmail.com>&&&&which in turn is based on work by Ulrich Hecht <uli@suse.de> and Vincent&&&&Sanders <vince@kyllikki.org>.&&&&&&&&Signed-off-by: Dmitry Eremin-Solenikov <dbaryshkov@gmail.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," piix_pci: optimize set irq path optimize irq routing in piix_pic.c which has been a TODO.&&&&So far piix3 tracks each pirq level and checks whether a given pic pins is&&&&asserted by seeing if each pirq is mapped into the pic pin.&&&&This is independent on irq routing, but data path is on slow path.&&&&&&&&Given that irq routing is rarely changed and asserting pic pins is on&&&&data path, the path that asserts pic pins should be optimized and&&&&chainging irq routing should be on slow path.&&&&The new behavior with this patch series is to use bitmap which is addressed&&&&by pirq and pic pins with a given irq routing.&&&&When pirq is asserted, the bitmap is set and see if the pic pins is&&&&asserted by checking the bitmaps.&&&&When irq routing is changed, rebuild the bitmap and re-assert pic pins.&&&&&&&&test:&&&&- create VM with 4 e1000 nics in different pci slots&&&&  (i.e. fn=0 for each e1000)&&&&  Thus those e1000's INTA are connected to each PIRQ[A-D].&&&&- run linux as guest and saw each devices triggers interrupt&&&&  by seeing /proc/interrupts. And then confirmed that each PIRQ[A-D]&&&&  surely asserted interrupts.&&&&  Because irq 10 and 11 are shared by 4 e1000's, it only one NIC is activated&&&&  with ifconfig ethN up/down when counting interrupts.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," virtio: fix up VQ checks When migration triggers before a VQ is initialized,&&&&base pa is 0 and last_used_index must be 0 too:&&&&we don't have a ring to compare to.&&&&&&&&Reported-by: Juan Quintela <quintela@redhat.com>&&&&Tested-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," Makefile: Fix check dependency breakage Commit b152aa84d52882bb1846485a89baf13aa07c86bc broke the unit-tests&&&&build, fix it.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," Makefile: Fix check dependency breakage Commit b152aa84d52882bb1846485a89baf13aa07c86bc broke the unit-tests&&&&build, fix it.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Use a Linux-style MAINTAINERS file I make no claims that this is accurate or exhaustive but I think it's a&&&&reasonable place to start.&&&&&&&&As the file mentions, the purpose of this file is to give contributors&&&&information about who they can go to with questions about a particular piece of&&&&code or who they can ask for review.&&&&&&&&If you sign up for a piece of code and indicate that it's Maintained or&&&&Supported, please be prepared to be responsive to questions about that&&&&subsystem.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&---&&&&&&&&v1 -> v2&&&& - Sort alphabetically&&&& - Copy in instructions from linux MAINTAINERS&&&& - Fix entries based on review feedback&&&& "
0, multiboot: Prevent loading of x86_64 images A via -kernel supplied x86_64 ELF image is being started in 32bit mode.&&&&Detect and exit if a 64bit image has been supplied.&&&&&&&&Signed-off-by: Adam Lackorzynski <adam@os.inf.tu-dresden.de>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," qdev: reset qdev along with qdev tree This patch changes the reset handling so that qdev has no knowledge of the&&&&global system reset.  Instead, a new bus/device level function is introduced&&&&that allows all devices/buses on the bus/device to be reset using a depth&&&&first transversal.&&&&&&&&N.B. we have to expose the implicit system bus because we have various hacks&&&&that result in an implicit system bus existing.  Instead, we ought to have an&&&&explicitly created system bus that we can trigger reset from.  That's a topic&&&&for a future patch though.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," [virtio-9p] Ignore O_DIRECT hint from client. The O_DIRECT flag imposes alignment restrictions on the length and address&&&&of userspace buffers and the file offset of I/Os.&&&&&&&&While VirtFS/9P has plans to implement O_DIRECT behavior on the server,&&&&for now we will stick to a behavior like NFS by bypassing the page cache&&&&only on the client. Server may still cache the I/O.&&&&&&&&Signed-off-by: Venkateswararao Jujjuri <jvrao@linux.vnet.ibm.com>&&&& "
0, vnc: check fd before calling qemu_set_fd_handler2() in vnc_client_write() Setting fd = -1 to qemu_set_fd_handler2() causes bus error at FD_SET&&&&in main_loop_wait().&&&&&&&&Signed-off-by: Yoshiaki Tamura <tamura.yoshiaki@lab.ntt.co.jp>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," blkdebug: Fix set_state_opts definition The list head was initialized to point to the wrong list, so all actions ended&&&&up being handled as inject-error even if they were set-state in fact.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," [virtio-9p]  This patch implements TLCREATE for 9p2000.L protocol. SYNOPSIS&&&&&&&&    size[4] Tlcreate tag[2] fid[4] name[s] flags[4] mode[4] gid[4]&&&&&&&&    size[4] Rlcreate tag[2] qid[13] iounit[4]&&&&&&&&DESCRIPTION&&&&&&&&The Tlreate request asks the file server to create a new regular file with the&&&&name supplied, in the directory (dir) represented by fid.&&&&The mode argument specifies the permissions to use. New file is created with&&&&the uid if the fid and with supplied gid.&&&&&&&&The flags argument represent Linux access mode flags with which the caller&&&&is requesting to open the file with. Protocol allows all the Linux access&&&&modes but it is upto the server to allow/disallow any of these acess modes.&&&&If the server doesn't support any of the access mode, it is expected to&&&&return error.&&&&&&&&To start with we will not restricit/limit any Linux flags on this server.&&&&If needed, We can start restricting as we move forward with various use cases.&&&&&&&&Signed-off-by: Venkateswararao Jujjuri <jvrao@linux.vnet.ibm.com>&&&& "
0, check-qdict: Introduce test for the new iteration API Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
0," QMP: New argument checker (second part) This commit introduces the second (and last) part of QMP's new&&&&argument checker.&&&&&&&&The job is done by check_client_args_type(), it iterates over&&&&the client's argument qdict and for for each argument it checks&&&&if it exists and if its type is valid.&&&&&&&&It's important to observe the following changes from the existing&&&&argument checker:&&&&&&&&  - If the handler accepts an O-type argument, unknown arguments&&&&    are passed down to it. It's up to O-type handlers to validate&&&&    their arguments&&&&&&&&  - Boolean types (eg. 'b' and '-') don't accept integers anymore,&&&&    only json-bool&&&&&&&&  - Argument types '/' and '.' are currently unsupported under QMP,&&&&    thus they're not handled&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, pass info about hpets to seabios.] Currently HPET ACPI table is created regardless of whether qemu actually&&&&created hpet device. This may confuse some guests that don't check that&&&&hpet is functional before using it. Solve this by passing info about&&&&hpets in qemu to seabios via fw config interface. Additional benefit is&&&&that seabios no longer uses hard coded hpet configuration. Proposed&&&&interface supports up to 8 hpets. This is the number defined by hpet&&&&spec.&&&&&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," arm_timer: fix oneshot mode In oneshot mode, the delta needs to come from the TimerLoad register,&&&&not the maximum limit.&&&&&&&&Signed-off-by: Rabin Vincent <rabin@rab.in>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," ide: Avoid canceling IDE DMA The reason for not actually canceling the I/O is because with&&&&virtualization and lots of VM running, a guest fs may mistake a&&&&overload of the host, as an IDE timeout. So rather than canceling the&&&&I/O, it's safer to wait I/O completion and simulate that the I/O has&&&&completed just before the io cancellation was requested by the&&&&guest. This way if ntfs or an app writes data without checking for&&&&-EIO retval, and it thinks the write has succeeded, it's less likely&&&&to run into troubles. Similar issues for reads.&&&&&&&&Furthermore because the DMA operation is splitted into many synchronous&&&&aio_read/write if there's more than one entry in the SG table, without this&&&&patch the DMA would be cancelled in the middle, something we've no idea if it&&&&happens on real hardware too or not. Overall this seems a great risk for zero&&&&gain.&&&&&&&&This approach is sure safer than previous code given we can't pretend all guest&&&&fs code out there to check for errors and reply the DMA if it was completed&&&&partially, given a timeout would never materialize on a real harddisk unless&&&&there are defective blocks (and defective blocks are practically only an issue&&&&for reads never for writes in any recent hardware as writing to blocks is the&&&&way to fix them) or the harddisk breaks as a whole.&&&&&&&&Signed-off-by: Izik Eidus <ieidus@redhat.com>&&&&Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, qcow2: Avoid shadowing variable in alloc_clusters_noref() The i loop iterator is shadowed by the next free cluster index.  Both&&&&using the variable name 'i' makes the code harder to read.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," qdev: Revert the hack to let -net nic and pci_add set qdev ID Setting the ID in pci_nic_init() is a blatant violation of the&&&&DeviceState abstraction.  Which even carries a comment advising&&&&against this:&&&&&&&&/* This structure should not be accessed directly.  We declare it here&&&&   so that it can be embedded in individual device state structures.  */&&&&&&&&What's worse, it bypasses the code ensuring unique qdev IDs: ""-device&&&&virtio-net-pci,id=foo -net nic,id=foo -net nic,name=foo"" happily&&&&creates three qdevs with ID ""foo"".  That's because qdev relies on&&&&qemu_opts_create() to ensure unique IDs, but -net nic uses a different&&&&QemuOptsList, which means id is in a different namespace.  And its&&&&name is not checked for uniqueness at all.&&&&&&&&-net nic and pci_add are legacy.  Use -device and device_add if you&&&&want a NIC with a qdev ID.&&&&&&&&This reverts what's still left of commit eb54b6dc ""qdev: add id=&&&&support for pci nics.""&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Monitor: Return before exiting with 'quit' The 'quit' Monitor command (implemented by do_quit()) calls&&&&exit() directly, this is problematic under QMP because QEMU&&&&exits before having a chance to send the ok response.&&&&&&&&Clients don't know if QEMU exited because of a problem or&&&&because the 'quit' command has been executed.&&&&&&&&This commit fixes that by moving the exit() call to the main&&&&loop, so that do_quit() requests the system to quit, instead&&&&of calling exit() directly.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0, qcow2: More checks for qemu-img check Implement some more refcount block related checks&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," sh4: Fix compiler warning (fprintf format string) When argument checking is enabled, gcc throws this error:&&&&&&&&error: format not a string literal and no format arguments&&&&&&&&The patch rewrites the statement to satisfy the compiler.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, cris: Prepare for CRISv10. * Add prefix flag and special reg.&&&&* Add interrupt lockout.&&&&* Add CC_OP_MSTEP.&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
0, Monitor: Drop the print disabling mechanism We can ignore calls to monitor_vprintf() in QMP mode and use&&&&monitor_puts() directly in monitor_json_emitter().&&&&&&&&This allows us to drop this ugly hack.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, block/curl: %Z is not a valid conversion specifier Signed-off-by: malc <av1474@comtv.ru>&&&& 
0, loop write in qemu_event_increment upon EINTR Same as what qemu-kvm does.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," target-i386: Fix compiler warning With argument checking for cpu_fprintf, gcc throws this warning:&&&&&&&&  CC    i386-softmmu/helper.o&&&&cc1: warnings being treated as errors&&&&/qemu/ar7/target-i386/helper.c: In function 鈥榗pu_x86_dump_seg_cache鈥?&&&&/qemu/ar7/target-i386/helper.c:220: error: format not a string literal and no format arguments&&&&&&&&The code is correct, but current gcc versions don't detect this.&&&&Therefore the patch rewrites the statement to satisfy the compiler.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, Check availavility of -fstack-protector-all Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, Enable _FORTIFY_SOURCE=2 _FORTIFY_SOURCE is a Glibc feature which adds memory and string function&&&&protection.&&&&&&&&Signed-off-by: Kirill A. Shutemov <kirill@shutemov.name>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," Allocate physical memory in low virtual address space KVM on S390x requires the virtual address space of the guest's RAM to be&&&&within the first 256GB.&&&&&&&&The general direction I'd like to see KVM on S390 move is that this requirement&&&&is losened, but for now that's what we're stuck with.&&&&&&&&So let's just hack up qemu_ram_alloc until KVM behaves nicely :-).&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," posix-aio-compat: Fix error check Checking for nbytes < 0 is pointless as long as it's a size_t. If we want to&&&&use negative numbers for error codes, we should use signed types.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Load global config files by default A new option, -nodefconfig is introduced to prevent loading from the default&&&&config location.  Otherwise, two configuration files will be searched for,&&&&qemu.conf and target-<TARGET_NAME>.conf.&&&&&&&&To ensure that the default configuration is overridden by a user specified&&&&config, we introduce a two stage option parsing mechanism.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, Introduce QList unit-tests This suite contains tests to assure that QList API works as expected.&&&&&&&&To execute it you should have check installed and build QEMU with&&&&check support enabled (--enable-check-utests) and then run:&&&&&&&&$ ./check-qlist&&&&&&&&Patchworks-ID: 35333&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," Check availability of uuid header / library If available, the Universally Unique Identifier library&&&&is used by the vdi block driver.&&&&&&&&Other parts of QEMU (vl.c) could also use it.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, Fix conditional compilation (MIPS host) Compilation for MIPS host (not part of official QEMU)&&&&checks __mips_isa_rev which is not always defined.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," QMP: Output support In the new Monitor output is always performed by only two&&&&functions: do_info() and monitor_call_handler().&&&&&&&&To support QMP output, we modify those functions to check if we&&&&are in control mode. If so, we call monitor_protocol_emitter()&&&&to emit QMP output, otherwise we do regular output.&&&&&&&&QMP has two types of responses to issued commands: success and&&&&error. The outputed data is always a JSON object.&&&&&&&&Success responses have the following format:&&&&&&&&{ ""return"": json-value, ""id"": json-value }&&&&&&&&Error responses have the following format:&&&&&&&&{ ""error"": { ""class"": json-string,&&&&             ""desc"": json-string,&&&&             ""data"": json-value } ""id"": json-value }&&&&&&&&Please, note that the ""id"" key is part of the input code, and&&&&thus is not added in this commit.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," eepro100: Remove unused device status entries Once upon the time when QEMU hacking was fun&&&&there was a brave knight who wanted to have&&&&a driver for a special intel nic.&&&&&&&&So he started by cloning ne2000.c which also&&&&meant that the new born eepro100.c was&&&&immediately three years old.&&&&&&&&Other knights who also wanted to have fun and&&&&take their part in the battle thought that it&&&&would be a good idea to remove stupid code&&&&which says ""missing nic load, missing nic save"".&&&&&&&&They saved everything they saw, man and women,&&&&ne2000 code and runtime address offsets, and&&&&put all saved elements in a prison called&&&&vm data.&&&&&&&&When the first knight came back and noticed&&&&the unhappy prisoners, he wanted to set them&&&&free. But the keepers of the keys told him&&&&that they would have to stay there forever&&&&for compatibility reasons.&&&&&&&&So our brave knight now takes a new effort&&&&to save the souls of the poor prisoners by&&&&removing their names.&&&&&&&&Their bodies will have to rot in the dungeons&&&&of compatibility forever, watched by the&&&&keepers of the keys.&&&&&&&&Patchworks-ID: 35635&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," QEMU: MCE: Add MCE simulation to qemu/tcg - MCE features are initialized when VCPU is intialized according to CPUID.&&&&- A monitor command ""mce"" is added to inject a MCE.&&&&- A new interrupt mask: CPU_INTERRUPT_MCE is added to inject the MCE.&&&&&&&&aliguori: fix build for linux-user&&&&&&&&Signed-off-by: Huang Ying <ying.huang@intel.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Fix hxtool. When converting from hx to texi format, hxtool (or to be&&&&more precise sh which interprets hxtool) used standard&&&&shell expansion of wildcards while writing lines to the&&&&output.&&&&&&&&Thus, something like ""Password: ********""&&&&looked very different in the generated documentation.&&&&&&&&The patch disables this unwanted wildcard expansion.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&& "
0," qcow2: Order concurrent AIO requests on the same unallocated cluster When two AIO requests write to the same cluster, and this cluster is&&&&unallocated, currently both requests allocate a new cluster and the second one&&&&merges the first one when it is completed. This means an cluster allocation, a&&&&read and a cluster deallocation which cause some overhead. If we simply let the&&&&second request wait until the first one is done, we improve overall performance&&&&with AIO requests (specifially, qcow2/virtio combinations).&&&&&&&&This patch maintains a list of in-flight requests that have allocated new&&&&clusters. A second request touching the same cluster is limited so that it&&&&either doesn't touch the allocation of the first request (so it can have a&&&&non-overlapping allocation) or it waits for the first request to complete.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, kvm: Relax aligment check of kvm_set_phys_mem There is no need to reject an unaligned memory region registration if&&&&the region will be I/O memory and it will not split an existing KVM&&&&slot. This fixes KVM support on PPC.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," block-raw: Allow pread beyond the end of growable images When using O_DIRECT, qcow2 snapshots didn't work any more for me. In the&&&&process of creating the snapshot, qcow2 tries to pwrite some new information&&&&(e.g. new L1 table) which will often end up being after the old end of the&&&&image file. Now pwrite tries to align things and reads the old contents of the&&&&file, read returns 0 because there is nothing to read after the end of file and&&&&pwrite is stuck in an endless loop.&&&&&&&&This patch allows to pread beyond the end of an image file. Whenever the&&&&given offset is after the end of the image file, the read succeeds and fills&&&&the buffer with zeros.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," net: Fix -net socket parameter checks My commit ea053add700d8abe203cd79a9ffb082aee4eabc0 broke -net socket by&&&&overwriting an intermediate buffer in the added check_param. Fix this&&&&by switching check_param to automatic buffer allocation and release, ie.&&&&callers no longer have to worry about providing a scratch buffer.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, Use a dedicated function to request exit from execution loop Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6762 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Introduce bdrv_check (Kevin Wolf) From: Kevin Wolf <kwolf@redhat.com>&&&&&&&&Introduce a new bdrv_check function pointer for block drivers. Modify qcow2 to&&&&return an error status in check_refcounts(), so it can implement bdrv_check.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7214 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," monitor: Rework modal password input (Jan Kiszka) Currently, waiting for the user to type in some password blocks the&&&&whole VM because monitor_readline starts its own I/O loop. And this loop&&&&also screws up reading passwords from virtual console.&&&&&&&&Patch below fixes the shortcomings by using normal I/O processing also&&&&for waiting on a password. To keep to modal property for the monitor&&&&terminal, the command handler is temporarily replaced by a password&&&&handler and a callback infrastructure is established to process the&&&&result before switching back to command mode.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6710 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, Remove useless check_ops.sh Suggested by Stuart Brady.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5999 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Fix tap downscript argument (Mark McLoughlin) Kill off the hack that parses info_str for the tap interface&&&&name to pass as the argument to the downscript and, instead,&&&&just explicitly keep a copy of the string for later.&&&&&&&&As reported by John Wong, this commit:&&&&&&&&  Add qemu_format_nic_info_str()&&&&&&&&changed the invocation of downscript from e.g.&&&&&&&&  /path/kvm-ifdown ""tap0""&&&&&&&&to:&&&&&&&&  /path/kvm-ifdown ""tap0,script=/path/kvm-ifup,downscript=/path/kvm-ifdown""&&&&&&&&This fix restores the original behavior.&&&&&&&&Reported-by: John Wong <johnw@wonghome.net>&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6285 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Parse --cc and --cross-prefix earlier and use CC to determine cpu and host We have been relying on uname to determine the host cpu architecture and&&&&operating system.  This is totally broken for cross compilation.  It was&&&&workable in the past because you can manually override both settings but after&&&&the host USB passthrough refactoring, cross host builds were broken.&&&&&&&&This moves the parsing of --cc and --cross-prefix to before the probes for cpu&&&&and host.  Complation testing is used to determine the host and CPU types.  I've&&&&only added checks for i386, x86_64, Linux, and Windows since these are the only&&&&platforms I have access to for testing.  Everything else falls back to uname.&&&&&&&&It should be relatively easy to add the right checks for other platforms and&&&&eliminate uname altogether.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6141 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, target-mips: gen_compute_branch1() Optimize code generation in gen_compute_branch1():&&&&- Directly use I32 variables instead of converting values from _tl to&&&&  _i32 and back to _tl.&&&&- Write the result directly to bcond instead of passing by a local&&&&  variable.&&&&- Temp variables are valid up to and *including* the brcond instruction.&&&&  Use them instead of temp local variables.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5684 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," linux-user: Fix h2g usage in page_find_alloc Paul's comment on my first approach to fix the h2g usage in&&&&page_find_alloc finally open my eyes about what the code is actually&&&&supposed to do:&&&&&&&&With the help of h2g_valid we can no cleanly check if a freshly allocate&&&&page (for host usage) is guest-reachable and, in case it is, mark it&&&&reserved in the guest's address range.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@web.de>&&&&Signed-off-by: Kirill A. Shutemov <kirill@shutemov.name>&&&&Acked-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5957 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Switch the memory savevm handler to be ""live"" This patch replaces the static memory savevm/loadvm handler with a ""live"" one.&&&&This handler is used even if performing a non-live migration.&&&&&&&&The key difference between this handler and the previous is that each page is&&&&prefixed with the address of the page.  The QEMUFile rate limiting code, in&&&&combination with the live migration dirty tracking bits, is used to determine&&&&which pages should be sent and how many should be sent.&&&&&&&&The live save code ""converges"" when the number of dirty pages reaches a fixed&&&&amount.  Currently, this is 10 pages.  This is something that should eventually&&&&be derived from whatever the bandwidth limitation is.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5437 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, Disable OMAP2 combined-io-entries hack now that more regions are allowed. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4879 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," IDE SEEK_STAT flag Add SEEK_STAT in all non-error cases except sleep request, since our&&&&seek times are virtually 0.  Although this flag is deprecated by newer&&&&ATA standards, Linux at least checks it for CD drives, and would timeout&&&&in some case if we do not set it.&&&&&&&&Signed-off-by: Samuel Thibault <samuel.thibault@eu.citrix.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4994 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, Fix MusicPal LCD on non-32 bpp displays or with -nographic. Prevents an immediate segfault.&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4252 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0,  Increase max temps limit git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4074 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Check for 3DNow! CPUID at translation time git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4184 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0,  Enable all alignment checks git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3404 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Fix usermode check, thanks Aurelien Jarno. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2897 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, Check permissions for the last byte first in unaligned slow_st accesses (patch from TeLeMan). git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3665 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, prevent window resizing git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1519 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Test if compiler works instead of checking if binary exists. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1909 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Initialize physical memory space to IO_MEM_UNASSIGNED. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1801 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, suppressed ppc ide hack - fixed read toc for Darwin/PPC git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1509 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Throw RI for invalid MFMC0-class instructions. Introduce optional MIPS_STRICT_STANDARD define to adhere more to the spec than it makes sense in normal operation. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2650 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Windows 2000 install disk full hack (original idea from Vladimir N. Oleynik) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1428 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, temporary hack for PowerPC system emulation git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@436 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, separated readline from monitor code - added password input support - added output buffer git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1034 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, fixed invalid CPL logic in vm86 mode - use generic CPU dump state function git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@142 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," s390x/tcg: implement TEST PROTECTION Linux uses TEST PROTECTION to sense for available memory locations.&&&&&&&&Let's implement what we can for now (just as for the other instructions,&&&&excluding AR mode and special protection mechanisms).&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20171218224616.21030-2-david@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," tests/cpu-plug-test: Check CPU hot-plugging on ppc64, too Hot plugging on ppc64 is possible via ""device_add"", too. Unlike x86,&&&&we must not specify a 'socket-id' and 'thread-id' here, so this needs&&&&to be done with a separate function that just specifies the 'core-id'&&&&during the ""device_add"".&&&&&&&&Reviewed-by: Daniel Barboza <danielhb@linux.vnet.ibm.com>&&&&Tested-by: Daniel Barboza <danielhb@linux.vnet.ibm.com>&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&& "
0, icount: fixed saving/restoring of icount warp timers This patch adds saving and restoring of the icount warp&&&&timers in the vmstate.&&&&It is needed because there timers affect the virtual clock value.&&&&Therefore determinism of the execution in icount record/replay mode&&&&depends on determinism of the timers.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&& 
0," i386: hvf: implement vga dirty page tracking This patch implements setting the tracking of dirty vga pages, using hvf's&&&&interface to protect guest memory. It uses the MemoryListener callback&&&&mechanism through .log_start/stop/sync&&&&&&&&Signed-off-by: Sergio Andres Gomez Del Real <Sergio.G.DelReal@gmail.com>&&&&Message-Id: <20170913090522.4022-13-Sergio.G.DelReal@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, s390x/pci: rework PCI STORE BLOCK Enhance the fault detection.&&&&&&&&Fixup the precedence to check the destination path existance&&&&before checking for the source accessibility.&&&&&&&&Add the maxstbl entry to both the Query PCI Function Group&&&&response and the PCIBusDevice structure.&&&&&&&&Initialize the maxstbl to 128 per default until we get&&&&the actual data from the hardware.&&&&&&&&Signed-off-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Reviewed-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Message-Id: <1512046530-17773-5-git-send-email-pmorel@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& 
0, blockdev: add x-blockdev-set-iothread force boolean When a node is already associated with a BlockBackend the&&&&x-blockdev-set-iothread command refuses to set the IOThread.  This is to&&&&prevent accidentally changing the IOThread when the nodes are in use.&&&&&&&&When the nodes are created with -drive they automatically get a&&&&BlockBackend.  In that case we know nothing is using them yet and it's&&&&safe to set the IOThread.  Add a force boolean to override the check.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20171207201320.19284-4-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," s390x/tcg: don't exit the cpu loop in s390_cpu_virt_mem_rw() s390_cpu_virt_mem_rw() must always return, so callers can react on&&&&an exception (e.g. see ioinst_handle_stcrw()).&&&&&&&&Therefore, using program_interrupt() is wrong. Fix that up.&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20171130162744.25442-9-david@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0, target/arm: Implement TT instruction Implement the TT instruction which queries the security&&&&state and access permissions of a memory location.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1512153879-5291-8-git-send-email-peter.maydell@linaro.org&&&& 
0, target/arm: Handle SPSEL and current stack being out of sync in MSP/PSP reads For v8M it is possible for the CONTROL.SPSEL bit value and the&&&&current stack to be out of sync. This means we need to update&&&&the checks used in reads and writes of the PSP and MSP special&&&&registers to use v7m_using_psp() rather than directly checking&&&&the SPSEL bit in the control register.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1512153879-5291-2-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& 
0," 9pfs: fix v9fs_mark_fids_unreclaim() return value The return value of v9fs_mark_fids_unreclaim() is then propagated to&&&&pdu_complete(). It should be a negative errno, not -1.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," block: Don't request I/O permission with BDRV_O_NO_IO 'qemu-img info' makes sense even when BLK_PERM_CONSISTENT_READ cannot be&&&&granted because of a block job in a running qemu process. It already&&&&sets BDRV_O_NO_IO to indicate that it doesn't access the guest visible&&&&data at all.&&&&&&&&Check the BDRV_O_NO_IO flags in blk_new_open(), so that I/O related&&&&permissions are not unnecessarily requested and 'qemu-img info' can work&&&&even if BLK_PERM_CONSISTENT_READ cannot be granted.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&& "
0," disas: Add capstone as submodule Do not require the submodule, but use it if present.  Allow the&&&&command-line to override system or git submodule either way.&&&&&&&&Tested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Richard Henderson <richard.henderson@linaro.org>&&&& "
0," qga-win: Updating guest_set_time action   At the moment, Windows libraries don't provide a way to access&&&&  RTC, so, a workaround is to use the Windows w32tm command to&&&&  resync the time.&&&&  Related bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1183874&&&&&&&&Signed-off-by: Bishara AbuHattoum <bishara@daynix.com>&&&&Reviewed-by: Sameeh Jubran <sameeh@daynix.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0," cpu-exec: avoid cpu_exec_nocache infinite loop with record/replay This patch ensures that icount_decr.u32.high is clear before calling&&&&cpu_exec_nocache when exception is pending.  Because the exception is&&&&caused by the first instruction in the block and it cannot be executed&&&&without resetting the flag.&&&&&&&&There are two parts in the fix.  First, clear icount_decr.u32.high in&&&&cpu_handle_interrupt (just before processing the ""dependent"" request,&&&&stored in cpu->interrupt_request or cpu->exit_request) rather than&&&&cpu_loop_exec_tb; this ensures that cpu_handle_exception is always&&&&reached with zero icount_decr.u32.high unless another interrupt has&&&&happened in the meanwhile.&&&&&&&&Second, try to cause the exception at the beginning of&&&&cpu_handle_exception, and exit immediately if the TB cannot&&&&execute.  With this change, interrupts are processed and&&&&cpu_exec_nocache can make process.&&&&&&&&Signed-off-by: Maria Klimushenkova <maria.klimushenkova@ispras.ru>&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20171114081818.27640.33165.stgit@pasha-VirtualBox>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," tpm-emulator: fix error handling The previous patch cleaned up a bit error handling, and exposed an&&&&existing bug: error_report_err() could be called with a NULL error.&&&&Instead, make tpm_emulator_set_locality() set the error.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&& "
0," linux-user: Allow -R values up to 0xffff0000 for 32-bit ARM guests The 32-bit ARM validate_guest_space() check tests whether the&&&&specified -R value leaves enough space for us to put the&&&&commpage in at 0xffff0f00. However it was incorrectly doing&&&&a <= check for the check against (guest_base + guest_size),&&&&which meant that it wasn't permitting the guest space to&&&&butt right up against the commpage.&&&&&&&&Fix the comparison, so that -R values all the way up to 0xffff0000&&&&work correctly.&&&&&&&&Reviewed-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0, block/nbd-client: assert qiov len once in nbd_co_request Also improve the assertion: check that qiov is NULL for other commands&&&&than CMD_READ and CMD_WRITE.&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171012095319.136610-2-vsementsov@virtuozzo.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&& 
0," block/nbd-client: simplify check in nbd_co_receive_reply If we are woken up from while() loop in nbd_read_reply_entry&&&&handles must be equal. If we are woken up from&&&&nbd_recv_coroutines_wake_all s->quit must be true, so we do&&&&not need checking handles equality.&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20170920124507.18841-3-vsementsov@virtuozzo.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&& "
0," watchdog: Allow setting action on the fly Currently, the only time that users can set watchdog action is at&&&&the start as all we expose is this -watchdog-action command line&&&&argument. This is suboptimal when users want to plug the device&&&&later via monitor. Alternatively, they might want to change the&&&&action for already existing device on the fly.&&&&&&&&Inspired by: https://bugzilla.redhat.com/show_bug.cgi?id=1447169&&&&&&&&Signed-off-by: Michal Privoznik <mprivozn@redhat.com>&&&&Message-Id: <35d6ce6fe3d357122d73b8272bc8198134c74104.1504771369.git.mprivozn@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&[Missing colon in doc comment fixed]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," tests: Enable the drive_del test also on s390x We can use the drive_del test on s390x, too, to check that adding and&&&&deleting also works fine with the virtio-ccw bus. But we have to make&&&&sure that we use the devices with the ""-ccw"" suffix instead of the&&&&""-pci"" suffix for the virtio-ccw transport on s390x. Introduce a helper&&&&function called qvirtio_get_dev_type() that returns the correct string&&&&for the current architecture.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-Id: <1504190408-11143-1-git-send-email-thuth@redhat.com>&&&&Reviewed-by: David Hildenbrand <david@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0, target/arm: Make MPU_RNR register banked for v8M Make the MPU_RNR register banked if v8M security extensions are&&&&enabled.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1503414539-28762-15-git-send-email-peter.maydell@linaro.org&&&& 
0," vfio, spapr: Fix levels calculation The existing tries to round up the number of pages but @pages is always&&&&calculated as the rounded up value minus one  which makes ctz64() always&&&&return 0 and have create.levels always set 1.&&&&&&&&This removes wrong ""-1"" and allows having more than 1 levels. This becomes&&&&handy for >128GB guests with standard 64K pages as this requires blocks&&&&with zone order 9 and the popular limit of CONFIG_FORCE_MAX_ZONEORDER=9&&&&means that only blocks up to order 8 are allowed.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, tcg/s390: Merge cmpi facilities check to tcg_target_op_def Acked-by: Cornelia Huck <cohuck@redhat.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0, target/arm: [tcg] Port to disas_log Incrementally paves the way towards using the generic instruction translation&&&&loop.&&&&&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Alex Benne茅 <alex.benee@linaro.org>&&&&Message-Id: <150002582711.22386.191527630537864599.stgit@frigg.lan>&&&&[rth: Move tb->size computation and use that result.]&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0, sun4u: expose fw_cfg and NVRAM on ebus PCI IO address space To allow future changes to the sun4u PCI topology.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Acked-By: Artyom Tarasenko <atar4qemu@gmail.com>&&&& 
0," tests/pxe: Check virtio-net-ccw on s390x Now that we've got a firmware that can do TFTP booting on s390x (i.e.&&&&the pc-bios/s390-netboot.img), we can enable the PXE tester for this&&&&architecture, too.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Cornelia Huck <cohuck@redhat.com>&&&&Message-Id: <1502431076-22849-3-git-send-email-thuth@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," loader: Ignore zero-sized ELF segments Some ELF files have program headers that specify segments that&&&&are of zero size. Ignore them, rather than trying to create&&&&zero-length ROM blobs for them, because the zero-length blob&&&&can falsely trigger the overlapping-ROM-blobs check.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Tested-by: Hua Yanghao <huayanghao@gmail.com>&&&&Message-id: 1502116754-18867-3-git-send-email-peter.maydell@linaro.org&&&& "
0," sparc: move adhoc CPUSPARCState initialization to realize time SPARCCPU::env was initialized from previously set properties&&&&(with help of sparc_cpu_parse_features) in cpu_sparc_register().&&&&However there is not reason to keep it there as this task is&&&&typically done at realize time. So move post properties&&&&initialization into sparc_cpu_realizefn, which brings&&&&cpu_sparc_init() closer to cpu_generic_init().&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Tested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <1503592308-93913-6-git-send-email-imammedo@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," migration: optimize the downtime Qemu_savevm_state_cleanup takes about 300ms in my ram migration tests&&&&with a 8U24G vm(20G is really occupied), the main cost comes from&&&&KVM_SET_USER_MEMORY_REGION ioctl when mem.memory_size = 0 in&&&&kvm_set_user_memory_region. In kmod, the main cost is&&&&kvm_zap_obsolete_pages, which traverses the active_mmu_pages list to&&&&zap the unsync sptes.&&&&&&&&It can be optimized by delaying memory_global_dirty_log_stop to the next&&&&vm_start.&&&&&&&&Changes v2->v3:&&&& - NULL VMChangeStateHandler if it is deleted and protect the scenario&&&&   of nested invocations of memory_global_dirty_log_start/stop [Paolo]&&&&&&&&Changes v1->v2:&&&& - create a VMChangeStateHandler in memory.c to reduce the coupling [Paolo]&&&&&&&&Signed-off-by: Jay Zhou <jianjay.zhou@huawei.com>&&&&Message-Id: <1501237733-2736-1-git-send-email-jianjay.zhou@huawei.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," s390x/css: generate solicited crw for rchp completion signaling A successful completion of rchp should signal a solicited channel path&&&&initialized CRW (channel report word), while the current implementation&&&&always generates an un-solicited one. Let's fix this.&&&&&&&&Reported-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Signed-off-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>&&&&Reviewed-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Message-Id: <20170803003527.86979-3-bjsdjshi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," libqtest: always set up signal handler for SIGABRT Currently abort handlers only work for the first test function&&&&in a testcase, because the list of abort handlers is not properly&&&&cleared when qtest_quit() is called.&&&&&&&&qtest_quit() only deletes the kill_qemu_hook but doesn't completely&&&&clear the abrt_hooks list.  The effect is that abrt_hooks.is_setup is&&&&never set to false and in a following test the abrt_hooks list is not&&&&initialized and setup_sigabrt_handler() is not called.&&&&&&&&One way to solve this is to clear the list in qtest_quit(), but&&&&that means only asserts between qtest_start and qtest_quit will&&&&be catched by the abort handler.&&&&&&&&We can make abort handlers work in all cases if we always setup the&&&&signal handler for SIGABRT in qtest_init.&&&&&&&&Signed-off-by: Jens Freimann <jfreimann@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," target/mips: Weaken TLB flush on UX,SX,KX,ASID changes There is no need to invalidate any shadow TLB entries when the ASID&&&&changes or when access to one of the 64-bit segments has been disabled,&&&&since doing so doesn't reveal to software whether any TLB entries have&&&&been evicted into the shadow half of the TLB.&&&&&&&&Therefore weaken the tlb flushes in these cases to only flush the QEMU&&&&TLB.&&&&&&&&Signed-off-by: James Hogan <james.hogan@imgtec.com>&&&&Cc: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Tested-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Signed-off-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&& "
0, slirp: use DIV_ROUND_UP I used the clang-tidy qemu-round check to generate the fix:&&&&https://github.com/elmarco/clang-tools-extra&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>&&&& 
0, s390x/gdb: add gs registers Let's provide the guarded storage registers via gdb server.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& 
0," slirp: Handle error returns from slirp_send() in sosendoob() The code in sosendoob() assumes that slirp_send() always&&&&succeeds, but it might return an OS error code (for instance&&&&if the other end has disconnected). Catch these and return&&&&the caller either -1 on error or the number of urgent bytes&&&&actually written. (None of the callers check this return&&&&value currently, though.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>&&&& "
0," block: expose crypto option names / defs to other drivers The block/crypto.c defines a set of QemuOpts that provide&&&&parameters for encryption. This will also be needed by&&&&the qcow/qcow2 integration, so expose the relevant pieces&&&&in a new block/crypto.h header. Some helper methods taking&&&&QemuOpts are changed to take QDict to simplify usage in&&&&other places.&&&&&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170623162419.26068-2-berrange@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," s390x/kvm: enable guarded storage Introduce guarded storage support for KVM guests on s390.&&&&We need to enable the capability, extend machine check validity,&&&&sigp store-additional-status-at-address, and migration.&&&&&&&&The feature is fenced for older machine type versions.&&&&&&&&Signed-off-by: Fan Zhang <zhangfan@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cohuck@redhat.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0," vl: fix breakage of -tb-size Commit e7b161d573 (""vl: add tcg_enabled() for tcg related code"") adds&&&&a check to exit the program when !tcg_enabled() while parsing the -tb-size&&&&flag.&&&&&&&&It turns out that when the -tb-size flag is evaluated, tcg_enabled() can&&&&only return 0, since it is set (or not) much later by configure_accelerator().&&&&&&&&Fix it by unconditionally exiting if the flag is passed to a QEMU binary&&&&built with !CONFIG_TCG.&&&&&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," stream: Switch stream_run() to byte-based We are gradually converting to byte-based interfaces, as they are&&&&easier to reason about than sector-based.  Change the internal&&&&loop iteration of streaming to track by bytes instead of sectors&&&&(although we are still guaranteed that we iterate by steps that&&&&are sector-aligned).&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, hw/arm/exynos: Declare local variables in some order Bring some more readability by declaring local function variables: first&&&&initialized ones and then the rest (with reversed-christmas-tree order).&&&&&&&&Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," pseries: Reset CPU compatibility mode Currently, the CPU compatibility mode is set when the cpu is initialized,&&&&then again when the guest negotiates features.  This means if a guest&&&&negotiates a compatibility mode, then reboots, that compatibility mode&&&&will be retained across the reset.&&&&&&&&Usually that will get overridden when features are negotiated on the next&&&&boot, but it's still not really correct.  This patch moves the initial set&&&&up of the compatibility mode from cpu init to reset time.  The mode *is*&&&&retained if the reboot was caused by the feature negotiation (it might&&&&be important in that case, though it's unlikely).&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Tested-by: Andrea Bolognani <abologna@redhat.com>&&&& "
0," spapr: Clean up RTAS set-indicator In theory the RTAS set-indicator call can be used for a number of&&&&""indicators"" defined by PAPR.  In practice the only ones we're ever likely&&&&to implement are those used for Dynamic Reconfiguration (i.e. hotplug).&&&&Because of this, the current implementation determines the associated DRC&&&&object, before dispatching based on the type of indicator.&&&&&&&&However, this means we also need a check that we're dealing with a DR&&&&related indicator at all, which duplicates some of the logic from the&&&&switch further down.&&&&&&&&Even though it means a bit of code duplication, things work out cleaner if&&&&we delegate the DRC lookup to the individual indicator type functions -&&&&and it also allows some further cleanups.&&&&&&&&While we're there, remove references to ""sensor"", a copy/paste artefact&&&&from the related, but distinct ""get-sensor"" call.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Acked-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0, char: cast ARRAY_SIZE() as signed to silent warning on empty array chardev/char.c: In function 'chardev_name_foreach':&&&&chardev/char.c:546:19: error: comparison of unsigned expression < 0 is always false [-Werror=type-limits]&&&&     for (i = 0; i < ARRAY_SIZE(chardev_alias_table); i++) {&&&&                   ^&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <20170530120919.8874-1-f4bug@amsat.org>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& 
0," blockjob: remove unnecessary check !job is always checked prior to the call, drop it from here.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Message-id: 20170508141310.8674-2-pbonzini@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," iotests: 055: Don't attach the target image already for drive-backup Double attach is not a valid usage of the target image, drive-backup&&&&will open the blockdev itself so skip the add_drive call in this case.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," pc-bios/s390-ccw: Get Block Limits VPD device data The ""Block Limits"" Inquiry VPD page is optional for any SCSI device,&&&&but if it's supported it provides a hint of the maximum I/O transfer&&&&length for this particular device. If this page is supported by the&&&&disk, let's issue that Inquiry and use the minimum of it and the&&&&SCSI controller limit. That will cover this scenario:&&&&&&&&  qemu-system-s390x ...&&&&    -device virtio-scsi-ccw,id=scsi0,max_sectors=32768 ...&&&&    -drive file=/dev/sda,if=none,id=drive0,format=raw ...&&&&    -device scsi-hd,bus=scsi0.0,channel=0,scsi-id=0,&&&&            drive=drive0,id=disk0,max_io_size=1048576&&&&&&&&controller: 32768 sectors x 512 bytes/sector = 16777216 bytes&&&&      disk:                                     1048576 bytes&&&&&&&&Now that we have a limit for a virtio-scsi disk, compare that with the&&&&limit for the virtio-scsi controller when we actually build the I/O.&&&&The minimum of these two limits should be the one we use.&&&&&&&&Signed-off-by: Eric Farman <farman@linux.vnet.ibm.com>&&&&Message-Id: <20170510155359.32727-7-farman@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0, tcx: ensure tcx_set_dirty() also invalidates the 24-bit plane and cplane Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0, s390x: initialize flic before I/O subsystems Let's have a flic before we move on to initialize more specific&&&&subsystems that make use of it.&&&&&&&&Signed-off-by: Fei Li <sherrylf@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& 
0," s390x/pci: make printf always compile in debug output Wrapped printf calls inside debug macros (DPRINTF) in `if` statement.&&&&This will ensure that printf function will always compile even if debug&&&&output is turned off and, in turn, will prevent bitrot of the format&&&&strings.&&&&&&&&Signed-off-by: Danil Antonov <g.danil.anto@gmail.com>&&&&Message-Id: <CA+KKJYBi31Bs7DtVdzZdwG2t+u5+FGiAhQpd3pqJzUX1O8Cprg@mail.gmail.com>&&&&[CH: remove now misleading comments]&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," vfio: Set MemoryRegionOps:max_access_size and min_access_size Sets valid.max_access_size and valid.min_access_size to ensure safe&&&&8-byte accesses to vfio. Today, 8-byte accesses are broken into pairs&&&&of 4-byte calls that goes unprotected:&&&&&&&&qemu_mutex_lock locked mutex 0x10905ad8&&&&  vfio_region_write  (0001:03:00.0:region1+0xc0, 0x2020c, 4)&&&&qemu_mutex_unlock unlocked mutex 0x10905ad8&&&&qemu_mutex_lock locked mutex 0x10905ad8&&&&  vfio_region_write  (0001:03:00.0:region1+0xc4, 0xa0000, 4)&&&&qemu_mutex_unlock unlocked mutex 0x10905ad8&&&&&&&&which occasionally leads to:&&&&&&&&qemu_mutex_lock locked mutex 0x10905ad8&&&&  vfio_region_write  (0001:03:00.0:region1+0xc0, 0x2030c, 4)&&&&qemu_mutex_unlock unlocked mutex 0x10905ad8&&&&qemu_mutex_lock locked mutex 0x10905ad8&&&&  vfio_region_write  (0001:03:00.0:region1+0xc0, 0x1000c, 4)&&&&qemu_mutex_unlock unlocked mutex 0x10905ad8&&&&qemu_mutex_lock locked mutex 0x10905ad8&&&&  vfio_region_write  (0001:03:00.0:region1+0xc4, 0xb0000, 4)&&&&qemu_mutex_unlock unlocked mutex 0x10905ad8&&&&qemu_mutex_lock locked mutex 0x10905ad8&&&&  vfio_region_write  (0001:03:00.0:region1+0xc4, 0xa0000, 4)&&&&qemu_mutex_unlock unlocked mutex 0x10905ad8&&&&&&&&causing strange errors in guest OS. With this patch, such accesses&&&&are protected by the same lock guard:&&&&&&&&qemu_mutex_lock locked mutex 0x10905ad8&&&&vfio_region_write  (0001:03:00.0:region1+0xc0, 0x2000c, 4)&&&&vfio_region_write  (0001:03:00.0:region1+0xc4, 0xb0000, 4)&&&&qemu_mutex_unlock unlocked mutex 0x10905ad8&&&&&&&&This happens because the 8-byte write should be broken into 4-byte&&&&writes by memory.c:access_with_adjusted_size() in order to be under&&&&the same lock. Today, it's done in exec.c:address_space_write_continue()&&&&which was able to handle only 4 bytes due to a zero'ed&&&&valid.max_access_size (see exec.c:memory_access_size()).&&&&&&&&Signed-off-by: Jose Ricardo Ziviani <joserz@linux.vnet.ibm.com>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," qemu-io-cmds: Assert that global and nofile commands don't use ct->perms It would be a bug for a command with the CMD_NOFILE_OK or&&&&CMD_FLAG_GLOBAL flags set to also set the ct->perms field,&&&&because the former says ""OK for a file not to be open""&&&&but the latter is a check on a file.&&&&&&&&Add an assertion in qemuio_add_command() so we can catch that&&&&sort of buggy command definition immediately rather than it&&&&being a bug that only manifests when a particular set of&&&&command line options is used.&&&&&&&&(Coverity gets confused about this (CID 1371723) and reports&&&&that we might dereference a NULL blk pointer in this case,&&&&because it can't tell that that code path never happens with&&&&the cmdinfo_t that we have. This commit won't help unconfuse&&&&it, but it does fix the underlying issue.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1490967529-4767-1-git-send-email-peter.maydell@linaro.org&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," e500,book3s: mfspr 259: Register mapped/aliased SPRG3 user read This patch registers mfspr 259 for Book3S and e500 family cores&&&&following this research:&&&&&&&&mfspr 259 provides read-only mapped user access to SPRG3(SPR 275) according to:&&&&&&&&- PowerISA 2.02, Book III (documents implementation starting with POWER4+ @ p20)&&&&- IBM PowerPC 970MP RISC Microprocessor User's Manual v2.1, page 48&&&&- Amit Singh: ""Mac OS X Internals: A Systems Approach"" on 970 and 970FX cores:&&&&  He demonstrates mfspr 259 reading TLS data from Mac OS X on G5 on page 588&&&&- NXP documents it in the Core Reference Manuals of: e500, e500mc and e5500&&&&- getcpu() of the 32 & 64-bit Book3S Linux vDSOs use it to read the core number&&&&&&&&mfspr 259 does not appear to be implemented in these cores according to:&&&&&&&&- 74xx series: MPC7410/MPC7400 and MPC7450 RISC Microprocessor Reference Manuals&&&&- 4xx series:  PPC440 Processor User's Manual, Revision 1.09 by AMCC&&&&- 750 series:  IBM PowerPC 750CL RISC Microprocessor User's Manual&&&&- e200 series: e200z4 Power Architecture芒 Core Reference Manual&&&&&&&&Implementation: gen_spr_usprg3() is called from init_proc_book3s_common()&&&&(covers the 970 and POWER cores) and init_proc_e500() (covers the e500 family)&&&&to register spr_read_ureg() in the same way which it already provides&&&&the mapped SPR access for SPR_USPRG4-7 in gen_spr_usprgh() for cores&&&&which have the same read-only mapped SPRG register access for SPRG4-7.&&&&&&&&Verified using Linux by pinning a thread to a core and checking sched_getcpu()&&&&using qemu-system-ppc64 -M pseries -cpu POWER8 using MTTCG on a x86_64 host.&&&&&&&&Signed-off-by: Bernhard Kaindl <bernhard.kaindl@thalesgroup.com>&&&&Reviewed-by: Stefan Resch <stefan.resch@thalesgroup.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," fix :cirrus_vga fix OOB read case qemu Segmentation fault check the validity of parameters in cirrus_bitblt_rop_fwd_transp_xxx&&&&and cirrus_bitblt_rop_fwd_xxx to avoid the OOB read which causes qemu Segmentation fault.&&&&&&&&After the fix, we will touch the assert in&&&&cirrus_invalidate_region:&&&&assert(off_cur_end >= off_cur);&&&&&&&&Signed-off-by: fangying <fangying1@huawei.com>&&&&Signed-off-by: hangaohuai <hangaohuai@huawei.com>&&&&Message-id: 20170314063919.16200-1-hangaohuai@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," bsd-user: align use of mmap_lock to that of linux-user The introduction of stricter mmap_lock checking in translate-all broke&&&&the BSD user build. The working mmap_lock functions were hidden behind&&&&CONFIG_USE_NPTL which is never defined. This patch brings them inline&&&&with linux-user.&&&&&&&&Despite the disapearence of the comment ""We aren't threadsafe to start&&&&with..."" this doesn't make bsd-user so. It will still need the rest of&&&&the fixes that have been done in linux-user ported over.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ohci: relax link check The strict td link limit added by commit ""95ed569 usb: ohci: limit the&&&&number of link eds"" causes problems with macos guests.  Lets raise the&&&&limit.&&&&&&&&Reported-by: Programmingkid <programmingkidx@gmail.com>&&&&Reported-by: Howard Spoelstra <hsp.cat7@gmail.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: BALATON Zoltan <balaton@eik.bme.hu>&&&&Reviewed-by: John Arbuckle <programmingkidx@gmail.com>&&&&Message-id: 1488876018-31576-1-git-send-email-kraxel@redhat.com&&&& "
0," keyval: Restrict key components to valid QAPI names Until now, key components are separated by '.'.  This leaves little&&&&room for evolving the syntax, and is incompatible with the __RFQDN_&&&&prefix convention for downstream extensions.&&&&&&&&Since key components will be commonly used as QAPI member names by the&&&&QObject input visitor, we can just as well borrow the QAPI naming&&&&rules here: letters, digits, hyphen and period starting with a letter,&&&&with an optional __RFQDN_ prefix for downstream extensions.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Message-Id: <1488317230-26248-20-git-send-email-armbru@redhat.com>&&&& "
0," target/ppc: Correct SDR1 masking SDR_64_HTABORG, which indicates the bits of the SDR1 register to use for&&&&the base of a 64-bit machine's hashed page table (HPT) isn't correct.  It&&&&includes the top 46 bits of the register, but in fact the top 4 bits must&&&&be zero (according to the ISA v2.07).  No actual implementation has&&&&supported close to 2^60 bytes of physical address space, so it's kind of&&&&irrelevant, but we might as well correct this.&&&&&&&&In addition, although we checked for bad size values in SDR1, we never&&&&reported an error if entirely invalid bits were set there.  Add this check&&&&to ppc_store_sdr1().&&&&&&&&Reported-by: Suraj Jitindar Singh <sjitindarsingh@gmail.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," sd: sdhci: Remove block count enable check in single block transfers In SDHCI protocol, the 'Block count enable' bit of the Transfer&&&&Mode register is relevant only in multi block transfers. We need&&&&not check it in single block transfers.&&&&&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-id: 20170214185225.7994-5-ppandit@redhat.com&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, niagara: check if a serial port is available Reported-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Artyom Tarasenko <atar4qemu@gmail.com>&&&& 
0," block/rbd: parse all options via bdrv_parse_filename Get rid of qemu_rbd_parsename in favor of bdrv_parse_filename.&&&&This simplifies a lot of the parsing as well, as we can treat everything&&&&a bit simpler since nonexistent options are simply NULL pointers instead&&&&of empty strings.&&&&&&&&An important item to note:&&&&&&&&Ceph has many extra option values that can be specified as key/value&&&&pairs.  This was handled previously in the driver by extracting the&&&&values that the QEMU driver cared about, and then blindly passing all&&&&extra options to rbd after splitting them into key/value pairs, and&&&&cleaning up any special character escaping.&&&&&&&&The practice is continued in this patch; there is an option&&&&""keyvalue-pairs"" that is populated with all the key/value pairs that the&&&&QEMU driver does not care about.  These key/value pairs will override&&&&any settings in the 'conf' configuration file, just as they did before.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," cpu-exec: remove unnecessary check of cpu->exit_request The cpu->exit_request check in cpu_loop_exec_tb is unnecessary,&&&&because cpu->tcg_exit_req is always set after cpu->exit_request.&&&&So let the TB exit and we will pick up the exit request later&&&&in cpu_handle_interrupt.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," vfio: introduce vfio_get_vaddr() A cleanup for vfio_iommu_map_notify(). Now we will fetch vaddr even if&&&&the operation is unmap, but it won't hurt much.&&&&&&&&One thing to mention is that we need the RCU read lock to protect the&&&&whole translation and map/unmap procedure.&&&&&&&&Acked-by: Alex Williamson <alex.williamson@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, util/cutils: Clean up control flow around qemu_strtol() a bit Reorder check_strtox_error() to make it obvious that we always store&&&&through a non-null @endptr.&&&&&&&&Transform&&&&&&&&    if (some error) {&&&&        error case ...&&&&        err = value for error case;&&&&    } else {&&&&        normal case ...&&&&        err = value for normal case;&&&&    }&&&&    return err;&&&&&&&&to&&&&&&&&    if (some error) {&&&&        error case ...&&&&        return value for error case;&&&&    }&&&&    normal case ...&&&&    return value for normal case;&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1487708048-2131-9-git-send-email-armbru@redhat.com>&&&& 
0," net: Mark 'vlan' parameter as deprecated The 'vlan' parameter is a continuous source of confusion for the users,&&&&many people mix it up with the more common term VLAN (the link layer&&&&packet encapsulation), and even if they realize that the QEMU 'vlan' is&&&&rather some kind of network hub emulation, there is still a high risk&&&&that they configure their QEMU networking in a wrong way with this&&&&parameter (e.g. by hooking NICs together, so they get a 'loopback'&&&&between one and the other NIC).&&&&Thus at one point in time, we should finally get rid of the 'vlan'&&&&feature in QEMU. Let's do a first step in this direction by declaring&&&&the 'vlan' parameter as deprecated and informing the users to use the&&&&'netdev' parameter instead.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0, aspeed/smc: handle dummies only in fast read mode HW works fine in normal read mode with dummy bytes being set. So let's&&&&check this case to not transfer bytes.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Message-id: 1486648058-520-4-git-send-email-clg@kaod.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," qemu-char: socket backend: disconnect on write error Socket backend read handler should normally perform a disconnect, however&&&&the read handler may not get a chance to run if the frontend is not ready&&&&(qemu_chr_be_can_write() == 0).&&&&&&&&This means that in virtio-serial frontend case if&&&& - the host has disconnected (giving EPIPE on socket write)&&&& - and the guest has disconnected (-> frontend not ready -> backend&&&&   will not read)&&&& - and there is still data (frontend->backend) to flush (has to be a really&&&&   tricky timing but nevertheless, we have observed the case in production)&&&&&&&&This results in virtio-serial trying to flush this data continiously forming&&&&a busy loop.&&&&&&&&Solution: react on write error in the socket write handler.&&&&errno is not reliable after qio_channel_writev_full(), so we may not get&&&&the exact EPIPE, so disconnect on any error but QIO_CHANNEL_ERR_BLOCK which&&&&io_channel_send_full() converts to errno EAGAIN.&&&&We must not disconnect right away though, there still may be data to read&&&&(see 4bf1cb0).&&&&&&&&Signed-off-by: Anton Nefedov <anton.nefedov@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Daniel P. Berrange <berrange@redhat.com>&&&&CC: Marc-Andr脙漏 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1486045589-8074-1-git-send-email-den@openvz.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," sd: sdhci: check data length during dma_memory_read While doing multi block SDMA transfer in routine&&&&'sdhci_sdma_transfer_multi_blocks', the 's->fifo_buffer' starting&&&&index 'begin' and data length 's->data_count' could end up to be same.&&&&This could lead to an OOB access issue. Correct transfer data length&&&&to avoid it.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reported-by: Jiang Xin <jiangxin1@huawei.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 20170130064736.9236-1-ppandit@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," gdbstub.c: fix GDB connection segfault caused by empty machines This patch is to fix the segmentation fault caused by attaching&&&&GDB to a QEMU instance initialized with ""-M none"" option.&&&&&&&&The bug can be reproduced by&&&&&&&&> ./qemu-system-x86_64 -M none -nographic -S -s&&&&&&&&and attach a GDB to it by&&&&&&&&> gdb -ex 'target remote :1234&&&&&&&&The segmentation fault was originally caused by trying to read&&&&the information about CPU when communicating with GDB. However,&&&&it's impossible for any control flow to exist on an empty machine,&&&&nor can CPU's be hot plugged to an empty machine later by QOM&&&&commands. So I think simply disabling GDB connections on empty&&&&machines makes sense.&&&&&&&&Signed-off-by: Ziyue Yang <skiver.cloud.yzy@gmail.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," arm: virt: Fix segmentation fault when specifying an unsupported CPU Using -cpu cortex-a9 (or any other unsupported CPU) with the virt&&&&board will cause QEMU to segmentation fault.  This bug was introduced&&&&in commit 9ac4ef77, which incorrectly added a NULL terminator when&&&&converting the VirtBoardInfo array into a simple array of strings&&&&defining the valid CPUs. The cpuname_valid() loop already has&&&&a termination condition based on ARRAY_SIZE, so the NULL is&&&&spurious and causes the strcmp() to segfault if we reach it.&&&&Delete the NULL.&&&&&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Message-id: 1484619334-10488-1-git-send-email-zhaoshenglong@huawei.com&&&&[PMM: expanded commit message]&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," xen-platform: add missing disk unplug option The Xen HVM unplug protocol [1] specifies a mechanism to allow guests to&&&&request unplug of 'aux' disks (which is stated to mean all IDE disks,&&&&except the primary master). This patch adds support for that unplug request.&&&&&&&&NOTE: The semantics of what happens if unplug of all disks and 'aux' disks&&&&      is simultaneously requests is not clear. The patch makes that&&&&      assumption that an 'all' request overrides an 'aux' request.&&&&&&&&[1] http://xenbits.xen.org/gitweb/?p=xen.git;a=blob;f=docs/misc/hvm-emulated-unplug.markdown&&&&&&&&Signed-off-by: Paul Durrant <paul.durrant@citrix.com>&&&&Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>&&&&----&&&&Cc: Stefano Stabellini <sstabellini@kernel.org>&&&&Cc: Anthony Perard <anthony.perard@citrix.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Cc: Eduardo Habkost <ehabkost@redhat.com>&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: John Snow <jsnow@redhat.com>&&&& "
0," ui/vnc: Fix problem with sending too many bytes as server name If the buffer is not big enough, snprintf() does not return the number&&&&of bytes that have been written to the buffer, but the number of bytes&&&&that would be needed for writing the whole string. By using this value&&&&for the following vnc_write() calls, we send some junk at the end of&&&&the name in case the qemu_name is longer than 1017 bytes, which could&&&&confuse the VNC clients. Fix this by adding an additional size check&&&&here.&&&&&&&&Buglink: https://bugs.launchpad.net/qemu/+bug/1637447&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1479749115-21932-1-git-send-email-thuth@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qemu-timer: check active_timers outside lock/event This avoids taking the active_timers_lock or resetting/setting the&&&&timers_done_ev if there are no active timers.  This removes a small&&&&(2-3%) source of overhead for dataplane.  The list is then checked&&&&again inside the lock, or a NULL pointer could be dereferenced.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, qdev: hotplug: drop HotplugHandler.post_plug callback as nvdimm acpi is okay to build fit when the nvdimm device&&&&has not been 'realized'&&&&&&&&Suggested-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&& 
0," nbd: Don't inf-loop on early EOF Commit 7d3123e converted a single read_sync() into a while loop&&&&that assumed that read_sync() would either make progress or give&&&&an error. But when the server hangs up early, the client sees&&&&EOF (a read_sync() of 0) and never makes progress, which in turn&&&&caused qemu-iotest './check -nbd 83' to go into an infinite loop.&&&&&&&&Rework the loop to accomodate reads cut short by EOF.&&&&&&&&Reported-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1478551093-32757-1-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," tests: Avoid qobject_from_jsonf(""%""PRId64) The qobject_from_jsonf() function implements a pseudo-printf&&&&language for creating a QObject; however, it is hard-coded to&&&&only parse a subset of formats understood by -Wformat, and is&&&&not a straight synonym to bare printf().  In particular, any&&&&use of an int64_t integer works only if the system's&&&&definition of PRId64 matches what the parser expects; which&&&&works on glibc (%lld or %ld depending on 32- vs. 64-bit) and&&&&mingw (%I64d), but not on Mac OS (%qd).  Rather than enhance&&&&the parser, it is just as easy to force the use of int (where&&&&the value is small enough) or long long instead of int64_t,&&&&which we know always works.&&&&&&&&This should cover all remaining testsuite uses of&&&&qobject_from_json[fv]() that were trying to rely on PRId64,&&&&although my proof for that was done by adding in asserts and&&&&checking that 'make check' still passed, where such asserts&&&&are inappropriate during hard freeze.  A later series in 2.9&&&&may remove all dynamic JSON parsing, but that's a bigger task.&&&&&&&&Reported by: G 3 <programmingkidx@gmail.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1479922617-4400-4-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&[Rename value64 to value_ll]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," block: add gluster ifdef guard checks for SEEK_DATA/SEEK_HOLE support Add checks to see if the system compiling QEMU has support for&&&&SEEK_HOLE/SEEK_DATA.  If the system does not, we will flag that seek&&&&data is unsupported in gluster.&&&&&&&&Note: this is not a check on whether the gluster server itself supports&&&&SEEK_DATA (that is already done during runtime), but rather if the&&&&compilation environment supports SEEK_DATA.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Tested-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 00370bce5c98140d6c56ad5145635ec6551265cc.1475876377.git.jcody@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
0," COLO: Synchronize PVM's state to SVM periodically Do checkpoint periodically, the default interval is 200ms.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Amit Shah <amit@amitshah.net>&&&& "
0," memory: Replace skip_dump flag with ""ram_device"" Setting skip_dump on a MemoryRegion allows us to modify one specific&&&&code path, but the restriction we're trying to address encompasses&&&&more than that.  If we have a RAM MemoryRegion backed by a physical&&&&device, it not only restricts our ability to dump that region, but&&&&also affects how we should manipulate it.  Here we recognize that&&&&MemoryRegions do not change to sometimes allow dumps and other times&&&&not, so we replace setting the skip_dump flag with a new initializer&&&&so that we know exactly the type of region to which we're applying&&&&this behavior.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, COLO: Add a new RunState RUN_STATE_COLO Guest will enter this state when paused to save/restore VM state&&&&under COLO checkpoint.&&&&&&&&Cc: Eric Blake <eblake@redhat.com>&&&&Cc: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Amit Shah <amit@amitshah.net>&&&& 
0," nfs: move nfs_set_events out of the while loops nfs_set_events only needs to be called once before entering the&&&&while loop; afterwards, nfs_process_read and nfs_process_write&&&&take care of it.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1477565348-5458-9-git-send-email-pbonzini@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&& "
0," target-lm32: disable asm logging via LOG_DIS() The lm32 target already has a disassembler which logs the assembly&&&&instructions with ""-d in_asm"". Therefore, turn of the LOG_DIS() macro to&&&&prevent logging the assembly instructions twice. Also turn the macro in a&&&&one which is always compiled to catch any errors while the macro is turned&&&&off.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," spapr_nvram: Pre-initialize the NVRAM to support the -prom-env parameter In case we do not load the NVRAM contents from a file and the user&&&&specified the ""-prom-env"" parameter, use the new CHRP NVRAM helper&&&&functions to pre-initialize the NVRAM partitions, so that the SLOF&&&&firmware now can pick up the environment variables from the -prom-env&&&&parameter, too.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, tests: Restore check-qdict unit test Commit ea3af47 accidentally dropped check-qdict from the list of unit&&&&tests.  Put it back.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1477386565-26225-1-git-send-email-armbru@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, char: start converting mux driver to use CharBackend Start using qemu_chr_fe* CharBackend functions:&&&&initialize a CharBackend and use qemu_chr_fe_set_handlers().&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20161022095318.17775-11-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," COLO: Introduce checkpointing protocol We need communications protocol of user-defined to control&&&&the checkpointing process.&&&&&&&&The new checkpointing request is started by Primary VM,&&&&and the interactive process like below:&&&&&&&&Checkpoint synchronizing points:&&&&&&&&                   Primary               Secondary&&&&                                            initial work&&&&'checkpoint-ready'    <-------------------- @&&&&&&&&'checkpoint-request'  @ -------------------->&&&&                                            Suspend (Only in hybrid mode)&&&&'checkpoint-reply'    <-------------------- @&&&&                      Suspend&Save state&&&&'vmstate-send'        @ -------------------->&&&&                      Send state            Receive state&&&&'vmstate-received'    <-------------------- @&&&&                      Release packets       Load state&&&&'vmstate-load'        <-------------------- @&&&&                      Resume                Resume (Only in hybrid mode)&&&&&&&&                      Start Comparing (Only in hybrid mode)&&&&NOTE:&&&& 1) '@' who sends the message&&&& 2) Every sync-point is synchronized by two sides with only&&&&    one handshake(single direction) for low-latency.&&&&    If more strict synchronization is required, a opposite direction&&&&    sync-point should be added.&&&& 3) Since sync-points are single direction, the remote side may&&&&    go forward a lot when this side just receives the sync-point.&&&& 4) For now, we only support 'periodic' checkpoint, for which&&&&   the Secondary VM is not running, later we will support 'hybrid' mode.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Cc: Eric Blake <eblake@redhat.com>&&&&Cc: Markus Armbruster <armbru@redhat.com>&&&&Cc: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Amit Shah <amit@amitshah.net>&&&& "
0," qemu-doc: merge qemu-tech and qemu-doc Merge what is left of qemu-tech into the main manual as an appendix.&&&&Ultimately we should have a new internals manual built from docs/, and&&&&then the ""Translator Internals"" parts of qemu-tech could move to docs/&&&&as well.  The bits on limitation and features of CPU emulation should&&&&remain in qemu-doc.&&&&&&&&Reviewed-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, target-i386: Move xsave component mask to features array This will reuse the existing check/enforce logic in&&&&x86_cpu_filter_features() to check the xsave component bits&&&&against GET_SUPPORTED_CPUID.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," ui: refactor method for setting up VncDisplay auth types There is a lot of repeated code in the auth type setup method,&&&&particularly around checking TLS credential types. Refactor&&&&it to reduce duplication and instead of having one method&&&&do both plain and websockets at once, call it separately&&&&for each.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1475163940-26094-6-git-send-email-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, tests: allow to specify list of formats to test for check-block.sh This would make code better and allow to test specific format.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Stefan Hajnoczi <stefanha@redhat.com>&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, libqos: define SPAPR libqos functions Define spapr_alloc_init()/spapr_alloc_init_flags()/spapr_alloc_uninit()&&&&&&&&  to allocate and use SPAPR guest memory&&&&&&&&Define qtest_spapr_vboot()/qtest_spapr_boot()/qtest_spapr_shutdown()&&&&&&&&  to start SPAPR guest with QOSState initialized for it (memory management)&&&&&&&&Move qtest_irq_intercept_in() from generic part to PC part.&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," commit: Add 'base' to the reopen queue before 'overlay_bs' Now that we're checking for duplicates in the reopen queue, there's no&&&&need to force a specific order in which the queue is constructed so we&&&&can revert 3db2bd5508c86a1605258bc77c9672d93b5c350e.&&&&&&&&Since both ways of constructing the queue are now valid, this patch&&&&doesn't have any effect on the behavior of QEMU and is not strictly&&&&necessary. However it can help us check that the fix for the reopen&&&&queue is robust: if it stops working properly at some point, iotest&&&&040 will break.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," linux-user: Fix memchr() argument in open_self_cmdline() In open_self_cmdline() we look for a 0 in the buffer we read&&&&from /prc/self/cmdline. We were incorrectly passing the length&&&&of our buf[] array to memchr() as the length to search, rather&&&&than the number of bytes we actually read into it, which could&&&&be shorter. This was spotted by Coverity (because it could&&&&result in our trying to pass a negative length argument to&&&&write()).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," x86-iommu: introduce IEC notifiers This patch introduces x86 IOMMU IEC (Interrupt Entry Cache)&&&&invalidation notifier list. When vIOMMU receives IEC invalidate&&&&request, all the registered units will be notified with specific&&&&invalidation requests.&&&&&&&&Intel IOMMU is the first provider that generates such a event.&&&&&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," spapr_pci: Add a 64-bit MMIO window On real hardware, and under pHyp, the PCI host bridges on Power machines&&&&typically advertise two outbound MMIO windows from the guest's physical&&&&memory space to PCI memory space:&&&&  - A 32-bit window which maps onto 2GiB..4GiB in the PCI address space&&&&  - A 64-bit window which maps onto a large region somewhere high in PCI&&&&    address space (traditionally this used an identity mapping from guest&&&&    physical address to PCI address, but that's not always the case)&&&&&&&&The qemu implementation in spapr-pci-host-bridge, however, only supports a&&&&single outbound MMIO window, however.  At least some Linux versions expect&&&&the two windows however, so we arranged this window to map onto the PCI&&&&memory space from 2 GiB..~64 GiB, then advertised it as two contiguous&&&&windows, the ""32-bit"" window from 2G..4G and the ""64-bit"" window from&&&&4G..~64G.&&&&&&&&This approach means, however, that the 64G window is not naturally aligned.&&&&In turn this limits the size of the largest BAR we can map (which does have&&&&to be naturally aligned) to roughly half of the total window.  With some&&&&large nVidia GPGPU cards which have huge memory BARs, this is starting to&&&&be a problem.&&&&&&&&This patch adds true support for separate 32-bit and 64-bit outbound MMIO&&&&windows to the spapr-pci-host-bridge implementation, each of which can&&&&be independently configured.  The 32-bit window always maps to 2G.. in PCI&&&&space, but the PCI address of the 64-bit window can be configured (it&&&&defaults to the same as the guest physical address).&&&&&&&&So as not to break possible existing configurations, as long as a 64-bit&&&&window is not specified, a large single window can be specified.  This&&&&will appear the same way to the guest as the old approach, although it's&&&&now implemented by two contiguous memory regions rather than a single one.&&&&&&&&For now, this only adds the possibility of 64-bit windows.  The default&&&&configuration still uses the legacy mode.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Laurent Vivier <lvivier@redhat.com>&&&& "
0, target-i386: Add x86_cpu_unrealizefn() First remove VCPU from exec loop and only then remove lapic.&&&&&&&&Signed-off-by: Chen Fan <chen.fan.fnst@cn.fujitsu.com>&&&&Signed-off-by: Gu Zheng <guz.fnst@cn.fujitsu.com>&&&&Signed-off-by: Zhu Guihua <zhugh.fnst@cn.fujitsu.com>&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," vl: exit if a bad property value is passed to -global When passing '-global driver=host-powerpc64-cpu,property=compat,value=foo'&&&&on the command line, without this patch, we get the following warning per&&&&device (which means many lines if the guests has many cpus):&&&&&&&&qemu-system-ppc64: Warning: can't apply global host-powerpc64-cpu.compat=foo:&&&&    Invalid compatibility mode ""foo""&&&&&&&&... and QEMU continues execution, ignoring the property.&&&&&&&&With this patch, we get a single line:&&&&&&&&qemu-system-ppc64: can't apply global host-powerpc64-cpu.compat=foo:&&&&    Invalid compatibility mode ""foo""&&&&&&&&... and QEMU exits.&&&&&&&&The previous behavior is kept for hotplugged devices since we don't want&&&&QEMU to exit when doing device_add.&&&&&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," target-i386: Set physical address bits based on host Add the host-phys-bits boolean property, if true, take phys-bits&&&&from the hosts physical bits value, overriding either the default&&&&or the user specified value.&&&&&&&&We can also use the value we read from the host to check the users&&&&explicitly set value and warn them if it doesn't match.&&&&&&&&Note:&&&&   a) We only read the hosts value in KVM mode (because on non-x86&&&&      we get an abort if we try)&&&&   b) We don't warn about trying to use host-phys-bits in TCG mode,&&&&      we just fall back to the TCG default.  This allows the machine&&&&      type to set the host-phys-bits flag if it wants and then to&&&&      work in both TCG and KVM.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0," block: Convert bdrv_co_discard() to byte-based Another step towards byte-based interfaces everywhere.  Replace&&&&the sector-based bdrv_co_discard() with a new byte-based&&&&bdrv_co_pdiscard(), which silently ignores any unaligned head&&&&or tail.  Driver callbacks will be converted in followup patches.&&&&&&&&By calculating the alignment outside of the loop, and clamping&&&&the max discard to an aligned value, we can simplify the actions&&&&done within the loop.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1468624988-423-2-git-send-email-eblake@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, cris: Fix broken header guard in hw/cris/boot.h Found with scripts/clean-header-guards.pl.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0," qapi-event: Simplify visit of non-implicit data Commit 7ce106a9 documented why we don't generated a visit_type_FOO()&&&&for implicit types; and therefore events with an anonymous type for&&&&'data' have to open-code a visit.  Note that the open-coded visit in&&&&qapi-event.c is slightly different from what is done in&&&&qapi-visit.c for normal types, in part because we don't have to&&&&check for *obj being NULL or free things on error.  But where the&&&&type is not implicit, it is nicer to reuse the normal visit instead&&&&of open-coding a duplicate.&&&&&&&&At the moment, the only event with a non-implicit 'data' is in the&&&&testsuite, where test-qapi-event.c changes as follows:&&&&&&&&|@@ -155,6 +155,7 @@ void qapi_event_send___org_qemu_x_event(&&&&|     __org_qemu_x_Struct param = {&&&&|         __org_qemu_x_member1, (char *)__org_qemu_x_member2, has_q_wchar_t, q_wchar_t&&&&|     };&&&&|+    __org_qemu_x_Struct *arg = &param;&&&&|&&&&|     emit = qmp_event_get_func_emit();&&&&|     if (!emit) {&&&&|@@ -164,16 +165,7 @@ void qapi_event_send___org_qemu_x_event(&&&&|     qmp = qmp_event_build_dict(""__ORG.QEMU_X-EVENT"");&&&&|&&&&|     v = qmp_output_visitor_new(&obj);&&&&|-&&&&|-    visit_start_struct(v, ""__ORG.QEMU_X-EVENT"", NULL, 0, &err);&&&&|-    if (err) {&&&&|-        goto out;&&&&|-    }&&&&|-    visit_type___org_qemu_x_Struct_members(v, &param, &err);&&&&|-    if (!err) {&&&&|-    if (!err) {&&&&|-        visit_check_struct(v, &err);&&&&|-    }&&&&|-    visit_end_struct(v, NULL);&&&&|+    visit_type___org_qemu_x_Struct(v, ""__ORG.QEMU_X-EVENT"", &arg, &err);&&&&|     if (err) {&&&&|         goto out;&&&&|     }&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1468468228-27827-8-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," tests: Use ""command -v"" instead of which(1) in shell scripts When which(1) is not installed, we would complain ""perl not found""&&&&because it's the first set_prog_path check. The error message is&&&&wrong.&&&&&&&&Fix it by using ""command -v"", a native way to query the existence of a&&&&command.&&&&&&&&Suggested-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1416380832-9697-1-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," scsi: Advertise limits by blocksize, not 512 s->blocksize may be larger than 512, in which case our&&&&tweaks to max_xfer_len and opt_xfer_len must be scaled&&&&appropriately.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Reported-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, docs: add NVDIMM ACPI documentation It describes the basic concepts of NVDIMM ACPI and the interfaces&&&&between QEMU and the ACPI BIOS&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, MC146818 RTC: add GPIO access to output IRQ The MC146818 RTC device has output IRQ line. Currently the corresponding field&&&&is only accessible through direct access. Such access violates Qemu model.&&&&&&&&The patch makes the field accessible through GPIO. It also updates the setting&&&&of the IRQ during initialization.&&&&&&&&Signed-off-by: Efimov Vasily <real@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," checkpatch: There is no qemu_strtod() Maybe there should be; but until there is, we should not flag&&&&strtod() calls as something to replaced with qemu_strtod().&&&&&&&&We also lack qemu_strtof() and qemu_strtold(), but as no one&&&&has been using strtof() or strtold(), it's not worth complicating&&&&the regex for them.&&&&&&&&(Ironically, I had to use 'git commit -n' since checkpatch uses&&&&TAB indents, in violation of its own recommendations.)&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1465526889-8339-3-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," target-i386: Move xcc->kvm_required check to realize time It will allow to drop custom cpu_x86_init() and use&&&&cpu_generic_init() instead, reducing cpu_x86_create()&&&&to a simple 3-liner.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0, nvdimm acpi: check revision Currently only revision 1 is supported&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," exec: [tcg] Track which vCPU is performing translation and execution Information is tracked inside the TCGContext structure, and later used&&&&by tracing events with the 'tcg' and 'vcpu' properties.&&&&&&&&The 'cpu' field is used to check tracing of translation-time&&&&events (""*_trans""). The 'tcg_env' field is used to pass it to&&&&execution-time events (""*_exec"").&&&&&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-id: 146549350162.18437.3033661139638458143.stgit@fimbulvetr.bsc.es&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," pc-dimm: get memory region from ->get_memory_region() Curretly, the memory region of backed memory is all directly&&&&mapped to guest's address space, however, it will be not true&&&&for nvdimm device if we introduce nvdimm label which only can&&&&be indirectly accessed by ACPI DSM method&&&&&&&&Also it improves the comments a bit to reflect this fact&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," hw/ptimer: Introduce ptimer_get_limit Currently ptimer users are used to store copy of the limit value, because&&&&ptimer doesn't provide facility to retrieve the limit. Let's provide it.&&&&&&&&Signed-off-by: Dmitry Osipenko <digetx@gmail.com>&&&&Reviewed-by: Peter Crosthwaite <crosthwaite.peter@gmail.com>&&&&Message-id: 8f1fa9f90d8dbf8086fb02f3b4835eaeb4089cf6.1464367869.git.digetx@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," i2c: add aspeed i2c controller The Aspeed AST2400 integrates a set of 14 I2C/SMBus bus controllers&&&&directly connected to the APB bus. They can be programmed as master or&&&&slave but the propopsed model only supports the master mode.&&&&&&&&On the TODO list, we also have :&&&&&&&& - improve and harden the state machine.&&&& - bus recovery support (used by the Linux driver).&&&& - transfer mode state machine bits. this is not strictly necessary as&&&&   it is mostly used for debug. The bus busy bit is deducted from the&&&&   I2C core engine of qemu.&&&& - support of the pool buffer: 2048 bytes of internal SRAM (not used&&&&   by the Linux driver).&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Reviewed-by: Andrew Jeffery <andrew@aj.id.au>&&&&Message-id: 1464704307-25178-1-git-send-email-clg@kaod.org&&&&[PMM: removed unused functions aspeed_i2c_bus_get_state() and&&&& aspeed_i2c_bus_set_state()]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," migration: ensure qemu_fflush() always writes full data amount The QEMUFile writev_buffer / put_buffer functions are expected&&&&to write out the full set of requested data, blocking until&&&&complete. The qemu_fflush() caller does not expect to deal with&&&&partial writes. Clarify the function comments and add a sanity&&&&check to the code to catch mistaken implementations.&&&&&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Message-Id: <1461751518-12128-5-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
0," cpu: Reclaim vCPU objects In order to deal well with the kvm vcpus (which can not be removed without any&&&&protection), we do not close KVM vcpu fd, just record and mark it as stopped&&&&into a list, so that we can reuse it for the appending cpu hot-add request if&&&&possible. It is also the approach that kvm guys suggested:&&&&https://www.mail-archive.com/kvm@vger.kernel.org/msg102839.html&&&&&&&&Signed-off-by: Chen Fan <chen.fan.fnst@cn.fujitsu.com>&&&&Signed-off-by: Gu Zheng <guz.fnst@cn.fujitsu.com>&&&&Signed-off-by: Zhu Guihua <zhugh.fnst@cn.fujitsu.com>&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&               [- Explicit CPU_REMOVE() from qemu_kvm/tcg_destroy_vcpu()&&&&                  isn't needed as it is done from cpu_exec_exit()&&&&                - Use iothread mutex instead of global mutex during&&&&                  destroy&&&&                - Don't cleanup vCPU object from vCPU thread context&&&&                  but leave it to the callers (device_add/device_del)]&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," linux-user: Support for restarting system calls for OpenRISC targets Update the OpenRISC main loop code:&&&& * on TARGET_ERESTARTSYS, wind guest PC backwards to repeat syscall insn&&&& * handle TARGET_QEMU_ESIGRETURN in the main loop as the indication&&&&   that the main loop should not touch any guest CPU state&&&&&&&&(We don't implement sigreturn on this target so there is no&&&&code there to update.)&&&&&&&&Signed-off-by: Timothy Edward Baldwin <T.E.Baldwin99@members.leeds.ac.uk>&&&&Message-id: 1441497448-32489-31-git-send-email-T.E.Baldwin99@members.leeds.ac.uk&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&[PMM: tweak commit message; drop TARGET_USE_ERESTARTSYS define]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0, cpus: call the core nmi injection function We can call the common function here directly since&&&&x86 specific actions will be taken care of by the arch&&&&specific nmi handler&&&&&&&&Signed-off-by: Bandan Das <bsd@redhat.com>&&&&Message-Id: <1463761717-26558-4-git-send-email-bsd@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0, translate-all: add missing munmap of the code_gen guard page for MIPS Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Message-Id: <1461283314-2353-2-git-send-email-cota@braap.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," qmp-input: Clean up stack handling Management of the top of stack was a bit verbose; creating a&&&&temporary variable and adding some comments makes the existing&&&&code more legible before the next few patches improve things.&&&&No semantic changes other than asserting that we are always&&&&visiting a QObject, and not a NULL value.  In particular, the&&&&check for 'name && qobject_type(qobj) == QTYPE_QDICT)' is a&&&&bit overkill (a dict visit should always have a name); a later&&&&patch revisits that, while this patch is only changing one&&&&layer of indentation due to dropping 'if (qobj)'.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1461879932-9020-5-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," qemu-img: Fix preallocation with -S 0 for convert When passing -S 0 to qemu-img convert, the target image is supposed to&&&&be fully allocated. Right now, this is not the case if the source image&&&&contains areas which bdrv_get_block_status() reports as being zero.&&&&&&&&This patch changes a zeroed area's status from BLK_ZERO to BLK_DATA&&&&before invoking convert_write() if -S 0 has been specified. In addition,&&&&the check whether convert_read() actually needs to do anything&&&&(basically only if the current area is a BLK_DATA area) is pulled out of&&&&that function to the caller.&&&&&&&&If -S 0 has been specified, zeroed areas need to be written as data to&&&&the output, thus they then have to be accounted when calculating the&&&&progress made.&&&&&&&&This patch changes the reference output for iotest 122; contrary to what&&&&it assumed, -S 0 really should allocate everything in the output, not&&&&just areas that are filled with zeros (as opposed to being zeroed).&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," hyperv: cpu hotplug fix with HyperV enabled With Hyper-V enabled CPU hotplug stops working. The CPU appears&&&&in device manager on Windows but does not appear in peformance&&&&monitor and control panel.&&&&&&&&The root of the problem is the following. Windows checks&&&&HV_X64_CPU_DYNAMIC_PARTITIONING_AVAILABLE bit in CPUID. The&&&&presence of this bit is enough to cure the situation.&&&&&&&&The bit should be set when CPU hotplug is allowed for HyperV VM.&&&&The check that hot_add_cpu callback is defined is enough from the&&&&protocol point of view. Though this callback is defined almost&&&&always thus there is no need to export that knowledge in the&&&&other way.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Roman Kagan <rkagan@virtuozzo.com>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Richard Henderson <rth@twiddle.net>&&&&CC: Eduardo Habkost <ehabkost@redhat.com>&&&&CC: ""Andreas F盲rber"" <afaerber@suse.de>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
0, s390x/cpu: Cleanup init in preparation for hotplug Ensure a valid cpu_model is set upfront by setting the&&&&default value directly into the MachineState when none is&&&&specified.  This is needed to ensure hotplugged CPUs share&&&&the same cpu_model.&&&&&&&&Signed-off-by: Matthew Rosato <mjrosato@linux.vnet.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Message-Id: <1457112875-5209-2-git-send-email-mjrosato@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& 
0, spapr_pci: kill useless variable in rtas_ibm_change_msi() The num local variable is initialized to zero and has no writer.&&&&&&&&Signed-off-by: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
0," qapi: Rename 'fields' to 'members' in generated C code C types and JSON objects don't have fields, but members.  We&&&&shouldn't gratuitously invent terminology.  This patch is a&&&&strict renaming of static genarated functions, plus the naming&&&&of the dummy filler member for empty structs, before the next&&&&patch exposes some of that naming to the rest of the code base.&&&&&&&&Suggested-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1457021813-10704-3-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," target-arm: Add Hyp mode checks to bad_mode_switch() We don't actually support Hyp mode yet, but add the correct&&&&checks for it to the bad_mode_switch() function for completeness.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Message-id: 1455556977-3644-8-git-send-email-peter.maydell@linaro.org&&&& "
0," qemu-iotests: Extend iotest 093 to test bursts This patch adds a new test that checks that the burst settings&&&&('iops_max', 'iops_max_length', etc.) of the throttling code work as&&&&expected.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," blockdev: Keep track of monitor-owned BDS As a side effect, we can now make x-blockdev-del's check whether a BDS&&&&is actually owned by the monitor explicit.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qmp-shell: fix pretty printing of JSON responses Pretty printing of JSON responses is important to be able to understand&&&&large responses from query commands in particular. Unfortunately this&&&&was broken during the addition of the verbose flag in&&&&&&&&  commit 1ceca07e48ead0dd2e41576c81d40e6a91cafefd&&&&  Author: John Snow <jsnow@redhat.com>&&&&  Date:   Wed Apr 29 15:14:04 2015 -0400&&&&&&&&    scripts: qmp-shell: Add verbose flag&&&&&&&&This is because that change turned the python data structure into a&&&&formatted JSON string before the pretty print was given it. So we're&&&&just pretty printing a string, which is a no-op.&&&&&&&&The original pretty printer would output python objects.&&&&&&&&(QEMU) query-chardev&&&&{   u'return': [   {   u'filename': u'vc',&&&&                       u'frontend-open': False,&&&&                       u'label': u'parallel0'},&&&&                   {   u'filename': u'vc',&&&&                       u'frontend-open': True,&&&&                       u'label': u'serial0'},&&&&                   {   u'filename': u'unix:/tmp/qemp,server',&&&&                       u'frontend-open': True,&&&&                       u'label': u'compat_monitor0'}]}&&&&&&&&This fixes the problem by switching to outputting pretty formatted JSON&&&&text instead. This has the added benefit that the pretty printed output&&&&is now valid JSON text. Due to the way the verbose flag was handled, the&&&&pretty printing now applies to the command sent, as well as its response:&&&&&&&&(QEMU) query-chardev&&&&{&&&&    ""execute"": ""query-chardev"",&&&&    ""arguments"": {}&&&&}&&&&{&&&&    ""return"": [&&&&        {&&&&            ""frontend-open"": false,&&&&            ""label"": ""parallel0"",&&&&            ""filename"": ""vc""&&&&        },&&&&        {&&&&            ""frontend-open"": true,&&&&            ""label"": ""serial0"",&&&&            ""filename"": ""vc""&&&&        },&&&&        {&&&&            ""frontend-open"": true,&&&&            ""label"": ""compat_monitor0"",&&&&            ""filename"": ""unix:/tmp/qmp,server""&&&&        }&&&&    ]&&&&}&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1456224706-1591-1-git-send-email-berrange@redhat.com>&&&&Tested-by: Kashyap Chamarthy <kchamart@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&[Bonus fix: multiple -p now work]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," pseries: Simplify handling of the hash page table fd When migrating the 'pseries' machine type with KVM, we use a special fd&&&&to access the hash page table stored within KVM.  Usually, this fd is&&&&opened at the beginning of migration, and kept open until the migration&&&&is complete.&&&&&&&&However, if there is a guest reset during the migration, the fd can become&&&&stale and we need to re-open it.  At the moment we use an 'htab_fd_stale'&&&&flag in sPAPRMachineState to signal this, which is checked in the migration&&&&iterators.&&&&&&&&But that's rather ugly.  It's simpler to just close and invalidate the&&&&fd on reset, and lazily re-open it in migration if necessary.  This patch&&&&implements that change.&&&&&&&&This requires a small addition to the machine state's instance_init,&&&&so that htab_fd is initialized to -1 (telling the migration code it&&&&needs to open it) instead of 0, which could be a valid fd.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&& "
0," fdc: add disk field Currently, 'drive' is used both to represent the current diskette&&&&type as well as the current drive type.&&&&&&&&This patch adds a 'disk' field that is updated explicitly to match&&&&the type of the disk.&&&&&&&&As of this patch, disk and drive are always the same, but forthcoming&&&&patches to change the behavior of pick_geometry will invalidate this&&&&assumption.&&&&&&&&disk does not need to be migrated because it is not user-visible state&&&&nor is it currently used for any calculations. It is purely informative,&&&&and will be rebuilt automatically via fd_revalidate on the new host.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1453495865-9649-5-git-send-email-jsnow@redhat.com&&&& "
0," iotests: 018: Use TEST_IMG override instead of ""mv"" Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1450752561-9300-2-git-send-email-famz@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," io: use memset instead of { 0 } for initializing array Some versions of GCC on OS-X complain about CMSG_SPACE&&&&not being constant size, which prevents use of { 0 }&&&&&&&&io/channel-socket.c: In function 'qio_channel_socket_writev':&&&&io/channel-socket.c:497:18: error: variable-sized object may not be initialized&&&&     char control[CMSG_SPACE(sizeof(int) * SOCKET_MAX_FDS)] = { 0 };&&&&&&&&The compiler is at fault here, but it is nicer to avoid&&&&tickling this compiler bug by using memset instead.&&&&&&&&Reviewed-By: John Arbuckle <programmingkidx@gmail.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
0," block: Rename BLOCK_OP_TYPE_MIRROR to BLOCK_OP_TYPE_MIRROR_SOURCE It's necessary to distinguish source and target before we can add&&&&blockdev-mirror, because we would want a concrete type of operation to&&&&check on target bs before starting.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1450932306-13717-2-git-send-email-famz@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," eepro100: Prevent two endless loops http://lists.nongnu.org/archive/html/qemu-devel/2015-11/msg04592.html&&&&shows an example how an endless loop in function action_command can&&&&be achieved.&&&&&&&&During my code review, I noticed a 2nd case which can result in an&&&&endless loop.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
0," vmw_pvscsi: Introduce 'x-old-pci-configuration' backword compatability property Following the previous patches, which introduced various changes in&&&&pvscsi's pci configuration space (device subsystem id and revision, msi&&&&offset), this patch introduces a boolean property&&&&'x-old-pci-configuration' to pvscsi.&&&&&&&&Its default value is false, exposing the above changes in the pci config&&&&space.&&&&&&&&Setting 'x-old-pci-configuration' to 'on' preserves the old behavior,&&&&which allows migration to older versions.&&&&&&&&Signed-off-by: Shmulik Ladkani <shmulik.ladkani@ravellosystems.com>&&&&Message-Id: <1449994112-7054-4-git-send-email-shmulik.ladkani@ravellosystems.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ohci: delay first SOF interrupt On overcommitted CPU, kernel can be so slow that an interrupt can&&&&be triggered by the device whereas the driver is not ready to receive&&&&it. This drives us into an infinite loop.&&&&&&&&This does not happen on real hardware because real hardware never send&&&&interrupt immediately after the controller has been moved to OPERATION state.&&&&&&&&This patch tries to delay the first SOF interrupt to let driver exits from&&&&the critical section (which is not protected against interrupts...)&&&&&&&&Some details:&&&&&&&&- ohci_irq(): the OHCI interrupt handler, acknowledges the SOF IRQ&&&&  only if the state of the driver (rh_state) is OHCI_STATE_RUNNING.&&&&  So if this interrupt happens and the driver is not in this state,&&&&  the function is called again and again, moving the system to a&&&&  CPU starvation.&&&&&&&&- ohci_rh_resume(): the driver re-enables operation with OHCI_USB_OPER.&&&&  In QEMU this start the SOF timer and QEMU starts to send IRQs. As&&&&  the driver is not in OHCI_STATE_RUNNING and not protected against IRQ,&&&&  the ohci_irq() can be called and the driver never moved to&&&&  OHCI_STATE_RUNNING.&&&&&&&&Suggested-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Message-id: 1452109525-32150-2-git-send-email-lvivier@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," nvdimm acpi: build ACPI NFIT table NFIT is defined in ACPI 6.0: 5.2.25 NVDIMM Firmware Interface Table (NFIT)&&&&&&&&Currently, we only support PMEM mode. Each device has 3 structures:&&&&- SPA structure, defines the PMEM region info&&&&&&&&- MEM DEV structure, it has the @handle which is used to associate specified&&&&  ACPI NVDIMM  device we will introduce in later patch.&&&&  Also we can happily ignored the memory device's interleave, the real&&&&  nvdimm hardware access is hidden behind host&&&&&&&&- DCR structure, it defines vendor ID used to associate specified vendor&&&&  nvdimm driver. Since we only implement PMEM mode this time, Command&&&&  window and Data window are not needed&&&&&&&&The NVDIMM functionality is controlled by the parameter, 'nvdimm', which&&&&is introduced for the machine, there is a example to enable it:&&&&-machine pc,nvdimm -m 8G,maxmem=100G,slots=100  -object \&&&&memory-backend-file,id=mem1,share,mem-path=/tmp/nvdimm1,size=10G -device \&&&&nvdimm,memdev=mem1,id=nv1&&&&&&&&It is disabled on default&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, aio: Introduce aio_context_setup This is the place to initialize platform specific bits of AioContext.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1446177989-6702-3-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," target-arm/translate-a64.c: Correct unallocated checks for ldst_excl The checks for the unallocated encodings in the ldst_excl group&&&&(exclusives and load-acquire/store-release) were not correct. This&&&&error meant that in turn we ended up with code attempting to handle&&&&the non-existent case of ""non-exclusive load-acquire/store-release&&&&pair"". Delete that broken and now unreachable code.&&&&&&&&Reported-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&& "
0, replay: replay blockers for devices Some devices are not supported by record/replay subsystem.&&&&This patch introduces replay blocker which denies starting record/replay&&&&if such devices are included into the configuration.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20150917162512.8676.11367.stgit@PASHA-ISP.def.inno>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&& 
0, replay: command line options This patch introduces command line options for enabling recording or replaying&&&&virtual machine behavior. These options are added to icount command line&&&&parameter. They include 'rr' which switches between record and replay&&&&and 'rrfile' for specifying the filename for replay log.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20150917162518.8676.70792.stgit@PASHA-ISP.def.inno>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&& 
0, target-i386: Enable clflushopt/clwb/pcommit instructions These instructions are used by NVDIMM drivers and the specification is&&&&located at:&&&&https://software.intel.com/sites/default/files/managed/0d/53/319433-022.pdf&&&&&&&&There instructions are available on Skylake Server.&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," ivshmem: print error on invalid peer id The server shouldn't send invalid peer id, so print an error if it's the&&&&case.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Claudio Fontana <claudio.fontana@huawei.com>&&&& "
0," tests: Convert to new qapi union layout We have two issues with our qapi union layout:&&&&1) Even though the QMP wire format spells the tag 'type', the&&&&C code spells it 'kind', requiring some hacks in the generator.&&&&2) The C struct uses an anonymous union, which places all tag&&&&values in the same namespace as all non-variant members. This&&&&leads to spurious collisions if a tag value matches a non-variant&&&&member's name.&&&&&&&&Make the conversion to the new layout for testsuite code.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1445898903-12082-15-git-send-email-eblake@redhat.com>&&&&[Commit message tweaked slightly]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," block/raw_bsd: Drop raw_is_inserted() With the new automatically-recursive implementation of&&&&bdrv_is_inserted() checking by default whether all the children of a BDS&&&&are inserted, we can drop raw's own implementation.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," vmsvga: more cursor checks Check the cursor size more carefully.  Also switch to unsigned while&&&&being at it, so they can't be negative.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qga: add QGA_CONF environment variable Having a environment variable allows to override default configuration&&&&path, useful for testing. Note that this can't easily be an argument,&&&&since loading config is done before parsing the arguments.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0, target-i386: Make check_hw_breakpoints static The function is now only used from within a single file.&&&&&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
0," utils: rename strtosz to use qemu prefix Not only it makes sense, but it gets rid of checkpatch warning:&&&&WARNING: consider using qemu_strtosz in preference to strtosz&&&&&&&&Also remove get rid of tabs to please checkpatch.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1442419377-9309-1-git-send-email-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," s390x/event-facility: fix receive mask check For selective read event, we need to check if any event is requested&&&&that is not active instead of whether none of the requested events is&&&&active.&&&&&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Reviewed-by: Eric Farman <farman@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," linux-user: add name_to_handle_at/open_by_handle_at This patch allows to run example given by open_by_handle_at(2):&&&&&&&&      The following shell session demonstrates the use of these two programs:&&&&&&&&           $ echo 'Can you please think about it?' > cecilia.txt&&&&           $ ./t_name_to_handle_at cecilia.txt > fh&&&&           $ ./t_open_by_handle_at < fh&&&&           open_by_handle_at: Operation not permitted&&&&           $ sudo ./t_open_by_handle_at < fh      # Need CAP_SYS_ADMIN&&&&           Read 31 bytes&&&&           $ rm cecilia.txt&&&&&&&&       Now  we delete and (quickly) re-create the file so that it has the same&&&&       content and (by chance) the  same  inode.[...]&&&&&&&&           $ stat --printf=""%i\n"" cecilia.txt     # Display inode number&&&&           4072121&&&&           $ rm cecilia.txt&&&&           $ echo 'Can you please think about it?' > cecilia.txt&&&&           $ stat --printf=""%i\n"" cecilia.txt     # Check inode number&&&&           4072121&&&&           $ sudo ./t_open_by_handle_at < fh&&&&           open_by_handle_at: Stale NFS file handle&&&&&&&&See the man page for source code.&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," ipxe: don't override GITVERSION We had build problems due to the git version checking in the ipxe build&&&&system in the past.  Don't remember the details, but the problem seems&&&&to be gone now, so lets remove the workaround.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&&&&&[ most likely ipxe commit 6153c09c41034250408f3596555fcaae715da46c:&&&&  [build] Set GITVERSION only if there is a git repository ]&&&&&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&& "
0," qapi: Document flaws in checking of names We don't actually enforce our ""other than downstream extensions [...],&&&&all names should begin with a letter"" rule.  Add a FIXME.&&&&&&&&We should reject names that differ only in '_' vs. '.'  vs. '-',&&&&because they're liable to clash in generated C.  Add a FIXME.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," s390/sclp: rework sclp event facility initialization + device realization The current code only works by chance. The event facility is a sysbus&&&&device, but specifies in its class structure as parent the DeviceClass&&&&(instead of a device class).&&&&&&&&The init function in return lies therefore at the same position as&&&&the init function of SysBusDeviceClass and gets triggered instead -&&&&a very bad idea of doing that (e.g. the parameter types don't match).&&&&&&&&Let's bring the initialization code up to date, initializing the event&&&&facility + child events in .instance_init and moving the realization of&&&&the child events out of the init call, into the realization step.&&&&&&&&Device realization is now automatically performed when the event facility&&&&itself is realized. That realization implicitly triggers realization of&&&&the child bus, which in turn initializes the events.&&&&&&&&Please note that we have to manually propagate the realization of the bus&&&&children, common code still has a TODO set for that task.&&&&&&&&Reviewed-by: Matthew Rosato <mjrosato@linux.vnet.ibm.com>&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0, xen: Drop net_rx_ok Let net_rx_packet() (which checks the same conditions) drops the packet&&&&if the device is not ready. Drop net_xen_info.can_receive and update the&&&&return value for the buffer full case.&&&&&&&&We rely on the qemu_flush_queued_packets() in net_event() to wake up&&&&the peer when the buffer becomes available again.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1438077176-378-1-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," tcg/optimize: allow constant to have copies Now that copies and constants are tracked separately, we can allow&&&&constant to have copies, deferring the choice to use a register or a&&&&constant to the register allocation pass. This prevent this kind of&&&&regular constant reloading:&&&&&&&&-OUT: [size=338]&&&&+OUT: [size=298]&&&&   mov    -0x4(%r14),%ebp&&&&   test   %ebp,%ebp&&&&   jne    0x7ffbe9cb0ed6&&&&   mov    $0x40002219f8,%rbp&&&&   mov    %rbp,(%r14)&&&&-  mov    $0x40002219f8,%rbp&&&&   mov    $0x4000221a20,%rbx&&&&   mov    %rbp,(%rbx)&&&&   mov    $0x4000000000,%rbp&&&&   mov    %rbp,(%r14)&&&&-  mov    $0x4000000000,%rbp&&&&   mov    $0x4000221d38,%rbx&&&&   mov    %rbp,(%rbx)&&&&   mov    $0x40002221a8,%rbp&&&&   mov    %rbp,(%r14)&&&&-  mov    $0x40002221a8,%rbp&&&&   mov    $0x4000221d40,%rbx&&&&   mov    %rbp,(%rbx)&&&&   mov    $0x4000019170,%rbp&&&&   mov    %rbp,(%r14)&&&&-  mov    $0x4000019170,%rbp&&&&   mov    $0x4000221d48,%rbx&&&&   mov    %rbp,(%rbx)&&&&   mov    $0x40000049ee,%rbp&&&&   mov    %rbp,0x80(%r14)&&&&   mov    %r14,%rdi&&&&   callq  0x7ffbe99924d0&&&&   mov    $0x4000001680,%rbp&&&&   mov    %rbp,0x30(%r14)&&&&   mov    0x10(%r14),%rbp&&&&   mov    $0x4000001680,%rbp&&&&   mov    %rbp,0x30(%r14)&&&&   mov    0x10(%r14),%rbp&&&&   shl    $0x20,%rbp&&&&   mov    (%r14),%rbx&&&&   mov    %ebx,%ebx&&&&   mov    %rbx,(%r14)&&&&   or     %rbx,%rbp&&&&   mov    %rbp,0x10(%r14)&&&&   mov    %rbp,0x90(%r14)&&&&   mov    0x60(%r14),%rbx&&&&   mov    %rbx,0x38(%r14)&&&&   mov    0x28(%r14),%rbx&&&&   mov    $0x4000220e60,%r12&&&&   mov    %rbx,(%r12)&&&&   mov    $0x40002219c8,%rbx&&&&   mov    %rbp,(%rbx)&&&&   mov    0x20(%r14),%rbp&&&&   sub    $0x8,%rbp&&&&   mov    $0x4000004a16,%rbx&&&&   mov    %rbx,0x0(%rbp)&&&&   mov    %rbp,0x20(%r14)&&&&   mov    $0x19,%ebp&&&&   mov    %ebp,0xa8(%r14)&&&&   mov    $0x4000015110,%rbp&&&&   mov    %rbp,0x80(%r14)&&&&   xor    %eax,%eax&&&&   jmpq   0x7ffbebcae426&&&&   lea    -0x5f6d72a(%rip),%rax        # 0x7ffbe3d437b3&&&&   jmpq   0x7ffbebcae426&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
0," rbd: make qemu's cache setting override any ceph setting To be safe, when cache=none is used ceph settings should not be able&&&&to override it to turn on caching. This was previously possible with&&&&rbd_cache=true in the rbd device configuration or a ceph configuration&&&&file. Similarly, rbd settings could have turned off caching when qemu&&&&requested it, although this would just be a performance problem.&&&&&&&&Fix this by changing rbd's cache setting to match qemu after all other&&&&ceph settings have been applied.&&&&&&&&Signed-off-by: Josh Durgin <jdurgin@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, libqos/ahci: edit wait to be ncq aware The wait command should check to make sure SACT is clear as well&&&&as the Command Issue register.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1435016308-6150-12-git-send-email-jsnow@redhat.com&&&& 
0," l2tpv3: Drop l2tpv3_can_send This callback is called by main loop before polling s->fd, if it returns&&&&false, the fd will not be polled in this iteration.&&&&&&&&This is redundant with checks inside read callback. After this patch,&&&&the data will be copied from s->fd to s->msgvec when it arrives. If the&&&&device can't receive, it will be queued to incoming_queue, and when the&&&&device status changes, this queue will be flushed.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1433400324-7358-4-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," virtio-scsi: move qdev properties into virtio-scsi.c As only one place in virtio-scsi.c uses DEFINE_VIRTIO_SCSI_PROPERTIES&&&&and DEFINE_VIRTIO_SCSI_FEATURES, there is no need to expose them. Inline&&&&them into virtio-scsi.c to avoid wrongly use.&&&&&&&&Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," memory: use mr->ram_addr in ""is this RAM?"" assertions mr->terminates alone doesn't guarantee that we are looking at a RAM region.&&&&mr->ram_addr also has to be checked, in order to distinguish RAM and I/O&&&&regions.&&&&&&&&So, do the following:&&&&&&&&1) add a new define RAM_ADDR_INVALID, and test it in the assertions&&&&instead of mr->terminates&&&&&&&&2) IOMMU regions were not setting mr->ram_addr to a bogus value, initialize&&&&it in the instance_init function so that the new assertions would fire&&&&for IOMMU regions as well.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," mc146818rtc: Reset the periodic timer on load When loading a VM from a snapshot or migration, clock changes can cause&&&&the periodic timer to stall or loop rapidly.&&&&&&&&qemu-timer has a reset notifier mechanism that is used to avoid timer&&&&stalls or loops if the host clock changes while the VM is running when&&&&using QEMU_CLOCK_HOST.  However, when loading a snapshot or migration,&&&&qemu-timer is initialized and fires the reset notifier before&&&&mc146818rtc is initialized and has registered its reset handler.  In&&&&addition, this mechanism isn't used when using QEMU_CLOCK_REALTIME,&&&&which might also change when loading a snapshot or migration.&&&&&&&&To correct that problem, this commit resets the periodic timer after&&&&loading from a snapshot or migration if the clock has either jumped&&&&backward or has jumped forward by more than the clock jump limit that&&&&is used by the reset notifier code in qemu-timer.&&&&&&&&Signed-off-by: Paul Donohue <qemu-git@PaulSD.com>&&&&Message-Id: <20150612141013.GE2749@TopQuark.net>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," ui/console: remove dpy_gfx_update_dirty dpy_gfx_update_dirty expects DIRTY_MEMORY_VGA logging to be always on,&&&&but that will not be the case soon.  Because it computes the memory&&&&region on the fly for every update (with memory_region_find), it cannot&&&&enable/disable logging by itself.&&&&&&&&We could always treat updates as invalidations if dirty logging is&&&&not enabled, assuming that the board will enable logging on the&&&&RAM region that includes the framebuffer.&&&&&&&&However, the function is unused, so just drop it.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-s390x: use softmmu functions for mvcp/mvcs mvcp and mvcs helper get access to the physical memory by a call to&&&&mmu_translate for the virtual to real conversion and then using ldb_phys&&&&and stb_phys to physically access the data. In practice this is quite&&&&slow because it bypasses the QEMU softmmu TLB and because stb_phys calls&&&&try to invalidate the corresponding memory for each access.&&&&&&&&Instead use cpu_ldb_{primary,secondary} for the loads and&&&&cpu_stb_{primary,secondary} for the stores. Ideally this should be&&&&further optimized by a call to memcpy, but that already improves the&&&&boot time of a guest by a factor 1.8.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, virtio-s390: introduce virito s390 queue limit Cc: Alexander Graf <agraf@suse.de>&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," hw/acpi: piix4_pm_init(): take fw_cfg object no more This PIIX4 init function has no more reason to receive a pointer to the&&&&FwCfg object. Remove the parameter from the prototype, and update callers.&&&&&&&&As a result, the pc_init1() function no longer needs to save the return&&&&value of pc_memory_init() and xen_load_linux(), which makes it more&&&&similar to pc_q35_init().&&&&&&&&The return type & value of pc_memory_init() and xen_load_linux() are not&&&&changed themselves; maybe we'll need their return values sometime later.&&&&&&&&RHBZ: https://bugzilla.redhat.com/show_bug.cgi?id=1204696&&&&Cc: Amit Shah <amit.shah@redhat.com>&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Cc: Eduardo Habkost <ehabkost@redhat.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&& "
0," util: move read_password method out of qemu-img into osdep/oslib The qemu-img.c file has a read_password() method impl that is&&&&used to prompt for passwords on the console, with impls for&&&&POSIX and Windows. This will be needed by qemu-io.c too, so&&&&move it into the QEMU osdep/oslib files where it can be shared&&&&without code duplication&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," virtio-ccw: implement ->device_plugged Let's move operations that are only valid after the backend has been&&&&realized to a ->device_plugged callback, just as virtio-pci does.&&&&Also reorder setting up the host feature bits to the sequence used&&&&by virtio-pci.&&&&&&&&While we're at it, also add a ->device_unplugged callback to stop&&&&ioeventfd, just to be on the safe side.&&&&&&&&Reviewed-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Message-Id: <1429627016-30656-3-git-send-email-cornelia.huck@de.ibm.com>&&&& "
0," util: socket: Add missing localaddr and localport option for DGRAM socket The 'socket_optslist' structure does not contain the 'localaddr' and&&&&'localport' options that are parsed in case you are creating a&&&&'connect' type UDP character device.&&&&&&&&I've noticed it happening after commit f43e47dbf6de24db20ec9b588bb6cc762&&&&made qemu abort() after seeing the invalid option.&&&&&&&&A minimal reproducer for the case is:&&&&$ qemu-system-x86_64 -chardev udp,id=charrng0,host=127.0.0.1,port=1234,localaddr=,localport=1234&&&&qemu-system-x86_64: -chardev udp,id=charrng0,host=127.0.0.1,port=1234,localaddr=,localport=1234: Invalid parameter 'localaddr'&&&&Aborted (core dumped)&&&&&&&&Prior to the commit mentioned above the error would be printed but the&&&&value for localaddr and localport was simply ignored. I did not go&&&&through the code to find out when it was broken.&&&&&&&&Add the two fields so that the options can again be parsed correctly and&&&&qemu doesn't abort().&&&&&&&&Resolves: https://bugzilla.redhat.com/show_bug.cgi?id=1220252&&&&&&&&Signed-off-by: Peter Krempa <pkrempa@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," qapi: More rigourous checking of types Now that we know every expression is valid with regards to&&&&its keys, we can add further tests that those keys refer to&&&&valid types.  With this patch, all uses of a type (the 'data':&&&&of command, type, union, alternate, and event; the 'returns':&&&&of command; the 'base': of type and union) must resolve to an&&&&appropriate subset of metatypes  declared by the current qapi&&&&parse; this includes recursing into each member of a data&&&&dictionary.  Dealing with '**' and nested anonymous structs&&&&will be done in later patches.&&&&&&&&Update the testsuite to match improved output.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," rcu tests: fix compilation on 32-bit ppc 32-bit PPC cannot do atomic operations on long long.  Inside the loops,&&&&we are already using local counters that are summed at the end of&&&&the run---with some exceptions (rcu_stress_count for rcutorture,&&&&n_nodes for test-rcu-list): fix them to use the same technique.&&&&For test-rcu-list, remove the mostly unused member ""val"" from the&&&&list.  Then, use a mutex to protect the global counts.&&&&&&&&Performance does not matter there because every thread will only enter&&&&the critical section once.&&&&&&&&Remaining uses of atomic instructions are for ints or pointers.&&&&&&&&Reported-by: Andreas Faerber <afaerber@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0, virtio: validate the existence of handle_output before calling it We don't validate the existence of handle_output which may let a buggy&&&&guest to trigger a SIGSEV easily. E.g:&&&&&&&&1) write 10 to queue_sel to a virtio net device with only 1 queue&&&&2) setup an arbitrary pfn&&&&3) then notify queue 10&&&&&&&&Fixing this by validating the existence of handle_output before.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Don Koch <dkoch@verizon.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&& 
0, virtio-blk: Check return value of blk_aio_ioctl Since commit 1dc936aa84 (virtio-blk: Use blk_aio_ioctl) we silently lose&&&&the request if blk_aio_ioctl returns NULL (not implemented).&&&&&&&&Fix it by directly returning VIRTIO_BLK_S_UNSUPP as we used to do.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&&&&&[ kwolf: Fixed build error on win32 ]&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," scsi-hd: fix property unset case Commit c53659f0 (""BlockConf: Call backend functions to detect geometry&&&&and blocksizes"") causes a segmentation fault on the invalid&&&&configuration of a scsi device without a drive.&&&&&&&&Let's check for conf.blk before calling blkconf_blocksizes. The error&&&&will be handled later on in scsi_realize anyway.&&&&&&&&Reported-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Ekaterina Tumanova <tumanova@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," bios linker: validate pointer within table buios linker assumes pointer parameter it gets&&&&is within table, validate this.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
0, timer: replace time() with QEMU_CLOCK_HOST This patch replaces time() function calls with calls to&&&&qemu_clock_get_ns(QEMU_CLOCK_HOST). It makes such requests deterministic&&&&in record/replay mode of icount.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&&Message-Id: <20150227131102.11912.89850.stgit@PASHA-ISP>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," qemu-img: Suppress unhelpful extra errors in convert, resize add_old_style_options() for img_convert() and img_resize() use&&&&qemu_opt_set(), which reports errors with qerror_report_err().  Its&&&&error messages aren't helpful here, the caller reports one that&&&&actually makes sense.  Reproducer:&&&&&&&&    $ qemu-img convert -B raw in.img out.img&&&&    qemu-img: Invalid parameter 'backing_file'&&&&    qemu-img: Backing file not supported for file format 'raw'&&&&&&&&Switch to qemu_opt_set_err() to get rid of the unwanted messages.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
0," s390x/mmu: Add support for read-only regions If the ""DAT-protection"" bit is set in the region table entry and EDAT is&&&&enabled, only read accesses are allowed in the corresponding memory area.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0, s390x/mmu: Check table length and offset fields The ACSEs have a table length field and the region entries have&&&&table length and offset fields which must be checked during&&&&translation to see whether the given virtual address is really&&&&covered by the translation table.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& 
0," exec: protect mru_block with RCU Hence, freeing a RAMBlock has to be switched to call_rcu.&&&&&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," qemu-sockets: improve error reporting in unix_listen_opts Coverity complains about not checking the returned value of mkstemp.  While&&&&at it, also improve error checking for snprintf, and refine error messages&&&&in general.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," vhost-scsi: add a property for booting Because Qemu only accept an wwpn argument for vhost-scsi, we&&&&cannot assign a tpgt. That's say tpg is transparent for Qemu, Qemu&&&&doesn't know which tpg can boot, but vhost-scsi driver module&&&&doesn't know too for one assigned wwpn.&&&&&&&&At present, we assume that the first tpg can boot only, and add&&&&a boot_tpgt property that defaults to 0. Of course, people can&&&&pass a valid value by qemu command line.&&&&&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," block/dmg: factor out block type check In preparation for adding bzip2 support, split the type check into a&&&&separate function. Make all offsets relative to the begin of a chunk&&&&such that it is easier to recognize the position without having to&&&&add up all offsets. Some comments are added to describe the fields.&&&&&&&&There is no functional change.&&&&&&&&Signed-off-by: Peter Wu <peter@lekensteyn.nl>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1420566495-13284-11-git-send-email-peter@lekensteyn.nl&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, gen-icount: check cflags instead of use_icount global Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," qemu-iotests: Add supported os parameter for python tests If I understand correctly, qemu-iotests never meant to be portable. We&&&&only support Linux for all the shell cases, but didn't specify it for&&&&python tests. Now add this and default all the python tests as Linux&&&&only. If we cares enough later, we can override the parameter in&&&&individual cases.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," spice: reduce refresh rate in native mode Now that cursor updates are out of the way qxl needs the refresh timer&&&&only when when running in vga mode, for dirty bitmap checking.  In&&&&native qxl mode the guest will notify us, so we don't need to poll and&&&&can use the idle interval (one refresh wakeup every few seconds).&&&&&&&&Cc: Marc-Andr茅 Lureau <marcandre.lureau@gmail.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, target-arm: make PAR banked When EL3 is running in AArch32 (or ARMv7 with Security Extensions)&&&&PAR has a secure and a non-secure instance.&&&&&&&&Signed-off-by: Fabian Aggeler <aggelerf@ethz.ch>&&&&Signed-off-by: Greg Bellows <greg.bellows@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1416242878-876-23-git-send-email-greg.bellows@linaro.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, target-arm: make IFSR banked When EL3 is running in AArch32 (or ARMv7 with Security Extensions)&&&&IFSR has a secure and a non-secure instance.  Adds IFSR32_EL2 definition and&&&&storage.&&&&&&&&Signed-off-by: Fabian Aggeler <aggelerf@ethz.ch>&&&&Signed-off-by: Greg Bellows <greg.bellows@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1416242878-876-20-git-send-email-greg.bellows@linaro.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0, pc: explicitly check maxmem limit when adding DIMM Currently maxmem limit is not checked and depends on&&&&hotplug region container not being able to fit more RAM&&&&than maxmem. Do check explicitly so that it would&&&&be possible to change hotplug container size later&&&&to deal with fragmentation.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, net: The third parameter of getsockname should be initialized Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, apic_common: migrate missing fields This patch adds missed sipi_vector and wait_for_sipi fields to a new&&&&subsection of the vmstate of the apic_common module. Saving and loading&&&&of these fields makes migration of the apic state deterministic.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&&[Initialize the field in pre_load and kvm_apic_realize. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," block/vdi: Limit maximum size even futher The block layer read and write functions do not like requests which are&&&&bigger than INT_MAX bytes. Since the VDI bmap is read and written in a&&&&single operation, its size is therefore limited accordingly. This&&&&reduces the maximum VDI image size supported by QEMU to half of what it&&&&currently is (down to approximately 512 TB).&&&&&&&&The VDI test 084 has to be adapted accordingly. Actually, one could&&&&clearly see that it was broken from the ""Could not open&&&&'TEST_DIR/t.IMGFMT': Invalid argument"" line for an image which was&&&&supposed to work just fine.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Peter Lieven <pl@kamp.de>&&&& "
0," linuxboot: compute initrd loading address Even though hw/i386/pc.c tries to compute a valid loading address for the&&&&initrd, close to the top of RAM, this does not take into account other&&&&data that is malloced into that memory by SeaBIOS.&&&&&&&&Luckily we can easily look at the memory map to find out how much memory is&&&&used up there.  This patch places the initrd in the first four gigabytes,&&&&below the first hole (as returned by INT 15h, AX=e801h).&&&&&&&&Without this patch:&&&&[    0.000000] init_memory_mapping: [mem 0x07000000-0x07fdffff]&&&&[    0.000000] RAMDISK: [mem 0x0710a000-0x07fd7fff]&&&&&&&&With this patch:&&&&[    0.000000] init_memory_mapping: [mem 0x07000000-0x07fdffff]&&&&[    0.000000] RAMDISK: [mem 0x07112000-0x07fdffff]&&&&&&&&So linuxboot is able to use the 64k that were added as padding for&&&&QEMU <= 2.1.&&&&&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," blockdev: Orphaned drive search When users use command line options like -hda, -cdrom,&&&&or even -drive if=ide, it is up to the board initialization&&&&routines to pick up these drives and create backing&&&&devices for them.&&&&&&&&Some boards, like Q35, have not been doing this.&&&&However, there is no warning explaining why certain&&&&drive specifications are just silently ignored,&&&&so this function adds a check to print some warnings&&&&to assist users in debugging these sorts of issues&&&&in the future.&&&&&&&&This patch will not warn about drives added with if_none,&&&&for which it is not possible to tell in advance if&&&&the omission of a backing device is an issue.&&&&&&&&A warning in these cases is considered appropriate.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1412187569-23452-2-git-send-email-jsnow@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-arm: Report a valid L1Ip field in CTR_EL0 for CPU type ""any"" For the CPU type ""any"" (only used with linux-user) we were reporting&&&&the L1Ip field as 0b00, which is reserved. Change this field to 0b10&&&&instead, indicating a VIPT icache as the comment describes.&&&&&&&&Reported-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Message-id: 1412966807-20844-1-git-send-email-peter.maydell@linaro.org&&&& "
0, raw-posix: Fix build without posix_fallocate() Check for the presence of posix_fallocate() in configure and only&&&&compile in support for PREALLOC_MODE_FALLOC when it's there.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
0," .travis.yml: remove ""make check"" from main matrix There are problems with unreliability in ""make check"" which still need&&&&to be tracked down. As the tests are broadly the same for all targets if&&&&added one explicit target to the matrix to run it. However this does&&&&build all softmmu targets to ensure they at least ""run""&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Alexander Graf <agraf@suse.de>&&&&Reviewed-by: Brian Jackson <iggy@theiggy.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," tests: avoid running duplicate qom-tests Since 3687d532 we've been unconditionally adding qom-test to our qtests&&&&for every arch. However, some archs inherit their tests from Makefile&&&&variables for other archs, such as i386/x86_64,&&&&microblaze/microblazeel, and xtensa/xtensaeb. Since these are evaluated&&&&in a lazy manner, we ultimately end up adding qom-test twice.&&&&&&&&In the case x86_64, where we have a large number of machine types that&&&&we rerun qom-test for, this has lead to a fairly noticeable increase&&&&in the overall run-time of `make check` (78s vs. 42s on my machine).&&&&Similar speed-ups are visible for other such archs, but not nearly as&&&&significant.&&&&&&&&Fix this by only adding qom-test to an arch's test list if it's not&&&&already present.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," block: Validate node-name The device_name of a BlockDriverState is currently checked because it is&&&&always used as a QemuOpts ID and qemu_opts_create() checks whether such&&&&IDs are wellformed.&&&&&&&&node-name is supposed to share the same namespace, but it isn't checked&&&&currently. This patch adds explicit checks both for device_name and&&&&node-name so that the same rules will still apply even if QemuOpts won't&&&&be used any more at some point.&&&&&&&&qemu-img used to use names with spaces in them, which isn't allowed any&&&&more. Replace them with underscores.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, blkdebug: show an error for invalid event names It is easy to typo a blkdebug configuration and waste a lot of time&&&&figuring out why no rules are matching.&&&&&&&&Push the Error** down into add_rule() so we can report an error when the&&&&event name is invalid.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, ppc: synchronize excp_vectors for injecting exception This patch synchronizes env->excp_vectors[] with env->iovr[].&&&&This is required for using the existing interrupt injection mechanism&&&&for kvm.&&&&&&&&Signed-off-by: Bharat Bhushan <Bharat.Bhushan@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," ide/ahci: Check for -ECANCELED in aio callbacks Before, bdrv_aio_cancel will either complete the request (like normal)&&&&and call CB with an actual return code, or skip calling the request (for&&&&example when the IO req is not submitted by thread pool yet).&&&&&&&&We will change bdrv_aio_cancel to do it differently: always call CB&&&&before return, with either [1] a normal req completion ret code, or [2]&&&&ret == -ECANCELED. So the callers' callback must accept both cases. The&&&&existing logic works with case [1], but not [2].&&&&&&&&The simplest transition of callback code is do nothing in case [2], just&&&&as if the CB is not called by the bdrv_aio_cancel() call.&&&&&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," spapr: Refactor spapr_populate_memory() to allow memoryless nodes Current QEMU does not support memoryless NUMA nodes, however&&&&actual hardware may have them so it makes sense to have a way&&&&to emulate them in QEMU. This prepares SPAPR for that.&&&&&&&&This moves 2 calls of spapr_populate_memory_node() into&&&&the existing loop over numa nodes so first several nodes may&&&&have no memory and this still will work.&&&&&&&&If there is no numa configuration, the code assumes there is just&&&&a single node at 0 and it has all the guest memory.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," virtio-net: don't run bh on vm stopped commit 783e7706937fe15523b609b545587a028a2bdd03&&&&    virtio-net: stop/start bh when appropriate&&&&&&&&is incomplete: BH might execute within the same main loop iteration but&&&&after vmstop, so in theory, we might trigger an assertion.&&&&I was unable to reproduce this in practice,&&&&but it seems clear enough that the potential is there, so worth fixing.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reported-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," checkpatch.pl: adjust typedef definition to QEMU coding style Most QEMU typedefs are camelcase, starting with one uppercase letter&&&&and containing at least one lowercase letter.  There are a few&&&&all-uppercase types, add the most common too.&&&&&&&&This fixes recognition of types in lines such as&&&&&&&&    static __attribute__((unused)) inline void tcg_out8(TCGContext *s, uint8_t v)&&&&&&&&(Example provided by Peter Maydell).&&&&&&&&Reported-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," pc-dimm: validate node property If user specifies a node number that exceeds the available numa nodes in&&&&emulated system for pc-dimm device, the device will report an invalid _PXM&&&&to OSPM. Fix this by checking the node property value.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Hu Tao <hutao@cn.fujitsu.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," block: vpc - use block layer ops in vpc_create, instead of posix calls Use the block layer to create, and write to, the image file in the VPC&&&&.bdrv_create() operation.&&&&&&&&This has a couple of benefits: Images can now be created over protocols,&&&&and hacks such as NOCOW are not needed in the image format driver, and&&&&the underlying file protocol appropriate for the host OS can be relied&&&&upon.&&&&&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," virtio-rng: Add human-readable error message for negative max-bytes parameter If a negative integer is used for the max_bytes parameter, QEMU currently&&&&calls abort() and leaves behind a core dump. This patch replaces the&&&&abort with a simple error message to make the reason for the termination&&&&clearer. This also ensures device-hotplug with invalid input doesn't&&&&cause qemu to quit.&&&&&&&&There is an underlying insufficiency in the parameter parsing code of QEMU&&&&that renders it unable to reject negative values for unsigned properties,&&&&thus the error message ""a non-negative integer below 2^63"" is the most&&&&user-friendly and correct message we can give until the underlying&&&&insufficiency is corrected.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
0," AioContext: speed up aio_notify In many cases, the call to event_notifier_set in aio_notify is unnecessary.&&&&In particular, if we are executing aio_dispatch, or if aio_poll is not&&&&blocking, we know that we will soon get to the next loop iteration (if&&&&necessary); the thread that hosts the AioContext's event loop does not&&&&need any nudging.&&&&&&&&The patch includes a Promela formal model that shows that this really&&&&works and does not need any further complication such as generation&&&&counts.  It needs a memory barrier though.&&&&&&&&The generation counts are not needed because any change to&&&&ctx->dispatching after the memory barrier is okay for aio_notify.&&&&If it changes from zero to one, it is the right thing to skip&&&&event_notifier_set.  If it changes from one to zero, the&&&&event_notifier_set is unnecessary but harmless.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," exec: fix migration with devices that use address_space_rw Devices that use address_space_rw to write large areas to memory&&&&(as opposed to address_space_map/unmap) were broken with respect&&&&to migration since fe680d0 (exec: Limit translation limiting in&&&&address_space_translate to xen, 2014-05-07).  Such devices include&&&&IDE CD-ROMs.&&&&&&&&The reason is that invalidate_and_set_dirty (called by address_space_rw&&&&but not address_space_map/unmap) was only setting the dirty bit for&&&&the first page in the translation.&&&&&&&&To fix this, introduce cpu_physical_memory_set_dirty_range_nocode that&&&&is the same as cpu_physical_memory_set_dirty_range except it does not&&&&muck with the DIRTY_MEMORY_CODE bitmap.  This function can be used if&&&&the caller invalidates translations with tb_invalidate_phys_page_range.&&&&&&&&There is another difference between cpu_physical_memory_set_dirty_range&&&&and cpu_physical_memory_set_dirty_flag; the former includes a call&&&&to xen_modified_memory.  This is handled separately in&&&&invalidate_and_set_dirty, and is not needed in other callers of&&&&cpu_physical_memory_set_dirty_range_nocode, so leave it alone.&&&&&&&&Just one nit: now that invalidate_and_set_dirty takes care of handling&&&&multiple pages, there is no need for address_space_unmap to wrap it&&&&in a loop.  In fact that loop would now be O(n^2).&&&&&&&&Reported-by: Dave Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Tested-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," AioContext: do not rely on aio_poll(ctx, true) result to end a loop Currently, whenever aio_poll(ctx, true) has completed all pending&&&&work it returns true *and* the next call to aio_poll(ctx, true)&&&&will not block.&&&&&&&&This invariant has its roots in qemu_aio_flush()'s implementation&&&&as ""while (qemu_aio_wait()) {}"".  However, qemu_aio_flush() does&&&&not exist anymore and bdrv_drain_all() is implemented differently;&&&&and this invariant is complicated to maintain and subtly different&&&&from the return value of GMainLoop's g_main_context_iteration.&&&&&&&&All calls to aio_poll(ctx, true) except one are guarded by a&&&&while() loop checking for a request to be incomplete, or a&&&&BlockDriverState to be idle.  The one remaining call (in&&&&iothread.c) uses this to delay the aio_context_release/acquire&&&&pair until the AioContext is quiescent, however:&&&&&&&&- we can do the same just by using non-blocking aio_poll,&&&&  similar to how vl.c invokes main_loop_wait&&&&&&&&- it is buggy, because it does not ensure that the AioContext&&&&  is released between an aio_notify and the next time the&&&&  iothread goes to sleep.  This leads to hangs when stopping&&&&  the dataplane thread.&&&&&&&&In the end, these semantics are a bad match for the current&&&&users of AioContext.  So modify that one exception in iothread.c,&&&&which also fixes the hangs, as well as the testcase so that&&&&it use the same idiom as the actual QEMU code.&&&&&&&&Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," nbd: Don't export a block device with no medium. The device is exported with erroneous values and can't be read.&&&&&&&&Before the patch:&&&&$ sudo nbd-client localhost -p 10809 /dev/nbd0 -name floppy0&&&&Negotiation: ..size = 17592186044415MB&&&&bs=1024, sz=18446744073709547520 bytes&&&&&&&&$ sudo mount /dev/nbd0 /mnt/tmp/&&&&mount: block device /dev/nbd0 is write-protected, mounting read-only&&&&mount: /dev/nbd0: can't read superblock&&&&&&&&After the patch:&&&&(qemu) nbd_server_add ide0-hd0&&&&(qemu) nbd_server_add floppy0&&&&Device 'floppy0' has no medium&&&&&&&&Signed-off-by: Hani Benhabiles <kroosec@gmail.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," irq: Slim conversion of qemu_irq to QOM As a prequel to any big Pin refactoring plans, do an in-place conversion&&&&of qemu_irq to an Object, so that we can reference it in link<> properties.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&[ PC Changes:&&&& * Removed array-alloctor ref counting logic (limit changes just to&&&& * single IRQ allocator)&&&& * Removed WIP marking from subject line&&&&]&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," signal/ppc/{save,restore}_user_regs remove __put/get error checks As __get_user and __put_user do not return errors, remove the&&&&if checks from around them. This allows making the save/restore&&&&functions void.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Alexander Graf <agraf@suse.de>&&&& "
0, KVM: PPC: Expose fixup hcall capability New kvm versions expose a PPC_FIXUP_HCALL capability. Make it visible to&&&&machine code so we can take decisions based on it.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0, s390x: cleanup interrupt injection Remove the need for a cpu to inject a floating interrupt on kvm.&&&&&&&&Acked-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& 
0, net: cadence_gem: Add Tx descriptor fetch printf Add a debug printf for TX descriptor fetching. This is helpful to anyone&&&&needing to debug TX ring buffer traversal. It is also now consistent with&&&&the RX code which has a similar printf.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0," target-i386: simplify SMAP handling in MMU_KSMAP_IDX Do not use this MMU index at all if CR4.SMAP is false, and drop&&&&the SMAP check from x86_cpu_handle_mmu_fault.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-ppc: Merge 970FX and 970MP into a single 970 class The differences between classes were:&&&&1. SLB size, was 32 for 970 and 64 for others, should be 64 for all;&&&&2. check_pow() callback, HID0 format is the same so should be the same&&&&0x01C00000 which means ""deep nap"", ""doze"" and ""nap"" bits set;&&&&3. LPCR - 970 does not have it but 970MP had one (by mistake).&&&&&&&&This fixes wrong differences and makes one 970 class.&&&&&&&&This fixes wrong registration of LPCR which is not present on 970.&&&&&&&&This defines HID0 bits and uses them in check_pow_970().&&&&&&&&This does not copy MSR_SHV (Hypervisor State, HV) bit from 970FX to&&&&970 class as we do not emulate hypervisor in QEMU anyway.&&&&&&&&This does not remove check_pow_970FX now as it is still used by POWER5+&&&&class, this will be addressed later.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, vfio: Fix 128 bit handling Upcoming VFIO on SPAPR PPC64 support will initialize the IOMMU&&&&memory region with UINT64_MAX (2^64 bytes) size so int128_get64()&&&&will assert.&&&&&&&&The patch takes care of this check. The existing type1 IOMMU code&&&&is not expected to map all 64 bits of RAM so the patch does not&&&&touch that part.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& 
0," target-xtensa: fix cross-page jumps/calls at the end of TB Use tb->pc instead of dc->pc to check for cross-page jumps.&&&&When TB translation stops at the page boundary dc->pc points to the next&&&&page allowing chaining to TBs in it, which is wrong.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
0," console: nicer initial screen Now that we have a function to create a fancy DisplaySurface with a&&&&message for the user, to handle non-existing graphics hardware, we&&&&can make it more generic and use it for other things too.&&&&&&&&This patch adds a text line to the in initial DisplaySurface, notifying&&&&the user that the display isn't initialized yet by the guest.&&&&&&&&You can see this in action when starting qemu with '-S'.  Also when&&&&booting ovmf in qemu (which needs a few moments to initialize itself&&&&before it initializes the vga).&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, qcow2: Catch bdrv_getlength() error The call to bdrv_getlength() from qcow2_check_refcounts() may result in&&&&an error. Check this and abort if necessary.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," input: switch sparc32 kbd to new input api Nasty 0xe0 logic is gone.  We map through QKeyCode now, giving us a&&&&nice, readable mapping table.&&&&&&&&Quick smoke test in OpenFirmware looks ok.  Careful check from arch&&&&maintainers would be very nice, especially on the capslock and numlock&&&&logic.  I'm not fully sure whenever I got it translated correctly and&&&&also what it is supposed to do in the first place ...&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," block: Fix nb_sectors check in bdrv_check_byte_request() nb_sectors is signed, check for negative values.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
0," block: Expose host_* drivers in blockdev-add All the functionality to use the host_device, host_cdrom and host_floppy&&&&drivers is already there, they just need to be added to the schema.&&&&&&&&The block driver names containing underscores are preexisting and cannot&&&&be changed without breaking command line compatibility.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," curl: Remove erroneous sleep waiting for curl completion The driver will not start more than a fixed number of curl sessions.&&&&If it needs more, it must wait for the completion of an existing one.&&&&The driver was sleeping, which will prevent the main loop from&&&&running, and therefore the event it's waiting on. It was also directly&&&&calling its internal handler rather than waiting on existing&&&&registered handlers to be called from the main loop.&&&&&&&&This change causes it simply to wait for a period of time whilst&&&&allowing the main loop to execute.&&&&&&&&Signed-off-by: Matthew Booth <mbooth@redhat.com>&&&&Tested-by: Richard W.M. Jones <rjones@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, target-arm: Split out private-to-target functions into internals.h Currently cpu.h defines a mixture of functions and types needed by&&&&the rest of QEMU and those needed only by files within target-arm/.&&&&Split the latter out into a new header so they aren't needlessly&&&&exposed further than required.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&& 
0," block/iscsi: speed up read for unallocated sectors this patch implements a cache that tracks if a page on the&&&&iscsi target is allocated or not. The cache is implemented in&&&&a way that it allows for false positives&&&&(e.g. pretending a page is allocated, but it isn't), but&&&&no false negatives.&&&&&&&&The cached allocation info is then used to speed up the&&&&read process for unallocated sectors by issueing a GET_LBA_STATUS&&&&request for all sectors that are not yet known to be allocated.&&&&If the read request is confirmed to fall into an unallocated&&&&range we directly return zeroes and do not transfer the&&&&data over the wire.&&&&&&&&Tests have shown that a relatively small amount of GET_LBA_STATUS&&&&requests happens a vServer boot time to fill the allocation cache&&&&(all those blocks are not queried again).&&&&&&&&Not to transfer all the data of unallocated sectors saves a lot&&&&of time, bandwidth and storage I/O load during block jobs or storage&&&&migration and it saves a lot of bandwidth as well for any big sequential&&&&read of the whole disk (e.g. block copy or speed tests) if a significant&&&&number of blocks is unallocated.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," target-i386: reorder fields in cpu/msr_hyperv_hypercall subsection The subsection already exists in one well-known enterprise Linux&&&&distribution, but for some strange reason the fields were swapped&&&&when forward-porting the patch to upstream.&&&&&&&&Limit headaches for said enterprise Linux distributor when the&&&&time will come to rebase their version of QEMU.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1396452782-21473-1-git-send-email-pbonzini@redhat.com&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," qcow2: Fix backing file name length check len could become negative and would pass the check then. Nothing bad&&&&happened because bdrv_pread() happens to return an error for negative&&&&length values, but make variables for sizes unsigned anyway.&&&&&&&&This patch also changes the behaviour to error out on invalid lengths&&&&instead of silently truncating it to 1023.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," gtk: Don't warp absolute pointer This matches the behavior of SDL, and makes the mouse usable when&&&&using -display gtk -vga qxl&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1051724&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qdev: Fix bus dependency of DeviceState::hotpluggable getter Commit 1a37eca107cece3ed454bae29eef0bd1fac4a244 (qdev: add&&&&""hotpluggable"" property to Device) added a property ""hotpluggable"" to&&&&each device, with its getter accessing parent_bus->allow_hotplug.&&&&&&&&Add a NULL check.&&&&&&&&Cc: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, mirror: fix throttling delay calculation The throttling delay calculation was using an inaccurate sector count to&&&&calculate the time to sleep.  This broke rate-limiting for the block&&&&mirror job.&&&&&&&&Move the delay calculation into mirror_iteration() where we know how&&&&many sectors were transferred.  This lets us calculate an accurate delay&&&&time.&&&&&&&&Reported-by: Joaquim Barrera <jbarrera@ac.upc.edu>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," signal: added a wrapper for sigprocmask function Create a wrapper for signal mask changes initiated by the guest;&&&&(this includes syscalls and also the sigreturns from signal.c)&&&&this will give us a place to put code which prevents the guest&&&&from changing the handling of signals used by QEMU itself&&&&internally.&&&&&&&&The wrapper is called from all the guest-initiated sigprocmask, but&&&&is not called from internal qemu sigprocmask calls.&&&&&&&&Signed-off-by: Alex Barcelo <abarcelo@ac.upc.edu>&&&&[PMM: Added calls to wrapper for sigprocmask uses in signal.c&&&&when setting the signal mask on entry and exit from signal&&&&handlers, since these also are guest-provided signal masks.]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
0," s390-ccw.img: Fix sporadic reboot hangs: Initialize next_idx The current code does not initialize next_idx in the virtio ring.&&&&As the ccw bios will always use guest memory at a fixed location,&&&&this queue might != 0 after a reboot.&&&&Lets make the initialization explicit.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
0," target-arm: Define names for SCTLR bits The SCTLR is full of bits for enabling or disabling various things, and so&&&&there are many places in the code which check if certain bits are set.&&&&Define some named constants for the SCTLR bits so these checks are easier&&&&to read.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," check-qdict: Adjust test for qdict_array_split() Test the new functionality of qdict_array_split(), that is, splitting&&&&off single objects.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qemu-config: Sections must consist of keys In config_parse_qdict_section(), the QList returned by&&&&qdict_array_split() is assumed to only contain QDicts. Currently, this&&&&is true but it may (and will) change in the future. Therefore, check&&&&whether the assumption actually holds.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qjson.h: Remove spurious GCC_FMT_ATTR markup from qobject_from_json() declaration The function qobject_from_json() doesn't actually allow its&&&&argument to be a format string -- it passes a NULL va_list*&&&&to qobject_from_jsonv(), and the parser code will then never&&&&actually interpret %-escape sequences (it tests whether the&&&&va_list pointer is NULL and will stop with a parse error).&&&&&&&&The spurious attribute markup causes clang warnings in some&&&&of the test cases where we programmatically construct JSON&&&&to feed to qobject_from_json():&&&&&&&& tests/test-qmp-input-visitor.c:76:35: warning: format string is not a&&&& string literal (potentially insecure) [-Wformat-security]&&&&    data->obj = qobject_from_json(json_string);&&&&                                  ^~~~~~~~~~~&&&&&&&&Remove the incorrect attribute.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
0," target-mips: add user-mode FR switch support for MIPS32r5 Description of UFR feature:&&&&&&&&Required in MIPS32r5 if floating point is implemented and user-mode FR&&&&switching is supported. The UFR register allows user-mode to clear StatusFR&&&&by executing a CTC1 to UFR with GPR[0] as input, and read StatusFR by&&&&executing a CFC1 to UFR.&&&&&&&&helper_ctc1 has been extended with an additional parameter rt to check&&&&requirements for UFR feature.&&&&Definition of mips32r5-generic has been modified to include support for UFR.&&&&&&&&Signed-off-by: Petar Jovanovic <petar.jovanovic@imgtec.com>&&&&Reviewed-by: Eric Johnson <eric.johnson@imgtec.com>&&&& "
0," target-i386: Move KVM default-vendor hack to instance_init As we will not have a cpu_x86_find_by_name() function anymore,&&&&move the KVM default-vendor hack to instance_init.&&&&&&&&Unfortunately we can't move that code to class_init because it depends&&&&on KVM being initialized.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," pcihp: make pci_read() mmio calback compatible with legacy ACPI hotplug due to recent change introduced by:&&&&""pcihp: reduce number of device check events""&&&&&&&&'up' field is cleared right after it's read.&&&&This is incompatible with legacy BIOS ACPI code&&&&where PCNF ACPI method reads this field 32 times.&&&&&&&&To make pci_read mmio callback compatible with legacy&&&&'up' behavior, pcihp code will need to know in which&&&&mode it runs add 'legacy_piix' field to AcpiPciHpState&&&&structure and alter register behavior accordingly.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," block: Allow waiting for overlapping requests between begin/end Previously, it was not possible to use wait_for_overlapping_requests()&&&&between tracked_request_begin()/end() because it would wait for itself.&&&&&&&&Ignore the current request in the overlap check and run more of the&&&&bdrv_co_do_preadv/pwritev code with a BdrvTrackedRequest present.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&& "
0, target-arm: A64: add support for ld/st pair This patch support the basic load and store pair instructions and&&&&includes the generic helper functions:&&&&&&&&  * do_gpr_st()&&&&  * do_fp_st()&&&&  * do_gpr_ld()&&&&  * do_fp_ld()&&&&  * read_cpu_reg_sp()&&&&  * gen_check_sp_alignment()&&&&&&&&The last function gen_check_sp_alignment() is a NULL op currently but&&&&put in place to make it easy to add SP alignment checking later.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& 
0," target-arm: Split A64 from A32/T32 gen_intermediate_code_internal() The A32/T32 gen_intermediate_code_internal() is complicated because it&&&&has to deal with:&&&& * conditionally executed instructions&&&& * Thumb IT blocks&&&& * kernel helper page&&&& * M profile exception-exit special casing&&&&&&&&None of these apply to A64, so putting the ""this is A64 so&&&&call the A64 decoder"" check in the middle of the A32/T32&&&&loop is confusing and means the A64 decoder's handling of&&&&things like conditional jump and singlestepping has to take&&&&account of the conditional-execution jumps the main loop&&&&might emit.&&&&&&&&Refactor the code to give A64 its own gen_intermediate_code_internal&&&&function instead.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
0, block drivers: expose requirement for write same alignment from formats This will let misaligned but large requests use zero clusters.  This&&&&is important because the cluster size is not guest visible.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," virtio-rng: add check of period If period is assigned to 0, limit timer will expire immediately.&&&&It causes a qemu warning:&&&&&&&&""main-loop: WARNING: I/O thread spun for 1000 iterations""&&&&&&&&This limit is meaningless. This patch forbids to assign 0 to period.&&&&&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Amos Kong <akong@redhat.com>&&&&Message-id: 1385031203-23790-1-git-send-email-akong@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@amazon.com>&&&& "
0," uas: Fix / cleanup usb_uas_task error handling -The correct error if we cannot find the dev is INCORRECT_LUN rather then&&&& INVALID_INFO_UNIT&&&&-Move the device not found check to the top so we only need to do it once&&&&-Remove the dev->lun != lun checks, dev is returned by scsi_device_find&&&& which searches by lun, so this will never trigger&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qemu-img: add support for skipping zeroes in input during convert we currently do not check if a sector is allocated during convert.&&&&This means if a sector is unallocated that we allocate a bounce&&&&buffer of zeroes, find out its zero later and do not write it&&&&in the best case. In the worst case this can lead to reading&&&&blocks from a raw device (like iSCSI) altough we could easily&&&&know via get_block_status that they are zero and simply skip them.&&&&&&&&This patch also fixes the progress output not being at 100% after&&&&a successful conversion.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," pc: disable pci-info The BIOS that we ship in 1.7 does not use pci info&&&&from host and so far isn't going to use it.&&&&Taking in account problems it caused see 9604f70fdf and&&&&to avoid future incompatibility issues, it's safest to&&&&disable that interface by default for all machine types&&&&including 1.7 as it was never exposed/used by guest.&&&&And properly remove/cleanup it during 1.8 development cycle.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, qemu-char: add support for U-prefixed symbols This patch adds support for Unicode symbols in keymap files. This&&&&feature was already used in some keyboard layouts in QEMU generated&&&&from XKB (e.g. Arabic) but it wasn't implemented in QEMU source code.&&&&&&&&There is no need for check of validity of the hex string after U character&&&&because strtol returns 0 in case the conversion was unsuccessful.&&&&&&&&Signed-off-by: Jan Krupa <jkrupa@suse.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0, qcow2: Add overlap-check options Add runtime options to tune the overlap checks to be performed before&&&&write accesses.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," qcow2: Correct endianness in overlap check If an inactive L1 table is loaded from disk, its entries are in big&&&&endian and have to be converted to host byte order before using them.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," timer: make qemu_clock_enable sync between disable and timer's cb After disabling the QemuClock, we should make sure that no QemuTimers&&&&are still in flight. To implement that with light overhead, we resort&&&&to QemuEvent. The caller of disabling will wait on QemuEvent of each&&&&timerlist.&&&&&&&&Note, qemu_clock_enable(foo,false) can _not_ be called from timer's cb.&&&&Also, the callers of qemu_clock_enable() should be protected by the BQL.&&&&&&&&Signed-off-by: Liu Ping Fan <pingfank@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," x86: fix migration from pre-version 12 On KVM, the KVM_SET_XSAVE would be executed with a 0 xstate_bv,&&&&and not restore anything.&&&&&&&&Since FP and SSE data are always valid, set them in xstate_bv at reset&&&&time.  In fact, that value is the same that KVM_GET_XSAVE returns on&&&&pre-XSAVE hosts.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&& "
0," Fix VNC SASL authentication when using a QXL device ui/vnc.c:vnc_display_open() and spice-server/server/reds.c:do_spice_init()&&&&are both calling sasl_server_init(). If spice_server_set_sasl_appname()&&&&hasn't been called, spice-server will call it with ""spice"" as an appname,&&&&causing cyrus-sasl to try to use a /etc/sasl2/spice.conf config file rather&&&&than the /etc/sasl2/qemu.conf file that QEMU uses.&&&&&&&&When using -spice sasl on the command line, QEMU properly calls&&&&spice_server_set_sasl_appname() to set the SASL appname as ""qemu"",&&&&but when using a QXL device without using SPICE, spice_server_init()&&&&is called from qemu_spice_add_interface() without setting the appname&&&&to ""qemu"", which then causes the VNC code to try to use spice.conf&&&&instead of qemu.conf.&&&&&&&&Signed-off-by: Christophe Fergeau <cfergeau@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," s390/kvm: Add check for priviledged SCLP handler The SCLP instruction is priviledged, so we should make sure that&&&&we generate an exception when it is called from the problem state.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
0," smbios: Make multiple -smbios type= accumulate sanely Currently, -smbios type=T,NAME=VAL,... adds one field (T,NAME) with&&&&value VAL to fw_cfg for each unique NAME.  If NAME occurs multiple&&&&times, the last one's VAL is used (before the QemuOpts conversion, the&&&&first one was used).&&&&&&&&Multiple -smbios can add multiple fields with the same (T, NAME).&&&&SeaBIOS reads all of them from fw_cfg, but uses only the first field&&&&(T, NAME).  The others are ignored.&&&&&&&&""First one wins, subsequent ones get ignored silently"" isn't nice.  We&&&&commonly let the last option win.  Useful, because it lets you&&&&-readconfig first, then selectively override with command line&&&&options.&&&&&&&&Clean up -smbios to work the common way.  Accumulate the settings,&&&&with later ones overwriting earlier ones.  Put the result into fw_cfg&&&&(no more useless duplicates).&&&&&&&&Bonus cleanup: qemu_uuid_parse() no longer sets SMBIOS system uuid by&&&&side effect.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0," qemu-img: always probe the input image for allocated sectors qemu-img convert can assume ""that sectors which are unallocated in the&&&&input image are present in both the output's and input's base images"".&&&&&&&&However it is only doing this if the output image returns true for&&&&bdrv_has_zero_init().  Testing bdrv_has_zero_init() does not make much&&&&sense if the output image is copy-on-write, because a copy-on-write&&&&image is never initialized to zero (it is initialized to the content&&&&of the backing file).&&&&&&&&There is nothing here that makes has_zero_init images special.  The&&&&input and output must be equal for the operation to make sense, and&&&&that's it.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, qcow2-refcount: Snapshot update for zero clusters Account for all cluster types in qcow2_update_snapshot_refcounts;&&&&this prevents this function from updating the refcount of unallocated&&&&zero clusters which effectively led to wrong adjustments of the refcount&&&&of cluster 0 (the main qcow2 header). This in turn resulted in images&&&&with (unallocated) zero clusters having a cluster 0 refcount greater&&&&than one after creating a snapshot.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," block/curl: drop curl_aio_flush() .io_flush() is no longer called so drop curl_aio_flush().  The acb[]&&&&array that the function checks is still used in other parts of&&&&block/curl.c.  Therefore we cannot remove acb[], it is needed.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, char/serial: cosmetic fixes. Some cosmetic fixes to char/serial fixing some checkpatch errors.&&&&&&&&Cc: qemu-trivial@nongnu.org&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0, ide-test: Add FLUSH CACHE test case This checks in particular that BSY is set while the flush request is in&&&&flight.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0," make user networking hostfwd work with restrict=y This patch allows the hostfwd option to override the restrict=y setting in&&&&the user network stack, as explicitly stated in the documentation on the&&&&restrict option:&&&&&&&&     restrict=on|off&&&&         If this option is enabled, the guest will be isolated, i.e. it&&&&         will not be able to contact the host and no guest IP packets&&&&         will be routed over the host to the outside. This option does&&&&         not affect any explicitly set forwarding rules.&&&&&&&&Qemu bug tracker:&&&&https://bugs.launchpad.net/qemu/+bug/829455&&&&&&&&Signed-off-by: Gertjan Halkes <qemu@ghalkes.nl>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
0," hmp: Make ""info block"" output more readable HMP is meant for humans and you should notice it.&&&&&&&&This changes the output format to use a bit more space to display the&&&&information more readable and leaves out irrelevant information (e.g.&&&&mention only that an image is encrypted, but not when it's not; display&&&&I/O limits only if throttling is in effect; ...)&&&&&&&&Before:&&&&&&&&    (qemu) info block&&&&    ide0-hd0: removable=0 io-status=ok file=/tmp/overlay.qcow2&&&&    backing_file=/tmp/backing.img backing_file_depth=1 ro=0 drv=qcow2&&&&    encrypted=1 bps=0 bps_rd=0 bps_wr=0 iops=1024 iops_rd=0 iops_wr=0&&&&    ide1-cd0: removable=1 locked=0 tray-open=0 io-status=ok&&&&    file=/home/kwolf/images/iso/Fedora-18-x86_64-Live-Desktop.iso ro=1&&&&    drv=raw encrypted=0 bps=0 bps_rd=0 bps_wr=0 iops=0 iops_rd=0 iops_wr=0&&&&    floppy0: removable=1 locked=0 tray-open=0 [not inserted]&&&&    sd0: removable=1 locked=0 tray-open=0 [not inserted]&&&&&&&&After:&&&&&&&&    (qemu) info block&&&&    ide0-hd0: /tmp/overlay.qcow2 (qcow2, encrypted)&&&&        Backing file:     /tmp/backing.img (chain depth: 1)&&&&        I/O limits:       bps=0 bps_rd=0 bps_wr=0 iops=1024 iops_rd=0 iops_wr=0&&&&&&&&    ide1-cd0: /home/kwolf/images/iso/Fedora-18-x86_64-Live-Desktop.iso (raw, read-only)&&&&        Removable device: not locked, tray closed&&&&&&&&    floppy0: [not inserted]&&&&        Removable device: not locked, tray closed&&&&&&&&    sd0: [not inserted]&&&&        Removable device: not locked, tray closed&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Acked-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," i8254: Convert PITCommonState to QOM realizefn Instead of having the parent provide PITCommonClass::init,&&&&let the children override DeviceClass::realize themselves.&&&&This pushes the responsibility for saving and calling the parent's&&&&realizefn to the children.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, s390-ccw.img: Rudimentary error checking. Try to handle at least some of the errors that may happen.&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0," win32: generate console executable again The -mwindows option is not anymore in LIBS at this point of the Makefile,&&&&it is only in libs_softmmu.  Check the right variable.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," configure: rename OpenGL feature to GLX As the probe now actually checks for the availability of GLX, rename it&&&&accordingly. The only user of this feature is the milkymist-tmu2 model.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&& "
0," target-arm: Override do_interrupt for ARMv7-M profile Enable ARMCPUInfo to specify a custom class_init functions.&&&&Introduce arm_v7m_class_init() and use it for ""cortex-m3"" model.&&&&&&&&Instead of forwarding from arm_cpu_do_interrupt() to do_interrupt_v7m(),&&&&override CPUClass::do_interrupt with arm_v7m_cpu_do_interrupt()&&&&in arm_v7m_class_init().&&&&&&&&Acked-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," monitor: Use qemu_get_cpu() in monitor_set_cpu() No functional change, just a reduction of CPU loops.&&&&&&&&The mon_cpu field is left untouched for now since changing that requires&&&&a number of larger prerequisites, including cpu_synchronize_state() and&&&&mon_get_cpu().&&&&&&&&Reviewed-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, migration: move rate limiting to QEMUFile Rate limiting is now simply a byte counter; client call&&&&qemu_file_rate_limit() manually to determine if they have to exit.&&&&So it is possible and simple to move the functionality to QEMUFile.&&&&&&&&This makes the remaining functionality of s->file redundant;&&&&in the next patch we can remove it and write directly to s->migration_file.&&&&&&&&Reviewed-by: Orit Wasserman <owasserm@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
0," check-qjson: More thorough testing of UTF-8 in strings Test cases are scraped from Markus Kuhn's UTF-8 decoder capability and&&&&stress test at&&&&http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt&&&&&&&&Unfortunately, both JSON parser and formatter misbehave right now.&&&&This test expects current, incorrect results.  They're all clearly&&&&marked, and are to be replaced by correct ones as the bugs get fixed.&&&&See comments in new utf8_string() for details.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," qemu-file: temporarily expose qemu_file_set_error and qemu_fflush Right now, migration cannot entirely rely on QEMUFile's automatic&&&&drop of I/O after an error, because it does its ""real"" I/O outside&&&&the put_buffer callback.  To fix this until buffering is gone, expose&&&&qemu_file_set_error which we will use in buffered_flush.&&&&&&&&Similarly, buffered_flush is not a complete flush because some data may&&&&still reside in the QEMUFile's own buffer.  This somewhat complicates the&&&&process of closing the migration thread.  Again, when buffering is gone&&&&buffered_flush will disappear and calling qemu_fflush will not be needed;&&&&in the meanwhile, we expose the function for use in migration.c.&&&&&&&&Reviewed-by: Orit Wasserman <owasserm@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
0," qjson: to_json() case QTYPE_QSTRING is buggy, rewrite Known bugs in to_json():&&&&&&&&* A start byte for a three-byte sequence followed by less than two&&&&  continuation bytes is split into one-byte sequences.&&&&&&&&* Start bytes for sequences longer than three bytes get misinterpreted&&&&  as start bytes for three-byte sequences.  Continuation bytes beyond&&&&  byte three become one-byte sequences.&&&&&&&&  This means all characters outside the BMP are decoded incorrectly.&&&&&&&&* One-byte sequences with the MSB are put into the JSON string&&&&  verbatim when char is unsigned, producing invalid UTF-8.  When char&&&&  is signed, they're replaced by ""\\uFFFF"" instead.&&&&&&&&  This includes \xFE, \xFF, and stray continuation bytes.&&&&&&&&* Overlong sequences are happily accepted, unless screwed up by the&&&&  bugs above.&&&&&&&&* Likewise, sequences encoding surrogate code points or noncharacters.&&&&&&&&* Unlike other control characters, ASCII DEL is not escaped.  Except&&&&  in overlong encodings.&&&&&&&&My rewrite fixes them as follows:&&&&&&&&* Malformed UTF-8 sequences are replaced.&&&&&&&&  Except the overlong encoding \xC0\x80 of U+0000 is still accepted.&&&&  Permits embedding NUL characters in C strings.  This trick is known&&&&  as ""Modified UTF-8"".&&&&&&&&* Sequences encoding code points beyond Unicode range are replaced.&&&&&&&&* Sequences encoding code points beyond the BMP produce a surrogate&&&&  pair.&&&&&&&&* Sequences encoding surrogate code points are replaced.&&&&&&&&* Sequences encoding noncharacters are replaced.&&&&&&&&* ASCII DEL is now always escaped.&&&&&&&&The replacement character is U+FFFD.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," qemu-pixman.h: Avoid mutual inclusion loop with console.h Remove an unnecessary mutual inclusion loop between qemu-pixman.h and&&&&console.h, since the former was only including the latter for&&&&'PixelFormat*', which can be provided by typedefs.h.  This requires a&&&&minor adjustment to the files which included qemu-pixman.h, since&&&&they were relying on it implicitly dragging in all of console.h.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Acked-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0," target-arm: Detect attempt to instantiate non-CPU type in cpu_init() Consolidate model checking into a new arm_cpu_class_by_name().&&&&&&&&If the name matches an existing type, also check whether that type is&&&&actually (a sub-type of) TYPE_ARM_CPU.&&&&&&&&This fixes, e.g., -cpu tmp105 asserting.&&&&&&&&Cc: qemu-stable <qemu-stable@nongnu.org>&&&&Acked-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0, qga: add missing commas in json docs * qga/qapi-schema.json: Use valid JSON.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& 
0," openpic: fix remaining issues from idr-to-destmask conversion openpic_update_irq() was checking idr rather than destmask, treating&&&&it as if it were a simple bitmap of cpus.  Changed to use destmask.&&&&&&&&IPI delivery was removing bits directly from .idr, without calling&&&&write_IRQreg_idr so that the change could be conveyed to destmask.&&&&Changed to use destmask directly.&&&&&&&&Save/restore destmask when serializing, as due to the IPI change it&&&&cannot be reproduced from idr.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, block: make qiov_is_aligned() public The qiov_is_aligned() function checks whether a QEMUIOVector meets a&&&&BlockDriverState's alignment requirements.  This is needed by&&&&virtio-blk-data-plane so:&&&&&&&&1. Move the function from block/raw-posix.c to block/block.c.&&&&2. Make it public in block/block.h.&&&&3. Rename to bdrv_qiov_is_aligned().&&&&4. Change return type from int to bool.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," target-i386: Move kvm_check_features_against_host() check to realize time kvm_check_features_against_host() should be called when features can't&&&&be changed, and when features are converted to properties it would be&&&&possible to change them until realize time, so correct way is to call&&&&kvm_check_features_against_host() in x86_cpu_realize().&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," openpic: use standard bitmap operations Besides the private implementation being redundant, namespace collisions&&&&prevented the use of other things in bitops.h.&&&&&&&&Serialization does get a bit more awkward, unfortunately, since the&&&&standard bitmap operations are ""unsigned long"" rather than ""uint32_t"",&&&&though in exchange we will get faster queue lookups on 64-bit hosts once&&&&we search a word at a time.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, target-s390: Delete dead code from old translator The use of inline restricts detection of static functions that are&&&&no longer used.  Limit the use of inline to those functions that&&&&are conditionally used based on CONFIG_USER_ONLY.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
0," openpic: always call IRQ_check from IRQ_get_next Previously the code relied on the queue's ""next"" field getting&&&&set to -1 sometime between an update to the bitmap, and the next&&&&call to IRQ_get_next.  Sometimes this happened after the update.&&&&Sometimes it happened before the check.  Sometimes it didn't happen&&&&at all.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, tcg: Remove unneeded assertion Commit 7f6f0ae5b95adfa76e10eabe2c34424a955fd10c added two assertions.&&&&&&&&One of these assertions is not needed:&&&&The pointer ts is never NULL because it is initialized with the&&&&address of an array element.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," Revert ""pci: prepare makefiles for pci code reorganization"" This reverts commit 475d67c3bcd6ba9fef917b6e59d96ae69eb1a9b4.&&&&&&&&Now that all users have been updated, we don't need the&&&&makefile hack or the softlink anymore.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
0, Fix error code checking for SetFilePointer() call An error has occurred if the return value is invalid_set_file_pointer&&&&and getlasterror doesn't return no_error.&&&&&&&&Signed-off-by: Fabien Chouteau <chouteau@adacore.com>&&&&Acked-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
0, virtio-rng: disable timer on device removal Disable the rate-limit timer on device remove (e.g. hot-unplug).&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," pseries: Fix incorrect initialization of interrupt controller Currently in the reset code for the XICS interrupt controller, we&&&&initialize the pending_priority field to 0 (most favored, by XICS&&&&convention).  This is incorrect, since there is no pending interrupt, it&&&&should be set to least favored - 0xff.  At the moment our XICS&&&&implementation doesn't get hurt by this edge case, but it does confuse the&&&&upcoming kernel XICS implementation.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," i386: kvm: extract try_get_cpuid() loop to get_supported_cpuid() function No behavior change, just code movement.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0, linux-user: Perform more checks on iovec lists Validate count between 0 and IOV_MAX.  Limit total length of&&&&operation in the same way the kernel does.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
0," kvmvapic: Fix TB invalidation after instruction patching Since 0b57e287, cpu_memory_rw_debug already triggers a TB invalidation.&&&&As it doesn't (and cannot) set is_cpu_write_access=1 but ""consumes"" the&&&&currently executed TB, the tb_invalidate_phys_page_range call from&&&&patch_instruction didn't work anymore.&&&&&&&&Fix this by open-coding the required bits to restore the CPU state from&&&&the current TB position before patching and resume execution on the&&&&patched instruction afterward.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Tested-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," target-i386: Initialize APIC at CPU level (L)APIC is a part of cpu [1] so move APIC initialization inside of&&&&x86_cpu object. Since cpu_model and override flags currently specify&&&&whether APIC should be created or not, APIC creation&initialization is&&&&moved into x86_cpu_apic_init() which is called from x86_cpu_realize().&&&&&&&&[1] - all x86 cpus have integrated APIC if we overlook existence of i486,&&&&and it's more convenient to model after majority of them.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
0," block: vpc support for ~2 TB disks The VHD specification allows for up to a 2 TB disk size. The current&&&&implementation in qemu emulates EIDE and ATA-2 hardware which only allows&&&&for up to 127 GB.  This disk size limitation can be overridden by allowing&&&&up to 255 heads instead of the normal 4 bit limitation of 16.  Doing so&&&&allows disk images to be created of up to nearly 2 TB.  This change does&&&&not violate the VHD format specification nor does it change how smaller&&&&disks (ie, <=127GB) are defined.&&&&&&&&[Charles Arnold also writes: ""In analyzing a 160 GB VHD fixed disk image&&&&created on Windows 2008 R2, it appears that MS is also ignoring the CHS&&&&values in the footer geometry field in whatever driver they use for&&&&accessing the image.  The CHS values are set at 65535,16,255 which&&&&obviously doesn't represent an image size of 160 GB."" -- Stefan]&&&&&&&&Signed-off-by: Charles Arnold <carnold@suse.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
0, aio: Another fix to the walking_handlers logic The AIO dispatch loop will call QLIST_REMOVE and g_free even if there&&&&are other pending calls to qemu_aio_wait outside the current one.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, net: fix usbnet_receive() packet drops The USB network interface has a single buffer which the guest reads&&&&from.  This patch prevents multiple calls to usbnet_receive() from&&&&clobbering the input buffer.  Instead we queue packets until buffer&&&&space becomes available again.&&&&&&&&This is inspired by virtio-net and e1000 rxbuf handling.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
0," net: EAGAIN handling for net/socket.c TCP Replace spinning send_all() with a proper non-blocking send.  When the&&&&socket write buffer limit is reached, we should stop trying to send and&&&&wait for the socket to become writable again.&&&&&&&&Non-blocking TCP sockets can return in two different ways when the write&&&&buffer limit is reached:&&&&&&&&1. ret = -1 and errno = EAGAIN/EWOULDBLOCK.  No data has been written.&&&&&&&&2. ret < total_size.  Short write, only part of the message was&&&&   transmitted.&&&&&&&&Handle both cases and keep track of how many bytes have been written in&&&&s->send_index.  (This includes the 'length' header before the actual&&&&payload buffer.)&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
0," vfio-pci: Update slow path INTx algorithm We can't afford the overhead of switching out and back into mmap mode&&&&around each interrupt, but we can do it lazily via a timer.  On INTx&&&&interrupt, disable the mmap'd memory regions and set a timer.  On&&&&every interrupt, push the timer out.  If the timer expires and the&&&&interrupt is no longer pending, switch back to mmap mode.&&&&&&&&This has the benefit that things like graphics cards, which rarely or&&&&never, fire an interrupt don't need manual user intervention to add&&&&the x-intx=off parameter.  They'll just remain in mmap mode until they&&&&trigger an interrupt, and if they don't continue to regularly fire&&&&interrupts, they'll switch back.&&&&&&&&The default timeout is tuned for network cards so that a ping is just&&&&enough to keep them in non-mmap mode, where they have much better&&&&latency.  It is tunable with an experimental option,&&&&x-intx-mmap-timeout-ms.  A value of 0 keeps the device in non-mmap&&&&mode after the first interrupt.&&&&&&&&It's possible we could look at the class code of devices and come up&&&&with reasonable per-class defaults based on expected interrupt&&&&frequency and latency.  None of this is used for MSI interrupts and&&&&also won't be used if we can bypass through KVM.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
0," usb-redir: Adjust pkg-config check for usbredirparser .pc file rename (v2) The usbredir 0.5 release introduced the new API for 64 bit packet ids, but&&&&it kept the libusbredirparser.pc name as is, meaning that older versions of&&&&qemu will still have their pkg-config check for usbredirparser fulfilled,&&&&and build with the usb-redir device. Due to the API change there will be&&&&some compiler warnings, but the build will succeed, however the usb-redir&&&&device will be broken on 32 bit machines.&&&&&&&&To solve this a new usbredir-0.5.2 release is coming, which renames the&&&&libusbredirparser.pc file to libusbredirparser-0.5.pc, so that it will no&&&&longer fulfill the pkg-config check of the qemu-1.2 and older releases,&&&&stopping the (silent) breakage. This patch adjusts qemu master's configure&&&&to properly detect the new usbredir release.&&&&&&&&Changes in v2:&&&&-Not only use the new .pc name in the check but also when getting cflags&&&& and libs!&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0, CHECKPATCH: Add --debug adv_dcs Add debug options to find this issue.  They were not listed&&&&in the help because the are not simple to understand the output of.&&&&&&&&Signed-off-by: Don Slutz <Don@CloudSwitch.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," block/curl: Fix wrong free statement Report from smatch:&&&&block/curl.c:546 curl_close(21) info: redundant null check on s->url calling free()&&&&&&&&The check was redundant, and free was also wrong because the memory&&&&was allocated using g_strdup.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, reset PMBA and PMREGMISC PIIX4 registers. The bug causes Windows + OVMF hang after reboot since OVMF&&&&checks PMREGMISC to see if IO space is enabled and skip&&&&configuration if it is.&&&&&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, blockdev: Drop redundant CHS validation for if=ide Leave it to ide_init_drive().&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0, Prevent disk data loss when closing qemu Prevent disk data loss when closing qemu console window&&&&under Windows 7.&&&&&&&&v3. Comment for Sleep() parameter was updated.&&&&&&&&Signed-off-by: Pavel Dovgalyuk<pavel.dovgaluk@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," error, qerror: add ErrorClass argument to error functions The new argument is added to functions qerror_report() and error_set().&&&&It's stored in Error and QError. qerror_report_err() is also updated to&&&&take care of it.&&&&&&&&The QERR_ macros are changed to contain a place holder value for the&&&&new argument, so that the value is used on all current calls to&&&&qerror_report() and error_set() (and also to initialize qerror_table[]).&&&&&&&&Next commit will update the QERR_ macros with a proper ErrorClass&&&&value.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," eepro100: Fix network hang when rx buffers run out This is reported by QA. When installing os with pxe, after the initial&&&&kernel and initrd are loaded, the procedure tries to copy files from install&&&&server to local harddisk, the network becomes stall because of running out of&&&&receive descriptor.&&&&&&&&[Whitespace fixes and removed qemu_notify_event() because Paolo's&&&&earlier net patches have moved it into qemu_flush_queued_packets().&&&&&&&&Additional info:&&&&&&&&I can reproduce the network hang with a tap device doing a iPXE HTTP&&&&boot as follows:&&&&&&&&  $ qemu -enable-kvm -m 1024 \&&&&    -netdev tap,id=netdev0,script=no,downscript=no \&&&&    -device i82559er,netdev=netdev0,romfile=80861209.rom \&&&&    -drive if=virtio,cache=none,file=test.img&&&&  iPXE> ifopen net0&&&&  iPXE> config # set static network configuration&&&&  iPXE> kernel http://mirror.bytemark.co.uk/fedora/linux/releases/17/Fedora/x86_64/os/images/pxeboot/vmlinuz&&&&&&&&I needed a vanilla iPXE ROM to get to the iPXE prompt.  I think the boot&&&&prompt has been disabled in the ROMs that ship with QEMU to reduce boot&&&&time.&&&&&&&&During the vmlinuz HTTP download there is a network hang.  hw/eepro100.c&&&&has reached the end of the rx descriptor list.  When the iPXE driver&&&&replenishes the rx descriptor list we don't kick the QEMU net subsystem&&&&and event loop, thereby leaving the tap netdev without its file&&&&descriptor in select(2).&&&&&&&&Stefan Hajnoczi <stefanha@gmail.com>]&&&&&&&&Signed-off-by: Bo Yang <boyang@suse.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@gmail.com>&&&& "
0," block: push bdrv_change_backing_file error checking up from drivers This check applies to all drivers, but QED lacks it.&&&&&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, qxl: check for NULL return from qxl_phys2virt Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
0, vl: drop is_suspended variable Check for the RUN_STATE_SUSPENDED state instead.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
0, qemu-iotests: mark 035 qcow2-only The 035 parallel aio write test relies on knowledge of qcow2 metadata&&&&layout to stress parallel L2 table accesses.  This only works for qcow2&&&&unless we add additional calculations for qed or other formats.&&&&&&&&Mark this test as qcow2-only.&&&&&&&&Note that the test is strictly speaking non-deterministic although the&&&&output produced is reliable with qcow2.  This is because the aio_write&&&&command returns before the aio write request has completed.  Completions&&&&can occur at any time afterwards and cause a message to be printed.&&&&Therefore the exact output of this test is not deterministic but we seem&&&&to get away with it for qcow2 (maybe due to coroutine and main loop&&&&scheduling).&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," PPC: Fix up e500 cache size setting When initializing the e500 code, we need to expose its&&&&cache line size for user and system mode, while the mmu&&&&details are only interesting for system emulation.&&&&&&&&Split the 2 switch statements apart, allowing us to #ifdef&&&&out the mmu parts for user mode emulation while keeping all&&&&cache information consistent.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," aio: simplify qemu_aio_wait The do...while loop can never loop, because select will just not return&&&&0 when invoked with infinite timeout.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qemu-ga: add a whitelist for fsfreeze-safe commands Currently we rely on fsfreeze/thaw commands disabling/enabling logging&&&&then having other commands check whether logging is disabled to avoid&&&&executing if they aren't safe for running while a filesystem is frozen.&&&&&&&&Instead, have an explicit whitelist of fsfreeze-safe commands, and&&&&consolidate logging and command enablement/disablement into a pair&&&&of helper functions: ga_set_frozen()/ga_unset_frozen()&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
0," aio: return ""AIO in progress"" state from qemu_aio_wait The definition of when qemu_aio_flush should loop is much simpler&&&&than it looks.  It just has to call qemu_aio_wait until it makes&&&&no progress and all flush callbacks return false.  qemu_aio_wait&&&&is the logical place to tell the caller about this.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," memory: check address space when a listener is registered This patch resolves a bug in memory listener registration.&&&&""range_add"" callback  was called on each section of the both&&&&address space (IO and memory space) even if it doesn't match&&&&the address space filter.&&&&&&&&Signed-off-by: Julien Grall <julien.grall@citrix.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
0," qemu-iotests: add block-stream speed value test case Add tests to exercise the InvalidParameter 'speed' error code path, as&&&&well as the regular success case for setting the speed.  The&&&&block-stream 'speed' parameter allows the speed limit of the job to be&&&&applied immediately when the job starts instead of issuing a separate&&&&block-job-set-speed command later.  If the parameter has an invalid&&&&value we expect to get an error and the job is not created.&&&&&&&&It turns out that cancelling a block job is a common operation in these&&&&test cases, let's extract a cancel_and_wait() function instead of&&&&duplicating the QMP commands.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Acked-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," qapi: add strict mode to input visitor While QMP in general is designed so that it is possible to ignore&&&&unknown arguments, in the case of the QMP server it is better to&&&&reject them to detect bad clients.  In fact, we're already doing&&&&this at the top level in the argument checker.  To extend this to&&&&complex structures, add a mode to the input visitor where it checks&&&&for unvisited keys and raises an error if it finds one.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," memory: give phys_page_find() its own tree search loop We'll change phys_page_find_alloc() soon, but phys_page_find()&&&&doesn't need to bear the consequences.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
0," libcacard/vcard_emul_nss: add warning for old coolkey Older coolkey versions (before the future fix of RHBZ 802435) have&&&&a fake card reader created if no reader is detected during module&&&&initialization. Warn libcacard users if the faulty coolkey is detected&&&&by checking for the fake reader name ""E-Gate 0 0"".&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&& "
0," implement vnc_dpy_setdata The comment is wrong, we have to do something in the setdata callback.&&&&Changing the framebuffer backing storage (happens when the guest pans&&&&the display) renders the whole screen content invalid.&&&&&&&&Trigger #1: cirrus vga + 32bit linux guest + vesafb with ypan enabled.&&&&Trigger #2: std vga + http://patchwork.ozlabs.org/patch/145479/&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, target-xtensa: implement info tlb monitor command Command dumps valid ITLB and DTLB entries.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& 
0," suspend: switch acpi s3 to new infrastructure. This patch switches pc s3 suspend over to the new infrastructure.&&&&The cmos_s3 qemu_irq is killed, the new notifier is used instead.&&&&The xen hack goes away with that too, the hypercall can simply be&&&&done in a notifier function now.&&&&&&&&This patch also makes the guest actually stay suspended instead&&&&of leaving suspend instantly, so it is useful for more than just&&&&testing whenever the suspend/resume cycle actually works.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," cpu-exec.c: Correct comment about this file and indentation cleanup Each target uses the #define macro (in target-xxx/cpu.h) to rename&&&&cpu_exec (cpu-exec.c) to cpu_xxx_exec, then defines its own cpu_loop&&&&which calls cpu_xxx_exec. So basically, cpu-exec.c is not only the i386&&&&emulator main execution loop. This patch corrects the comment of this&&&&file and does indentation cleanup.&&&&&&&&Signed-off-by: Chen Wei-Ren (闄抽煁浠? <chenwj@iis.sinica.edu.tw>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
0, arm_boot: support board IDs more than 16 bits wide Support passing a board ID value to the kernel in r1&&&&that is more than 16 bits wide. This is needed to pass&&&&the '-1 == invalid' value for boards which only support&&&&device tree booting.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Tested-by: Mark Langsdorf <mark.langsdorf@calxeda.com>&&&& 
0, check-qjson: enable disabled tests gtest does the right thing here so there's no need to comment these tests out.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," qemu-nbd: drop loop which can never loop For some reason nbd_client_thread() has a do..while loop which can never&&&&loop, the condition is bogus because we would take a goto instead.  Drop&&&&the loop.&&&&&&&&Reported-by: Dr David Alan Gilbert <davidagilbert@uk.ibm.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
0, hw/9pfs: Fix error handling in local_mknod Update local_chown to remove unnecessary if loop&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& 
0, configure: Suppress messages from pkg_config probe for check Suppress confusing messages from pkg_config when probing for&&&&'check' by sending them to /dev/null as we do with other&&&&similar probes.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, hw/pl061: Remove pointless comparison of array to null Remove a pointless comparison of an array to null. (There is&&&&no need to check whether s->out[i] is non-null as qemu_set_irq&&&&will do that for us.) Spotted by Coverity (see bug 887883).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0, main-loop: create main-loop.c Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
0," vl.c: Guard against GThread double-initialization GThread-ERROR **: GThread system may only be initialized once.&&&&aborting...&&&&&&&&Making the g_thread_init() call in vl.c conditional resolves an abort on&&&&Mac OS X, where coroutine-gthread.c seems to call it before vl.c.&&&&&&&&Reported-by: Juan Pineda <juan@logician.com>&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&&Cc: Daniel P. Berrange <berrange@redhat.com>&&&& "
0," qxl: stride fixup spice uses negative stride value to signal the bitmap is upside down.&&&&The qxl renderer (used for scl, vnc and screenshots) wants a positive&&&&value because it is easier to work with.  The positive value is then&&&&stored in the very same variable, which has the drawback that the&&&&upside-down test works only once.  Fix by using two variables.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," qerror: add qerror_report_err() This provides a bridge between Error (new error mechanism) and QError (old error&&&&mechanism).  Errors can be propagated whereas QError cannot.&&&&&&&&The minor evilness avoids layering violations.  Since QError should go away RSN,&&&&it seems like a reasonable hack.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," pseries: Support SMT systems for KVM Book3S-HV Alex Graf has already made qemu support KVM for the pseries machine&&&&when using the Book3S-PR KVM variant (which runs the guest in&&&&usermode, emulating supervisor operations).  This code allows gets us&&&&very close to also working with KVM Book3S-HV (using the hypervisor&&&&capabilities of recent POWER CPUs).&&&&&&&&This patch moves us another step towards Book3S-HV support by&&&&correctly handling SMT (multithreaded) POWER CPUs.  There are two&&&&parts to this:&&&&&&&& * Querying KVM to check SMT capability, and if present, adjusting the&&&&   cpu numbers that qemu assigns to cause KVM to assign guest threads&&&&   to cores in the right way (this isn't automatic, because the POWER&&&&   HV support has a limitation that different threads on a single core&&&&   cannot be in different guests at the same time).&&&&&&&& * Correctly informing the guest OS of the SMT thread to core mappings&&&&   via the device tree.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0, Add new macro QEMU_PACKED for packed C structures A packed struct needs different gcc attributes for compilations&&&&with MinGW compilers because glib-2.0 adds compiler flag&&&&-mms-bitfields which modifies the packing algorithm.&&&&&&&&Attribute gcc_struct reverses the negative effects of -mms-bitfields.&&&&QEMU_PACKED sets this attribute and must be used for any packed&&&&struct which is affected by -mms-bitfields.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0, Update HACKING to refer to g_malloc instead of qemu_malloc Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," Let users select their pythons Add configure check for python, exit if not found. Add switches&&&&for specifying the path to python, use the path in Makefile.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," sdl: Dynamically grab input in absolute mouse mode Not grabbing the input means that special keys like ALT+TAB are still&&&&handled by the host. Improve the usability by grabbing input once the&&&&mouse is inside the guest screen, provided the SDL window has the input&&&&focus. Release it again when the mouse is moved to any border. Also grab&&&&the input when we gain the input focus and the mouse is within the&&&&screen limits.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," scsi-bus: remove duplicate table entries Remove duplicate entries from SCSI command table, spotted by&&&&clang analyzer:&&&&/src/qemu/hw/scsi-bus.c:979:40: warning: initializer overrides prior initialization of this subobject&&&&        [ ERASE_16                 ] = ""ERASE_16"",&&&&/src/qemu/hw/scsi-bus.c:978:40: note: previous initialization is here&&&&        [ WRITE_SAME_16            ] = ""WRITE_SAME_16"",&&&&/src/qemu/hw/scsi-bus.c:984:40: warning: initializer overrides prior initialization of this subobject&&&&        [ MAINTENANCE_IN           ] = ""MAINTENANCE_IN"",&&&&/src/qemu/hw/scsi-bus.c:917:40: note: previous initialization is here&&&&        [ MAINTENANCE_IN           ] = ""MAINTENANCE_IN"",&&&&/src/qemu/hw/scsi-bus.c:985:40: warning: initializer overrides prior initialization of this subobject&&&&        [ MAINTENANCE_OUT          ] = ""MAINTENANCE_OUT"",&&&&/src/qemu/hw/scsi-bus.c:918:40: note: previous initialization is here&&&&        [ MAINTENANCE_OUT          ] = ""MAINTENANCE_OUT"",&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," exec.c: Fix calculation of code_gen_buffer_max_size When calculating the point at which we should not try to put another&&&&TB into the code gen buffer, we have to allow not just for OPC_MAX_SIZE&&&&but OPC_BUF_SIZE. This is because the target translate.c will only&&&&stop when an instruction has put it past the OPC_MAX_SIZE limit, so&&&&we have to include the MAX_OP_PER_INSTR margin which that final insn&&&&might have used.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, ide/piix: convert to PCIDeviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, usb-uhci: convert to PCIDEviceInfo to initialize ids use PCIDeviceInfo to initialize ids.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0," Switch build system to accompanied kernel headers This helps reducing our build-time checks for feature support in the&&&&available Linux kernel headers. And it helps users that do not have&&&&sufficiently recent headers installed on their build machine.&&&&&&&&Consequently, the patch removes and build-time checks for kvm and vhost&&&&in configure, the --kerneldir switch, and KVM_CFLAGS. Kernel headers are&&&&supposed to be provided by QEMU only.&&&&&&&&s390 needs some extra love as it carries redefinitions from kernel&&&&headers.&&&&&&&&CC: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," Fix segfault on screendump with -nographic When running -nographic and calling ""screendump"" on the monitor, qemu&&&&segfaults. Fix the invalid pointer dereference by checking for NULL.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," target-mips: Do not check CPU_INTERRUPT_TIMER. This bit is never set, therefore we should not read it either.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, exec.c: refactor cpu_physical_memory_map Introduce qemu_ram_ptr_length that takes an address and a size as&&&&parameters rather than just an address.&&&&&&&&Refactor cpu_physical_memory_map so that we call qemu_ram_ptr_length only&&&&once rather than calling qemu_get_ram_ptr one time per page.&&&&This is not only more efficient but also tries to simplify the logic of&&&&the function.&&&&Currently we are relying on the fact that all the pages are mapped&&&&contiguously in qemu's address space: we have a check to make sure that&&&&the virtual address returned by qemu_get_ram_ptr from the second call on&&&&is consecutive. Now we are making this more explicit replacing all the&&&&calls to qemu_get_ram_ptr with a single call to qemu_ram_ptr_length&&&&passing a size argument.&&&&&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&CC: agraf@suse.de&&&&CC: anthony@codemonkey.ws&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
0, set $SDL_VIDEODRIVER=x11 on Linux to prevent sudo kvm from fighting for video card Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0," scsi-disk: add data direction checking scsi_req_parse() already provides for a data direction setting,&&&&so we should be using it to check for correct direction.&&&&And we should return the sense code 'INVALID FIELD IN CDB'&&&&in these cases.&&&&&&&&Signed-off-by: Hannes Reinecke <hare@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Christoph Hellwig <hch@lst.de>&&&& "
0, target-arm: Fix 32 bit signed saturating narrow The returned value when doing saturating signed 64->32 bit&&&&conversion of a negative number was incorrect due to a missing cast.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0," xen: Support new libxc calls from xen unstable. This patch updates the libxenctrl calls in Qemu to use the new interface,&&&&otherwise Qemu wouldn't be able to build against new versions of the&&&&library.&&&&&&&&We check libxenctrl version in configure, from Xen 3.3.0 to Xen&&&&unstable.&&&&&&&&Signed-off-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
0," kvm: x86: Consolidate TCG and KVM MCE injection code This switches KVM's MCE injection path to cpu_x86_inject_mce, both for&&&&SIGBUS and monitor initiated events. This means we prepare the MCA MSRs&&&&in the VCPUState also for KVM.&&&&&&&&We have to drop the MSRs writeback restrictions for this purpose which&&&&is now safe as every uncoordinated MSR injection is removed with this&&&&patch.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&CC: Huang Ying <ying.huang@intel.com>&&&&CC: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>&&&&CC: Jin Dongming <jin.dongming@np.css.fujitsu.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," HACKING: Update status of format checking Hopefully all functions with printf like arguments now use format checking.&&&&&&&&This was tested with default build configuration on linux&&&&and windows hosts (including some cross compilations),&&&&so chances are good that there remain few (if any) functions&&&&without format checking.&&&&&&&&Therefore the last comment in HACKING is no longer valid but misleading.&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, SPARC: Emulation of GRLIB APB UART This device exposes one parameter:&&&& - chardev (ptr) : Pointer to a qemu character device&&&&&&&&Emulation of GrLib devices is base on the GRLIB IP Core User's Manual:&&&&http://www.gaisler.com/products/grlib/grip.pdf&&&&&&&&Signed-off-by: Fabien Chouteau <chouteau@adacore.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0, qed: Refuse to create images on block devices QED relies on the underlying filesystem to extend the file and maintain&&&&its size.  Check that images are not created on a block device.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
0," kvm: introduce kvm_mce_in_progress Share same error handing, and rename this function after&&&&MCIP (Machine Check In Progress) flag.&&&&&&&&Signed-off-by: Hidetoshi Seto <seto.hidetoshi@jp.fujitsu.com>&&&&Signed-off-by: Jin Dongming <jin.dongming@np.css.fujitsu.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," kvm: x86: Remove redundant mp_state initialization kvm_arch_reset_vcpu initializes mp_state, and that function is invoked&&&&right after kvm_arch_init_vcpu.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
0," usb core: add migration support Yes, seriously.  There is no migration support at all for usb devices.&&&&They loose state, especially the device address, and stop responding&&&&because of that.  Oops.&&&&&&&&Luckily there is so much broken usb hardware out there that the guest&&&&usually just kicks the device hard (via port reset and&&&&reinitialization), then continues without a hitch.  So we got away with&&&&that in a surprising high number of cases.&&&&&&&&The arrival of remote wakeup (which enables autosuspend support) changes&&&&that picture though.  The usb devices also forget that it they are&&&&supposed to wakeup, so they don't do that.  The host also doesn't notice&&&&the device stopped working in case it suspended the device and thus&&&&expects it waking up instead of polling it.  Result is that your mouse&&&&is dead.&&&&&&&&Lets start fixing that.  Add a vmstate struct for USBDevice.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," scsi-disk: support WRITE SAME (16) with unmap bit Support discards via the WRITE SAME command with the unmap bit set, and&&&&tell the initiator about the support for it via the block limit and the&&&&new thin provisioning EVPD pages.  Also fix the comment which incorrectly&&&&describedthe block limits EVPD page.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," Type-safe ioport callbacks The current ioport callbacks are not type-safe, in that they accept an ""opaque""&&&&pointer as an argument whose type must match the argument to the registration&&&&function; this is not checked by the compiler.&&&&&&&&This patch adds an alternative that is type-safe.  Instead of an opaque&&&&argument, both registation and the callback use a new IOPort type.  The&&&&callback then uses container_of() to access its main structures.&&&&&&&&Currently the old and new methods exist side by side; once the old way is gone,&&&&we can also save a bunch of memory since the new method requires one pointer&&&&per ioport instead of 6.&&&&&&&&Acked-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," exec: Use fprintf_function for dump_exec_info (format checking) fprintf_function uses format checking with GCC_FMT_ATTR.&&&&&&&&It is declared in qemu-common.h and used in cpu-all.h&&&&(which is included from cpu.h), so qemu-common.h must&&&&be included earlier. Some redundant include statements&&&&for standard include files were removed.&&&&&&&&Fix also two format errors (ptrdiff_t needs %td).&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," vgabios update: handle compatibility with older qemu versions As pointed out by avi the vgabios update is guest-visible and thus has&&&&migration implications.&&&&&&&&One change is that the vga has a valid pci rom bar now.  We already have&&&&a pci bus property to enable/disable the rom bar and we'll load the bios&&&&via fw_cfg as fallback for the no-rom-bar case.  So we just have to add&&&&compat properties to handle this case.&&&&&&&&A second change is that the magic bochs lfb @ 0xe0000000 is gone.  When&&&&live-migrating a guest from a older qemu version it might be using the&&&&lfb though, so we have to keep it for the old machine types.  The patch&&&&enables the bochs lfb in case we don't have the pci rom bar enabled&&&&(i.e. we are in 0.13+older compat mode).&&&&&&&&This patch depends on these patches which add (and use) the pc-0.13&&&&machine type:&&&&  http://patchwork.ozlabs.org/patch/70797/&&&&  http://patchwork.ozlabs.org/patch/70798/&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Cc: avi@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Use a few more gcc warning flags If the compiler supports the following warning flags, use them:&&&&&&&&-Wformat-security -Wformat-y2k -Winit-self -Wignored-qualifiers&&&&-Wmissing-include-dirs&&&&&&&&Currently, these flags don't produce any warnings.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0," Use gcc warning flag -Wtype-limits If the compiler supports the warning flag -Wtype-limits, use it.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, fix 100% CPU load when idle with ALSA Playback control function did not disable polling when playback stops.&&&&Caused busy spinning of the main loop due to unprocessed events.&&&&&&&&Signed-off-by: Jindrich Makovicka <makovick@gmail.com>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& 
0," Copy snapshots out of QCOW2 disk In order to backup snapshots, created from QCOW2 iamge, we want to copy snapshots out of QCOW2 disk to a seperate storage.&&&&The following patch adds a new option in ""qemu-img"": qemu-img convert -f qcow2 -O qcow2 -s snapshot_name src_img bck_img.&&&&Right now, it only supports to copy the full snapshot, delta snapshot is on the way.&&&&&&&&Changes from V1: all the comments from Kevin are addressed:&&&&Add read-only checking&&&&Fix coding style&&&&Change the name from bdrv_snapshot_load to bdrv_snapshot_load_tmp&&&&&&&&Signed-off-by: Disheng Su <edison@cloud.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, add some tests for invalid JSON Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
0," virtio-blk: fix the list operation in virtio_blk_load(). Although it is really rare to get in to the while loop, the list&&&&operation in the loop is obviously wrong.&&&&&&&&Signed-off-by: Yoshiaki Tamura <tamura.yoshiaki@lab.ntt.co.jp>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, Fix uint8_t comparison with negative value Commit 7bccf57383cca60a778d5c543ac80c9f62d89ef2 missed this one:&&&&/src/qemu/ui/vnc-enc-tight.c: In function 'send_sub_rect':&&&&/src/qemu/ui/vnc-enc-tight.c:1527: warning: comparison is always true due to limited range of data type&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," ppc4xx: correct SDRAM controller warning message condition The message ""Truncating memory to %d MiB to fit SDRAM controller limits""&&&&should be displayed only when a user chooses an amount of RAM which&&&&can't be represented by the PPC 4xx SDRAM controller (e.g. 129MB, which&&&&would only be valid if the controller supports a bank size of 1MB).&&&&&&&&Signed-off-by: Hollis Blanchard <hollis@penguinppc.org>&&&& "
0," json-lexer: Handle missing escapes The JSON escape sequence ""\/"" and ""\\"" are valid and should be&&&&handled.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
0," target-mips: refactor c{, abs}.cond.fmt insns Move all knowledge about coprocessor-checking and register numbering&&&&into the gen_cmp* helper functions.&&&&&&&&Signed-off-by: Nathan Froyd <froydnj@codesourcery.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, tcg: protect div2 in tcg/tcg-opc.h Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
0," alpha-linux-user: Fix sigprocmask. Alpha passes oldset by value in a register, and returns the newset&&&&as the return value; as compared to the standard implementation in&&&&which both are passed by reference.  This requires being able to&&&&distinguish negative return values that are not errors.  Do this in&&&&the same way as the Alpha Linux kernel, by storing a zero in V0 in&&&&the implementation of the syscall.&&&&&&&&At the same time, fix a think-o in the regular sigprocmask path in&&&&which we passed the target, rather than the host, HOW value.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," more alarm timer cleanup The timer_alarm_pending variable is related to the alarm timer but not&&&&placed in the struct.  Also, in qemu_mod_timer the wrong flag was being&&&&tested: the timer is rearmed in the alarm timer ""bottom half"", so the&&&&right flag to test there is the ""pending"" flag.&&&&&&&&Finally, I hoisted the NULL checks from alarm_has_dynticks to&&&&host_alarm_handler.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," powerpc/booke: move fdt loading to rom infrastructure It's convinent to use rom to checking overlap, to reset etc.&&&&And uImage and ramdisk loading has already moved to it.&&&&&&&&Also, after we add fdt to rom, free it.&&&&&&&&Signed-off-by: Liu Yu <yu.liu@freescale.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," discarding the last 3 bytes of data on a write transfer.&&&&&&&&Signed-off-by: Paul Brook <paul@codesourcery.com>&&&& """
0, bsd/darwin-user: mmap_frag() users only check for -1 error See also ee636500d6eab44b83f09cb730b67226b70423b1.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
0," Fix regression in option parsing Commit ec229bbe7 broke invocation without a specific -hda.  IOW, qemu foo.img.&&&&The lack of an optind update caused an infinite loop.&&&&&&&&Reported-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," block: clean up bdrv_open2 structure a bit Check the whitelist as early as possible instead of continuing the&&&&setup, and move all the error handling code to the end of the&&&&function.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," target-sh4: MMU: optimize UTLB accesses With the current code, the QEMU TLB is setup to match the read/write&&&&mode of the MMU fault. This means when read access is done, the page&&&&is setup in read-only mode. When the page is later accessed in write&&&&mode, an MMU fault happened, and the page is switch in write-only&&&&mode. This flip-flop causes a lot of calls to the MMU code and slow&&&&down the emulation.&&&&&&&&This patch changes the MMU emulation, so that the QEMU TLB is setup&&&&to match the UTLB protection key. This impressively increase the&&&&speed of the emulation.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," QMP: Drop wrong assert() Some commands return a QList of QDicts, which is valid,&&&&but will trig the assert().&&&&&&&&Just drop it.&&&&&&&&Reported-by: Nathan Baum <nathan@parenthephobia.org.uk>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," virtio-serial-bus: Add a port 'name' property for port discovery in guests The port 'id' or number is internal state between the guest kernel and&&&&our bus implementation. This is invocation-dependent and isn't part of&&&&the guest-host ABI.&&&&&&&&To correcly enumerate and map ports between the host and the guest, the&&&&'name' property is used.&&&&&&&&Example:&&&&&&&&    -device virtserialport,name=org.qemu.port.0&&&&&&&&This invocation will get us a char device in the guest at:&&&&&&&&    /dev/virtio-ports/org.qemu.port.0&&&&&&&&which can be a symlink to&&&&&&&&    /dev/vport0p3&&&&&&&&This 'name' property is exposed by the guest kernel in a sysfs&&&&attribute:&&&&&&&&    /sys/kernel/virtio-ports/vport0p3/name&&&&&&&&A simple udev script can pick up this name and create the symlink&&&&mentioned above.&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," VNC: Cache client info at connection time When a disconnection happens the client's socket on QEMU&&&&side may become invalid, this way it won't be possible&&&&to query it to get client information, which is going to&&&&be needed by the future QMP VNC_DISCONNECTED event.&&&&&&&&To always have this information available we query the&&&&socket at connection time and cache the client info in&&&&struct VncState.&&&&&&&&Two function are introduced to perform this job.&&&&&&&&vnc_client_cache_addr() is called right when the connection&&&&is made, however the authentication information is not&&&&available at that moment so vnc_client_cache_auth() is&&&&called from protocol_client_init() to get auth info.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," MAC DBDMA: store register values in native endianness Store the register values in native endianness, by dropping all the&&&&endianness conversion functions, and converting the endianness in&&&&dbdma_readl/dbdma_writel instead.&&&&&&&&Also guard the endianness conversion with TARGET_WORDS_BIGENDIAN to&&&&simulate the backward connection of the bus.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, vnc: hextile: do not generate ForegroundSpecified and SubrectsColoured tiles This violates the RFB specification (section 6.6.4).  It happens to work with&&&&most clients but it's still wrong.&&&&&&&&Reported-by: Yaniv Kaul <ykaul@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," target-i386: Update CPUID feature set for TCG The CPUID features QEMU presented to the guest were not up-to-date&&&&with QEMU's emulated feature set.&&&&Add the missing bits of recent (and not so recent) additions to&&&&QEMU's emulation engine.&&&&For stability reasons only the user mode usable bits are exposed for&&&&now, features like Monitor or CR8LEG are left out.&&&&&&&&Signed-off-by: Andre Przywara <andre.przywara@amd.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0," Update SeaBIOS  - 7d09d0e Fix virtio compile errors on various gcc versions.&&&& - 89acfa3 Support for booting from virtio disks&&&& - 6d66316 smbios: avoid counting io hole as ram&&&& - e5cd945 Fix error causing USB HID ""boot"" protocol to not be enabled.&&&& - 0e88576 Add support for USB mice.&&&& - dd5a8a6 When USB keyboard active, don't send keyboard commands to ps2 port.&&&& - 5718d56 Document usb-hid.c functions.&&&& - e438b0c Further parallelize init when using CONFIG_THREAD_OPTIONROMS.&&&& - f59b5ac Handle unknown function addresses in tools/checkstack.py.&&&& - 9ba1dea Simplify build by manually resolving external symbols in layoutrom.py.&&&& - 698d3f9 USB EHCI should yield() whil waiting for controller to ack reset.&&&& - f9a774c Add __attribute__((__malloc__)) declaration to internal malloc funcs.&&&& - b7045ce Minor - remove redundant check from ata_try_dma.&&&& - 67f6d37 Fix possible unitialized variable issue in usb msc.&&&& - a7eb8fc Some improvements to optionrom preemption support.&&&& - d28b0fe Refactor USB hub code.&&&& - ba28541 Prep version for next release.&&&& - 12bffd5 Update version to 0.6.0.&&&& - 87ab2fb Improve USB EHCI timing.&&&& - d705e5a Disable inlining on old compilers.&&&& - bca0736 Force use of indirect function calls in inline assembler.&&&& - d7eb27e Don't move EBDA while an optionrom is running (CONFIG_THREAD_OPTIONROMS).&&&& - 7415270 Call to int1552 (from int1346) should set regs->dl.&&&& - 9dc243e Adjust debug levels of device discovery.&&&& - d9c9361 Default CONFIG_COREBOOT_FLASH on; make depend on CONFIG_COREBOOT.&&&& - c35e1e5 Restore segment limits in handle_1589 code.&&&& - 11cc662 Extend time for rtc to be ready.&&&& - 4ed378a Backup and restore registers when calling out to user funcs.&&&& - 68c5139 Enable irqs in kbd/clock calls that caller might ""spin"" on.&&&& - f628244 Process event on ps2 keyboard irq even if event already read.&&&& - a5d8458 Revert ""Unify ps2 port data processing.""&&&& - b9ed5e2 Handle variable length return of ps2 port GETID command.&&&& - 67a9eec Prevent ps2 irqs from messing up ps2 init.&&&& - 6704cf9 Revert ""Rework disabling of ps2 port irqs.""&&&& - 808939c Fix smp cpu detect on gcc 4.5.&&&& - a979c1c Improvements to tools/checkstack.py.&&&& - 190cc62 Add USB EHCI controller support.&&&& - 0770d67 Some USB UHCI and OHCI fixes and cleanups.&&&& - bfe7ca7 Minor - USB OHCI interrupt queue should be one larger.&&&& - 09e2f7c Reduce size of USB 'struct uhci_td'.&&&& - 406fad6 Dynamically allocate USB controller structures.&&&& - 4547eb9 Replace USB encoded 'u32 endp' scheme with explicit struct fields.&&&& - 8ebcac0 Further parallelize USB init by launching a thread per usb port.&&&& - e908665 Introduce simple ""mutex"" locking code.&&&& - 3b79f8b Only compile usb-hub.c and paravirt.c with 32bit code.&&&& - 357bdfa Prefer passing a USB ""pipe"" structure over a USB endp encoding.&&&& - 7fb8ba8 Add a generic ""internal error"" warning function.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, pci: clean up of pci_init_wmask(). This patch replaces for loop by memset in pci_init_wmask().&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, Add a JSON parser This is the third and final stage of the JSON parser.  It parses lexical tokens&&&&performing grammar validation and creating the final QObject representation.  It&&&&uses a recursive decent parser.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
0," default devices: core code & serial lines. Qemu creates a default serial line for you in case you didn't specify&&&&one on the command line.  Right now this is tied to the '-serial&&&&<chardev>' command line switch, which in turn causes trouble if you are&&&&creating your serial line via '-device isa-serial,<props>'.&&&&&&&&This patch adds a variable default_serial which says whenever a default&&&&serial line should be added.  It is enabled by default.  It is cleared&&&&when qemu finds '-serial' or '-device isa-serial' on the command line.&&&&&&&&Part of the patch is some infrastructure for the '-device $driver'&&&&checking (default_driver_check function) which will also be used by the&&&&other patches of this series.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Rename QEMU_TIMER_* to QEMU_CLOCK_* These constants select clocks, not timers. And init_timers initializes&&&&clocks.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," target-i386: add lock mov cr0 = cr8 AMD CPUs featuring a shortcut to access CR8 even from 32-bit mode.&&&&If you use the LOCK prefix with ""mov CR0"", it accesses CR8 instead.&&&&This behavior is guarded by the CR8_LEGACY CPUID bit&&&&(Fn8000_0001:ECX[1]).&&&&&&&&Signed-off-by: Andre Przywara <andre.przywara@amd.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
0, microblaze: Compute masks for alignment checks at translation time. Thanks to Blue Swirl for reporting.&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
0," target-ppc: retain l{w,d}arx loaded value We do this so we can check on the corresponding stc{w,d}x. whether the&&&&value has changed.  It's a poor man's form of implementing atomic&&&&operations and is valid only for NPTL usermode Linux emulation.&&&&&&&&Signed-off-by: Nathan Froyd <froydnj@codesourcery.com>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
0," Introduce QEMU_CLOCK_HOST Despite its name QEMU_CLOCK_REALTIME is (normally) not using&&&&CLOCK_REALTIME / the host system time as base. In order to allow also&&&&non-trivial RTC emulations (MC146818) to follow the host time instead of&&&&the virtual guest time, introduce the new clock type QEMU_CLOCK_HOST. It&&&&is unconditionally based on CLOCK_REALTIME, thus will follow system time&&&&changes of the host.&&&&&&&&The only limitation of its current implementation is that pending&&&&host_clock timers may not fire early if the host time is pushed forward&&&&beyond their expiry. So far no urgent need to overcome this limitation&&&&was identified, so it's left as simple as it is (expiry on next alarm&&&&timer tick).&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0," Ignore -Waddress for alsaaudio.c /usr/include/alsa/pcm.h contains:&&&&&&&&#define snd_pcm_sw_params_alloca(ptr) do { assert(ptr); *ptr = (snd_pcm_sw_params_t *) alloca(snd_pcm_sw_params_sizeof()); memset(*ptr, 0, snd_pcm_sw_params_sizeof()); } while (0)&&&&&&&&The assert generates: ""error: the address of 'sw_params' will always&&&&evaluate as 'true'"" which combined with -Werror prevents alsaaudio.o&&&&from being built with certain versions of GCC.&&&& "
0," net: Avoid gcc'ism in net_host_device_add >> +    if (net_client_init(device, opts ? : """") < 0) {&&&&>&&&&> Is this a gcc extension?  Do we want to introduce this construct to the&&&&> code base.&&&&&&&&Valid remark, fix below.&&&&&&&&Thanks,&&&&Jan&&&&&&&&-------->&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, Add named initializers. Signed-off-by: Paul Brook <paul@codesourcery.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7091 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Sparc32: fix fdc io_base On some Sparc32 machines, fdc is located above 4G limit, so uint32_t is not&&&&appropriate type for io_base.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
0, kvm: Apply SMM-already-initialized workaround on reset (Jan Kiszka) Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7136 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, target-mips: get rid of tests on env->user_mode_only Replace runtime checks on env->user_mode_only by compile time&&&&checks on CONFIG_USER_ONLY.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6276 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Fix PXA2xx framebuffer dirty checking. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6019 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," raw-posix: refactor AIO support Currently the raw-posix.c code contains a lot of knowledge about the&&&&asynchronous I/O scheme that is mostly implemented in posix-aio-compat.c.&&&&All this code does not really belong here and is getting a bit in the&&&&way of implementing native AIO on Linux.&&&&&&&&So instead move all the guts of the AIO implementation into&&&&posix-aio-compat.c (which might need a better name, btw).&&&&&&&&There's now a very small interface between the AIO providers and raw-posix.c:&&&&&&&& - an init routine is called from raw_open_common to return an AIO context&&&&   for this drive.  An AIO implementation may either re-use one context&&&&   for all drives, or use a different one for each as the Linux native&&&&   AIO support will do.&&&& - an submit routine is called from the aio_reav/writev methods to submit&&&&   an AIO request&&&&&&&&There are no indirect calls involved in this interface as we need to&&&&decide which one to call manually.  We will only call the Linux AIO native&&&&init function if we were requested to by vl.c, and we will only call&&&&the native submit function if we are asked to and the request is properly&&&&aligned.  That's also the reason why the alignment check actually does&&&&the inverse move and now goes into raw-posix.c.&&&&&&&&The old posix-aio-compat.h headers is removed now that most of it's&&&&content is private to posix-aio-compat.c, and instead we add a new&&&&block/raw-posix-aio.h headers is created containing only the tiny interface&&&&between raw-posix.c and the AIO implementation.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
0, target-ppc: initialize MSR appropriately in user-mode Mask the initial MSR with the mask from the PowerPC CPU definition.&&&&&&&&Noticed by Nathan Froyd.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5964 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Run timers from host alarm timer callback This further cleans up the main loop getting it a lot closer to what a main&&&&loop should be.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5636 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," target-i386: SVM: acknowledge interrupt only after it is taken SVM specifies that the V_IRQ mask is only to be removed, if the&&&&interrupt that is to be delivered actually is delivered.&&&&&&&&As of the SVM rewrite, this mask is always unmasked when the main cpu&&&&loop is processed, leaving a corner case where calling the interrupt&&&&handler causes a #PF. In that case (booting Linux / starting gfxboot)&&&&the current implementation tells the VMM the interrupt is taken, even&&&&though it is not.&&&&&&&&This patch modifies the VIRQ unmasking to occur after do_interrupt,&&&&making gfxboot work again.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6008 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, alpha: improve testsuite misc tiny patches:&&&&* add a 'check' target to the Makefile&&&&* split code in crt.s to create the _exit syscall; also use the value of&&&&main() as exit status&&&&&&&&Signed-off-by: Tristan Gingold <gingold@adacore.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5244 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Fix tswap size p in this case is uint32_t *&&&&&&&&e1/e2 are unsigned ints initialized from arithmetics performed on&&&&unsigned longs&&&&&&&&The mistake was, probably, never noticed due to the absence of any&&&&big endian linux-user host. The types e1/e2 and p begs the quesiton&&&&why this function takes longs at all.&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5036 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Make MAXTL dynamic, bounds check tl when indexing git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4942 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0," Allow to register a callback with fw_cfg_add_callback() fw_cfg_add_callback() checks if key has FW_CFG_WRITE_CHANNEL bit set after masking the key with FW_CFG_ENTRY_MASK. But as FW_CFG_ENTRY_MASK is ~(FW_CFG_WRITE_CHANNEL | FW_CFG_ARCH_LOCAL),&&&&the bit is never set and function exits.&&&&&&&&This patch corrects this by checking the bit before masking the value.&&&&&&&&Signed-by-off: Laurent Vivier <Laurent.Vivier@bull.net>&&&&Acked-by: Gleb Natapov <gleb@redhat.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5978 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, No write-protect detect diode on Mainstone II. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3790 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Robustify source directory check. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3960 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, temporary hack to handle register shortage with dyngen for qemu_st64() git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4438 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, suppressed invalid test git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1767 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," Prevent SEGV in VNC server for old clients (Anthony Liguori). If the client does not support the DesktopResize pseudo-encoding, then&&&&vs->{width,height} may be smaller than ds->{width,height}.  dirty_row is&&&&sized according to vs->{width,height}, not ds->{width,height}.&&&&&&&&This patch makes sure to bound the update region to vs->{width,height} to&&&&avoid a possible SEGV.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Reported-by: Marcelo Tosatti <mtosatti@redhat.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4502 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
0, added -cpu option for x86 - fixed glibc hack in case the global variables are moved git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3548 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, loop insn fix for non x86 hosts git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1305 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, Handle invalid accesses as SIGILL for mips/mipsel userland emulation. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2235 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, fixed invalid signal masking git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@170 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0, avoid segfault if transient invalid text resolution git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@727 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
0," target/xtensa: disas/xtensa: fix coverity warnings Coverity warnings CID 1385146, 1385148 1385149 and 1385150 point that&&&&xtensa_opcode_num_operands and xtensa_format_num_slots may return -1&&&&even when xtensa_opcode_decode and xtensa_format_decode succeed. In that&&&&case unsigned counters used to iterate through operands/slots will not&&&&do the right thing.&&&&Make counters and loop bounds signed to fix the warnings.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
0," hw/isa: Replace fprintf(stderr, ""*\n"" with error_report() Replace a large number of the fprintf(stderr, ""*\n"" calls with&&&&error_report(). The functions were renamed with these commands and then&&&&compiler issues where manually fixed.&&&&&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N;N;N;N;N;N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N;N;N;N;N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N;N;N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N;N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N;N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&find ./* -type f -exec sed -i \&&&&    'N; {s|fprintf(stderr,&&&&""\(.*\)\\n""\(.*\));|error_report(""\1""\2);|Ig}' \&&&&    {} +&&&&&&&&Some lines where then manually tweaked to pass checkpatch.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&& "
0," hw/intc/arm_gic: Prevent the GIC from signaling an IRQ when it's ""active and pending"" In the GIC, when an IRQ is acknowledged, its state goes from ""pending""&&&&to:&&&&   - ""active"" if the corresponding IRQ pin has been de-asserted&&&&   - ""active and pending"" otherwise.&&&&The GICv2 manual states that when a IRQ becomes active (or active and&&&&pending), the GIC should either signal another (higher priority) IRQ to&&&&the CPU if there is one, or de-assert the CPU IRQ pin.&&&&&&&&The current implementation of the GIC in QEMU does not check if the&&&&IRQ is already active when looking for pending interrupts with&&&&sufficient priority in gic_update(). This can lead to signaling an&&&&interrupt that is already active.&&&&&&&&This usually happens when splitting priority drop and interrupt&&&&deactivation. On priority drop, the IRQ stays active until deactivation.&&&&If it becomes pending again, chances are that it will be incorrectly&&&&selected as best_irq in gic_update().&&&&&&&&This commit fixes this by checking if the IRQ is not already active when&&&&looking for best_irq in gic_update().&&&&&&&&Note that regarding the ARM11MPCore GIC version, the corresponding&&&&manual is not clear on that point, but it has has no priority&&&&drop/interrupt deactivation separation, so this case should not happen.&&&&&&&&Signed-off-by: Luc MICHEL <luc.michel@git.antfield.fr>&&&&Message-id: 20180119145756.7629-3-luc.michel@greensocs.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," qapi: Implement boxed types for commands/events Turn on the ability to pass command and event arguments in&&&&a single boxed parameter, which must name a non-empty type&&&&(although the type can be a struct with all optional members).&&&&For structs, it makes it possible to pass a single qapi type&&&&instead of a breakout of all struct members (useful if the&&&&arguments are already in a struct or if the number of members&&&&is large); for other complex types, it is now possible to use&&&&a union or alternate as the data for a command or event.&&&&&&&&The empty type may be technically feasible if needed down the&&&&road, but it's easier to forbid it now and relax things to allow&&&&it later, than it is to allow it now and have to special case&&&&how the generated 'q_empty' type is handled (see commit 7ce106a9&&&&for reasons why nothing is generated for the empty type).  An&&&&alternate type is never considered empty, but now that a boxed&&&&type can be either an object or an alternate, we have to provide&&&&a trivial QAPISchemaAlternateType.is_empty().  The new call to&&&&arg_type.is_empty() during QAPISchemaCommand.check() requires&&&&that we first check the type in question; but there is no chance&&&&of introducing a cycle since objects do not refer back to commands.&&&&&&&&We still have a split in syntax checking between ad-hoc parsing&&&&up front (merely validates that 'boxed' has a sane value) and&&&&during .check() methods (if 'boxed' is set, then 'data' must name&&&&a non-empty user-defined type).&&&&&&&&Generated code is unchanged, as long as no client uses the&&&&new feature.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1468468228-27827-10-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&[Test files renamed to *-boxed-*]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
0," i386: hvf: refactor event injection code for hvf This patch refactors the event-injection code for hvf by using the&&&&appropriate fields already provided by CPUX86State. At vmexit, it fills&&&&these fields so that hvf_inject_interrupts can just retrieve them without&&&&calling into hvf.&&&&&&&&Signed-off-by: Sergio Andres Gomez Del Real <Sergio.G.DelReal@gmail.com>&&&&Message-Id: <20170913090522.4022-14-Sergio.G.DelReal@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," spapr: Treat Hardware Transactional Memory (HTM) as an optional capability This adds an spapr capability bit for Hardware Transactional Memory.  It is&&&&enabled by default for pseries-2.11 and earlier machine types. with POWER8&&&&or later CPUs (as it must be, since earlier qemu versions would implicitly&&&&allow it).  However it is disabled by default for the latest pseries-2.12&&&&machine type.&&&&&&&&This means that with the latest machine type, HTM will not be available,&&&&regardless of CPU, unless it is explicitly enabled on the command line.&&&&That change is made on the basis that:&&&&&&&& * This way running with -M pseries,accel=tcg will start with whatever cpu&&&&   and will provide the same guest visible model as with accel=kvm.&&&&     - More specifically, this means existing make check tests don't have&&&&       to be modified to use cap-htm=off in order to run with TCG&&&&&&&& * We hope to add a new ""HTM without suspend"" feature in the not too&&&&   distant future which could work on both POWER8 and POWER9 cpus, and&&&&   could be enabled by default.&&&&&&&& * Best guesses suggest that future POWER cpus may well only support the&&&&   HTM-without-suspend model, not the (frankly, horribly overcomplicated)&&&&   POWER8 style HTM with suspend.&&&&&&&& * Anecdotal evidence suggests problems with HTM being enabled when it&&&&   wasn't wanted are more common than being missing when it was.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&& "
0," ui: remove unreachable code in vnc_update_client A previous commit:&&&&&&&&  commit 5a8be0f73d6f60ff08746377eb09ca459f39deab&&&&  Author: Gerd Hoffmann <kraxel@redhat.com>&&&&  Date:   Wed Jul 13 12:21:20 2016 +0200&&&&&&&&    vnc: make sure we finish disconnect&&&&&&&&Added a check for vs->disconnecting at the very start of the&&&&vnc_update_client method. This means that the very next ""if""&&&&statement check for !vs->disconnecting always evaluates true,&&&&and is thus redundant. This in turn means the vs->disconnecting&&&&check at the very end of the method never evaluates true, and&&&&is thus unreachable code.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Darren Kenny <darren.kenny@oracle.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 20171218191228.31018-3-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
0," s390x/kvm: factor out build_channel_report_mcic() into cpu.h We'll need it later on in two places. Refactor it to just indicate the&&&&validity bits. While at it, introduce a define for the used CR14 bit (we'll&&&&also need later on).&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20171208160207.26494-2-david@redhat.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," nvic: Make systick banked For the v8M security extension, there should be two systick&&&&devices, which use separate banked systick exceptions. The&&&&register interface is banked in the same way as for other&&&&banked registers, including the existence of an NS alias&&&&region for secure code to access the nonsecure timer.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-id: 1512154296-5652-3-git-send-email-peter.maydell@linaro.org&&&& "
0," Use HTTPS for qemu.org and other domains qemu.org enabled HTTPS in 2017 and it should be used instead of HTTP.&&&&There are also URLs to json.org, openvpn.net, and other domains that&&&&support HTTPS.&&&&&&&&This patch updates the qemu.org domains everywhere and also third-party&&&&domains that I have checked.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 20171121120435.28728-3-stefanha@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0," qcow2: Unaligned zero cluster in handle_alloc() We should check whether the cluster offset we are about to use is&&&&actually valid; that is, whether it is aligned to cluster boundaries.&&&&&&&&Reported-by: R. Nageswara Sastry <nasastry@in.ibm.com>&&&&Buglink: https://bugs.launchpad.net/qemu/+bug/1728643&&&&Buglink: https://bugs.launchpad.net/qemu/+bug/1728657&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20171110203111.7666-3-mreitz@redhat.com&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
0," hw/arm: Silence xlnx-ep108 deprecation warning during tests The new deprecation warning for the xlnx-ep108 machine also pops up&&&&during ""make check"" which is kind of confusing. Silence it if testing&&&&mode is enabled.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Acked-by: Wei Huang <wei@redhat.com>&&&&Message-id: 1510846183-756-1-git-send-email-thuth@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
0, tests: Add check-qobject for equality tests Add a new test file (check-qobject.c) for unit tests that concern&&&&QObjects as a whole.&&&&&&&&Its only purpose for now is to test the qobject_is_equal() function.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20171114180128.17076-7-mreitz@redhat.com&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& 
0," qcow2: don't permit changing encryption parameters Currently if trying to change encryption parameters on a qcow2 image, qemu-img&&&&will abort. We already explicitly check for attempt to change encrypt.format&&&&but missed other parameters like encrypt.key-secret. Rather than list each&&&&parameter, just blacklist changing of all parameters with a 'encrypt.' prefix.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qemu-img: Add find_nonzero() During 'qemu-img compare', when we are checking that an allocated&&&&portion of one file is all zeros, we don't need to waste time&&&&computing how many additional sectors after the first non-zero&&&&byte are also non-zero.  Create a new helper find_nonzero() to do&&&&the check for a first non-zero sector, and rebase&&&&check_empty_sectors() to use it.&&&&&&&&The new interface intentionally uses bytes in its interface, even&&&&though it still crawls the buffer a sector at a time; it is robust&&&&to a partial sector at the end of the buffer.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, target/i386: check CF_PARALLEL instead of parallel_cpus Thereby decoupling the resulting translated code from the current state&&&&of the system.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Richard Henderson <richard.henderson@linaro.org>&&&& 
0," s390x/kvm: factor out SIGP code into sigp.c We want to use the same code base for TCG, so let's cleanly factor it&&&&out.&&&&&&&&The sigp mutex is currently not really needed, as everything is&&&&protected by the iothread mutex. But this could change later, so leave&&&&it in place and initialize it properly from common code.&&&&&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170928203708.9376-17-david@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
0," block: Allow NULL file for bdrv_get_block_status() Not all callers care about which BDS owns the mapping for a given&&&&range of the file.  This patch merely simplifies the callers by&&&&consolidating the logic in the common call point, while guaranteeing&&&&a non-NULL file to all the driver callbacks, for no semantic change.&&&&The only caller that does not care about pnum is bdrv_is_allocated,&&&&as invoked by vvfat; we can likewise add assertions that the rest&&&&of the stack does not have to worry about a NULL pnum.&&&&&&&&Furthermore, this will also set the stage for a future cleanup: when&&&&a caller does not care about which BDS owns an offset, it would be&&&&nice to allow the driver to optimize things to not have to return&&&&BDRV_BLOCK_OFFSET_VALID in the first place.  In the case of fragmented&&&&allocation (for example, it's fairly easy to create a qcow2 image&&&&where consecutive guest addresses are not at consecutive host&&&&addresses), the current contract requires bdrv_get_block_status()&&&&to clamp *pnum to the limit where host addresses are no longer&&&&consecutive, but allowing a NULL file means that *pnum could be&&&&set to the full length of known-allocated data.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0, gitignore: ignore check-qlit test test introduced in 382176b4d78e070d119af8e0dcd00884c11bbec2&&&&&&&&Signed-off-by: Carlo Marcelo Arenas Bel贸n <carenas@gmail.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
0, sockets: factor out create_fast_reuse_socket Another refactoring step to prepare for fixing the problem&&&&exposed with the test-listen test in the previous commit&&&&&&&&Signed-off-by: Knut Omang <knut.omang@oracle.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
0," block: Convert bdrv_get_block_status_above() to bytes We are gradually moving away from sector-based interfaces, towards&&&&byte-based.  In the common case, allocation is unlikely to ever use&&&&values that are not naturally sector-aligned, but it is possible&&&&that byte-based values will let us be more precise about allocation&&&&at the end of an unaligned file that can do byte-based access.&&&&&&&&Changing the name of the function from bdrv_get_block_status_above()&&&&to bdrv_block_status_above() ensures that the compiler enforces that&&&&all callers are updated.  Likewise, since it a byte interface allows&&&&an offset mapping that might not be sector aligned, split the mapping&&&&out of the return value and into a pass-by-reference parameter.  For&&&&now, the io.c layer still assert()s that all uses are sector-aligned,&&&&but that can be relaxed when a later patch implements byte-based&&&&block status in the drivers.&&&&&&&&For the most part this patch is just the addition of scaling at the&&&&callers followed by inverse scaling at bdrv_block_status(), plus&&&&updates for the new split return interface.  But some code,&&&&particularly bdrv_block_status(), gets a lot simpler because it no&&&&longer has to mess with sectors.  Likewise, mirror code no longer&&&&computes s->granularity >> BDRV_SECTOR_BITS, and can therefore drop&&&&an assertion about alignment because the loop no longer depends on&&&&alignment (never mind that we don't really have a driver that&&&&reports sub-sector alignments, so it's not really possible to test&&&&the effect of sub-sector mirroring).  Fix a neighboring assertion to&&&&use is_power_of_2 while there.&&&&&&&&For ease of review, bdrv_get_block_status() was tackled separately.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," ppc: pnv: use generic cpu_model parsing use common cpu_model prasing in vl.c and set default cpu_model&&&&using generic MachineClass::default_cpu_type.&&&&&&&&Beside of switching to generic infrastructure it solves several&&&&issues.&&&&&&&& * ppc_cpu_class_by_name() is used to deal with lower/upper case&&&&   and alias translations into actual cpu type, which fixes&&&&    '-M powernv -cpu power8' and '-M powernv -cpu power9_v1.0'&&&&   usecases which error out with:&&&&    'invalid CPU model 'FOO' for powernv machine'&&&& * allows to switch to lower-case typenames in pnv chip/core name&&&&   (by convention typnames should be lower-case)&&&& * replace aliased names /power8, power9, .../ with exact cpu model&&&&   names (i.e. typenames should be stable but aliases might decide to&&&&   point to other cpu model withi family or changed by kvm). It will&&&&   also help to simplify pnv_chip/core code and get rid of dependency&&&&   on cpu_model parsing.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: C茅dric Le Goater <clg@kaod.org>&&&&[dwg: Updated to make DD2.0 as default POWER9 chip]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0, pci: Validate interfaces on base_class_init Make sure we don't forget to add the Conventional PCI or PCI&&&&Express interface names on PCI device classes in the future.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Revieed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
0, tpm-backend: Made few interface methods optional This allows backend implementations left optional interface methods.&&&&For mandatory methods assertion checks added.&&&&&&&&Took the opportunity to remove unused methods:&&&& - tpm_backend_get_desc()&&&& - TPMDriverOps->handle_startup_error&&&&&&&&Signed-off-by: Amarnath Valluri <amarnath.valluri@intel.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Stefan Berger<stefanb@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&& 
0," qemu-iotests: limit non-_PROG-suffixed variables to common.rc These are never used by ""check"", with one exception that does not need&&&&$QEMU_OPTIONS.  Keep them in common.rc, which will be soon included only&&&&by the tests.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," dirty-bitmap: Change bdrv_dirty_bitmap_*serialize*() to take bytes Right now, the dirty-bitmap code exposes the fact that we use&&&&a scale of sector granularity in the underlying hbitmap to anything&&&&that wants to serialize a dirty bitmap.  It's nicer to uniformly&&&&expose bytes as our dirty-bitmap interface, matching the previous&&&&change to bitmap size.  The only caller to serialization is currently&&&&qcow2-cluster.c, which becomes a bit more verbose because it is still&&&&tracking sectors for other reasons, but a later patch will fix that&&&&to more uniformly use byte offsets everywhere.  Likewise, within&&&&dirty-bitmap, we have to add more assertions that we are not&&&&truncating incorrectly, which can go away once the internal hbitmap&&&&is byte-based rather than sector-based.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," qcow2: Switch store_bitmap_data() to byte-based iteration Now that we have adjusted the majority of the calls this function&&&&makes to be byte-based, it is easier to read the code if it makes&&&&passes over the image using bytes rather than sectors.&&&&&&&&iotests 165 was rather weak - on a default 64k-cluster image, where&&&&bitmap granularity also defaults to 64k bytes, a single cluster of&&&&the bitmap table thus covers (64*1024*8) bits which each cover 64k&&&&bytes, or 32G of image space.  But the test only uses a 1G image,&&&&so it cannot trigger any more than one loop of the code in&&&&store_bitmap_data(); and it was writing to the first cluster.  In&&&&order to test that we are properly aligning which portions of the&&&&bitmap are being written to the file, we really want to test a case&&&&where the first dirty bit returned by bdrv_dirty_iter_next() is not&&&&aligned to the start of a cluster, which we can do by modifying the&&&&test to write data that doesn't happen to fall in the first cluster&&&&of the image.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
0," kvm: check KVM_CAP_SYNC_MMU with kvm_vm_check_extension() On a server-class ppc host, this capability depends on the KVM type,&&&&ie, HV or PR. If both KVM are present in the kernel, we will always&&&&get the HV specific value, even if we explicitely requested PR on&&&&the command line.&&&&&&&&This can have an impact if we're using hugepages or a balloon device.&&&&&&&&Since we've already created the VM at the time any user calls&&&&kvm_has_sync_mmu(), switching to kvm_vm_check_extension() is&&&&enough to fix any potential issue.&&&&&&&&It is okay for the other archs that also implement KVM_CAP_SYNC_MMU,&&&&ie, mips, s390, x86 and arm, because they don't depend on the VM being&&&&created or not.&&&&&&&&While here, let's cache the state of this extension in a bool variable,&&&&since it has several users in the code, as suggested by Thomas Huth.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Message-Id: <150600965332.30533.14702405809647835716.stgit@bahia.lan>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
0," spapr_pci: make index property mandatory PHBs can be created with an index property, in which case the machine&&&&code automatically sets all the MMIO windows at addresses derived from&&&&the index. Alternatively, they can be manually created without index,&&&&but the user has to provide addresses for all MMIO windows.&&&&&&&&The non-index way happens to be more trouble than it's worth: it's&&&&difficult to use, keeps requiring (potentially incompatible) changes&&&&when some new parameter needs adding, and is awkward to check for&&&&collisions. It currently even has a bug that prevents to use two&&&&non-index PHBs because their child DRCs are all derived from the&&&&same index == -1 value, and, thus, collide.&&&&&&&&This patch hence makes the index property mandatory. As a consequence,&&&&the PHB's memory regions and BUID are now always configured according&&&&to the index, and it is no longer possible to set them from the command&&&&line.&&&&&&&&This DOES BREAK backwards compat, but we don't think the non-index&&&&PHB feature was used in practice (at least libvirt doesn't) and the&&&&simplification is worth it.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
0," target/arm: Add and use defines for EXCRET constants The exception-return magic values get some new bits in v8M, which&&&&makes some bit definitions for them worthwhile.&&&&&&&&We don't use the bit definitions for the switch on the low bits&&&&which checks the return type for v7M, because this is defined&&&&in the v7M ARM ARM as a set of valid values rather than via&&&&per-bit checks.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 1505137930-13255-7-git-send-email-peter.maydell@linaro.org&&&& "
0," target/arm: Don't trap WFI/WFE for M profile M profile cores can never trap on WFI or WFE instructions. Check for&&&&M profile in check_wfx_trap() to ensure this.&&&&&&&&The existing code will do the right thing for v7M cores because&&&&the hcr_el2 and scr_el3 registers will be all-zeroes and so we&&&&won't attempt to trap, but when we start setting ARM_FEATURE_V8&&&&for v8M cores the v8A handling of SCTLR.nTWE and .nTWI will not&&&&give the right results.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1501692241-23310-3-git-send-email-peter.maydell@linaro.org&&&& "
0," target/arm: Implement BXNS, and banked stack pointers Implement the BXNS v8M instruction, which is like BX but will do a&&&&jump-and-switch-to-NonSecure if the branch target address has bit 0&&&&clear.&&&&&&&&This is the first piece of code which implements ""switch to the&&&&other security state"", so the commit also includes the code to&&&&switch the stack pointers around, which is the only complicated&&&&part of switching security state.&&&&&&&&BLXNS is more complicated than just ""BXNS but set the link register"",&&&&so we leave it for a separate commit.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1503414539-28762-21-git-send-email-peter.maydell@linaro.org&&&& "
0," target/s390x: use ""core-id"" for cpu number/address/id handling Some time ago we discussed that using ""id"" as property name is not the&&&&right thing to do, as it is a reserved property for other devices and&&&&will not work with device_add.&&&&&&&&Switch to the term ""core-id"" instead, and use it as an equivalent to&&&&""CPU address"" mentioned in the PoP. There is no such thing as cpu number,&&&&so rename env.cpu_num to env.core_id. We use ""core-id"" as this is the&&&&common term to use for device_add later on (x86 and ppc).&&&&&&&&We can get rid of cpu->id now. Keep cpu_index and env->core_id in sync.&&&&cpu_index was already implicitly used by e.g. cpu_exists(), so keeping&&&&both in sync seems to be the right thing to do.&&&&&&&&cpu_index will now no longer automatically get set via&&&&cpu_exec_realizefn(). For now, we were lucky that both implicitly stayed&&&&in sync.&&&&&&&&Our new cpu property ""core-id"" can be a static property. Range checks can&&&&be avoided by using the correct type and the ""setting after realized""&&&&check is done implicitly.&&&&&&&&device_add will later need the reserved ""id"" property. Hotplugging a CPU&&&&on s390x will then be: ""device_add host-s390-cpu,id=cpu2,core-id=2"".&&&&&&&&Reviewed-by: Matthew Rosato <mjrosato@linux.vnet.ibm.com>&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170913132417.24384-14-david@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
1," intel_iommu: reject broken EIM Cluster x2APIC cannot work without KVM's x2apic API when the maximal&&&&APIC ID is greater than 8 and only KVM's LAPIC can support x2APIC, so we&&&&forbid other APICs and also the old KVM case with less than 9, to&&&&simplify the code.&&&&&&&&There is no point in enabling EIM in forbidden APICs, so we keep it&&&&enabled only for the KVM APIC;  unconditionally, because making the&&&&option depend on KVM version would be a maintanance burden.&&&&&&&&Old QEMUs would enable eim whenever intremap was on, which would trick&&&&guests into thinking that they can enable cluster x2APIC even if any&&&&interrupt destination would get clamped to 8 bits.&&&&Depending on your configuration, QEMU could notice that the destination&&&&LAPIC is not present and report it with a very non-obvious:&&&&&&&&  KVM: injection failed, MSI lost (Operation not permitted)&&&&&&&&Or the guest could say something about unexpected interrupts, because&&&&clamping leads to aliasing so interrupts were being delivered to&&&&incorrect VCPUs.&&&&&&&&KVM_X2APIC_API is the feature that allows us to enable EIM for KVM.&&&&&&&&QEMU 2.7 allowed EIM whenever interrupt remapping was enabled.  In order&&&&to keep backward compatibility, we again allow guests to misbehave in&&&&non-obvious ways, and make it the default for old machine types.&&&&&&&&A user can enable the buggy mode it with ""x-buggy-eim=on"".&&&&&&&&Signed-off-by: Radim Kr膷m谩艡 <rkrcmar@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Peter Xu <peterx@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," migration: report an error giving the failed field When a field fails to load (typically due to a limit&&&&check, or a call to a get/put) report the device and field&&&&to give an indication of the cause.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1, linux-user/syscall: extend lock around cpu-list There is a potential race if several threads exit at once. To serialise&&&&the exits extend the lock above the initial checking of the CPU list.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-Id: <20160930213106.20186-11-alex.bennee@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, replay: allow replay stopping and restarting This patch fixes bug with stopping and restarting replay&&&&through monitor.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&Message-Id: <20160926080815.6992.71818.stgit@PASHA-ISP>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," msmouse: Fix segfault caused by free the chr before chardev cleanup. Segfault happens when leaving qemu with msmouse backend:&&&&&&&& #0  0x00007fa8526ac975 in raise () at /lib64/libc.so.6&&&& #1  0x00007fa8526add8a in abort () at /lib64/libc.so.6&&&& #2  0x0000558be78846ab in error_exit (err=16, msg=0x558be799da10 ...&&&& #3  0x0000558be7884717 in qemu_mutex_destroy (mutex=0x558be93be750) at ...&&&& #4  0x0000558be7549951 in qemu_chr_free_common (chr=0x558be93be750) at ...&&&& #5  0x0000558be754999c in qemu_chr_free (chr=0x558be93be750) at ...&&&& #6  0x0000558be7549a20 in qemu_chr_delete (chr=0x558be93be750) at ...&&&& #7  0x0000558be754a8ef in qemu_chr_cleanup () at qemu-char.c:4643&&&& #8  0x0000558be755843e in main (argc=5, argv=0x7ffe925d7118, ...&&&&&&&&The chr was freed by msmouse close callback before chardev cleanup,&&&&Then qemu_mutex_destroy triggered raise().&&&&&&&&Because freeing chr is handled by qemu_chr_free_common, Remove the free from&&&&msmouse_chr_close to avoid double free.&&&&&&&&Fixes: c1111a24a3358ecd2f17be7c8b117cfe8bc5e5f8&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Lin Ma <lma@suse.com>&&&&Message-Id: <20160915143158.4796-1-lma@suse.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," linux-user: Range check the nfds argument to ppoll syscall Do an initial range check on the ppoll syscall's nfds argument,&&&&to avoid possible overflow in the calculation of the lock_user()&&&&size argument. The host kernel will later apply the rather lower&&&&limit based on RLIMIT_NOFILE as appropriate.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," ipmi: check return of qemu_chr_fe_write() for errors The continue_send() method in ipmi_bmc_extern.c directly&&&&assigns the return value of qemu_chr_fe_write() to the&&&&variable tracking the I/O buffer offset. This ignores the&&&&possibility that the return value could be -1 and so will&&&&cause I/O go backwards on EAGAIN. Fortunately 'outpos' is&&&&unsigned, so can't go negative - it will become MAX_INT&&&&which will cause the loop to stop, and avoid an accidental&&&&out of bounds array access.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1473170165-540-2-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, scsi: mptconfig: fix misuse of MPTSAS_CONFIG_PACK These issues cause respectively a QEMU crash and a leak of 2 bytes of&&&&stack.  They were discovered by VictorV of 360 Marvel Team.&&&&&&&&Reported-by: Tom Victor <i-tangtianwen@360.cm>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, pc: don't leak a20_line The irqs array is no longer being used&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1," s390x/kvm: 2 byte software breakpoint support Diag 501 (4 bytes) was used until now for software breakpoints on s390.&&&&As instructions on s390 might be 2 bytes long, temporarily overwriting them&&&&with 4 bytes is evil and can result in very strange guest behaviour.&&&&&&&&We make use of invalid instruction 0x0000 as new sw breakpoint instruction.&&&&We have to enable interception of that instruction in KVM using a&&&&capability.&&&&&&&&If no software breakpoint has been inserted at the reported position, an&&&&operation exception has to be injected into the guest. Otherwise a&&&&breakpoint has been hit and the pc has to be rewound.&&&&&&&&If KVM doesn't yet support interception of instruction 0x0000 the&&&&existing mechanism exploiting diag 501 is used. To keep overhead low,&&&&interception of instruction 0x0000 will only be enabled if sw breakpoints&&&&are really used.&&&&&&&&Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1," qht: do not segfault when gathering stats from an uninitialized qht So far, QHT functions assume that the passed qht has previously been&&&&initialized--otherwise they segfault.&&&&&&&&This patch makes an exception for qht_statistics_init, with the goal&&&&of simplifying calling code. For instance, qht_statistics_init is&&&&called from the 'info jit' dump, and given that under KVM the TB qht&&&&is never initialized, we get a segfault. Thus, instead of complicating&&&&the 'info jit' code with additional checks, let's allow passing an&&&&uninitialized qht to qht_statistics_init.&&&&&&&&While at it, add a test for this to test-qht.&&&&&&&&Before the patch (for $ qemu -enable-kvm [...]):&&&&(qemu) info jit&&&&[...]&&&&direct jump count   0 (0%) (2 jumps=0 0%)&&&&Program received signal SIGSEGV, Segmentation fault.&&&&&&&&After the patch the ""TB hash buckets"", ""TB hash occupancy""&&&&and ""TB hash avg chain"" lines are omitted.&&&&(qemu) info jit&&&&[...]&&&&direct jump count   0 (0%) (2 jumps=0 0%)&&&&TB hash buckets     0/0 (-nan% head buckets used)&&&&TB hash occupancy   nan% avg chain occ. Histogram: (null)&&&&TB hash avg chain   nan buckets. Histogram: (null)&&&&[...]&&&&&&&&Reported by: Changlong Xie <xiecl.fnst@cn.fujitsu.com>&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Message-Id: <1469205390-14369-1-git-send-email-cota@braap.org>&&&&[Extract printing statistics to an entirely separate function. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," hw/mips_malta: Fix YAMON API print routine The print routine provided as part of the in-built bootloader had a bug&&&&in that it attempted to use a jump instruction as part of a loop, but&&&&the target has its upper bits zeroed leading to control flow&&&&transferring to 0xb0000814 rather than the intended 0xbfc00814. Fix this&&&&by using a branch instruction instead, which seems more fit for purpose.&&&&&&&&A simple way to test this is to build a Linux kernel with EVA enabled &&&&&attempt to boot it in QEMU. It will attempt to print a message&&&&indicating the configuration mismatch but QEMU would previously&&&&incorrectly jump & wind up printing a continuous stream of the letter E.&&&&&&&&Signed-off-by: Paul Burton <paul.burton@imgtec.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1," ppc: Huge page detection mechanism fixes - Episode III After already fixing two issues with the huge page detection mechanism&&&&(see commit 159d2e39a860 and 86b50f2e1bef), Greg Kurz noticed another&&&&case that caused the guest to crash where QEMU announces huge pages&&&&though they should not be available for the guest:&&&&&&&&qemu-system-ppc64 -enable-kvm ... -mem-path /dev/hugepages \&&&& -m 1G,slots=4,maxmem=32G&&&& -object memory-backend-ram,policy=default,size=1G,id=mem-mem1 \&&&& -device pc-dimm,id=dimm-mem1,memdev=mem-mem1 -smp 2 \&&&& -numa node,nodeid=0 -numa node,nodeid=1&&&&&&&&That means if there is a global mem-path option, we still have&&&&to look at the memory-backend objects that have been specified&&&&additionally and return their minimum page size if that value&&&&is smaller than the page size of the main memory.&&&&&&&&Reported-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Tested-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," linux-user: fix netlink memory corruption Netlink is byte-swapping data in the guest memory (it's bad).&&&&&&&&It's ok when the data come from the host as they are generated by the&&&&host.&&&&&&&&But it doesn't work when data come from the guest: the guest can&&&&try to reuse these data whereas they have been byte-swapped.&&&&&&&&This is what happens in glibc:&&&&&&&&glibc generates a sequence number in nlh.nlmsg_seq and calls&&&&sendto() with this nlh. In sendto(), we byte-swap nlmsg.seq.&&&&&&&&Later, after the recvmsg(), glibc compares nlh.nlmsg_seq with&&&&sequence number given in return, and of course it fails (hangs),&&&&because nlh.nlmsg_seq is not valid anymore.&&&&&&&&The involved code in glibc is:&&&&&&&&sysdeps/unix/sysv/linux/check_pf.c:make_request()&&&&...&&&&  req.nlh.nlmsg_seq = time (NULL);&&&&...&&&&  if (TEMP_FAILURE_RETRY (__sendto (fd, (void *) &req, sizeof (req), 0,&&&&                                    (struct sockaddr *) &nladdr,&&&&                                    sizeof (nladdr))) < 0)&&&&<here req.nlh.nlmsg_seq has been byte-swapped>&&&&...&&&&  do&&&&    {&&&&...&&&&      ssize_t read_len = TEMP_FAILURE_RETRY (__recvmsg (fd, &msg, 0));&&&&...&&&&      struct nlmsghdr *nlmh;&&&&      for (nlmh = (struct nlmsghdr *) buf;&&&&           NLMSG_OK (nlmh, (size_t) read_len);&&&&           nlmh = (struct nlmsghdr *) NLMSG_NEXT (nlmh, read_len))&&&&        {&&&&<we compare nlmh->nlmsg_seq with corrupted req.nlh.nlmsg_seq>&&&&          if (nladdr.nl_pid != 0 || (pid_t) nlmh->nlmsg_pid != pid&&&&              || nlmh->nlmsg_seq != req.nlh.nlmsg_seq)&&&&            continue;&&&&...&&&&          else if (nlmh->nlmsg_type == NLMSG_DONE)&&&&            /* We found the end, leave the loop.  */&&&&            done = true;&&&&        }&&&&    }&&&&  while (! done);&&&&&&&&As we have a continue on ""nlmh->nlmsg_seq != req.nlh.nlmsg_seq"",&&&&""done"" cannot be set to ""true"" and we have an infinite loop.&&&&&&&&It's why commands like ""apt-get update"" or ""dnf update hangs"".&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," serial: remove watch on reset Otherwise, this can cause serial_xmit to be entered with LSR.TEMT=0,&&&&which is invalid and causes an assertion failure.&&&&&&&&Reported-by: Bret Ketchum <bcketchum@gmail.com>&&&&Tested-by: Bret Ketchum <bcketchum@gmail.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," virtio-bus: common ioeventfd infrastructure Introduce a set of ioeventfd callbacks on the virtio-bus level&&&&that can be implemented by the individual transports. At the&&&&virtio-bus level, do common handling for host notifiers (which&&&&is actually most of it).&&&&&&&&Two things of note:&&&&- When setting the host notifier, we only switch from/to the&&&&  generic ioeventfd handler. This fixes a latent bug where we&&&&  had no ioeventfd assigned for a certain window.&&&&- We always iterate over all possible virtio queues, even though&&&&  ccw (currently) has a lower limit. It does not really matter&&&&  here.&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qapi: Factor out QAPISchemaObjectTypeMember.check_clash() While there, stick in a TODO change key of seen from QAPI name to C&&&&name.  Can't do it right away, because it would fail the assertion for&&&&tests/qapi-schema/args-has-clash.json.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1446559499-26984-6-git-send-email-armbru@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1447836791-369-10-git-send-email-eblake@redhat.com>&&&& "
1," s390x: Limit s390-ccw machines to 248 CPUs The sclp scp read info call fills in a buffer with information about the&&&&system. With more than 248 CPUs we overflow the 4k buffer of the SCCB,&&&&leading to random data corruption. Basically ALL guest operating systems&&&&call scp read info, so let's limit the machines to 248 CPUs to make it&&&&obvious that >=249 does not work.&&&&&&&&As KVM also limits itself to 248 and TCG on s390 does not support&&&&SMP, this should cause no regression for any user as no VMs with more&&&&than 248 VCPUs were ever possible.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Reviewed-by: Boris Fiuczynski <fiuczy@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1, vmsvga: add more fifo checks Make sure all fifo ptrs are within range.&&&&&&&&Fixes: CVE-2016-4454&&&&Cc: qemu-stable@nongnu.org&&&&Cc: P J P <ppandit@redhat.com>&&&&Reported-by: 鏉庡己 <liqiang6-s@360.cn>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1464592161-18348-3-git-send-email-kraxel@redhat.com&&&& 
1, block: Fix bdrv_next() memory leak The bdrv_next() users all leaked the BdrvNextIterator after completing&&&&the iteration. Simply changing bdrv_next() to free the iterator before&&&&returning NULL at the end of list doesn't work because some callers exit&&&&the loop before looking at all BDSes.&&&&&&&&This patch moves the BdrvNextIterator from the heap to the stack of&&&&the caller and switches to a bdrv_first()/bdrv_next() interface for&&&&initialising the iterator.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&& 
1, esp: check dma length before reading scsi command(CVE-2016-4441) The 53C9X Fast SCSI Controller(FSC) comes with an internal 16-byte&&&&FIFO buffer. It is used to handle command and data transfer.&&&&Routine get_cmd() uses DMA to read scsi commands into this buffer.&&&&Add check to validate DMA length against buffer size to avoid any&&&&overrun.&&&&&&&&Fixes CVE-2016-4441.&&&&&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-Id: <1463654371-11169-3-git-send-email-ppandit@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," hw/ppc/spapr: Fix crash when specifying bad parameters to spapr-pci-host-bridge QEMU currently crashes when using bad parameters for the&&&&spapr-pci-host-bridge device:&&&&&&&&$ qemu-system-ppc64 -device spapr-pci-host-bridge,buid=0x123,liobn=0x321,mem_win_addr=0x1,io_win_addr=0x10&&&&Segmentation fault&&&&&&&&The problem is that spapr_tce_find_by_liobn() might return NULL, but&&&&the code in spapr_populate_pci_dt() does not check for this condition&&&&and then tries to dereference this NULL pointer.&&&&Apart from that, the return value of spapr_populate_pci_dt() also&&&&has to be checked for all PCI buses, not only for the last one, to&&&&make sure we catch all errors.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," configure: Check if struct fsxattr is available from linux header Fixes build failure with --enable-xfsctl and&&&&new linux headers (>=4.5) and older xfsprogs(<4.5):&&&&In file included from /usr/include/xfs/xfs.h:38:0,&&&&                 from /var/tmp/portage/app-emulation/qemu-2.5.0-r1/work/qemu-2.5.0/block/raw-posix.c:97:&&&&/usr/include/xfs/xfs_fs.h:42:8: error: redefinition of 鈥榮truct fsxattr鈥?&&& struct fsxattr {&&&&        ^&&&&In file included from /var/tmp/portage/app-emulation/qemu-2.5.0-r1/work/qemu-2.5.0/block/raw-posix.c:60:0:&&&&/usr/include/linux/fs.h:155:8: note: originally defined here&&&& struct fsxattr {&&&&&&&&This is really a bug in the system headers, but we can work around it&&&&by defining HAVE_FSXATTR in the QEMU headers if linux/fs.h provides&&&&the struct, so that xfs_fs.h doesn't try to define it as well.&&&&&&&&CC: qemu-trivial@nongnu.org&&&&CC: Markus Armbruster <armbru@redhat.com>&&&&CC: Peter Maydell <peter.maydell@linaro.org>&&&&CC: Stefan Weil <sw@weilnetz.de>&&&&Tested-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Jan Vesely <jano.vesely@gmail.com>&&&&[PMM: adjusted commit message, comments]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," nbd: fix assert() on qemu-nbd stop From time to time qemu-nbd is crashing on the following assert:&&&&    assert(state == TERMINATING);&&&&    nbd_export_closed&&&&    nbd_export_put&&&&    main&&&&and the state at the moment of the crash is evaluated to TERMINATE.&&&&&&&&During shutdown process of the client the nbd_client_thread thread sends&&&&SIGTERM signal and the main thread calls the nbd_client_closed callback.&&&&If the SIGTERM callback will be executed after change the state to&&&&TERMINATING, then the state will once again be TERMINATE.&&&&&&&&To solve the issue, we must change the state to TERMINATE only if the state&&&&is RUNNING. In the other case we are shutting down already.&&&&&&&&Signed-off-by: Pavel Butsykin <pbutsykin@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1460629215-11567-1-git-send-email-den@openvz.org&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," nbd: Fix NBD unsupported options nbd-client.c currently fails to handle unsupported options properly.&&&&If during option haggling the server finds an option that is&&&&unsupported, it returns an NBD_REP_ERR_UNSUP reply.&&&&&&&&According to nbd's proto.md, the format for such a reply&&&&should be:&&&&&&&&  S: 64 bits, 0x3e889045565a9 (magic number for replies)&&&&  S: 32 bits, the option as sent by the client to which this is a reply&&&&  S: 32 bits, reply type (e.g., NBD_REP_ACK for successful completion,&&&&     or NBD_REP_ERR_UNSUP to mark use of an option not known by this server&&&&  S: 32 bits, length of the reply. This may be zero for some replies,&&&&     in which case the next field is not sent&&&&  S: any data as required by the reply (e.g., an export name in the case&&&&     of NBD_REP_SERVER, or optional UTF-8 message for NBD_REP_ERR_*)&&&&&&&&However, in nbd-client.c, the reply type was being read, and if it&&&&contained an error, it was bailing out and issuing the next option&&&&request without first reading the length. This meant that the&&&&next option / handshake read had an extra 4 or more bytes of data in it.&&&&In practice, this makes Qemu incompatible with servers that do not&&&&support NBD_OPT_LIST.&&&&&&&&To verify this isn't an error in the specification or my reading of&&&&it, replies are sent by the reference implementation here:&&&& https://github.com/yoe/nbd/blob/66dfb35/nbd-server.c#L1232&&&&and as is evident it always sends a 'datasize' (aka length) 32 bit&&&&word. Unsupported elements are replied to here:&&&& https://github.com/yoe/nbd/blob/66dfb35/nbd-server.c#L1371&&&&&&&&Signed-off-by: Alex Bligh <alex@alex.org.uk>&&&&Message-Id: <1459882500-24316-1-git-send-email-alex@alex.org.uk>&&&&[rework to ALWAYS consume an optional UTF-8 message from the server]&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1459961962-18771-1-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-mips: indicate presence of IEEE 754-2008 FPU in R6/R5+MSA CPUs MIPS Release 6 and MIPS SIMD Architecture make it mandatory to have IEEE&&&&754-2008 FPU which is indicated by CP1 FIR.HAS2008, FCSR.ABS2008 and&&&&FCSR.NAN2008 bits set to 1.&&&&&&&&In QEMU we still keep these bits cleared as there is no 2008-NaN support.&&&&However, this now causes problems preventing from running R6 Linux with&&&&the v4.5 kernel. Kernel refuses to execute 2008-NaN ELFs on a CPU&&&&whose FPU does not support 2008-NaN encoding:&&&&&&&&  (...)&&&&  VFS: Mounted root (ext4 filesystem) readonly on device 8:0.&&&&  devtmpfs: mounted&&&&  Freeing unused kernel memory: 256K (ffffffff806f0000 - ffffffff80730000)&&&&  request_module: runaway loop modprobe binfmt-464c&&&&  Starting init: /sbin/init exists but couldn't execute it (error -8)&&&&  request_module: runaway loop modprobe binfmt-464c&&&&  Starting init: /bin/sh exists but couldn't execute it (error -8)&&&&  Kernel panic - not syncing: No working init found.  Try passing init= option to kernel. See Linux Documentation/init.txt for guidance.&&&&&&&&Therefore always indicate presence of 2008-NaN support in R6 as well as in&&&&R5+MSA CPUs, even though this feature is not yet supported by MIPS in QEMU.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1," block: Remove copy-on-read from bdrv_move_feature_fields() Ever since we first introduced bdrv_append() in commit 8802d1fd ('qapi:&&&&Introduce blockdev-group-snapshot-sync command'), the copy-on-read flag&&&&was moved to the new top layer when taking a snapshot. The only problem&&&&is that it doesn't make a whole lot of sense.&&&&&&&&The use case for manually enabled CoR is to avoid reading data twice&&&&from a slow remote image, so we want to save it to a local overlay, say&&&&an ISO image accessed via HTTP to a local qcow2 overlay. When taking a&&&&snapshot, we end up with a backing chain like this:&&&&&&&&    http <- local.qcow2 <- snap_overlay.qcow2&&&&&&&&There is no point in doing CoR from local.qcow2 into snap_overlay.qcow2,&&&&we just want to keep copying data from the remote source into&&&&local.qcow2.&&&&&&&&The other use case of CoR is in the context of streaming, which isn't&&&&very interesting for bdrv_move_feature_fields() because op blockers&&&&prevent this combination.&&&&&&&&This patch makes the copy-on-read flag stay on the image for which it&&&&was originally set and prevents it from being propagated to the new&&&&overlay. It is no longer intended to move CoR to the BlockBackend level.&&&&In order for this to make sense, we also need to keep the respective&&&&image read-write.&&&&&&&&As a side effect of these changes, creating a live snapshot image (as&&&&opposed to using an existing externally created one) on top of a COR&&&&block device works now. It used to fail because it tried to open its&&&&backing file both read-only and with COR.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," quorum: Fix crash in quorum_aio_cb() quorum_aio_cb() emits the QUORUM_REPORT_BAD event if there's&&&&an I/O error in a Quorum child. However sacb->aiocb must be&&&&correctly initialized for this to happen. read_quorum_children() and&&&&read_fifo_child() are not doing this, which results in a QEMU crash.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 8138570d071ba7e25db3736979234a1fd71dbd05.1457610443.git.berto@igalia.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," net: filter: correctly remove filter from the list during finalization Qemu may crash when we want to add two filters on the same netdev but&&&&the initialization of second fails (e.g missing parameters):&&&&&&&&./qemu-system-x86_64 -netdev user,id=un0 \&&&& -object filter-buffer,id=f0,netdev=un0,interval=10 \&&&& -object filter-buffer,id=f1,netdev=un0&&&&Segmentation fault (core dumped)&&&&&&&&This is because we don't check whether or not the filter was in the&&&&list of netdev. This patch fixes this.&&&&&&&&Cc: Yang Hongyang <hongyang.yang@easystack.cn>&&&&Reviewed-by: Yang Hongyang <hongyang.yang@easystack.cn>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," io: bind to socket before creating QIOChannelSocket In the QIOChannelSocket test we create a socket file&&&&descriptor and then try to create a QIOChannelSocket.&&&&This works on Linux, but fails on Win32 because it is&&&&not valid to call getsockname() on an unbound socket.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," ppc/kvm: Tell the user what might be wrong when using bad CPU types with kvm-hv Using a CPU type that does not match the host is not possible when using&&&&the kvm-hv kernel module - the PVR is checked in the kernel function&&&&kvm_arch_vcpu_ioctl_set_sregs_hv() and rejected with -EINVAL if it&&&&does not match the host.&&&&However, when the user tries to specify a non-matching CPU type, QEMU&&&&currently only reports ""kvm_init_vcpu failed: Invalid argument"", and&&&&this is of course not very helpful for the user to solve the problem.&&&&So this patch adds a more descriptive error message that tells the&&&&user to specify ""-cpu host"" instead.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&[Removed melodramatic '!' :)]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1, hw: fix some debug message format strings Signed-off-by: Alyssa Milburn <fuzzie@fuzzie.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1," hw/arm/virt: fix max-cpus check mach-virt doesn't yet support hotplug, but command lines specifying&&&&-smp <num>,maxcpus=<bigger-num> don't fail. Of course specifying&&&&bigger-num as something bigger than the machine supports, e.g. > 8&&&&on a gicv2 machine, should fail though. This fix also makes mach-&&&&virt's max-cpus check truly consistent with the one in vl.c:main,&&&&as the one there was already correctly checking max-cpus instead&&&&of smp-cpus.&&&&&&&&Reported-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Signed-off-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Message-id: 1454511578-24863-1-git-send-email-drjones@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," fdc: always compile-check debug prints Coverity noticed that some variables are only used by debug prints, and&&&&called them unused. Always compile the print statements. While we're&&&&here, print to stderr as well.&&&&&&&&Bonus: Fix a debug printf I broke in f31937aa8&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&[Touched up commit message. --js]&&&&Message-id: 1454971529-14830-1-git-send-email-jsnow@redhat.com&&&& "
1," build: Don't redefine 'inline' Actively redefining 'inline' is wrong for C++, where gcc has an&&&&extension 'inline namespace' which fails to compile if the&&&&keyword 'inline' is replaced by a macro expansion.  This will&&&&matter once we start to include ""qemu/osdep.h"" first from C++&&&&files, depending also on whether the system headers are new&&&&enough to be using the gcc extension.&&&&&&&&But rather than just guard things by __cplusplus, let's look at&&&&the overall picture.  Commit df2542c737ea2 in 2007 defined 'inline'&&&&to the gcc attribute __always_inline__, with the rationale ""To&&&&avoid discarded inlining bug"".  But compilers have improved since&&&&then, and we are probably better off trusting the compiler rather&&&&than trying to force its hand.&&&&&&&&So just nuke our craziness.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1455043788-28112-1-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," isa: Clean up inappropriate hw_error() isa_bus_irqs(), isa_create() and isa_try_create() call hw_error() when&&&&passed a null bus.  Use of hw_error() has always been questionable,&&&&because these are used only during machine initialization, and&&&&printing CPU registers isn't useful there.&&&&&&&&Since the previous commit, passing a null bus is a programming error.&&&&Drop the hw_error() and simply let it crash.&&&&&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: ""Herv茅 Poussineau"" <hpoussin@reactos.org>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Cc: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: Markus Armbruster <armbru@pond.sub.org>&&&&Reviewed-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Message-Id: <1450354795-31608-12-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
1, ahci-test: fix memory leak Use the proper free command to detroy an AHCICommand.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1452282920-21550-2-git-send-email-jsnow@redhat.com&&&& 
1," net/vmxnet3: return 1 on device activation failure When reading device status, 0 means device is successfully&&&&activated and 1 means error.&&&&&&&&This behavior can be observed by the following steps:&&&&&&&&1) run a Linux distro on esxi server (5.5+)&&&&2) modify vmxnet3 Linux driver to give it an invalid&&&&   address to 'adapter->shared_pa' which is the&&&&   shared memory for guest/host communication&&&&&&&&This will trigger device activation failure and kernel&&&&log will have the following message:&&&&&&&&   [ 7138.403256] vmxnet3 0000:03:00.0 eth1: Failed to activate dev: error 1&&&&&&&&So return 1 on device activation failure instead of -1;&&&&&&&&Signed-off-by: Miao Yan <yanmiaobest@gmail.com>&&&&Reviewed-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," linux-user: add signalfd/signalfd4 syscalls This patch introduces a system very similar to the one used in the kernel&&&&to attach specific functions to a given file descriptor.&&&&&&&&In this case, we attach a specific ""host_to_target()"" translator to the fd&&&&returned by signalfd() to be able to byte-swap the signalfd_siginfo&&&&structure provided by read().&&&&&&&&This patch allows to execute the example program given by&&&&man signalfd(2):&&&&&&&& #include <sys/signalfd.h>&&&& #include <signal.h>&&&& #include <unistd.h>&&&& #include <stdlib.h>&&&& #include <stdio.h>&&&&&&&& #define handle_error(msg) \&&&&     do { perror(msg); exit(EXIT_FAILURE); } while (0)&&&&&&&& int&&&& main(int argc, char *argv[])&&&& {&&&&     sigset_t mask;&&&&     int sfd;&&&&     struct signalfd_siginfo fdsi;&&&&     ssize_t s;&&&&&&&&     sigemptyset(&mask);&&&&     sigaddset(&mask, SIGINT);&&&&     sigaddset(&mask, SIGQUIT);&&&&&&&&     /* Block signals so that they aren't handled&&&&        according to their default dispositions */&&&&&&&&     if (sigprocmask(SIG_BLOCK, &mask, NULL) == -1)&&&&         handle_error(""sigprocmask"");&&&&&&&&     sfd = signalfd(-1, &mask, 0);&&&&     if (sfd == -1)&&&&         handle_error(""signalfd"");&&&&&&&&     for (;;) {&&&&         s = read(sfd, &fdsi, sizeof(struct signalfd_siginfo));&&&&         if (s != sizeof(struct signalfd_siginfo))&&&&             handle_error(""read"");&&&&&&&&         if (fdsi.ssi_signo == SIGINT) {&&&&             printf(""Got SIGINT\n"");&&&&         } else if (fdsi.ssi_signo == SIGQUIT) {&&&&             printf(""Got SIGQUIT\n"");&&&&             exit(EXIT_SUCCESS);&&&&         } else {&&&&             printf(""Read unexpected signal\n"");&&&&         }&&&&     }&&&& }&&&&&&&& $ ./signalfd_demo&&&& ^CGot SIGINT&&&& ^CGot SIGINT&&&& ^\Got SIGQUIT&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," sun4u: split NPT and INT_DIS accesses between timer and compare registers Accesses to the timer register high bit should only set NPT, whilst accesses&&&&to the timer compare register high bit should only set INT_DIS. This fixes&&&&issues with the timer being unexpectedly disabled whilst trying to boot&&&&FreeBSD SPARC64.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-By: Artyom Tarasenko <atar4qemu@gmail.com>&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&& "
1, qom-test: Fix qmp() leaks Before this patch ASAN reported:&&&&SUMMARY: AddressSanitizer: 677165875 byte(s) leaked in 1272437 allocation(s)&&&&&&&&After this patch:&&&&SUMMARY: AddressSanitizer: 465 byte(s) leaked in 32 allocation(s)&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1448551895-871-1-git-send-email-marcandre.lureau@redhat.com>&&&&[Straightforwardly rebased onto the previous patch]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
1," vhost-user-test: fix crash with glib < 2.36 The prepare callback needs to be implemented with glib < 2.36,&&&&quoting glib documentation:&&&&""Since 2.36 this may be NULL, in which case the effect is as if the&&&&function always returns FALSE with a timeout of -1.""&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qga: flush explicitly when needed According to the specification:&&&&http://pubs.opengroup.org/onlinepubs/9699919799/functions/fopen.html&&&&&&&&""the application shall ensure that output is not directly followed by&&&&input without an intervening call to fflush() or to a file positioning&&&&function (fseek(), fsetpos(), or rewind()), and input is not directly&&&&followed by output without an intervening call to a file positioning&&&&function, unless the input operation encounters end-of-file.""&&&&&&&&Without this change, an fwrite() followed by an fread() may lose the&&&&previously written content, as shown in the following test.&&&&&&&&Fixes:&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1210246&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&* don't confuse {write,read}() with f{write,read}() in&&&&  commit msg (Laszlo)&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1, crypto: fix leaks in TLS x509 helper functions The test_tls_get_ipaddr() method forgot to free the returned data&&&&from getaddrinfo().&&&&&&&&The test_tls_write_cert_chain() method forgot to free the allocated&&&&buffer holding the certificate data after writing it out to a file.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
1," aio-epoll: Fix use-after-free of node aio_epoll_update needs the fields in node, so delay the free.&&&&&&&&Reported-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1447655534-13974-1-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block: Allow configuring whether to account failed and invalid ops This patch adds two options, ""stats-account-invalid"" and&&&&""stats-account-failed"", that can be used to decide whether invalid and&&&&failed I/O operations must be used when collecting statistics for&&&&latency and last access time.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: ebc7e5966511a342cad428a392c5f5ad56b15213.1446044837.git.berto@igalia.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," block: check for existing device IDs in external_snapshot_prepare() The 'snapshot-node-name' parameter of blockdev-snapshot-sync allows&&&&setting the node name of the image that is going to be created.&&&&&&&&Before creating the image, external_snapshot_prepare() checks that the&&&&name is not already being used. The check is however incomplete since&&&&it only considers existing node names, but node names must not clash&&&&with device IDs either because they share the same namespace.&&&&&&&&If the user attempts to create a snapshot using the name of an&&&&existing device for the 'snapshot-node-name' parameter the operation&&&&will eventually fail, but only after the new image has been created.&&&&&&&&This patch replaces bdrv_find_node() with bdrv_lookup_bs() to extend&&&&the check to existing device IDs, and thus detect possible name&&&&clashes before the new image is created.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," vmxnet3: Do not fill stats if device is inactive Guest OS may issue VMXNET3_CMD_GET_STATS even before device was&&&&activated (for example in linux, after insmod but prior net-dev open).&&&&&&&&Accessing shared descriptors prior device activation is illegal as the&&&&VMXNET3State structures have not been fully initialized.&&&&&&&&As a result, guest memory gets corrupted and may lead to guest OS&&&&crashes.&&&&&&&&Fix, by not filling the stats descriptors if device is inactive.&&&&&&&&Reported-by: Leonid Shatz <leonid.shatz@ravellosystems.com>&&&&Acked-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Signed-off-by: Dana Rubin <dana.rubin@ravellosystems.com>&&&&Signed-off-by: Shmulik Ladkani <shmulik.ladkani@ravellosystems.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," mmap-alloc: fix error handling Existing callers are checking for MAP_FAILED,&&&&so we should return that on error.&&&&&&&&Reported-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
1," hw/ide/ahci.c: Fix shift left into sign bit Avoid undefined behaviour from shifting left into the sign bit:&&&&&&&&hw/ide/ahci.c:551:36: runtime error: left shift of 255 by 24 places cannot be represented in type 'int'&&&&&&&&(Unfortunately C's promotion rules mean that in the expression&&&&""some_uint8_t_variable << 24"" the LHS gets promoted to signed&&&&int before shifting.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&& "
1, blkverify: Fix BDS leak in .bdrv_open error path Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&& 
1," virtio-gpu: move iov free to virtio_gpu_cleanup_mapping_iov For symmetry reasons: virtio_gpu_create_mapping_iov() allocates it so&&&&virtio_gpu_cleanup_mapping_iov() should free it, otherwise it's easy to&&&&miss a free() needed and leak memory.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
1," virtio-input: Fix device introspection on non-Linux hosts When CONFIG_LINUX is off, devices ""virtio-keyboard-device"",&&&&""virtio-mouse-device"", ""virtio-tablet-device"" and&&&&""virtio-input-host-device"" aren't compiled in, yet&&&&""virtio-keyboard-pci"", ""virtio-mouse-pci"", ""virtio-tablet-pci"" and&&&&""virtio-input-host-pci"" still are.  Attempts to introspect them crash,&&&&e.g.&&&&&&&&    $ qemu-system-x86_64 -device virtio-tablet-pci,help&&&&    **&&&&    ERROR:/work/armbru/qemu/qom/object.c:333:object_initialize_with_type: assertion failed: (type != NULL)&&&&&&&&Broken in commit 710e2d9 and commit 006a5ed.&&&&&&&&Fix by compiling the ""virtio-FOO-pci"" exactly when compiling the&&&&""virtio-FOO-device"": compile ""virtio-keyboard-device"",&&&&""virtio-mouse-device"", ""virtio-tablet-device"" regardless of&&&&CONFIG_LINUX, and compile ""virtio-input-host-pci"" only for&&&&CONFIG_LINUX.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-Id: <1444320700-26260-3-git-send-email-armbru@redhat.com>&&&& "
1," net: add checks to validate ring buffer pointers(CVE-2015-5279) Ne2000 NIC uses ring buffer of NE2000_MEM_SIZE(49152)&&&&bytes to process network packets. While receiving packets&&&&via ne2000_receive() routine, a local 'index' variable&&&&could exceed the ring buffer size, which could lead to a&&&&memory buffer overflow. Added other checks at initialisation.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: P J P <pjp@fedoraproject.org>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, Added generic panic handler qemu_system_guest_panicked() There are pieces of guest panic handling code&&&&that can be shared in one generic function.&&&&These code replaced by call qemu_system_guest_panicked().&&&&&&&&Signed-off-by: Andrey Smetanin <asmetanin@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Andreas F脙陇rber <afaerber@suse.de>&&&&Message-Id: <1435924905-8926-10-git-send-email-den@openvz.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," s390x/css: start with cleared cstat/dstat When executing the start function, we should start with a clear state&&&&regarding subchannel and device status; it is easy to forget updating one&&&&of them after the ccw has been processed.&&&&&&&&Note that we don't need to care about resetting the various control&&&&fields: They are cleared by tsch(), and if they were still pending,&&&&we wouldn't be able to execute the start function in the first&&&&place.&&&&&&&&Also note that we don't want to clear cstat/dstat if a suspended&&&&subchannel is resumed.&&&&&&&&This fixes a bug where we would continue to present channel-program&&&&check in cstat even though later ccw requests for the subchannel&&&&finished without error (i.e. cstat should be 0).&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&& "
1, rtl8139: drop tautologous if (ip) {...} statement (CVE-2015-5165) The previous patch stopped using the ip pointer as an indicator that the&&&&IP header is present.  When we reach the if (ip) {...} statement we know&&&&ip is always non-NULL.&&&&&&&&Remove the if statement to reduce nesting.&&&&&&&&Reported-by: 鏈变笢娴?鍚矾) <donghai.zdh@alibaba-inc.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, numa: Fix memory leak in numa_set_mem_node_id() Fix a memory leak in numa_set_mem_node_id().&&&&&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.com>&&&&Reported-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
1," target-mips: Copy restrictions from ext/ins to dext/dins The checks in dins is required to avoid triggering an assertion&&&&in tcg_gen_deposit_tl.  The check in dext is just for completeness.&&&&Fold the other D cases in via fallthru.&&&&&&&&In this case the errant dins appears to be data, not code, as&&&&translation failed to stop after a break insn.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1,"&&&&although bdrv_create_dirty_bitmap is unlikely failed.&&&&Add block_job_release for each release when needed.&&&&&&&&Signed-off-by: Ting Wang <kathy.wangting@huawei.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1435311455-56048-1-git-send-email-kathy.wangting@huawei.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& """
1," migration: extend migration_bitmap Prevously, if we hotplug a device(e.g. device_add e1000) during&&&&migration is processing in source side, qemu will add a new ram&&&&block but migration_bitmap is not extended.&&&&In this case, migration_bitmap will overflow and lead qemu abort&&&&unexpectedly.&&&&&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1, ahci: check for ncq prdtl overflow Don't attempt the NCQ transfer if the PRDT we were given is not big&&&&enough to perform the entire transfer.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1435016308-6150-5-git-send-email-jsnow@redhat.com&&&& 
1," vhost: correctly pass error to caller in vhost_dev_enable_notifiers() We override the error value r in fail_vq, this will cause the caller&&&&can't detect the failure which may cause the caller may disable the&&&&notifiers twice if vhost is failed to start. Fix this by using another&&&&variable to keep track the return value of set_host_notifier().&&&&&&&&Fixes b0b3db79559e57db340b292621c397e7a6cdbdc5 (""vhost-net: cleanup&&&&host notifiers at last step"")&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," target-arm: Add the THUMB_DSP feature Create an ARM_FEATURE_THUMB_DSP controlling the Thumb encodings of&&&&the 85 DSP instructions (these are all Thumb2). This is enabled for&&&&all non-M-profile CPUs with Thumb2 support, as the instructions are&&&&mandatory for R and A profiles. On M profile they are optional and&&&&not present in the Cortex-M3 (though they are in the M4).&&&&&&&&The effect of this commit is that we will now treat the DSP&&&&encodings as illegal instructions on M3, when previously we&&&&incorrectly implemented them.&&&&&&&&Signed-off-by: Aurelio C. Remonda <aurelioremonda@gmail.com>&&&&Message-id: 1434311355-26554-1-git-send-email-aurelioremonda@gmail.com&&&&[PMM: added clz/crc32/crc32c and default case to the early-decode switch;&&&& minor format/spacing fixups; reworded commit message a bit]&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," alsaaudio: Remove unused error handling of qemu_set_fd_handler The function cannot fail, so the check is superfluous.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1433400324-7358-10-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, memory: use atomic ops for setting dirty memory bits Use set_bit_atomic() and bitmap_set_atomic() so that multiple threads&&&&can dirty memory without race conditions.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-Id: <1417519399-3166-4-git-send-email-stefanha@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, hw/arm/omap_sx1.c: Fix memory leak spotted by valgrind Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," s390x: Add vector registers to ELF dump Create ELF notes for the vector registers where applicable, so that&&&&their contents can be examined by utilities such as crash or readelf.&&&&&&&&Signed-off-by: Eric Farman <farman@linux.vnet.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1," xen/MSI: don't open-code pass-through of enable bit modifications Without this the actual XSA-131 fix would cause the enable bit to not&&&&get set anymore (due to the write back getting suppressed there based&&&&on the OR of emu_mask, ro_mask, and res_mask).&&&&&&&&Note that the fiddling with the enable bit shouldn't really be done by&&&&qemu, but making this work right (via libxc and the hypervisor) will&&&&require more extensive changes, which can be postponed until after the&&&&security issue got addressed.&&&&&&&&This is a preparatory patch for XSA-131.&&&&&&&&Signed-off-by: Jan Beulich <jbeulich@suse.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&& "
1," microblaze: fix memory leak When not assign a -dtb argument, the variable dtb_filename&&&&storage returned from qemu_find_file(), which should be freed&&&&after use. Alternatively we define a local variable filename,&&&&with 'char *' type, free after use.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," serial: fix multi-pci card error cleanup. Put the number of serial ports into a local variable in&&&&multi_serial_pci_realize, then increment the port count&&&&(pci->ports) as we initialize the serial port cores.&&&&&&&&Now pci->ports always holds the number of successfully&&&&initialized ports and we can use multi_serial_pci_exit&&&&to properly cleanup the already initialized bits in case&&&&of a init failure.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=970551&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, hw/9pfs/virtio-9p-posix-acl: Fix out-of-bounds access It's detected by coverity. Fix out-of-bounds access of the function mp_dacl_listxattr.&&&&&&&&Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& 
1, nbd: Fix overflow return value The value of reply.error should be the type unsigned int.&&&&&&&&Signed-off-by: Yik Fang <eric.fangyi@huawei.com>&&&&Message-Id: <1423722111-12902-1-git-send-email-eric.fangyi@huawei.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," block: Forbid bdrv_set_aio_context outside BQL Even if the caller has both the old and the new AioContext's, there can&&&&be a deadlock, due to the leading bdrv_drain_all.&&&&&&&&Suppose there are four io threads (A, B, A0, B0) with A and B owning a&&&&BDS for each (bs_a, bs_b); Now A wants to move bs_a to iothread A0, and&&&&B wants to move bs_b to B0, at the same time:&&&&&&&&  iothread A                           iothread B&&&&--------------------------------------------------------------------------&&&&  aio_context_acquire(A0) /* OK */     aio_context_acquire(B0) /* OK */&&&&  bdrv_set_aio_context(bs_a, A0)       bdrv_set_aio_context(bs_b, B0)&&&&  -> bdrv_drain_all()                  -> bdrv_drain_all()&&&&     -> acquire A /* OK */               -> acquire A /* blocked */&&&&     -> acquire B /* blocked */          -> acquire B&&&&     ...                                 ...&&&&&&&&Deadlock happens because A is waiting for B, and B is waiting for A.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1423969591-23646-2-git-send-email-famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," acpi-test: update expected files A bunch of code moved from dsdt to ssdt,&&&&plus we got trivial changes like 0->Zero which our test&&&&dosn't recognize as identity yet.&&&&Update expected files to suppress test warning.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," pci: Convert core to realize Implement DeviceClass methods realize() and unrealize() instead of&&&&init() and exit().  The core's initialization errors now get&&&&propagated properly, and QMP sends them instead of an unspecific&&&&""Device initialization failed"" error.  Unrealize can't fail, so no&&&&change there.&&&&&&&&PCIDeviceClass is unchanged: it still provides init() and exit().&&&&Therefore, device models' errors are still not propagated.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&&&&&&&&& "
1," serial: serial_hds_isa_init() shouldn't fail It shouldn't fail, and no caller checks for failure.  Make failure&&&&fatal.&&&&&&&&Maintainers of affected machines cc'ed.&&&&&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Cc: Anthony Liguori <aliguori@amazon.com>&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," utils: drop strtok_r from envlist_parse The problem is that mingw 4.9.1 fails to compile the code with the&&&&following warning:&&&&&&&&/mingw/include/string.h:88:9: note: previous declaration of 'strtok_r'&&&&was here&&&&   char *strtok_r(char * __restrict__ _Str,&&&&                  const char * __restrict__ _Delim,&&&&                  char ** __restrict__ __last);&&&&/include/sysemu/os-win32.h:83:7: warning: redundant redeclaration of&&&&   'strtok_r' [-Wredundant-decls]&&&&   char *strtok_r(char *str, const char *delim, char **saveptr);&&&&&&&&The problem is that compiles just fine on previous versions of mingw.&&&&Compiler version check here is not a good idea. Though fortunately&&&&strtok_r is used only once in the code and we could simply rewrite&&&&the code without it.&&&&&&&&Signed-off-by: Olga Krishtal <okrishtal@parallels.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Eric Blake <eblake@redhat.com>&&&&CC: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," xbzrle: optimize XBZRLE to decrease the cache misses Avoid hot pages being replaced by others to remarkably decrease cache&&&&misses&&&&&&&&Sample results with the test program which quote from xbzrle.txt ran in&&&&vm:(migrate bandwidth:1GE and xbzrle cache size 8MB)&&&&&&&&the test program:&&&&&&&&include <stdlib.h>&&&&include <stdio.h>&&&&int main()&&&& {&&&&        char *buf = (char *) calloc(4096, 4096);&&&&        while (1) {&&&&            int i;&&&&            for (i = 0; i < 4096 * 4; i++) {&&&&                buf[i * 4096 / 4]++;&&&&            }&&&&            printf(""."");&&&&        }&&&& }&&&&&&&&before this patch:&&&&virsh qemu-monitor-command test_vm '{""execute"": ""query-migrate""}'&&&&{""return"":{""expected-downtime"":1020,""xbzrle-cache"":{""bytes"":1108284,&&&&""cache-size"":8388608,""cache-miss-rate"":0.987013,""pages"":18297,""overflow"":8,&&&&""cache-miss"":1228737},""status"":""active"",""setup-time"":10,""total-time"":52398,&&&&""ram"":{""total"":12466991104,""remaining"":1695744,""mbps"":935.559472,&&&&""transferred"":5780760580,""dirty-sync-counter"":271,""duplicate"":2878530,&&&&""dirty-pages-rate"":29130,""skipped"":0,""normal-bytes"":5748592640,&&&&""normal"":1403465}},""id"":""libvirt-706""}&&&&&&&&18k pages sent compressed in 52 seconds.&&&&cache-miss-rate is 98.7%, totally miss.&&&&&&&&after optimizing:&&&&virsh qemu-monitor-command test_vm '{""execute"": ""query-migrate""}'&&&&{""return"":{""expected-downtime"":2054,""xbzrle-cache"":{""bytes"":5066763,&&&&""cache-size"":8388608,""cache-miss-rate"":0.485924,""pages"":194823,""overflow"":0,&&&&""cache-miss"":210653},""status"":""active"",""setup-time"":11,""total-time"":18729,&&&&""ram"":{""total"":12466991104,""remaining"":3895296,""mbps"":937.663549,&&&&""transferred"":1615042219,""dirty-sync-counter"":98,""duplicate"":2869840,&&&&""dirty-pages-rate"":58781,""skipped"":0,""normal-bytes"":1588404224,&&&&""normal"":387794}},""id"":""libvirt-266""}&&&&&&&&194k pages sent compressed in 18 seconds.&&&&The value of cache-miss-rate decrease to 48.59%.&&&&&&&&Signed-off-by: ChenLiang <chenliang88@huawei.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
1," vl: Don't silently change topology when all -smp options were set QEMU tries to change the ""threads"" option even if it was explicitly set&&&&in the command-line, and it shouldn't do that.&&&&&&&&The right thing to do when all options (cpus, sockets, cores, threds)&&&&are explicitly set is to sanity check them and abort in case they don't&&&&make sense (i.e. when sockets*cores*threads < cpus).&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Andrew Jones <drjones@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, migration/qemu-file.c: Don't shift left into sign bit Add a cast in qemu_get_be32() to avoid shifting left into the sign&&&&bit of a signed integer (which is undefined behaviour in C).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," scsi: Use g_new() & friends where that makes obvious sense g_new(T, n) is neater than g_malloc(sizeof(T) * n).  It's also safer,&&&&for two reasons.  One, it catches multiplication overflowing size_t.&&&&Two, it returns T * rather than void *, which lets the compiler catch&&&&more type errors.&&&&&&&&This commit only touches allocations with size arguments of the form&&&&sizeof(T).&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," gtk: fix possible memory leak about local_err local_err in gd_vc_gfx_init() is not freed, and we don't use it,&&&&so remove it.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," target-ppc: kvm: Fix memory overflow issue about strncat() strncat() will append additional '\0' to destination buffer, so need&&&&additional 1 byte for it, or may cause memory overflow, just like other&&&&area within QEMU have done.&&&&&&&&And can use g_strdup_printf() instead of strncat(), which may be more&&&&easier understanding.&&&&&&&&Signed-off-by: Chen Gang <gang.chen.5i5j@gmail.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, ivshmem: Fix fd leak on error Reported-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, vmdk: Fix integer overflow in offset calculation This fixes the bug introduced by commit c6ac36e (vmdk: Optimize cluster&&&&allocation).&&&&&&&&$ ~/build/master/qemu-io /stor/vm/arch.vmdk -c 'write 2G 1k'&&&&write failed: Invalid argument&&&&&&&&Reported-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1411437381-11234-1-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," ssh: Don't crash if either host or path is not specified. $ ./qemu-img create -f qcow2 overlay \&&&&    -b 'json: { ""file.driver"":""ssh"",&&&&                ""file.host"":""localhost"",&&&&                ""file.host_key_check"":""no"" }'&&&&qemu-img: qobject/qdict.c:193: qdict_get_obj: Assertion `obj != ((void *)0)' failed.&&&&Aborted&&&&&&&&A similar crash also happens if the file.host field is omitted.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1147343&&&&&&&&Bug found and reported by Jun Li.&&&&&&&&Signed-off-by: Richard W.M. Jones <rjones@redhat.com>&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, ohci: drop computed flags from trace events This exceeded the trace argument limit for LTTNG UST and wasn't really&&&&needed as the flags value is stored anyway. Dropping this fixes the&&&&compile failure for UST. It can probably be merged with the previous&&&&trace shortening patch.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, hmp: fix memory leak at hmp_info_block_jobs() Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1410874615-14292-1-git-send-email-arei.gonglei@huawei.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," qapi/block: Add ""fatal"" to BLOCK_IMAGE_CORRUPTED Not every BLOCK_IMAGE_CORRUPTED event must be fatal; for example, when&&&&reading from an image, they should generally not be. Nonetheless, even&&&&an image only read from may of course be corrupted and this can be&&&&detected during normal operation. In this case, a non-fatal event should&&&&be emitted, but the image should not be marked corrupt (in accordance to&&&&""fatal"" set to false).&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1409926039-29044-2-git-send-email-mreitz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," runner: Kill a program under test by time-out If a program under test get frozen, the test should finish and report about its&&&&failure.&&&&In such cases the runner waits for 10 minutes until the program ends its&&&&execution. After this time-out the program will be terminated and the test will&&&&be marked as failed.&&&&&&&&For current limitation of test image size to 10 MB as a maximum an execution of&&&&each command takes about several seconds in general, so 10 minutes is enough to&&&&discriminate freeze, but not drastically increase an overall test duration.&&&&&&&&Signed-off-by: Maria Kustova <maria.k@catit.be>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," dataplane: fail notifier setting gracefully The dataplane code is currently doing a hard exit if it fails to set&&&&up either guest or host notifiers. In practice, this may mean that a&&&&guest suddenly dies after a dataplane device failed to come up (e.g.,&&&&when a file descriptor limit is hit for tne nth device).&&&&&&&&Let's just try to unwind the setup instead and return.&&&&&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," cirrus_vga: adding sanity check for vram size when configure a invalid vram size for cirrus card, such as less&&&&2 MB, which will crash qemu. Follow the real hardware, the cirrus&&&&card has 4 MB video memory. Also for backward compatibility, accept&&&&8 MB and 16 MB vram size.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," numa: Reject duplicate node IDs The same nodeid shouldn't appear multiple times in the command-line.&&&&&&&&In addition to detecting command-line mistakes, this will fix a bug&&&&where nb_numa_nodes may become larger than MAX_NODES (and cause&&&&out-of-bounds access on the numa_info array).&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Hu Tao <hutao@cn.fujitsu.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," block: Catch !bs->drv in bdrv_check() qemu-img check calls bdrv_check() twice if the first run repaired some&&&&inconsistencies. If the first run however again triggered corruption&&&&prevention (on qcow2) due to very bad inconsistencies, bs->drv may be&&&&NULL afterwards. Thus, bdrv_check() should check whether bs->drv is set.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," virtio-serial-bus: keep port 0 reserved for virtconsole even on unplug We keep port 0 reserved for compat with older guests, where only&&&&virtio-console was expected.  Even if a system is started without a&&&&virtio-console port, port #0 is kept aside.  However, after a&&&&virtconsole port is unplugged, port id 0 became available, and the next&&&&hotplug of a virtserialport caused failure due to it not being a console&&&&port.&&&&&&&&Steps to reproduce:&&&&&&&&$ ./x86_64-softmmu/qemu-system-x86_64 -m 512 -cpu host -enable-kvm -device virtio-serial-pci -monitor stdio  -vnc :1&&&&QEMU 2.0.91 monitor - type 'help' for more information&&&&(qemu) device_add virtconsole,id=p1&&&&(qemu) device_del p1&&&&(qemu) device_add virtserialport,id=p1&&&&Port number 0 on virtio-serial devices reserved for virtconsole devices for backward compatibility.&&&&Device 'virtserialport' could not be initialized&&&&(qemu) quit&&&&&&&&Reported-by: dengmin <mdeng@redhat.com>&&&&Reviewed-by: Amos Kong <akong@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
1, qemu-img: Plug memory leak in convert command Introduced in commit 661a0f7.  Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, qemu-io: Plug memory leak in open command Introduced in commit b543c5c.  Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," signal/all: remove return value from restore_sigcontext make most implementations of restore_sigcontext void and&&&&remove checking it's return value from functions calling&&&&restore_sigcontext.&&&&&&&&The exception is the X86 version of the function that is&&&&too different from others to deal in this way, and arm&&&&version, to keep possibility of erroring out from failed&&&&valid_user_regs.&&&&&&&&v3: keep arm valid_user_regs for filling in near future.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," hw/arm/omap_gpmc: Avoid buffer overrun filling prefetch FIFO In fill_prefetch_fifo(), if the device we are reading from is 16 bit,&&&&then we must not try to transfer an odd number of bytes into the FIFO.&&&&This could otherwise have resulted in our overrunning the prefetch.fifo&&&&array by one byte.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&& "
1," seabios: update to 1.7.5-rc1 Code grew a bit, had to disable CONFIG_USB_UAS to make the&&&&bios for the old machine types continue top fit into 128k.&&&&&&&&git shortlog since 1.7.4:&&&&&&&&Eric Northup (2):&&&&      init_virtio_blk, init_virtio_scsi: reset HBA on error&&&&      vp_init_simple: enable PCI bus-mastering before relying on DMA.&&&&&&&&Gabriel L. Somlo (1):&&&&      SMBIOS: Check for aggregate tables & entry point in fw_cfg&&&&&&&&Gerd Hoffmann (4):&&&&      smbios: catch zero-length strings&&&&      pci: improve io address space allocation&&&&      xhci: allocate scratch pad buffers&&&&      vga: rework bar detection, add virtio-vga&&&&&&&&Johannes Krampf (5):&&&&      build: Remove unneccesary semicolons from acpi_extract scripts.&&&&      build: Make print statements in scripts python3 compatible.&&&&      build: Be explicit that we want integers when dividing for python3 compat.&&&&      build: Avoid sort() on unordered classes for python3 compatibility.&&&&      build: Be careful with unicode and byte strings for python3 compatibility.&&&&&&&&Kevin O'Connor (79):&&&&      build: Don't trash the .config file when src/Kconfig changes.&&&&      Remove the pmm handle argument from _malloc().&&&&      Clear the total block transfer count on error.&&&&      Remove unnecesary updates of the disk op->count field.&&&&      Always perform thread cleanup on MainThread stack.&&&&      pvscsi: Don't store reference to struct pci_device.&&&&      pvscsi: Always run entirely in 32bit mode.&&&&      pvscsi: Remove use of LOWFLAT and GLOBALFLAT macros.&&&&      usb: Replace EHCI to UHCI/OHCI synchronization with new scheme.&&&&      Minor - pciinit.c - order header files and use static on local functions.&&&&      Minor - fix misspelling in romfile.c comment.&&&&      ehci: memset the qTD structures in ehci_alloc_intr_pipe&&&&      build: Update kconfig to version in Linux 3.13.&&&&      scripts: Allow encodeint.py to take integers in hex notation.&&&&      coreboot: Support alternative locations for CBFS.&&&&      debug: Add runtime option to not report the debug serial port to the OS.&&&&      debug: Only call serial_debug_preinit() at startup.&&&&      debug: Unify the SeaBIOS debug version banner.&&&&      xhci: Use 64bit writes to ERDP register.&&&&      xhci: Fix incorrect direction setting on status transmissions.&&&&      xhci: Set the interval parameter on interrupt pipes.&&&&      xhci: Verify PAGESIZE register before initializing driver.&&&&      xhci: Allocate and free the xhci inctx structure on each use.&&&&      xhci: Move set_address code from xhci_control to xhci_alloc_pipe.&&&&      xhci: Eliminate 'struct xhci_device'.&&&&      xhci: Support xhci controllers with 64 byte contexts.&&&&      xhci: Allow the XHCI USB controller to be enabled for coreboot.&&&&      xhci: Don't use a dummy endpoint count in configure command.&&&&      xhci: Report the ""protocol defined"" and PSIC bits of extended capabilities.&&&&      xhci: Support USB hubs on xhci controllers.&&&&      Add call32_params() helper function.&&&&      Add space between DTYPE_* definitions.&&&&      xhci: Run the XHCI driver entirely in 32bit mode.&&&&      Remove pci_writel() and pci_readl() functions.&&&&      xhci: Check if scratch pad allocation fails.&&&&      Increase maximum size of permanent high memory area.&&&&      usb: USB 3 devices encode bMaxPacketSize0 field.&&&&      usb: Move default pipe max packet size code from xhci to main code.&&&&      xhci: Use the same endpoint initialization code in xhci_alloc_pipe()&&&&      xhci: Add copyright notice to usb-xhci.c&&&&      vgabios: Make sure exported structs use PACKED.&&&&      vgabios: Simplify the bios save state area.&&&&      vgabios: Simplify save/restore mechanism.&&&&      vgabios: Attempt to detect old x86emu and force a fault.&&&&      vgabios: Don't interpret TAB character.&&&&      vgabios: Refactor write_teletype and write_chars.&&&&      vgabios: Make sure stdvga_list_modes() doesn't overrun the buffer.&&&&      coreboot: Add support for a ""links"" file to have aliases in CBFS.&&&&      Enhance nullTrailingSpace() so that it can also skip leading spaces.&&&&      coreboot: Move links file processing to its own function.&&&&      vgabios: Fix PMM allocation request size.&&&&      smbios: Default all values to zero.&&&&      usb: Only disable HID devices if both USB_MOUSE and USB_KEYBOARD are off.&&&&      Minor - fix some typos in comments.&&&&      Replace CONFIG_THREAD_OPTIONROMS with a runtime config setting.&&&&      acpi: Move acpi parsing logic from acpi.c to biostables.c / paravirt.c.&&&&      smbios: Move smbios parsing logic from smbios.c to biostables.c.&&&&      Move PirAddr definition from pirtable.c to biostables.c.&&&&      Use biostables.c for copying bios tables even when generating them.&&&&      Document no new changes to pirtable.c, mptable.c, acpi.c, and smbios.c.&&&&      apm: Remove old Bochs mechanism for shutdown/suspend/standby.&&&&      Minor - remove unused includes from pci.c.&&&&      vgabios: Add option to control use of standard VGA IO ports.&&&&      vgabios: Split vgafb_scroll() into separate move and clear functions.&&&&      vgabios: Rewrite vgafb.c graphics operations to set of 4 standard operators.&&&&      vgabios: Introduce text_address().&&&&      vgabios: Add support for manipulating framebuffers in high memory.&&&&      Set the color attribute when calling vgabios print character.&&&&      vgabios: PMM scan was incorrectly depending on a zero %ds segment.&&&&      coreboot: Make coreboot table searching available to other code.&&&&      vgabios: Initial support for coreboot native vga vgabios.&&&&      Minor - replace some tab characters that slipped into the code.&&&&      Factor out smbios table walking from display_uuid to smbios_next().&&&&      vgabios: Define PlatformRunningOn to make compile happy.&&&&      If an int 1587 call is made from an option rom, stay in bigreal mode.&&&&      xhci: Use msleep() instead of mdelay() for port status delay.&&&&      build: Make sure romlayout.o is recompiled on Kconfig change.&&&&      Fix int 1589 calls when CONFIG_ENTRY_EXTRASTACK is enabled.&&&&      acpi: Fix acpi dsdt compile warning.&&&&&&&&Laszlo Ersek (1):&&&&      init_virtio_scsi(): reset the HBA before freeing its virtio ring&&&&&&&&Marcel Apfelbaum (3):&&&&      resume: restore piix pm config registers after resume&&&&      hw/pci: reserve IO and mem for pci-2-pci bridges with no devices attached&&&&      hw/pci: check if pci2pci bridges implement optional limit registers&&&&&&&&Roger Pau Monne (1):&&&&      ld: don't hardcode ""-melf_i386""&&&&&&&&Sander Eikelenboom (1):&&&&      Prevent build failure by not splitting line in the middle of arguments to checkrom.py script&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, gluster: Correctly propagate errors when volume isn't accessible The docs for glfs_init suggest that the function sets errno on every&&&&failure. In fact it doesn't. As other functions such as&&&&qemu_gluster_open() in the gluster block code report their errors based&&&&on this fact we need to make sure that errno is set on each failure.&&&&&&&&This fixes a crash of qemu-img/qemu when a gluster brick isn't&&&&accessible from given host while the server serving the volume&&&&description is.&&&&&&&&Thread 1 (Thread 0x7ffff7fba740 (LWP 203880)):&&&& #0  0x00007ffff77673f8 in glfs_lseek () from /usr/lib64/libgfapi.so.0&&&& #1  0x0000555555574a68 in qemu_gluster_getlength ()&&&& #2  0x0000555555565742 in refresh_total_sectors ()&&&& #3  0x000055555556914f in bdrv_open_common ()&&&& #4  0x000055555556e8e8 in bdrv_open ()&&&& #5  0x000055555556f02f in bdrv_open_image ()&&&& #6  0x000055555556e5f6 in bdrv_open ()&&&& #7  0x00005555555c5775 in bdrv_new_open ()&&&& #8  0x00005555555c5b91 in img_info ()&&&& #9  0x00007ffff62c9c05 in __libc_start_main () from /lib64/libc.so.6&&&& #10 0x00005555555648ad in _start ()&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," ahci: fix buffer overrun on invalid state load CVE-2013-4526&&&&&&&&Within hw/ide/ahci.c, VARRAY refers to ports which is also loaded.  So&&&&we use the old version of ports to read the array but then allow any&&&&value for ports.  This can cause the code to overflow.&&&&&&&&There's no reason to migrate ports - it never changes.&&&&So just make sure it matches.&&&&&&&&Reported-by: Anthony Liguori <anthony@codemonkey.ws>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," pci-assign: propagate Error from check_irqchip_in_kernel() Rename check_irqchip_in_kernel() to verify_irqchip_in_kernel(), so that&&&&the name reflects our expectation better. Rather than returning a bool,&&&&make it do nothing or set an Error.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1, usb: mtp: fix error path memory leak Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Peter Wu <peter@lekensteyn.nl>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," mirror: Fix resource leak when bdrv_getlength fails The direct return will skip releasing of all the resouces at&&&&immediate_exit, don't miss that.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," MAINTAINERS: addresses for responsible disclosure Adding addresses to MAINTAINERS, as agreed on the last conference call:&&&&&&&&http://wiki.qemu.org/SecurityProcess&&&&&&&&People sometimes detect security issues in upstream&&&&QEMU and don't know where to report them in a non-public way.&&&&Of course whoever just wants full disclosure can just go public,&&&&but there's nothing specified for non-public - until recently Anthony&&&&was doing this informally.&&&&&&&&As I started doing this recently anyway, I can handle this on the QEMU side&&&&in a more formal way.&&&&&&&&Adding a secalert mailing list as well - they are the ones who is actually&&&&opening CVEs, communicating issues to all downstreams etc,&&&&and they are already handling this for upstream, not just Red Hat.&&&&&&&&Keeping Anthony's address around in case he wants to be informed.&&&&&&&&Peter Maydell said that he prefers not to be on this contact list at&&&&this point.&&&&&&&&A public mailing list has been created - not listing it here yet -&&&&until we know how to set it up in a secure fashion and&&&&until there are more people so manually copying everyone&&&&becomes unwieldy for reporters.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," parallels: Fix catalog size integer overflow (CVE-2014-0143) The first test case would cause a huge memory allocation, leading to a&&&&qemu abort; the second one to a too small malloc() for the catalog&&&&(smaller than s->catalog_size), which causes a read-only out-of-bounds&&&&array access and on big endian hosts an endianess conversion for an&&&&undefined memory area.&&&&&&&&The sample image used here is not an original Parallels image. It was&&&&created using an hexeditor on the basis of the struct that qemu uses.&&&&Good enough for trying to crash the driver, but not for ensuring&&&&compatibility.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, qcow2: Validate refcount table offset The end of the refcount table must not exceed INT64_MAX so that integer&&&&overflows are avoided.&&&&&&&&Also check for misaligned refcount table. Such images are invalid and&&&&probably the result of data corruption. Error out to avoid further&&&&corruption.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," hw/usb/hcd-ohci.c: Avoid shifting left into sign bit Add U suffix to avoid undefined behaviour. This is only&&&&strictly necessary for the 1<<31 cases, but we add it for the&&&&other constants in these groups for consistency.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, spapr-vscsi: fix CRQ status Normally VIOSRP_OK (0) means success and non-zero value means error&&&&except VIOSRP_OK2 (0x99) which is another success code by weird accident.&&&&&&&&This uses 0 as success code always as some guests do not cope with&&&&the 0x99 value well. The existing linux driver checks for both VIOSRP_OK&&&&and VIOSRP_OK2 since 2.6.32.&&&&&&&&This returns non-zero code (VIOSRP_ADAPTER_FAIL == 0x10) on errors which&&&&can only happen if DMA write failed.&&&&&&&&Suggested-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," qcow2: Check bs->drv in copy_sectors() Before dereferencing bs->drv for a call to its member bdrv_co_readv(),&&&&copy_sectors() should check whether that pointer is indeed valid, since&&&&it may have been set to NULL by e.g. a concurrent write triggering the&&&&corruption prevention mechanism.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," vnc: fix use-after-free in vnc_update_client_sync Spotted by Coverity:&&&&&&&&876     static int vnc_update_client_sync(VncState *vs, int has_dirty)&&&&877     {&&&&&&&&(1) Event freed_arg:    ""vnc_update_client(VncState *, int)"" frees ""vs"".  [details]&&&&Also see events:        [deref_arg]&&&&&&&&878         int ret = vnc_update_client(vs, has_dirty);&&&&&&&&(2) Event deref_arg:    Calling ""vnc_jobs_join(VncState *)"" dereferences freed pointer ""vs"". [details]&&&&Also see events:        [freed_arg]&&&&&&&&879         vnc_jobs_join(vs);&&&&880         return ret;&&&&881     }&&&&&&&&Remove vnc_update_client_sync wrapper, replace it with an additional&&&&argument to vnc_update_client, so we can so the sync properly in&&&&vnc_update_client (i.e. skip it in case of a client disconnect).&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1, input: qapi: add unmapped key Simplifies building something -> QkeyCode mapping tables.&&&&Uninitialized entries can easily identified then.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1," target-ppc: Introduce hypervisor call H_GET_TCE This patch introduces the hypervisor call H_GET_TCE which is basically the&&&&reverse of H_PUT_TCE, as defined in the Power Architecture Platform&&&&Requirements (PAPR).&&&&&&&&The hcall H_GET_TCE is required by the kdump kernel which is calling it to&&&&retrieve the TCE set up by the panicing kernel.&&&&&&&&Signed-off-by: Laurent Dufour <ldufour@linux.vnet.ibm.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, pci-assign: Fix potential read beyond buffer on -EBUSY readlink() doesn't write a terminating null byte.&&&&assign_failed_examine() passes the unterminated string to strrchr().&&&&Oops.  Terminate it.&&&&&&&&Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& 
1, block/iscsi: fix deadlock on scsi check condition the retry logic was broken because the complete status&&&&of the task structure was not reset. this resulted in&&&&an infinite loop retrying the command over and over.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, linux-user/elfload.c: Avoid calling g_free() on uninitialized data Avoid calling g_free() on unintialized data in the error-handling&&&&paths in elf_core_dump() by splitting the initialization of the&&&&elf_note_info struct out of fill_note_info() so that it's always&&&&valid to call free_note_info() whether we got to the point of&&&&being able to fill_note_info() or not.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
1," monitor: Cleanup mon->outbuf on write error In case monitor_flush() fails to write the contents of mon->outbuf to&&&&the output device, mon->outbuf is not cleaned up properly. Check the&&&&return code of the qemu_chr_fe_write() function and cleanup the outbuf&&&&if it fails.&&&&&&&&References: http://lists.nongnu.org/archive/html/qemu-devel/2014-01/msg02890.html&&&&&&&&Signed-off-by: Stratos Psomadakis <psomas@grnet.gr>&&&&Signed-off-by: Dimitris Aragiorgis <dimara@grnet.gr>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1, tests: Add libqemustub to qom-interface-check The recent addition of util/error.c's dependency on error_report()&&&&causes this test to fail to link due to a number of missing monitor&&&&related symbols. All these symbols are however defined by libqemustub.&&&&Add this libary to the link.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&& 
1," block: Don't use guest sector size for qemu_blockalign() bs->buffer_alignment is set by the device emulation and contains the&&&&logical block size of the guest device. This isn't something that the&&&&block layer should know, and even less something to use for determining&&&&the right alignment of buffers to be used for the host.&&&&&&&&The new BlockLimits field opt_mem_alignment tells the qemu block layer&&&&the optimal alignment to be used so that no bounce buffer must be used&&&&in the driver.&&&&&&&&This patch may change the buffer alignment from 4k to 512 for all&&&&callers that used qemu_blockalign() with the top-level image format&&&&BlockDriverState. The value was never propagated to other levels in the&&&&tree, so in particular raw-posix never required anything else than 512.&&&&&&&&While on disks with 4k sectors direct I/O requires a 4k alignment,&&&&memory may still be okay when aligned to 512 byte boundaries. This is&&&&what must have happened in practice, because otherwise this would&&&&already have failed earlier. Therefore I don't expect regressions even&&&&with this intermediate state. Later, raw-posix can implement the hook&&&&and expose a different memory alignment requirement.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Wenchao Xia <xiawenc@linux.vnet.ibm.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
1," virtio-pci: add device_unplugged callback This fixes a crash in hot-unplug of virtio-pci devices behind a PCIe&&&&switch.  The crash happens because the ioeventfd is still set whent the&&&&child is destroyed (destruction happens in postorder).  Then the proxy&&&&tries to unset to ioeventfd, but the virtqueue structure that holds the&&&&EventNotifier has been trashed in the meanwhile.  kvm_set_ioeventfd_pio&&&&does not expect failure and aborts.&&&&&&&&The fix is simply to move parts of uninitialization to a new&&&&device_unplugged callback, which is called before the child is destroyed.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Acked-by: Andreas Faerber <afaerber@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," virtio-balloon: switch exit callback to VirtioDeviceClass This ensures hot-unplug is handled properly by the proxy, and avoids&&&&leaking bus_name which is freed by virtio_device_exit.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Acked-by: Andreas Faerber <afaerber@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," xhci: Add a few missing checks for disconnected devices One of the reworks of qemu's usb core made changes to usb-port's disconnect&&&&handling. Now ports with a device will always have a non 0 dev member, but&&&&if the device is not attached (which is possible with usb redirection),&&&&dev->attached will be 0.&&&&&&&&So supplement all checks for dev to also check dev->attached, and add an&&&&extra check in a path where a device check was completely missing.&&&&&&&&This fixes various crashes (asserts triggering) I've been seeing when xhci&&&&attached usb devices get disconnected at the wrong time.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," .travis.yml: basic compile and check recipes This adds a build matrix definition for travis-ci.org continuous&&&&integration service. It is usable on any public repository hosted on&&&&GitHub. Once you have created an account signed into Travis you can&&&&enable it on selected projects via travis-ci.org/profile. Alternatively&&&&you can configure the service hooks on GitHub via the repository&&&&Settings tab,then Service Hooks and selecting Travis.&&&&&&&&Once setup Travis will automatically test every push as well as any pull&&&&requests submitted to that repository.&&&&&&&&The build matrix is currently split by target architecture (see TARGETS&&&&environment variable) because a full build of QEMU can take some time.&&&&This way you get quick feedback for any obvious errors. The additional&&&&environment variables exist to allow additional builds to tweak the&&&&environment. These are:&&&&&&&&EXTRA_CONFIG - extra terms passed to configure&&&&EXTRA_PKGS - extra dev packages to install&&&&TEST_CMD - default ""make check"", can be overridden&&&&&&&&I've confined the additional stuff to x86/x86_64 for convenience.&&&&&&&&As Travis supports clang the main builds are done twice (once for gcc&&&&and once for clang). However clang is disabled for the debug/trace&&&&builds for the purposes of brevity.&&&&&&&&Other wrinkles:&&&&&&&& * The lttng user-space tracing back-end is disabled&&&&   (it is currently horribly broken)&&&& * The ftrace back-end doesn't run ""make check""&&&&   (it requires a mounted debugfs to work)&&&& * There are two debug enabled build (with and without TCG interpreter)&&&&&&&&Signed-off-by: Alex Benn茅e <alex@bennee.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," qemu-ga: vss-win32: Install VSS provider COM+ application service Currently, qemu-ga for Windows fails to execute guset-fsfreeze-freeze when&&&&no user is logging in to Windows, with an error message:&&&&  {""error"":{""class"":""GenericError"",&&&&            ""desc"":""failed to add C:\\ to snapshotset:  (error: 8004230f)""}}&&&&&&&&To enable guest-fsfreeze-freeze/thaw without logging in users, this installs&&&&a service to execute qemu-ga VSS provider COM+ application that has full&&&&access privileges to the local system. The service will automatically be&&&&removed when the COM+ application is deregistered.&&&&&&&&This patch replaces ICOMAdminCatalog interface with ICOMAdminCatalog2&&&&interface that contains CreateServiceForApplication() method in addition.&&&&&&&&Signed-off-by: Tomoki Sekiyama <tomoki.sekiyama@hds.com>&&&&Reviewed-by: Gal Hammer <ghammer@redhat.com>&&&&Reviewed-by: Yan Vugenfirer <yvugenfi@redhat.com>&&&&Tested-by: Yan Vugenfirer <yvugenfi@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," vga: fix invalid read after free After calling dpy_gfx_replace_surface(s->con, surface), the outer&&&&surface is invalid.&&&&&&&&==5370== Invalid read of size 4&&&&==5370==    at 0x460229: surface_bits_per_pixel (console.h:250)&&&&==5370==    by 0x466A81: get_depth_index (vga.c:1173)&&&&==5370==    by 0x467EC2: vga_draw_graphic (vga.c:1718)&&&&==5370==    by 0x4687A5: vga_update_display (vga.c:1914)&&&&==5370==    by 0x2A782E: qxl_hw_update (qxl.c:1766)&&&&==5370==    by 0x3EB83B: graphic_hw_update (console.c:254)&&&&==5370==    by 0x3FBE31: qemu_spice_display_refresh (spice-display.c:418)&&&&==5370==    by 0x2A7D01: display_refresh (qxl.c:1886)&&&&==5370==    by 0x3EEE1C: dpy_refresh (console.c:1436)&&&&==5370==    by 0x3EB543: gui_update (console.c:192)&&&&==5370==    by 0x3C43B3: timerlist_run_timers (qemu-timer.c:488)&&&&==5370==    by 0x3C4416: qemu_clock_run_timers (qemu-timer.c:499)&&&&==5370==  Address 0x22ffb1e0 is 0 bytes inside a block of size 56 free'd&&&&==5370==    at 0x4A074C4: free (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)&&&&==5370==    by 0x4245FC: free_and_trace (vl.c:2771)&&&&==5370==    by 0x50899AE: g_free (gmem.c:252)&&&&==5370==    by 0x3EE8D3: qemu_free_displaysurface (console.c:1332)&&&&==5370==    by 0x3EEDB7: dpy_gfx_replace_surface (console.c:1427)&&&&==5370==    by 0x467EB6: vga_draw_graphic (vga.c:1714)&&&&==5370==    by 0x4687A5: vga_update_display (vga.c:1914)&&&&==5370==    by 0x2A782E: qxl_hw_update (qxl.c:1766)&&&&==5370==    by 0x3EB83B: graphic_hw_update (console.c:254)&&&&==5370==    by 0x3FBE31: qemu_spice_display_refresh (spice-display.c:418)&&&&==5370==    by 0x2A7D01: display_refresh (qxl.c:1886)&&&&==5370==    by 0x3EEE1C: dpy_refresh (console.c:1436)&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@gmail.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1383664554-15248-1-git-send-email-marcandre.lureau@gmail.com&&&&Signed-off-by: Anthony Liguori <aliguori@amazon.com>&&&& "
1," qcow2: Flush image after creation Opening the qcow2 image with BDRV_O_NO_FLUSH prevents any flushes during&&&&the image creation. This means that the image has not yet been flushed&&&&to disk when qemu-img create exits. This flush is delayed until the next&&&&operation on the image involving opening it without BDRV_O_NO_FLUSH and&&&&closing (or directly flushing) it. For large images and/or images with a&&&&small cluster size and preallocated metadata, this flush may take a&&&&significant amount of time and may occur unexpectedly.&&&&&&&&Reopening the image without BDRV_O_NO_FLUSH right before the end of&&&&qcow2_create2() results in hoisting the potentially costly flush into&&&&the image creation, which is expected to take some time (whereas&&&&successive image operations may be not).&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qcow2: Remove wrong metadata overlap check In qcow2_write_compressed, if the compression fails, a normal cluster is&&&&written to disk. This is done through bdrv_write on the qcow2 BDS&&&&itself (using the guest offset), thus it is wrong to do a metadata&&&&overlap check before.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, migration: Fix compiler warning ('caps' may be used uninitialized) Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Reviewed-by: Stefan Weil <sw@weilnetz.de>&&&& 
1, throttle: Add a new throttling API implementing continuous leaky bucket. Implement the continuous leaky bucket algorithm devised on IRC as a separate&&&&module.&&&&&&&&Signed-off-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," hw/openrisc: Avoid using uninitialised variable 'entry' clang warns that cpu_openrisc_load_kernel() can use 'entry' uninitialized:&&&&&&&&hw/openrisc/openrisc_sim.c:69:9: error: variable 'entry' is used uninitialized&&&&whenever '&&' condition is false [-Werror,-Wsometimes-uninitialized]&&&&&&&&    if (kernel_filename && !qtest_enabled()) {&&&&        ^~~~~~~~~~~~~~~&&&&hw/openrisc/openrisc_sim.c:91:19: note: uninitialized use occurs here&&&&    cpu->env.pc = entry;&&&&                  ^~~~~&&&&&&&&Fix this by not attempting to change the CPU's starting PC unless&&&&we actually loaded a kernel.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Jia Liu <proljc@gmail.com>&&&& "
1," migration: notify migration state before starting thread The migration thread runs outside the QEMU global mutex when possible.&&&&Therefore we must notify migration state change *before* starting the&&&&migration thread.&&&&&&&&This allows registered listeners to act before live migration iterations&&&&begin.  Therefore they can get into a state that allows for live&&&&migration.  When the migration thread starts everything will be ready.&&&&&&&&Without this patch there is a race condition during migration setup,&&&&depending on whether the migration thread has already transitioned from&&&&SETUP to ACTIVE state.&&&&&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target-arm: Avoid ""1 << 31"" undefined behaviour Avoid the undefined behaviour of ""1 << 31"" by using 1U to make&&&&the shift be of an unsigned value rather than shifting into the&&&&sign bit of a signed integer. For consistency, we make all the&&&&CPSR_* constants unsigned, though the only one which triggers&&&&undefined behaviour is CPSR_N.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-id: 1378391908-22137-3-git-send-email-peter.maydell@linaro.org&&&& "
1," seabios: update to 1.7.3 Changes summary (git shortlog rel-1.7.2.2..rel-1.7.3):&&&&&&&&Alex Williamson (4):&&&&      seabios q35: Enable all PIRQn IRQs at startup&&&&      seabios q35: Add new PCI slot to irq routing function&&&&      seabios: Add a dummy PCI slot to irq mapping function&&&&      pciinit: Enable default VGA device&&&&&&&&Asias He (2):&&&&      virtio-scsi: Set _DRIVER_OK flag before scsi target scanning&&&&      virtio-scsi: Pack struct virtio_scsi_{req_cmd,resp_cmd}&&&&&&&&Avik Sil (1):&&&&      USB-EHCI: Fix null pointer assignment&&&&&&&&Christian Gmeiner (5):&&&&      geodevga: fix errors in geode_fp_* functions&&&&      geodevga: move framebuffer setup&&&&      geodevga: move output setup to own function&&&&      geodevga: add debug to msr functions&&&&      geodevga: fix wrong define name&&&&&&&&David Woodhouse (26):&&&&      Add macros for pushing and popping struct bregs&&&&      Clean up #if in pirtable.c. CONFIG_PIRTABLE can't be set if CONFIG_COREBOOT is&&&&      post: Export functions which will be used individually by CSM&&&&      Export callrom() for CSM to use&&&&      Export copy_smbios() from biostables.c&&&&      Import LegacyBios.h from OVMF&&&&      Complete and checksum EFI_COMPATIBILITY16_TABLE at build time&&&&      Add pic_save_mask() and pic_restore_mask() functions&&&&      Add CSM support&&&&      Add README.CSM&&&&      Add find_pmtimer() function&&&&      Enable PMTIMER for CSM build&&&&      Fix rom_reserve()/rom_confirm() for CSM oprom dispatch&&&&      Don't calibrate TSC if PMTIMER is already set up&&&&      Move find_pmtimer() to ACPI table setup where it logically belongs&&&&      Use find_pmtimer() after copying Xen ACPI tables&&&&      Use find_pmtimer() after copying coreboot ACPI tables&&&&      Unify return path for CSM to go via csm_return()&&&&      Make CONFIG_OPTIONROMS_DEPLOYED depend on CONFIG_QEMU&&&&      Implement !CONFIG_OPTIONROMS support for CSM&&&&      Implement !CONFIG_BOOT for CSM&&&&      Enable VGA output when settings bochs-specific mode&&&&      Disable CONFIG_THREAD_OPTIONROMS for CSM build&&&&      Fix return type of le64_to_cpu() and be64_to_cpu()&&&&      Rename find_pmtimer() to find_acpi_features()&&&&      Add acpi_reboot() reset method using RESET_REG&&&&&&&&Gerd Hoffmann (3):&&&&      config: allow DEBUG_IO for !QEMU&&&&      coreboot: add qemu detection&&&&      tweak coreboot qemu detection&&&&&&&&Hu Tao (1):&&&&      Add pvpanic device driver&&&&&&&&Kevin O'Connor (99):&&&&      pmm: Use 'struct segoff_s' in pmm header.&&&&      Minor: Update README - variable changes are now reset on soft-reboots.&&&&      Normalize POST initialization function name suffixes.&&&&      POST: Reorganize post init functions for better grouping and reusability.&&&&      Fix rebase error in commit 8a0a972f that broke LOWMEM variables.&&&&      Support calling a function other than maininit() from reloc_preinit().&&&&      Ensure exported symbols are visible in the final link&&&&      POST: Move QEMU specific ramsize and BIOS table setup to paravirt.c.&&&&      POST: Reorganize post entry and ""preinit"" functions.&&&&      POST: Move cpu caching and dma setup to platform_hardware_setup().&&&&      Undo incorrect assumptions about Xen in commit 6ca0460f.&&&&      Determine century during init and store in VARLOW mem during runtime.&&&&      No need to check both CONFIG_THREADS and CONFIG_THREAD_OPTIONROMS.&&&&      Add runningOnQEMU() and runningOnXen() for runtime platform detection.&&&&      Consistently use CONFIG_COREBOOT, CONFIG_QEMU, and runningOnXen().&&&&      Convert kvm_para_available() to runningOnKVM().&&&&      Minor - move definitions to paravirt.c from paravirt.h.&&&&      Only perform SMP setup on QEMU.&&&&      Start device_hardware_setup in mainint even with CONFIG_THREAD_OPTIONROMS.&&&&      The mathcp setup touches the PIC and thus move to the ""setup"" phase.&&&&      Update tools/acpi_extract.py to handle iasl 20130117 release.&&&&      Support skipping content when reading from QEMU fw_cfg romfile entries.&&&&      Convert fw_cfg ACPI entries into romfile entries.&&&&      Convert fw_cfg SMBIOS entries into romfile entries.&&&&      Convert basic integer fw_cfg entries into romfile entries.&&&&      Convert fw_cfg NUMA entries into a romfile entry.&&&&      Process fw_cfg e820 entries during the fw_cfg setup stage.&&&&      Integrate qemu_cfg_preinit() into qemu_romfile_init().&&&&      Group QEMU platform setup together and move to paravirt.c.&&&&      vgabios: Bochs/QEMU vgabios support should depend on CONFIG_QEMU.&&&&      Warn on unaligned PCI ROM structure in option roms.&&&&      Fix Makefile - don't reference ""out/"" directly, instead use ""$(OUT)"".&&&&      build: Don't require $(OUT) to be a sub-directory of the main directory.&&&&      Rename rom_get_top() to rom_get_max().&&&&      Report on f-segment UMB ram also.&&&&      Clarify build generated ""zone low"" values.&&&&      Verify CC is valid during build tests.&&&&      Disable handle_post() on CSM builds.&&&&      Remove unnecessary ""export"" declarations from assembler functions.&&&&      Minor assembler enhancements to __csm_return.&&&&      Introduce VARFSEG for variables that will reside in the f-segment.&&&&      Convert VAR16VISIBLE, VAR16EXPORT, and VAR32VISIBLE to VARFSEG.&&&&      Don't relocate ""varlow"" variable references at runtime.&&&&      Move malloc's ZoneFSeg and ZoneLow setup to malloc_init.&&&&      Calculate ""RamSize"" needed by 16bit interface dynamically.&&&&      Eliminate separate BiosTableSpace[] space for f-segment allocations.&&&&      Use CONFIG_ prefix for Kconfig variables; use BUILD_ for others.&&&&      Try to detect an unsuccessful hard-reboot to prevent soft-reboot loops.&&&&      Minor - fix confusing final_sec32low_start name in layoutrom.py.&&&&      Minor - introduce numeric defines for the IVT offset of hw irqs.&&&&      Separate out 16bit PCI-BIOS entry point from regular int 0x1a entry point.&&&&      Support using the ""extra stack"" for all 16bit irq entry points.&&&&      Minor - improve comments and grouping of handle_08().&&&&      floppy: Introduce 'struct floppy_pio_s' for floppy PIO ops.&&&&      floppy: Cleanup floppy irq wait handling.&&&&      floppy: Clean up Check Interrupt Status code.&&&&      floppy: Move recalibration and results parsing to floppy_cmd().&&&&      floppy: Improve floppy_pio() error checking.&&&&      floppy: Implement media format sensing.&&&&      floppy: Actually do controller reset in floppy_reset().&&&&      Minor - note that passing QEMU config via cmos is deprecated.&&&&      Cache boot-fail-wait to avoid romfile access after POST.&&&&      Rename src/ssdt-susp.dsl to src/ssdt-misc.dsl.&&&&      acpi: Eliminate BDAT parameter passing to DSDT code.&&&&      Add additional dependency checks to Makefile.&&&&      Don't use __FILE__ in virtio-ring.c.&&&&      shadow: Don't use PCIDevices list in make_bios_readonly().&&&&      smm: Don't use PCIDevices list in smm_setup().&&&&      Add VARVERIFY32INIT attribute for variables only available during ""init"".&&&&      Use VARVERIFY32INIT on global variables that point to ""tmp"" memory.&&&&      vgabios: Fix stdvga_perform_gray_scale_summing().&&&&      vgabios: Fix cirrus memory clear on mode switch.&&&&      Minor - add missing newline to floppy debug statement.&&&&      Fix bug in NUMA node setup - don't create SRAT if NUMA not present.&&&&      Update README - copy *.aml files for QEMU.&&&&      Add dependencies to vgafixup.py and buildversion.sh scripts.&&&&      Set ZF prior to keyboard read call in check_for_keystroke().&&&&      mptable: Don't describe pci-to-pci bridges.&&&&      mptable: Use same PCI irqs as ACPI code.&&&&      Cleanup QEMU_CFG_NUMA fw_cfg processing - split into two romfile entries.&&&&      Use container_of on romfile entries.&&&&      acpi: Move ACPI table definitions from acpi.c to acpi.h.&&&&      acpi: Remove dead code with descriptions of bit flags.&&&&      acpi: Use cpu_to_leXX() consistently.&&&&      Minor - explicitly close files in buildrom.py.&&&&      Minor - move ""tracked memory alloc"" code in pmm.c.&&&&      Introduce and convert pm"
1," linux-user: Unlock mmap_lock when resuming guest from page_unprotect The page_unprotect() function is running everything locked. Before every&&&&potential exit path of the function mmap_unlock() gets called to make sure&&&&we don't leak the lock.&&&&&&&&However, the function calls tb_invalidate_phys_page() which again can&&&&exit a signal through longjmp, leaving our mmap_unlock() attempts in vain.&&&&&&&&Add a hint to tb_invalidate_phys_page() that we need to unlock before we&&&&can leave back into guest context, so that we don't leak the lock.&&&&&&&&This fixes 16-bit i386 wine programs running in linux-user for me.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," exec: reorganize address_space_map First of all, rename ""todo"" to ""done"".&&&&&&&&Second, clearly separate the case of done == 0 with the case of done != 0.&&&&This will help handling reference counting in the next patch.&&&&&&&&Third, this test:&&&&&&&&             if (memory_region_get_ram_addr(mr) + xlat != raddr + todo) {&&&&&&&&does not guarantee that the memory region is the same across two iterations&&&&of the while loop.  For example, you could have two blocks:&&&&&&&&A) size 640 K, mapped at physical address 0, ram_addr_t 0&&&&B) size 64 K, mapped at physical address 0xa0000, ram_addr_t 0xa0000&&&&&&&&then mapping 1 M starting at physical address zero will erroneously treat&&&&B as the continuation of block A.  qemu_ram_ptr_length ensures that no&&&&invalid memory is accessed, but it is still a pointless complication of&&&&the algorithm.  The patch makes the logic clearer with an explicit test&&&&that the memory region is the same.&&&&&&&&Reviewed-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, qemu-socket: don't leak opts on error Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1, fix double free the memslot in kvm_set_phys_mem Luiz Capitulino reported that guest refused to boot and qemu&&&&complained with:&&&&kvm_set_phys_mem: error unregistering overlapping slot: Invalid argument&&&&&&&&It is caused by commit 235e8982ad that did double free for the memslot&&&&so that the second one raises the -EINVAL error&&&&&&&&Fix it by reset memory size only if it is needed&&&&&&&&Reported-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Xiao Guangrong <xiaoguangrong@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, qapi: fix visitor serialization tests for numbers/doubles We never actually stored the stringified double values into the strings&&&&before we did the comparisons. This left number/double values completely&&&&uncovered in test-visitor-serialization tests.&&&&&&&&Fixing this exposed a bug in our handling of large whole number values&&&&in QEMU's JSON parser which is now fixed.&&&&&&&&Simplify the code while we're at it by dropping the&&&&calc_float_string_storage() craziness in favor of GStrings.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Amos Kong <akong@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
1, qom: trace asserting casts This provides a way to detect the cast that leads to a (reproducible)&&&&crash even when QOM cast debugging is disabled.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1368188203-3407-6-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," pseries: Factor out check for out-of-bounds LIOBN PAPR defines LIOBNs (Logical IO Bus Numbers) to be 32-bit, and we check for&&&&values that aren't in the code for H_PUT_TCE.  This patch factors the check&&&&into spapr_tce_find_by_liobn(), which already checks if a 32-bit LIOBN&&&&actually exists.  This will become more important as future patches add&&&&other hypercalls which need to look up a LIOBN.&&&&&&&&At the same time we fix the typo in the message.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, add a new runstate: RUN_STATE_GUEST_PANICKED The guest will be in this state when it is panicked.&&&&&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Hu Tao <hutao@cn.fujitsu.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 0255f263ffdc2a3716f73e89098b96fd79a235b3.1366945969.git.hutao@cn.fujitsu.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," configure: Check that ""libtool"" is not the MacOSX one The ""libtool"" binary on MacOSX is not GNU libtool, and doesn't support&&&&anything like the same set of command line options. Test whether we&&&&have accidentally picked this up (by looking for whether it handles&&&&the GNU --version switch), and discard it if so. The fallback machinery&&&&for the ""we don't have a libtool"" case will work fine. This fixes a&&&&failure in ""make install"" on MacOSX.&&&&&&&&Reported-by: Peter Cheung <mcheung63@hotmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1367701071-6630-1-git-send-email-peter.maydell@linaro.org&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," exynos4210_fimd.c: fix display resize bug introduced after console revamp In exynos4210 display update function, we were acquiring DisplaySurface&&&&pointer before calling screen resize function, not paying attention that resize&&&&procedure can replace current DisplaySurface with newly allocated one.&&&&Right thing to do is to initialize DisplaySurface AFTER a call to resize function.&&&&&&&&Signed-off-by: Igor Mitsyanko <i.mitsyanko@gmail.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," usb-redir: Fix crash on migration with no client connected If no client is connected on the src side, then we won't receive a&&&&parser during migrate, in this case usbredir_post_load() should be a nop,&&&&rather then to try to derefefence the NULL dev->parser pointer.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," qemu-ga: ga_get_fd_handle(): abort if fd_counter overflows Today we reset fd_counter if it wraps, but it's better to abort()&&&&instead, as fd_counter should never reach INT64_MAX.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&&&&&*fixed typo: s/resonable/reasonable/&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," target-ppc: Add more stubs for POWER7 PMU registers In addition to the performance monitor registers found on nearly all&&&&6xx chips, the POWER7 has two additional counters (PMC5 & PMC6) and an&&&&extra control register (MMCRA).  This patch adds stub support for them to&&&&qemu - the registers won't do anything, but with this change won't cause&&&&illegal instruction traps accessing them.  They're also registered with&&&&their ONE_REG ids, so their value will be kept in sync with KVM where&&&&appropriate.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," linux-user: make bogus negative iovec lengths fail EINVAL If the guest passes us a bogus negative length for an iovec, fail&&&&EINVAL rather than proceeding blindly forward. This fixes some of&&&&the error cases tests for readv and writev in the LTP.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," target-mips: fix DSP overflow macro and affected routines The previous implementation incorrectly used same macro to detect overflow&&&&for addition and subtraction. This patch makes distinction between these&&&&two, and creates separate macros. The affected routines are changed&&&&accordingly.&&&&&&&&This change also includes additions to the existing tests for SUBQ_S_PH and&&&&SUBQ_S_W that would trigger the fixed issue, and it removes dead code from&&&&the test file. The last test case in subq_s_w.c is a bug found/reported/&&&&isolated by Klaus Peichl from Dolby.&&&&&&&&Signed-off-by: Petar Jovanovic <petar.jovanovic@imgtec.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," qemu/iovec: Don't assert if sbytes is zero Since these values can possibly be sent from guest (for hw/9pfs), do a sanity check&&&&on them. A 9p write request with 0 bytes caused qemu to abort without this patch&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," parallels: Fix bdrv_open() error handling Return -errno instead of -1 on errors. Hey, no memory leak to fix here&&&&while we're touching it!&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," fw_cfg: Splash image loader can overrun a stack variable, fix read_splashfile() passes the address of an int variable as size_t *&&&&parameter to g_file_get_contents(), with a cast to gag the compiler.&&&&&&&&No problem on machines where sizeof(size_t) == sizeof(int).&&&&&&&&Happens to work on my x86_64 box (64 bit little endian): the least&&&&significant 32 bits of the file size end up in the right place&&&&(caller's variable file_size), and the most significant 32 bits&&&&clobber a place that gets assigned to before its next use (caller's&&&&variable file_type).&&&&&&&&I'd expect it to break on a 64 bit big-endian box.&&&&&&&&Fix up the variable types and drop the problematic cast.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," vmware_vga: fix out of bounds and invalid rects updating This is a follow up for several attempts to fix this issue.&&&&&&&&Previous incarnations:&&&&&&&&1. http://thread.gmane.org/gmane.linux.ubuntu.bugs.general/3156089&&&&https://bugs.launchpad.net/bugs/918791&&&&""qemu-kvm dies when using vmvga driver and unity in the guest"" bug.&&&&Fix by Serge Hallyn:&&&& https://launchpadlibrarian.net/94916786/qemu-vmware.debdiff&&&&This fix is incomplete, since it does not check width and height&&&&for being negative.  Serge weren't sure if that's the right place&&&&to fix it, maybe the fix should be up the stack somewhere.&&&&&&&&2. http://thread.gmane.org/gmane.comp.emulators.qemu/166064&&&&by Marek Vasut: ""vmware_vga: Redraw only visible area""&&&&&&&&This one adds the (incomplete) check to vmsvga_update_rect_delayed(),&&&&the routine just queues the rect updating but does no interesting&&&&stuff.  It is also incomplete in the same way as patch by Serge,&&&&but also does not touch width&height at all after adjusting x&y,&&&&which is wrong.&&&&&&&&As far as I can see, when processing guest requests, the device&&&&places them into a queue (vmsvga_update_rect_delayed()) and&&&&processes this queue in different place/time, namely, in&&&&vmsvga_update_rect().  Sometimes, vmsvga_update_rect() is&&&&called directly, without placing the request to the gueue.&&&&This is the place this patch changes, which is the last&&&&(deepest) in the stack.  I'm not sure if this is the right&&&&place still, since it is possible we have some queue optimization&&&&(or may have in the future) which will be upset by negative/wrong&&&&values here, so maybe we should check for validity of input&&&&right when receiving request from the guest (and maybe even&&&&use unsigned types there).  But I don't know the protocol&&&&and implementation enough to have a definitive answer.&&&&&&&&But since vmsvga_update_rect() has other sanity checks already,&&&&I'm adding the missing ones there as well.&&&&&&&&Cc'ing BALATON Zoltan and Andrzej Zaborowski who shows in `git blame'&&&&output and may know something in this area.&&&&&&&&If this patch is accepted, it should be applied to all active&&&&stable branches (at least since 1.1, maybe even before), with&&&&minor context change (ds_get_*(s->vga.ds) => s->*).  I'm not&&&&Cc'ing -stable yet, will do it explicitly once the patch is&&&&accepted.&&&&&&&&BTW, these checks use fprintf(stderr) -- it should be converted&&&&to something more appropriate, since stderr will most likely&&&&disappear somewhere.&&&&&&&&Cc: Marek Vasut <marex@denx.de>&&&&CC: Serge Hallyn <serge.hallyn@ubuntu.com>&&&&Cc: BALATON Zoltan <balaton@eik.bme.hu>&&&&Cc: Andrzej Zaborowski <balrogg@gmail.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Reviewed-by: Marek Vasut <marex@denx.de>&&&&Signed-off-by: Serge Hallyn <serge.hallyn@ubuntu.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," target-i386: Use switch in check_hw_breakpoints() Replace an if statement using magic numbers for breakpoint type with a&&&&more explicit switch statement. This is to aid readability.&&&&&&&&Change the return type and force_dr6_update argument type to bool.&&&&&&&&While at it, fix Coding Style issues (missing braces).&&&&&&&&Signed-off-by: liguang <lig.fnst@cn.fujitsu.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," ppc/booke: fix crit/mcheck/debug exceptions Book E does not play games with certain bits of xSRR1 being MSR save&&&&bits and others being error status.  xSRR1 is the old MSR, period.&&&&This was causing things like MSR[CE] to be lost, even in the saved&&&&version, as soon as you take an exception.&&&&&&&&rfci/rfdi/rfmci are fixed to pass the actual xSRR1 register contents,&&&&rather than the register number.&&&&&&&&Put FIXME comments on the hack that is ""asrr0/1"".  The whole point of&&&&separate exception levels is so that you can, for example, take a machine&&&&check or debug interrupt without corrupting critical-level operations.&&&&The right xSRR0/1 set needs to be chosen based on CPU type flags.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," S390: Enable -cpu help and QMP query-cpu-definitions This enables qemu -cpu help to return a list of supported CPU models&&&&on s390 and also to query for cpu definitions in the monitor.&&&&Initially only cpu model = host is returned. This needs to be reworked&&&&into a full-fledged CPU model handling later on.&&&&This change is needed to allow libvirt exploiters (like OpenStack)&&&&to specify a CPU model.&&&&&&&&Signed-off-by: Viktor Mihajlovski <mihajlov@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&[agraf: fix s390x-linux-user, adjust header locations]&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," qemu-img: report size overflow error message qemu-img will complain when qcow or qcow2&&&&size overflow for 64 bits, report the right&&&&message in this condition.&&&&&&&&$./qemu-img create -f qcow2 /tmp/foo 0x10000000000000000&&&&before change:&&&&qemu-img: Invalid image size specified! You may use k, M, G or T suffixes for&&&&qemu-img: kilobytes, megabytes, gigabytes and terabytes.&&&&&&&&after change:&&&&qemu-img: Image size must be less than 8 EiB!&&&&&&&&[Resolved conflict with a9300911 goto removal -- Stefan]&&&&&&&&Signed-off-by: liguang <lig.fnst@cn.fujitsu.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, Update seabios to a810e4e72a0d42c7bc04eda57382f8e019add901 git shortlog:&&&&&&&&Kevin O'Connor (6):&&&&      floppy: Minor - reduce handle_0e code size when CONFIG_FLOPPY is disabled.&&&&      vga: Minor comment spelling fix.&&&&      Don't recursively evaluate CFLAGS variables.&&&&      Don't use gcc's -combine option.&&&&      Add compile checking phase to build.&&&&      acpi: Use prt_slot() macro to describe irq pins of first PCI device.&&&&&&&&Laszlo Ersek (1):&&&&      maininit(): print machine UUID under seabios version message&&&&&&&&Paolo Bonzini (1):&&&&      acpi: reintroduce LNKS&&&&&&&&Paolo's patch fixes the FreeBSD boot failure.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," savevm.c: cleanup system includes savevm.c suffers from the same problem as some other files.&&&&Some years ago savevm.c was created from vl.c, moving some&&&&code from there into a separate file.  At that time, all&&&&includes were just copied from vl.c to savevm.c, without&&&&checking which ones are needed and which are not.&&&&&&&&But actually most of that stuff is _not_ needed.  More, some&&&&stuff is wrong, for example, *BSD #ifdef'ery around <util.h>&&&&vs <libutil.h> - for one, it fails to build on Debian/kFreebsd.&&&&&&&&Just remove all this.  Maybe there's a possibility to clean&&&&it up further - like removing <windows.h> (and maybe including&&&&winsock.h for htons etc), and maybe it's possible to remove&&&&some internal #includes too, but I didn't check this.&&&&&&&&While at it, remove duplicate #include of qemu/timer.h.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," pseries: Update SLOF for NVRAM support Now that we have implemented PAPR compatible NVRAM interfaces in qemu, this&&&&updates the SLOF firmware to actually initialize and use the NVRAM as a&&&&PAPR guest firmware is expected to do.&&&&&&&&This SLOF update also includes an ugly but useful workaround for a bug in&&&&the SLES11 installer which caused it to fail under KVM.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," usb: tag usb host adapters as not hotpluggable. Hotplugging them simply doesn't work, so tag them accordingly to&&&&avoid users trying and then crashing qemu.&&&&&&&&For xhci there is nothing fundamental which prevents hotplug from&&&&working, we'll ""only"" need a exit() function which cleans up&&&&everything properly.  That isn't for 1.3 though.&&&&&&&&For ehci+uhci+ohci hotplug can't be supported until qemu gains the&&&&capability to hotplug multifunction pci devices.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=879096&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," scsi: do not return short responses for emulated commands The inquiry command, for the case of VPD=1, was returning short&&&&responses; the number of returned bytes was just the number of bytes&&&&in the request, without padding to the specified allocation length&&&&with zero bytes.  This is usually harmless, but it is a violation&&&&of the SCSI specification.&&&&&&&&To fix this, always pad with zero bytes to r->cmd.xfer in&&&&scsi_disk_emulate_command, and return at most r->buflen bytes&&&&(the size of the buffer for command data) rather than at most&&&&buflen bytes (the number of bytes that was filled in).&&&&&&&&Before this patch, ""strace sg_inq -p0x83 /dev/sda"" would report a&&&&non-zero resid value.  After this patch, it reports resid=0.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," lm32: avoid buffer overrun Actually do what the comment says, using pstrcpy NUL-terminate:&&&&strncpy does not always do that.&&&&&&&&Signed-off-by: Jim Meyering <meyering@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," ppc: avoid buffer overrun: use pstrcpy, not strncpy A terminal NUL is required by caller's use of strchr.&&&&It's better not to use strncpy at all, since there is no need&&&&to zero out hundreds of trailing bytes for each iteration.&&&&&&&&Signed-off-by: Jim Meyering <meyering@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, ppc405_uc: Fix buffer overflow Report from smatch:&&&&&&&&ppc405_uc.c:209 dcr_read_pob(12) error: buffer overflow 'pob->besr' 2 <= 2&&&&ppc405_uc.c:232 dcr_write_pob(12) error: buffer overflow 'pob->besr' 2 <= 2&&&&&&&&The old code reads and writes besr[POB0_BESR1 - POB0_BESR0] or besr[2]&&&&which is one too much.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
1," tcg: Sanity check deposit inputs Given these are constants, checking once here means everything&&&&after can assume they're correct.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," scsi-disk: introduce check_lba_range Abstract the test for an out-of-range (starting block, block count)&&&&pair.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-cris: Fix buffer overflow Report from smatch:&&&&&&&&target-cris/translate.c:3464 cpu_dump_state(32) error:&&&& buffer overflow 'env->sregs' 4 <= 255&&&&&&&&sregs is declared 'uint32_t sregs[4][16]', so the first index must be&&&&less than 4 or ARRAY_SIZE(env->sregs).&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&& "
1, arm-semi: don't leak 1KB user string lock buffer upon TARGET_SYS_OPEN Always call unlock_user before returning.&&&&&&&&Signed-off-by: Jim Meyering <meyering@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," scsi: fix warning hw/scsi-bus.c:758: warning: 鈥榵fer鈥?may be used uninitialized in this&&&&function&&&&&&&&Isn't true, but older gcc versions (for example 4.1 as shipped in rhel5)&&&&are not clever enougth to figure, so sprinkle in a default: line to make&&&&them happy.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," qapi: add query-cpu-definitions command (v2) This command attempts to map to the behavior of -cpu ?.  Unfortunately, the&&&&output of this command differs wildly across targets.&&&&&&&&To accommodate this, we use a weak symbol to implement a default version of the&&&&command that fails with a QERR_NOT_SUPPORTED error code.  Targets can then&&&&override and implement this command if it makes sense for them.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," rtl8139: validate rx ring before receiving packets Commit ff71f2e8cacefae99179993204172bc65e4303df prevent the possible&&&&crash during initialization of linux driver by checking the operating&&&&mode.This seems too strict as:&&&&&&&&- the real card could still work in mode other than normal&&&&- some buggy driver who does not set correct opmode after eeprom&&&& access&&&&&&&&So, considering rx ring address were reset to zero (which could be&&&&safely trated as an address not intened to DMA to), in order to&&&&both letting old guest work and preventing the unexpected DMA to&&&&guest, we can forbid packet receiving when rx ring address is zero.&&&&&&&&Tested-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, spapr_vscsi: Error handling fixes We were incorrectly g_free'ing an object that isn't allocated&&&&in one error path and failed to release it completely in another&&&&&&&&This fixes qemu crashes with some cases of IO errors.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
1," Add rate limiting of RTC_CHANGE, BALLOON_CHANGE & WATCHDOG events Allow certain event types to be rate limited to avoid flooding&&&&monitor clients. The monitor_protocol_event() method is changed&&&&such that instead of immediately emitting the event to Monitor&&&&instances, it will call a new monitor_protocol_event_queue()&&&&method.&&&&&&&&This will check to see if the rate limit for the event has been&&&&exceeded, and if so schedule a timer to wakeup at the end of the&&&&rate limit period. If further events arrive before the timer fires,&&&&the previously queued event will be discarded in favour of the new&&&&event. The event will eventually be emitted when the timer fires.&&&&&&&&This logic is applied to RTC_CHANGE, BALLOON_CHANGE & WATCHDOG&&&&events, since the data associated with these events is stateless&&&&&&&& * monitor.c: Add support for rate limiting&&&& * monitor.h: Define monitor_global_init for one-time setup tasks&&&& * vl.c: Invoke monitor_global_init&&&& * trace-events: Add hooks for monitor event tracing&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Acked-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," tcg/ppc: Handle _CALL_DARWIN being undefined on Darwin powerpc-apple-darwin9-gcc-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5577)&&&&does not define _CALL_DARWIN, leading to unexpected behavior w.r.t.&&&&register clobbering and stack frame layout.&&&&&&&&Since _CALL_DARWIN is a reserved identifier, define a custom&&&&TCG_TARGET_CALL_DARWIN based on either _CALL_DARWIN or __APPLE__.&&&&&&&&Signed-off-by: Andreas F?rber <andreas.faerber@web.de>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
1," virtio: order index/descriptor reads virtio has the equivalent of:&&&&&&&&	if (vq->last_avail_index != vring_avail_idx(vq)) {&&&&		read descriptor head at vq->last_avail_index;&&&&	}&&&&&&&&In theory, processor can reorder descriptor head&&&&read to happen speculatively before the index read.&&&&this would trigger the following race:&&&&&&&&	host descriptor head read <- reads invalid head from ring&&&&		guest writes valid descriptor head&&&&		guest writes avail index&&&&	host avail index read <- observes valid index&&&&&&&&as a result host will use an invalid head value.&&&&This was not observed in the field by me but after&&&&the experience with the previous two races&&&&I think it is prudent to address this theoretical race condition.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qcow2: Limit COW to where it's needed This fixes a regression introduced in commit 250196f1. The bug leads to&&&&data corruption, found during an Autotest run with a Fedora 8 guest.&&&&&&&&Consider a write request whose first part is covered by an already&&&&allocated cluster, but additional clusters need to be newly allocated.&&&&When counting the number of clusters to allocate, the qcow2 code would&&&&decide to do COW for all remaining clusters of the write request, even&&&&if some of them are already allocated.&&&&&&&&If during this COW operation another write request is issued that touches&&&&the same cluster, it will still refer to the old cluster. When the COW&&&&completes, the first request will update the L2 table and the second&&&&write request will be lost. Note that the requests need not overlap, it's&&&&enough for them to touch the same cluster.&&&&&&&&This patch ensures that only clusters that really require COW are&&&&considered for allocation. In this case any other request writing to the&&&&same cluster will be an allocating write and gets serialised.&&&&&&&&Reported-by: Marcelo Tosatti <mtosatti@redhat.com>&&&&Tested-by: Marcelo Tosatti <mtosatti@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," tracetool: handle DTrace keywords 'in', 'next', 'self' Language keywords cannot be used as argument names.  The DTrace backend&&&&appends an underscore to the argument name in order to make the argument&&&&name legal.&&&&&&&&This patch adds 'in', 'next', and 'self' keywords to dtrace.py.&&&&&&&&Also drop the unnecessary argument name lstrip() call.  The&&&&Arguments.build() method already ensures there is no space around&&&&argument names.  Furthermore it is misleading to do the lstrip() *after*&&&&checking against keywords because the keyword check would not match if&&&&spaces were in the name.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Reviewed-by: Alon Levy <alevy@redhat.com>&&&&Reviewed-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&& "
1," scsi: force unit access on VERIFY Also DMA data from the host, to avoid that the host reports an&&&&underrun.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," acpi_piix4: Fix PCI hotplug race As Michael Tsirkin demonstrated, current PCI hotplug is vulnerable&&&&to a few races.  The first is a race with other hotplug operations&&&&because we clear the up & down registers at each event.  If a new&&&&event comes before the last is processed, up/down is cleared and&&&&the event is lost.&&&&&&&&To fix this for the down register, we create a life cycle for&&&&the event request that starts with the hot unplug request in&&&&piix4_device_hotplug() and ends when the device is ejected.&&&&This allows us to mask and clear individual bits, preserving them&&&&against races.  For the up register, we have no clear end point&&&&for when the event is finished.  We could modify the BIOS to&&&&acknowledge the bit and clear it, but this creates BIOS compatibiliy&&&&issues without offering a complete solution.  Instead we note that&&&&gratuitous ACPI device checks are not harmful, which allows us to&&&&issue a device check for every slot.  We know which slots are present&&&&and we know which slots are hotpluggable, so we can easily reduce&&&&this to a more manageable set for the guest.&&&&&&&&The other race Michael noted was that an unplug request followed&&&&by reset may also lose the eject notification, which may also&&&&result in the eject request being lost which a subsequent add&&&&or remove.  Once we're in reset, the device is unused and we can&&&&flush the queue of device removals ourselves.  Previously if a&&&&device_del was issued to a guest without ACPI PCI hotplug support,&&&&it was necessary to shutdown the guest to recover the device.&&&&With this, a guest reboot is sufficient.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," pcnet: Properly handle TX requests during Link Fail As long as we have no link and we aren't in internal loopback mode, no&&&&packet must be sent. Instead, LCAR needs to be set in any active TX&&&&descriptor and also CERR in CSR0.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
1," Userspace ARM BE8 support Add support for ARM BE8 userspace binaries.&&&&i.e. big-endian data and little-endian code.&&&&In principle LE8 mode is also possible, but AFAIK has never actually&&&&been implemented/used.&&&&&&&&System emulation doesn't have any useable big-endian board models,&&&&but should in principle work once you fix that.&&&&Dynamic endianness switching requires messing with data accesses,&&&&preferably with TCG cooperation, and is orthogonal to BE8 support.&&&&&&&&Signed-off-by: Paul Brook <paul@codesourcery.com>&&&&[PMM: various changes, mostly as per my suggestions in code review:&&&& * rebase&&&& * use EF_ defines rather than hardcoded constants&&&& * make bswap_code a bool for future VMSTATE macro compatibility&&&& * update comment in cpu.h about TB flags bit field usage&&&& * factor out load-code-and-swap into arm_ld*_code functions and&&&&   get_user_code* macros&&&& * fix stray trailing space at end of line&&&& * added braces in disas.c to satisfy checkpatch&&&&]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," kvm: fill in padding to help valgrind valgrind warns about padding fields which are passed&&&&to vcpu ioctls uninitialized.&&&&This is not an error in practice because kvm ignored padding.&&&&Since the ioctls in question are off data path and&&&&the cost is zero anyway, initialize padding to 0&&&&to suppress these errors.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," Fix vnc memory corruption with width = 1400 vnc assumes that the screen width is a multiple of 16 in several places.&&&&If this is not the case vnc will overrun buffers, corrupt memory, make&&&&qemu crash.&&&&&&&&This is the minimum fix for this bug. It makes sure we don't overrun the&&&&scanline, thereby fixing the segfault.  The rendering is *not* correct&&&&though, there is a black border at the right side of the screen, 8&&&&pixels wide because 1400 % 16 == 8.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, vhost: fix mem_sections memory corruption A memset() used to delete an entry in an array did not take into account&&&&the array element's size.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1," hw/sd.c: Set ILLEGAL_COMMAND for ACMDs in invalid state App commands in an invalid state should set ILLEGAL_COMMAND, not&&&&merely return a zero response.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andrzej Zaborowski <andrew.zaborowski@intel.com>&&&& "
1," block: simplify failure handling for bdrv_aio_multiwrite Now that early failure of bdrv_aio_writev is not possible anymore,&&&&mcb->num_requests can be set before the loop starts.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qemu-common: add QEMU_ALIGN_DOWN() and QEMU_ALIGN_UP() macros Add macros for aligning a number to a multiple, for example:&&&&&&&&QEMU_ALIGN_DOWN(500, 2000) = 0&&&&QEMU_ALIGN_UP(500, 2000) = 2000&&&&&&&&Since ALIGN_UP() is a common macro name use the QEMU_* namespace prefix.&&&&Hopefully this will protect us from included headers that leak something&&&&with a similar name.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," pseries: Check we have a chardev in spapr_vty_init() If qemu is run like:&&&&&&&& qemu-system-ppc64 -nodefaults -device spapr-vty&&&&&&&&We end up in spapr_vty_init() with dev->chardev == NULL. Currently&&&&that leads to a segfault because we unconditionally call&&&&qemu_chr_add_handlers().&&&&&&&&Although we could make that call conditional, I think a spapr-vty&&&&without a chardev is basically useless so fail the init. This is&&&&similar to what the serial code does for example.&&&&&&&&Signed-off-by: Michael Ellerman <michael@ellerman.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, migration: flush migration data to disk. This patch increases robustness when migrating to a file with&&&&two little changes:&&&&&&&& (1) Before closing the migration file handle checks if it happens to be&&&&     a regular file and if so it issues a fsync.  This way the data is&&&&     flushed to disk before qemu sends the migration completed event.&&&& (2) It adds error checking.  In case either fsync or close syscall&&&&     fails pass up the error (and fail migration).&&&&&&&&[ v2: return -errno instead of -1 ]&&&&&&&&Cc: Juan Quintela <quintela@redhat.com>&&&&Cc: Jiri Denemark <jdenemar@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, usb-storage: fix NULL pointer dereference. When a usb packet is canceled we need to check whenever we actually have&&&&a scsi request in flight before we try to cancel it.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," PPC: E500: Add PV spinning code CPUs that are not the boot CPU need to run in spinning code to check if they&&&&should run off to execute and if so where to jump to. This usually happens&&&&by leaving secondary CPUs looping and checking if some variable in memory&&&&changed.&&&&&&&&In an environment like Qemu however we can be more clever. We can just export&&&&the spin table the primary CPU modifies as MMIO region that would event based&&&&wake up the respective secondary CPUs. That saves us quite some cycles while&&&&the secondary CPUs are not up yet.&&&&&&&&So this patch adds a PV device that simply exports the spinning table into the&&&&guest and thus allows the primary CPU to wake up secondary ones.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&&&&&---&&&&&&&&v1 -> v2:&&&&&&&&  - change into MMIO scheme&&&&  - map the secondary NIP instead of 0 1:1&&&&  - only map 64MB for TLB, same as u-boot&&&&  - prepare code for 64-bit spinnings&&&&&&&&v2 -> v3:&&&&&&&&  - remove r6&&&&  - set MAS2_M&&&&  - map EA 0&&&&  - use second TLB1 entry&&&&&&&&v3 -> v4:&&&&&&&&  - change to memoryops&&&&&&&&v4 -> v5:&&&&&&&&  - fix endianness bugs&&&&&&&&v5 -> v6:&&&&&&&&  - add header&&&& "
1," scsi: Sanitize command definitions Sanitize SCSI command definitions.&&&&Add _10 suffix to READ_CAPACITY, WRITE_VERIFY, VERIFY, READ_LONG,&&&&WRITE_LONG, and WRITE_SAME.&&&&Add new command definitions for LOCATE_10, UNMAP, VARLENGTH_CDB,&&&&WRITE_FILEMARKS_16, EXTENDED_COPY, ATA_PASSTHROUGH, ACCESS_CONTROL_IN,&&&&ACCESS_CONTROL_OUT, COMPARE_AND_WRITE, VERIFY_16, SYNCHRONIZE_CACHE_16,&&&&LOCATE_16, ERASE_16, WRITE_LONG_16, LOAD_UNLOAD, VERIFY_12.&&&&Remove invalid definition of WRITE_LONG_2.&&&&&&&&Signed-off-by: Hannes Reinecke <hare@suse.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," target-i386: Make x86 mfence and lfence illegal without SSE2 While trying to use qemu -cpu pentium3 to test for incorrect uses of certain&&&&SSE2 instructions, I found that QEMU allowed the mfence and lfence&&&&instructions to be executed even though Pentium 3 doesn't support them.&&&&&&&&According to the processor specs (and experience on a real Pentium 3), these&&&&instructions are only available with SSE2, but QEMU is checking for SSE.  The&&&&check for the related sfence instruction is correct (it works with SSE).&&&&&&&&This trival patch fixes the test.&&&&&&&&Signed-off-by: Martin Simmons <martin@lispworks.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1, scsi: Update sense code handling The SCSI spec has a quite detailed list of sense codes available.&&&&It even mandates the use of specific ones for some failure cases.&&&&The current implementation just has one type of generic error&&&&which is actually a violation of the spec in certain cases.&&&&This patch introduces various predefined sense codes to have the&&&&sense code reporting more in line with the spec.&&&&&&&&On top of Hannes's patch I fixed the reply to REQUEST SENSE commands&&&&with DESC=0 and a small (<18) length.&&&&&&&&Signed-off-by: Hannes Reinecke <hare@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Christoph Hellwig <hch@lst.de>&&&& 
1," scsi: reference-count requests With the next patch, a device may hold SCSIRequest for an indefinite&&&&time.  Split a rather big patch, and protect against access errors,&&&&by reference counting them.&&&&&&&&There is some ugliness in scsi_send_command implementation due to&&&&the need to unref the request when it fails.  This will go away&&&&with the next patches, which move the unref'ing to the devices.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Christoph Hellwig <hch@lst.de>&&&& "
1," hw/virtio-9p-local.c: Remove unnecessary null char in symlink file This patch removes the addition of null char in symlink file&&&&which is being appended to file in case of mapped security model.&&&&Without this patch, the extra null char causes LTP testcase lstat03&&&&to fail and hence this fix is required.&&&&&&&&Signed-off-by: Venkateswararao Jujjuri <jvrao@linux.vnet.ibm.com>&&&& "
1," target-arm: Handle UNDEF cases for Neon ""2 regs and shift"" insns Correctly handle all the UNDEF cases for Neon instructions of the&&&&""2 registers and shift"" form, and make sure that we check for these&&&&cases early enough not to leak TCG temporaries.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," ide: Remove unneeded null pointer check With bm == NULL, other code in the same function would crash.&&&&&&&&This bug was reported by cppcheck:&&&&hw/ide/pci.c:280: error: Possible null pointer dereference: bm&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, kvm: x86: Prevent sign extension of DR7 in guest debugging mode This unbreaks guest debugging when the 4th hardware breakpoint used for&&&&guest debugging is a watchpoint of 4 or 8 byte lenght. The 31st bit of&&&&DR7 is set in that case and used to cause a sign extension to the high&&&&word which was breaking the guest state (vm entry failure).&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& 
1," Add ""broadcast"" option for mce command When the following test case is injected with mce command, maybe user could not&&&&get the expected result.&&&&    DATA&&&&               command cpu bank status             mcg_status  addr   misc&&&&        (qemu) mce     1   1    0xbd00000000000000 0x05        0x1234 0x8c&&&&&&&&    Expected Result&&&&           panic type: ""Fatal Machine check""&&&&&&&&That is because each mce command can only inject the given cpu and could not&&&&inject mce interrupt to other cpus. So user will get the following result:&&&&    panic type: ""Fatal machine check on current CPU""&&&&&&&&""broadcast"" option is used for injecting dummy data into other cpus. Injecting&&&&mce with this option the expected result could be gotten.&&&&&&&&Usage:&&&&    Broadcast[on]&&&&           command broadcast cpu bank status             mcg_status  addr   misc&&&&    (qemu) mce     -b        1   1    0xbd00000000000000 0x05        0x1234 0x8c&&&&&&&&    Broadcast[off]&&&&           command cpu bank status             mcg_status  addr   misc&&&&    (qemu) mce     1   1    0xbd00000000000000 0x05        0x1234 0x8c&&&&&&&&Signed-off-by: Jin Dongming <jin.dongming@np.css.fujitsu.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
1, qemu-img: Fail creation if backing format is invalid The qemu-img create command should check the backing format to ensure&&&&only image files with valid backing formats are created.  By checking in&&&&qemu-img.c we can print a useful error message.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," e1000: Fix TCP checksum overflow with TSO When adding the length to the pseudo header, we're not properly&&&&accounting for overflow.&&&&&&&&From: Mark Wu <dwu@redhat.com>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," vmware_vga: Add checks to deal with non-atomic fifo writes. Janne Huttunen noticed that the FIFO end pointer is updated by the&&&&guest after writing each word to the FIFO, at least the X.org driver&&&&which is open does this.  This means that there's no way for the&&&&host to know if the guest is in the middle a write operation.  Qemu&&&&thus needs to read the beginning of the command up to when it's able&&&&to tell how many words are expected for the given command.  It will&&&&abort reading and rewind the FIFO if there aren't enough words yet,&&&&this should be relatively rare but it is suspected to have been the&&&&cause of the occasional FIFO overrun that killed the display.&&&& "
1," qed: Consistency check support This patch adds support for the qemu-img check command.  It also&&&&introduces a dirty bit in the qed header to mark modified images as&&&&needing a check.  This bit is cleared when the image file is closed&&&&cleanly.&&&&&&&&If an image file is opened and it has the dirty bit set, a consistency&&&&check will run and try to fix corrupted table offsets.  These&&&&corruptions may occur if there is power loss while an allocating write&&&&is performed.  Once the image is fixed it opens as normal again.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," virtio-9p: Add SM_NONE security model This is equivalent to SM_PASSTHROUGH security model.&&&&The only exception is, failure of privilige operation like chown&&&&are ignored. This makes a passthrough like security model usable&&&&for people who runs kvm as non root&&&&&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& "
1," scsi-disk: add some optional scsi commands I use a legacy OS which depends on some optional SCSI commands.&&&&In fact this implementation does nothing special, but provides minimum&&&&support for the following commands:&&&&&&&&REZERO UNIT&&&&WRITE AND VERIFY(10)&&&&WRITE AND VERIFY(12)&&&&WRITE AND VERIFY(16)&&&&MODE SELECT(6)&&&&MODE SELECT(10)&&&&SEEK(6)&&&&SEEK(10)&&&&&&&&Signed-off-by: Bernhard Kohl <bernhard.kohl@nsn.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," savevm: Survive hot-unplug of snapshot device savevm.c keeps a pointer to the snapshot block device.  If you manage&&&&to get that device deleted, the pointer dangles, and the next snapshot&&&&operation will crash & burn.  Unplugging a guest device that uses it&&&&does the trick:&&&&&&&&    $ MALLOC_PERTURB_=234 qemu-system-x86_64 [...]&&&&    QEMU 0.12.50 monitor - type 'help' for more information&&&&    (qemu) info snapshots&&&&    No available block device supports snapshots&&&&    (qemu) drive_add auto if=none,file=tmp.qcow2&&&&    OK&&&&    (qemu) device_add usb-storage,id=foo,drive=none1&&&&    (qemu) info snapshots&&&&    Snapshot devices: none1&&&&    Snapshot list (from none1):&&&&    ID        TAG                 VM SIZE                DATE       VM CLOCK&&&&    (qemu) device_del foo&&&&    (qemu) info snapshots&&&&    Snapshot devices:&&&&    Segmentation fault (core dumped)&&&&&&&&Move management of that pointer to block.c, and zap it when the device&&&&it points becomes unusable.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," net: delete QemuOpts when net_client_init() fails. This fixes the following scenario using QMP.&&&&&&&&First, put a bogus argument ""foo"" to ""type"", which results in an error.&&&&{""execute"": ""netdev_add"", ""arguments"": { ""type"": ""foo"", ""id"": ""netdev1"" } }&&&&Then, call it again with correct argument ""user"".&&&&{""execute"": ""netdev_add"", ""arguments"": { ""type"": ""user"", ""id"": ""netdev1"" } }&&&&This results in ""DuplicatedId"" error.&&&&&&&&Because the first command was invalid, it should be able to reuse the&&&&same ""id"", and the second command should work.&&&&&&&&Reported-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Yoshiaki Tamura <tamura.yoshiaki@lab.ntt.co.jp>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1, qbus: fix memory leak in qbus_free() BusState::name is allocated in qbus_create_inplace().&&&&So it should be freed by qbus_free().&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," loadvm: improve tests before bdrv_snapshot_goto() This patch improves the resilience of the load_vmstate() function, doing&&&&further and better ordered tests.&&&&&&&&In load_vmstate(), if there is any error on bdrv_snapshot_goto(), except if the&&&&error is on VM state device, load_vmstate() will return zero and the VM will be&&&&started with major corruption chances.&&&&&&&&The current process:&&&&- test if there is any writable device without snapshot support&&&&    - if exists return -error&&&&- get the device that saves the VM state, possible return -error but unlikely&&&&because it was tested earlier&&&&- flush I/O&&&&- run bdrv_snapshot_goto() on devices&&&&    - if fails, give an warning and goes to the next (not good!)&&&&    - if fails on the VM state device, return zero (not good!)&&&&- check if the requested snapshot exists on the device that saves the VM state&&&&and the state is not zero&&&&    - if fails return -error&&&&- open the file with the VM state&&&&    - if fails return -error&&&&- load the VM state&&&&    - if fails return -error&&&&- return zero&&&&&&&&New behavior:&&&&- get the device that saves the VM state&&&&    - if fails return -error&&&&- check if the requested snapshot exists on the device that saves the VM state&&&&and the state is not zero&&&&    - if fails return -error&&&&- test if there is any writable device without snapshot support&&&&    - if exists return -error&&&&- test if the devices with snapshot support have the requested snapshot&&&&    - if anyone fails, return -error&&&&- flush I/O&&&&- run snapshot_goto() on devices&&&&    - if anyone fails, return -error&&&&- open the file with the VM state&&&&    - if fails return -error&&&&- load the VM state&&&&    - if fails return -error&&&&- return zero&&&&&&&&do_loadvm must not call vm_start if any error has occurred in load_vmstate.&&&&&&&&Signed-off-by: Miguel Di Ciurcio Filho <miguel.filho@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qcow2: Fix qemu-img check segfault on corrupted images With corrupted images, we can easily get an cluster index that exceeds the&&&&array size of the temporary refcount table.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Fix overflow in i440fx_init() The ram_size parameter can be larger than an int, so it may be truncated.&&&&&&&&Fix by using the correct type.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," Cleanup: bdrv_open() no need to shift total_size just to shift back. In bdrv_open() there is no need to shift total_size >> 9 just to&&&&multiply it by 512 again just a few lines later, since this is the&&&&only place the variable is used.&&&&&&&&Mask with BDRV_SECTOR_MASK to protect against case where we are&&&&passed a corrupted image.&&&&&&&&Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, sparc64: fix TT_WOTHER value - fix off by one error in spill trap number bit for other window (must be bit 5)&&&&- fixes invalid instruction issue with HelenOS&&&&&&&&Signed-off-by: Igor V. Kovalenko <igor.v.kovalenko@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1, sparc64: fix build with older gccs Fix errors missed in 2065061ede22d401aae2ce995c3af54db9d28639:&&&& CC    sparc64-softmmu/helper.o&&&&cc1: warnings being treated as errors&&&&/src/qemu/target-sparc/helper.c: In function 'get_physical_address':&&&&/src/qemu/target-sparc/helper.c:426: warning: 'context' may be used uninitialized in this function&&&&/src/qemu/target-sparc/helper.c:426: note: 'context' was declared here&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," KVM: Rework VCPU state writeback API This grand cleanup drops all reset and vmsave/load related&&&&synchronization points in favor of four(!) generic hooks:&&&&&&&&- cpu_synchronize_all_states in qemu_savevm_state_complete&&&&  (initial sync from kernel before vmsave)&&&&- cpu_synchronize_all_post_init in qemu_loadvm_state&&&&  (writeback after vmload)&&&&- cpu_synchronize_all_post_init in main after machine init&&&&- cpu_synchronize_all_post_reset in qemu_system_reset&&&&  (writeback after system reset)&&&&&&&&These writeback points + the existing one of VCPU exec after&&&&cpu_synchronize_state map on three levels of writeback:&&&&&&&&- KVM_PUT_RUNTIME_STATE (during runtime, other VCPUs continue to run)&&&&- KVM_PUT_RESET_STATE   (on synchronous system reset, all VCPUs stopped)&&&&- KVM_PUT_FULL_STATE    (on init or vmload, all VCPUs stopped as well)&&&&&&&&This level is passed to the arch-specific VCPU state writing function&&&&that will decide which concrete substates need to be written. That way,&&&&no writer of load, save or reset functions that interact with in-kernel&&&&KVM states will ever have to worry about synchronization again. That&&&&also means that a lot of reasons for races, segfaults and deadlocks are&&&&eliminated.&&&&&&&&cpu_synchronize_state remains untouched, just as Anthony suggested. We&&&&continue to need it before reading or writing of VCPU states that are&&&&also tracked by in-kernel KVM subsystems.&&&&&&&&Consequently, this patch removes many cpu_synchronize_state calls that&&&&are now redundant, just like remaining explicit register syncs.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
1, virtio-serial: Handle scatter-gather buffers for control messages Current control messages are small enough to not be split into multiple&&&&buffers but we could run into such a situation in the future or a&&&&malicious guest could cause such a situation.&&&&&&&&So handle the entire iov request for control messages.&&&&&&&&Also ensure the size of the control request is >= what we expect&&&&otherwise we risk accessing memory that we don't own.&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&CC: Avi Kivity <avi@redhat.com>&&&&Reported-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," Make cpu_get_real_ticks use mfspr PowerPC CPUs have had two ways to read the time base for quite some time now.&&&&They provide it using the mfspr instruction or - if a special bit is set in&&&&that opcode - using mftb. For timekeeping we're currently using mftb.&&&&&&&&While trying to get Qemu up and running on an e500v2 system, I stumbled over&&&&the CPU not supporting mftbu. It just throws an illegal instruction trap.&&&&&&&&So let's read the SPR values instead. All PPC CPUs should support them anyways.&&&&&&&&I tested this patch on an e500v2 system where it makes qemu work and on my 970MP&&&&system with 32-bit user space where everything still works with this patch&&&&applied.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
1," qemu/msix: fix table access issues Fixes a couple of issues with msix table access:&&&&- With misbehaving guests, misaligned 4 byte access could overflow&&&&  msix table and cause qemu to segfault. Since PCI spec requires&&&&  host to only issue dword-aligned accesses, as a fix,&&&&  it's enough to mask the address low bits.&&&&- Tables use pci format, not native format, and so&&&&  we must use pci_[sg]et_long on read/write.&&&&&&&&Reported-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, pci-hotplug: initialize dinfo to NULL in pci_device_hot_add Suppress the following compiler warning emitted by at least gcc version 4.2.1 (SUSE Linux)&&&&and gcc version 3.4.5 (mingw32 special):&&&&&&&&hw/pci-hotplug.c: In function 'pci_device_hot_add':&&&&hw/pci-hotplug.c:102: warning: 'dinfo' may be used uninitialized in this function&&&&hw/pci-hotplug.c:102: note: 'dinfo' was declared here&&&&&&&&Signed-off-by: Sebastian Herbszt <herbszt@gmx.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," vga: do not resize the screen on hw_invalidate Hi all,&&&&currently vga always resizes the screen when vga_hw_invalidate is called&&&&while this is not required and all the other graphic emulators don't.&&&&This patch fixes it, making vga invalidate behaviour consistent with the&&&&other emulated devices.&&&&&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Message-Id: &&&& "
1," gdbstub: x86: Support for setting segment registers This allows to set segment registers via gdb also in system emulation&&&&mode. Basic sanity checks are applied and nothing is changed if they&&&&fail. But screwing up the target via this interface will never be&&&&complicated, so I avoided being too paranoid here.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Fix output of uninitialized strings Commit ffad4116b96e29e0fbe892806f97c0a6c903d30d removed the ""scratch buffer""&&&&from check_params, but didn't care for the error messages which actually&&&&included this string to tell the user which option was wrong. Now this string&&&&is uninitialized, so this patch removes it from the message.&&&&&&&&This means that the user is only told the whole parameter string and has to&&&&pick the wrong option by himself as the callers of check_params can't know this&&&&value any more. An alternative approach would be to revert that commit and do&&&&whatever is needed to fix the original problem without changing check_params.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," kvm: Add sanity checks to slot management (Jan Kiszka) Fail loudly if we run out of memory slot.&&&&&&&&Make sure that dirty log start/stop works with consistent memory regions&&&&by reporting invalid parameters. This reveals several inconsistencies in&&&&the vga code, patch to fix them follows later in this series.&&&&&&&&And, for simplicity reasons, also catch and report unaligned memory&&&&regions passed to kvm_set_phys_mem (KVM works on page basis).&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7138 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," chroot and change user support (Nolan) Resent with fixed formatting.&&&&&&&&This patch adds two new command line options:&&&& -chroot <dir>&&&& -runas <user>&&&&&&&&This is useful for running qemu as an unprivileged user in a chroot&&&&jail.  To avoid having to populate the jail, chrooting happens right&&&&before the start of guest execution.&&&&&&&&Signed-off-by: Nolan Leake <nolan@sigbus.net>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6652 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Fix cpuid KVM crash on i386 (Lubomir Rintel) Cpuid should return into vec, not overwrite past address in count.&&&&Changeset 6565 broke this.&&&&&&&&Signed-off-by: Lubomir Rintel <lkundrak@v3.sk>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6689 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," char-mux: Use separate input buffers (Jan Kiszka) Currently, the intermediate input buffer of mux'ed character devices&&&&records data across all sub-devices. This has the side effect that we&&&&easily leak data recorded over one sub-devices to another once we switch&&&&the focus. Avoid data loss and confusion by defining exclusive buffers.&&&&&&&&Note: In contrast to the original author's claim, the buffering concept&&&&still breaks down when the fifo of the currently active sub-device is&&&&full. As we cannot accept futher data from this point on without risking&&&&to loose it, we will also miss escape sequences, just like without all&&&&that buffering. In short: There is no reliable escape sequence handling&&&&without infinite buffers or the risk of loosing some data.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6701 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, hpet config mask fix I discovered a bug in the hpet code that caused Windows to boot without&&&&hpet. The config mask I was using was preventing the guest from placing&&&&the hpet into 32 bit mode.&&&&&&&&(Beth Kon)&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6357 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Handle SDL grabs failing (Mark McLoughlin) If a X window is not viewable, XGrabPointer() fails and&&&&returns GrabNotViewable. SDL's X backend currently handles&&&&this by retrying the grab until the window becomes viewable&&&&again.&&&&&&&&This means e.g. if you Ctrl-Alt-RightArrow to switch&&&&workspaces, QEMU tries to grab, SDL blocks because the&&&&window isn't viewable and your guest stops executing until&&&&you switch back to that workspace again.&&&&&&&&See this Fedora bug for the gory details:&&&&&&&&  https://bugzilla.redhat.com/480065&&&&&&&&Some SDL backends will return SDL_GRAB_OFF from&&&&SDL_WM_GrabInput(), so the fix is to make the X backend do&&&&this if the grab fails.&&&&&&&&The only side-effect in QEMU is that if SDL_WM_GrabInput()&&&&fails we still change the window title to indicate that it's&&&&grabbed, when in fact it's not. This patch fixes that minor&&&&issue.&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6325 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Fix race in POSIX AIO emulation (Jan Kiszka) When we cancel an AIO request that is already being processed by&&&&aio_thread, qemu_paio_cancel should return QEMU_PAIO_NOTCANCELED as long&&&&as aio_thread isn't done with this request. But as the latter currently&&&&updates aiocb->ret after every block of the request, we may report&&&&QEMU_PAIO_ALLDONE too early.&&&&&&&&Futhermore, in case some zero-length request should have been queued,&&&&aiocb->ret is never set to != -EINPROGRESS and callers like&&&&raw_aio_cancel could get stuck in an endless loop.&&&&&&&&Fix those issues by updating aiocb->ret _after_ the request has been&&&&fully processed. This also simplifies the locking.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6278 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," target-i386: fix CVE-2007-1322 The icebp instruction can be abused to terminate the emulation,&&&&resulting in denial of service.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5921 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, CRIS: Plug more temp leaks. Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5560 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," x86: Issue reset on triple faults (Jan Kiszka) As discussed a few times on this list: A triple fault causes a system&&&&reset on x86, and some guests make use of this (e.g. 386BSD). To keep&&&&the chance of tracing unexpected resets, log them if CPU_LOG_RESET is&&&&set.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6453 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Fix IO performance regression in sparc Replace signalfd with signal handler/pipe.  There is no way to interrupt&&&&the CPU execution loop when a file descriptor becomes readable.  This&&&&results in a large performance regression in sparc emulation during&&&&bootup.&&&&   &&&&This patch switches us to signal handler/pipe which was originally&&&&suggested by Ian Jackson.  The signal handler lets us interrupt the&&&&CPU emulation loop while the write to a pipe lets us avoid the&&&&select/signal race condition.&&&&    &&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5451 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," only check RCTL_EN in e1000_can_receive() e1000_receive() has code to raise a receive overflow interrupt when the receive&&&&buffer head and tail match. However, with the present implementation of&&&&e1000_can_receive(), this code is unreachable -- and etherboot breaks as a&&&&result. &&&&&&&&Signed-off-by: Charles Duffy <charles_duffy@messageone.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4987 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Fix block-vmdk.c:vmdk_close() use-after-free, by Ed Maste. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4526 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Fix memory corruption reported by Julian Seward   (still more bugs to fix in PreP emulation). git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3390 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Fix reproductible crash: call cpu_loop_exit from micro-op, not from helper.c git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3311 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, memset string pages to zero to avoid putting random data on the stack  that may make some program crash at startup. Fix unsigned long / target_ulong confusion (more to do). Fix missing g2h macros. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3249 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Update Sparc32 and Sparc64 OpenBIOS image to SVN revision 157. Changes: r150: Try to fix system reset for SMP and SS-10 cases r151: Fix obp_dumb_memalloc r152: Fix mapping more than 2G memory r153: Get a real memory allocator for Sparc, based on PPC ofmem r154: Update totavail when memory is allocated by dumb memory allocator r155: Fix pop_fstr_copy memory leaks - console one prevented Debian 3.1r1 from installing in console=prom mode - fixing this also needed the real malloc/free r156: Hack for building on CIFS directory r157: Allow boot start PC to be different from virtual location (boot mode) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3029 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, fd leak fix (Igor Kovalenko) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2118 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, mem leak fixes git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2102 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Avoid crash if -redir or -smb used without -net user. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1760 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, target/m68k: fix TCG variable double free t64 is also unconditionally freed after the switch () { ... }&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Reviewed-by: Thomas Huth <huth@tuxfamily.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-Id: <20180119114444.7590-1-laurent@vivier.eu>&&&& 
1," sdhci: fix a NULL pointer dereference due to uninitialized AddresSpace object missed in 60765b6ceeb4.&&&&&&&&  Thread 1 ""qemu-system-aarch64"" received signal SIGSEGV, Segmentation fault.&&&&  address_space_init (as=0x0, root=0x55555726e410, name=name@entry=0x555555e3f0a7 ""sdhci-dma"") at memory.c:3050&&&&  3050	    as->root = root;&&&&  (gdb) bt&&&&  #0  address_space_init (as=0x0, root=0x55555726e410, name=name@entry=0x555555e3f0a7 ""sdhci-dma"") at memory.c:3050&&&&  #1  0x0000555555af62c3 in sdhci_sysbus_realize (dev=<optimized out>, errp=0x7fff7f931150) at hw/sd/sdhci.c:1564&&&&  #2  0x00005555558b25e5 in zynqmp_sdhci_realize (dev=0x555557051520, errp=0x7fff7f931150) at hw/sd/zynqmp-sdhci.c:151&&&&  #3  0x0000555555a2e7f3 in device_set_realized (obj=0x555557051520, value=<optimized out>, errp=0x7fff7f931270) at hw/core/qdev.c:966&&&&  #4  0x0000555555ba3f74 in property_set_bool (obj=0x555557051520, v=<optimized out>, name=<optimized out>, opaque=0x555556e04a20,&&&&      errp=0x7fff7f931270) at qom/object.c:1906&&&&  #5  0x0000555555ba51f4 in object_property_set (obj=obj@entry=0x555557051520, v=v@entry=0x5555576dbd60,&&&&      name=name@entry=0x555555dd6306 ""realized"", errp=errp@entry=0x7fff7f931270) at qom/object.c:1102&&&&&&&&Suggested-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-id: 20180123132051.24448-1-f4bug@amsat.org&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, disas/s390: fix global-buffer-overflow Spotted thanks to ASAN:&&&&&&&&==25226==ERROR: AddressSanitizer: global-buffer-overflow on address 0x556715a1f120 at pc 0x556714b6f6b1 bp 0x7ffcdfac1360 sp 0x7ffcdfac1350&&&&READ of size 1 at 0x556715a1f120 thread T0&&&&    #0 0x556714b6f6b0 in init_disasm /home/elmarco/src/qemu/disas/s390.c:219&&&&    #1 0x556714b6fa6a in print_insn_s390 /home/elmarco/src/qemu/disas/s390.c:294&&&&    #2 0x55671484d031 in monitor_disas /home/elmarco/src/qemu/disas.c:635&&&&    #3 0x556714862ec0 in memory_dump /home/elmarco/src/qemu/monitor.c:1324&&&&    #4 0x55671486342a in hmp_memory_dump /home/elmarco/src/qemu/monitor.c:1418&&&&    #5 0x5567148670be in handle_hmp_command /home/elmarco/src/qemu/monitor.c:3109&&&&    #6 0x5567148674ed in qmp_human_monitor_command /home/elmarco/src/qemu/monitor.c:613&&&&    #7 0x556714b00918 in qmp_marshal_human_monitor_command /home/elmarco/src/qemu/build/qmp-marshal.c:1704&&&&    #8 0x556715138a3e in do_qmp_dispatch /home/elmarco/src/qemu/qapi/qmp-dispatch.c:104&&&&    #9 0x556715138f83 in qmp_dispatch /home/elmarco/src/qemu/qapi/qmp-dispatch.c:131&&&&    #10 0x55671485cf88 in handle_qmp_command /home/elmarco/src/qemu/monitor.c:3839&&&&    #11 0x55671514e80b in json_message_process_token /home/elmarco/src/qemu/qobject/json-streamer.c:105&&&&    #12 0x5567151bf2dc in json_lexer_feed_char /home/elmarco/src/qemu/qobject/json-lexer.c:323&&&&    #13 0x5567151bf827 in json_lexer_feed /home/elmarco/src/qemu/qobject/json-lexer.c:373&&&&    #14 0x55671514ee62 in json_message_parser_feed /home/elmarco/src/qemu/qobject/json-streamer.c:124&&&&    #15 0x556714854b1f in monitor_qmp_read /home/elmarco/src/qemu/monitor.c:3881&&&&    #16 0x556715045440 in qemu_chr_be_write_impl /home/elmarco/src/qemu/chardev/char.c:172&&&&    #17 0x556715047184 in qemu_chr_be_write /home/elmarco/src/qemu/chardev/char.c:184&&&&    #18 0x55671505a8e6 in tcp_chr_read /home/elmarco/src/qemu/chardev/char-socket.c:440&&&&    #19 0x5567150943c3 in qio_channel_fd_source_dispatch /home/elmarco/src/qemu/io/channel-watch.c:84&&&&    #20 0x7fb90292b90b in g_main_dispatch ../glib/gmain.c:3182&&&&    #21 0x7fb90292c7ac in g_main_context_dispatch ../glib/gmain.c:3847&&&&    #22 0x556715162eca in glib_pollfds_poll /home/elmarco/src/qemu/util/main-loop.c:214&&&&    #23 0x556715163001 in os_host_main_loop_wait /home/elmarco/src/qemu/util/main-loop.c:261&&&&    #24 0x5567151631fa in main_loop_wait /home/elmarco/src/qemu/util/main-loop.c:515&&&&    #25 0x556714ad6d3b in main_loop /home/elmarco/src/qemu/vl.c:1950&&&&    #26 0x556714ade329 in main /home/elmarco/src/qemu/vl.c:4865&&&&    #27 0x7fb8fe5c9009 in __libc_start_main (/lib64/libc.so.6+0x21009)&&&&    #28 0x5567147af4d9 in _start (/home/elmarco/src/qemu/build/s390x-softmmu/qemu-system-s390x+0xf674d9)&&&&&&&&0x556715a1f120 is located 32 bytes to the left of global variable 'char_hci_type_info' defined in '/home/elmarco/src/qemu/hw/bt/hci-csr.c:493:23' (0x556715a1f140) of size 104&&&&0x556715a1f120 is located 8 bytes to the right of global variable 's390_opcodes' defined in '/home/elmarco/src/qemu/disas/s390.c:860:33' (0x556715a15280) of size 40600&&&&&&&&This fix is based on Andreas Arnez <arnez@linux.vnet.ibm.com> upstream&&&&commit:&&&&https://sourceware.org/git/gitweb.cgi?p=binutils-gdb.git;a=commitdiff;h=9ace48f3d7d80ce09c5df60cccb433470410b11b&&&&&&&&2014-08-19  Andreas Arnez  <arnez@linux.vnet.ibm.com>&&&&&&&&       * s390-dis.c (init_disasm): Simplify initialization of&&&&       opc_index[].  This also fixes an access after the last element&&&&       of s390_opcodes[].&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20180104160523.22995-19-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," block/nbd: fix segmentation fault when .desc is not null-terminated The find_desc_by_name() from util/qemu-option.c relies on the .name not being&&&&NULL to call strcmp(). This check becomes unsafe when the list is not&&&&NULL-terminated, which is the case of nbd_runtime_opts in block/nbd.c, and can&&&&result in segmentation fault when strcmp() tries to access an invalid memory:&&&&&&&&    #0 0x00007fff8c75f7d4 in __strcmp_power9 () from /lib64/libc.so.6&&&&    #1 0x00000000102d3ec8 in find_desc_by_name (desc=0x1036d6f0, name=0x28e46670 ""server.path"") at util/qemu-option.c:166&&&&    #2 0x00000000102d93e0 in qemu_opts_absorb_qdict (opts=0x28e47a80, qdict=0x28e469a0, errp=0x7fffec247c98) at util/qemu-option.c:1026&&&&    #3 0x000000001012a2e4 in nbd_open (bs=0x28e42290, options=0x28e469a0, flags=24578, errp=0x7fffec247d80) at block/nbd.c:406&&&&    #4 0x00000000100144e8 in bdrv_open_driver (bs=0x28e42290, drv=0x1036e070 <bdrv_nbd_unix>, node_name=0x0, options=0x28e469a0, open_flags=24578, errp=0x7fffec247f50) at block.c:1135&&&&    #5 0x0000000010015b04 in bdrv_open_common (bs=0x28e42290, file=0x0, options=0x28e469a0, errp=0x7fffec247f50) at block.c:1395&&&&&&&&>From gdb, the desc[i].name was not NULL and resulted in strcmp() accessing an&&&&invalid memory:&&&&&&&&    >>> p desc[5]&&&&    $8 = {&&&&      name = 0x1037f098 ""R27A"",&&&&      type = 1561964883,&&&&      help = 0xc0bbb23e <error: Cannot access memory at address 0xc0bbb23e>,&&&&      def_value_str = 0x2 <error: Cannot access memory at address 0x2>&&&&    }&&&&    >>> p desc[6]&&&&    $9 = {&&&&      name = 0x103dac78 <__gcov0.do_qemu_init_bdrv_nbd_init> ""\001"",&&&&      type = 272101528,&&&&      help = 0x29ec0b754403e31f <error: Cannot access memory at address 0x29ec0b754403e31f>,&&&&      def_value_str = 0x81f343b9 <error: Cannot access memory at address 0x81f343b9>&&&&    }&&&&&&&&This patch fixes the segmentation fault in strcmp() by adding a NULL element at&&&&the end of nbd_runtime_opts.desc list, which is the common practice to most of&&&&other structs like runtime_opts in block/null.c. Thus, the desc[i].name != NULL&&&&check becomes safe because it will not evaluate to true when .desc list reached&&&&its end.&&&&&&&&Reported-by: R. Nageswara Sastry <nasastry@in.ibm.com>&&&&Buglink: https://bugs.launchpad.net/qemu/+bug/1727259&&&&Signed-off-by: Murilo Opsfelder Araujo <muriloo@linux.vnet.ibm.com>&&&&Message-Id: <20180105133241.14141-2-muriloo@linux.vnet.ibm.com>&&&&CC: qemu-stable@nongnu.org&&&&Fixes: 7ccc44fd7d1dfa62c4d6f3a680df809d6e7068ce&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&& "
1," nbd/server: Add helper functions for parsing option payload Rather than making every callsite perform length sanity checks&&&&and error reporting, add the helper functions nbd_opt_read()&&&&and nbd_opt_drop() that use the length stored in the client&&&&struct; also add an assertion that optlen is 0 before any&&&&option (ie. any previous option was fully handled), complementing&&&&the assertion added in an earlier patch that optlen is 0 after&&&&all negotiation completes.&&&&&&&&Note that the call in nbd_negotiate_handle_export_name() does&&&&not use the new helper (in part because the server cannot&&&&reply to NBD_OPT_EXPORT_NAME - it either succeeds or the&&&&connection drops).&&&&&&&&Based on patches by Vladimir Sementsov-Ogievskiy.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Message-Id: <20180110230825.18321-6-eblake@redhat.com>&&&& "
1," pci: deassert intx when pci device unrealize If a pci device is not reset by VM (by writing into config space)&&&&and unplugged by VM, after that when VM reboots, qemu may assert:&&&&pcibus_reset: Assertion `bus->irq_count[i] == 0' failed&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: herongguang <herongguang.he@huawei.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," vhost-scsi: add missing virtqueue_size parameter Commit 5c0919d02066 (""virtio-scsi: Add virtqueue_size parameter allowing&&&&virtqueue size to be set."") introduced a new parameter to virtio-scsi.&&&&Later, commit 920036106044 (""vhost-user-scsi: add missing virtqueue_size&&&&param"") added that parameter to the new vhost-user-scsi interface but&&&&neglected the existing vhost-scsi interface it was built on.&&&&&&&&Apply the same change to vhost-scsi, so that we can boot a guest with&&&&a device defined.  This also avoids crashing a guest when hotplugging&&&&a vhost-scsi device.&&&&&&&&Signed-off-by: Eric Farman <farman@linux.vnet.ibm.com>&&&&Message-id: 20171201151538.6844-2-farman@linux.vnet.ibm.com&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," pc: fix crash on attempted cpu unplug when qemu is started with '-no-acpi' CLI option, an attempt&&&&to unplug a CPU using device_del results in null pointer&&&&dereference at:&&&&&&&&  #0 object_get_class&&&&  #1 pc_machine_device_unplug_request_cb&&&&  #2 qmp_marshal_device_del&&&&&&&&which is caused by pcms->acpi_dev == NULL due to ACPI support&&&&being disabled.&&&&&&&&Considering that ACPI support is necessary for unplug to work,&&&&check that it's enabled and fail unplug request gracefully&&&&if no acpi device were found.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qcow2: fix image corruption after committing qcow2 image into base After committing the qcow2 image contents into the base image, qemu-img&&&&will call bdrv_make_empty to drop the payload in the layered image.&&&&&&&&When this is done for qcow2 images, it blows away the LUKS encryption&&&&header, making the resulting image unusable. There are two codepaths&&&&for emptying a qcow2 image, and the second (slower) codepath leaves&&&&the LUKS header intact, so force use of that codepath.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, target/arm: Create new arm_v7m_mmu_idx_for_secstate_and_priv() The TT instruction is going to need to look up the MMU index&&&&for a specified security and privilege state. Refactor the&&&&existing arm_v7m_mmu_idx_for_secstate() into a version that&&&&lets you specify the privilege state and one that uses the&&&&current state of the CPU.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1512153879-5291-6-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& 
1," qcow2: Prevent allocating L2 tables at offset 0 If the refcount data is corrupted then we can end up trying to&&&&allocate a new L2 table at offset 0 in the image, triggering an&&&&assertion in the qcow2 cache that would crash QEMU:&&&&&&&&  qcow2_cache_entry_mark_dirty: Assertion `c->entries[i].offset != 0' failed&&&&&&&&This patch adds an explicit check for this scenario and a new test&&&&case.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 92dac37191ae7844a2da22c122204eb493cc3133.1509718618.git.berto@igalia.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," monitor: fix dangling CPU pointer If a CPU selected with the ""cpu"" command is hot-unplugged then ""info cpus""&&&&causes QEMU to exit:&&&&&&&&(qemu) device_del cpu1&&&&(qemu) info cpus&&&&qemu:qemu_cpu_kick_thread: No such process&&&&&&&&This happens because ""cpu"" stores the pointer to the selected CPU into&&&&the monitor structure. When the CPU is hot-unplugged, we end up with a&&&&dangling pointer. The ""info cpus"" command then does:&&&&&&&&hmp_info_cpus()&&&& monitor_get_cpu_index()&&&&  mon_get_cpu()&&&&   cpu_synchronize_state() <--- called with dangling pointer&&&&&&&&This could cause a QEMU crash as well.&&&&&&&&This patch switches the monitor to store the QOM path instead of a&&&&pointer to the current CPU. The path is then resolved when needed.&&&&If the resolution fails, we assume that the CPU was removed and the&&&&path is resetted to the default (ie, path of first_cpu).&&&&&&&&Reported-by: Satheesh Rajendran <sathnaga@linux.vnet.ibm.com>&&&&Suggested-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Message-Id: <150822818243.26242.12993827911736928961.stgit@bahia.lan>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
1," nbd/server: Report error for write to read-only export When the server is read-only, we were already reporting an error&&&&message for NBD_CMD_WRITE_ZEROES, but failed to set errp for a&&&&similar NBD_CMD_WRITE.  This will matter more once structured&&&&replies allow the server to propagate the errp information back&&&&to the client.  While at it, use an error message that makes a&&&&bit more sense if viewed on the client side.&&&&&&&&Note that when using qemu-io to test qemu-nbd behavior, it is&&&&rather difficult to convince qemu-io to send protocol violations&&&&(such as a read beyond bounds), because we have a lot of active&&&&checking on the client side that a qemu-io request makes sense&&&&before it ever goes over the wire to the server.  The case of a&&&&client attempting a write when the server is started as&&&&'qemu-nbd -r' is one of the few places where we can easily test&&&&error path handling, without having to resort to hacking in known&&&&temporary bugs to either the server or client.  [Maybe we want a&&&&future patch to the client to do up-front checking on writes to a&&&&read-only export, the way it does up-front bounds checking; but I&&&&don't see anything in the NBD spec that points to a protocol&&&&violation in our current behavior.]&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Message-Id: <20171027104037.8319-5-eblake@redhat.com>&&&& "
1," 9pfs: use g_malloc0 to allocate space for xattr 9p back-end first queries the size of an extended attribute,&&&&allocates space for it via g_malloc() and then retrieves its&&&&value into allocated buffer. Race between querying attribute&&&&size and retrieving its could lead to memory bytes disclosure.&&&&Use g_malloc0() to avoid it.&&&&&&&&Reported-by: Tuomas Tynkkynen <tuomas.tynkkynen@iki.fi>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&& "
1," virtio/vhost: reset dev->log after syncing vhost_log_put() is called to decomission the dirty log between qemu and&&&&a vhost device when stopping the device. Such a call can happen from&&&&migration_completion().&&&&&&&&Present code sets dev->log_size to zero too early in vhost_log_put(),&&&&causing the sync check to always return false. As a consequence, the&&&&last pass on the dirty bitmap never happens at the end of migration.&&&&&&&&If a vhost device was busy (writing to guest memory) until the last&&&&moments before vhost_virtqueue_stop(), this error will result in guest&&&&memory corruption (at least) following migrations.&&&&&&&&Signed-off-by: Felipe Franciosi <felipe@nutanix.com>&&&&Acked-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, hw/sd: fix out-of-bounds check for multi block reads The current code checks if the next block exceeds the size of the card.&&&&This generates an error while reading the last block of the card.&&&&Do the out-of-bounds check when starting to read a new block to fix this.&&&&&&&&This issue became visible with increased error checking in Linux 4.13.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Michael Olbrich <m.olbrich@pengutronix.de>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 20170916091611.10241-1-m.olbrich@pengutronix.de&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," uuid: Tighten uuid parse sscanf is relatively loose (tolerate) on some invalid formats that we&&&&should fail instead of generating a wrong uuid structure, like with&&&&whitespaces and short strings.&&&&&&&&Add and use a helper function to first check the format.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Message-Id: <1474432046-325-11-git-send-email-famz@redhat.com>&&&& "
1," tcg/ppc: disable atomic write check on ppc32 This fixes building for ppc64 on ppc32 (changed in 5964fca8a12c):&&&&&&&&tcg/ppc/tcg-target.inc.c: In function 'tb_target_set_jmp_target':&&&&include/qemu/compiler.h:86:30: error: static assertion failed: \&&&&  ""not expecting: sizeof(*(uint64_t *)jmp_addr) > ATOMIC_REG_SIZE""&&&&	QEMU_BUILD_BUG_ON(sizeof(*ptr) > ATOMIC_REG_SIZE); \&&&&	^&&&&tcg/ppc/tcg-target.inc.c:1377:9: note: in expansion of macro 'atomic_set'&&&&	atomic_set((uint64_t *)jmp_addr, pair);&&&&	^&&&&&&&&Suggested-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <20170911204936.5020-1-f4bug@amsat.org>&&&&[rth: Added commentary requested by pmm.]&&&&Signed-off-by: Richard Henderson <richard.henderson@linaro.org>&&&& "
1," net/filter-rewriter.c: Fix rewirter checksum bug when use virtio-net Because vnet_hdr have a offset to net packet, we must add it when use&&&&virtio-net.&&&&&&&&Signed-off-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," hw/ppc/spapr_cpu_core: Add a proper check for spapr machine QEMU currently crashes when the user tries to add a spapr-cpu-core&&&&on a non-pseries machine:&&&&&&&&$ qemu-system-ppc64 -S -machine ppce500,accel=tcg \&&&&                    -device POWER5+_v2.1-spapr-cpu-core&&&&hw/ppc/spapr_cpu_core.c:178:spapr_cpu_core_realize_child:&&&&Object 0x55cee1f55160 is not an instance of type spapr-machine&&&&Aborted (core dumped)&&&&&&&&So let's add a proper check for the correct machine time with&&&&a more friendly error message here.&&&&&&&&Reported-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," net/rocker: Convert to realize() The rocker device still implements the old PCIDeviceClass .init()&&&&instead of the new .realize(). All devices need to be converted to&&&&.realize().&&&&&&&&.init() reports errors with fprintf() and return 0 on success, negative&&&&number on failure. Meanwhile, when -device rocker fails, it first report&&&&a specific error, then a generic one, like this:&&&&&&&&    $ x86_64-softmmu/qemu-system-x86_64 -device rocker,name=qemu-rocker&&&&    rocker: name too long; please shorten to at most 9 chars&&&&    qemu-system-x86_64: -device rocker,name=qemu-rocker: Device initialization failed&&&&&&&&Now, convert it to .realize() that passes errors to its callers via its&&&&errp argument. Also avoid the superfluous second error message. After&&&&the patch, effect like this:&&&&&&&&    $ x86_64-softmmu/qemu-system-x86_64 -device rocker,name=qemu-rocker&&&&    qemu-system-x86_64: -device rocker,name=qemu-rocker: name too long; please shorten to at most 9 chars&&&&&&&&Cc: jasowang@redhat.com&&&&Cc: jiri@resnulli.us&&&&Cc: armbru@redhat.com&&&&Cc: f4bug@amsat.org&&&&Signed-off-by: Mao Zhongyi <maozy.fnst@cn.fujitsu.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," ppc/xive: fix OV5_XIVE_EXPLOIT bits On POWER9, the Client Architecture Support (CAS) negotiation process&&&&determines whether the guest operates in XIVE Legacy compatibility or&&&&in XIVE exploitation mode. Now that we have initial guest support for&&&&the XIVE interrupt controller, let's fix the bits definition which have&&&&evolved in the latest specs.&&&&&&&&The platform advertises the XIVE Exploitation Mode support using the&&&&property ""ibm,arch-vec-5-platform-support-vec-5"", byte 23 bits 0-1 :&&&&&&&& - 0b00 XIVE legacy mode Only&&&& - 0b01 XIVE exploitation mode Only&&&& - 0b10 XIVE legacy or exploitation mode&&&&&&&&The OS asks for XIVE Exploitation Mode support using the property&&&&""ibm,architecture-vec-5"", byte 23 bits 0-1:&&&&&&&& - 0b00 XIVE legacy mode Only&&&& - 0b01 XIVE exploitation mode Only&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," hw/arm/allwinner-a10: Mark the allwinner-a10 device with user_creatable = false QEMU currently exits unexpectedly when the user accidentially&&&&tries to do something like this:&&&&&&&&$ aarch64-softmmu/qemu-system-aarch64 -S -M integratorcp -nographic&&&&QEMU 2.9.93 monitor - type 'help' for more information&&&&(qemu) device_add allwinner-a10&&&&Unsupported NIC model: smc91c111&&&&&&&&Exiting just due to a ""device_add"" should not happen. Looking closer&&&&at the the realize and instance_init function of this device also&&&&reveals that it is using serial_hds and nd_table directly there, so&&&&this device is clearly not creatable by the user and should be marked&&&&accordingly.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-id: 1503416789-32080-1-git-send-email-thuth@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," virtfs: error out gracefully when mandatory suboptions are missing We internally convert -virtfs to -fsdev/-device. If the user doesn't&&&&provide the path or security_model suboptions, and the fsdev backend&&&&requires them, we hit an assertion when populating the internal -fsdev&&&&option:&&&&&&&&util/qemu-option.c:547: opt_set: Assertion `opt->str' failed.&&&&Aborted (core dumped)&&&&&&&&Let's test the suboption presence on the command line before trying&&&&to set it in the internal -fsdev option, and let the backend code&&&&error out gracefully (ie, like it already does when the user passes&&&&-fsdev on the command line).&&&&&&&&Reported-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&& "
1," cpu: Define new cpu_transaction_failed() hook Currently we have a rather half-baked setup for allowing CPUs to&&&&generate exceptions on accesses to invalid memory: the CPU has a&&&&cpu_unassigned_access() hook which the memory system calls in&&&&unassigned_mem_write() and unassigned_mem_read() if the current_cpu&&&&pointer is non-NULL.  This was originally designed before we&&&&implemented the MemTxResult type that allows memory operations to&&&&report a success or failure code, which is why the hook is called&&&&right at the bottom of the memory system.  The major problem with&&&&this is that it means that the hook can be called even when the&&&&access was not actually done by the CPU: for instance if the CPU&&&&writes to a DMA engine register which causes the DMA engine to begin&&&&a transaction which has been set up by the guest to operate on&&&&invalid memory then this will casue the CPU to take an exception&&&&incorrectly.  Another minor problem is that currently if a device&&&&returns a transaction error then this won't turn into a CPU exception&&&&at all.&&&&&&&&The right way to do this is to have allow the CPU to respond&&&&to memory system transaction failures at the point where the&&&&CPU specific code calls into the memory system.&&&&&&&&Define a new QOM CPU method and utility function&&&&cpu_transaction_failed() which is called in these cases.&&&&The functionality here overlaps with the existing&&&&cpu_unassigned_access() because individual target CPUs will&&&&need some work to convert them to the new system. When this&&&&transition is complete we can remove the old cpu_unassigned_access()&&&&code.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&& "
1," block: fix leaks in bdrv_open_driver() bdrv_open_driver() is called in two places, bdrv_new_open_driver() and&&&&bdrv_open_common(). In the latter, failure cleanup in is in its caller,&&&&bdrv_open_inherit(), which unrefs the bs->file of the failed driver open&&&&if it exists.&&&&&&&&Let's move the bs->file cleanup to bdrv_open_driver() to take care of&&&&all callers and do not set bs->drv to NULL unless the driver's open&&&&function failed. When bs is destroyed by removing its last reference, it&&&&calls bdrv_close() which checks bs->drv to perform the needed cleanups&&&&and also call the driver's close function. Since it cleans up options&&&&and opaque we must take care not leave dangling pointers.&&&&&&&&The error paths in bdrv_open_driver() are now two:&&&&If open fails, drv->bdrv_close() should not be called. Unref the child&&&&if it exists, free what we allocated and set bs->drv to NULL. Return the&&&&error and let callers free their stuff.&&&&&&&&If open succeeds but we fail after, return the error and let callers&&&&unref and delete their bs, while cleaning up their allocations.&&&&&&&&Signed-off-by: Manos Pitsidianakis <el13635@mail.ntua.gr>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," trace-events: fix code style: %# -> 0x% In trace format '#' flag of printf is forbidden. Fix it to '0x%'.&&&&&&&&This patch is created by the following:&&&&&&&&check that we have a problem&&&&> find . -name trace-events | xargs grep '%#' | wc -l&&&&56&&&&&&&&check that there are no cases with additional printf flags before '#'&&&&> find . -name trace-events | xargs grep ""%[-+ 0'I]+#"" | wc -l&&&&0&&&&&&&&check that there are no wrong usage of '#' and '0x' together&&&&> find . -name trace-events | xargs grep '0x%#' | wc -l&&&&0&&&&&&&&fix the problem&&&&> find . -name trace-events | xargs sed -i 's/%#/0x%/g'&&&&&&&&[Eric Blake noted that xargs grep '%[-+ 0'I]+#' should be xargs grep&&&&""%[-+ 0'I]+#"" instead so the shell quoting is correct.&&&&--Stefan]&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170731160135.12101-3-vsementsov@virtuozzo.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target/arm: Correct MPU trace handling of write vs execute Correct off-by-one bug in the PSMAv7 MPU tracing where it would print&&&&a write access as ""reading"", an insn fetch as ""writing"", and a read&&&&access as ""execute"".&&&&&&&&Since we have an MMUAccessType enum now, we can make the code clearer&&&&in the process by using that rather than the raw 0/1/2 values.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-id: 1500906792-18010-1-git-send-email-peter.maydell@linaro.org&&&& "
1, nbd: fix memory leak in nbd_opt_go() nbd/client.c:385:12: warning: Potential leak of memory pointed to by 'buf'&&&&&&&&Reported-by: Clang Static Analyzer&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20170727024224.22900-5-f4bug@amsat.org>&&&&[introduced in commit 8ecaeae8]&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&& 
1," vfio/pci: Fixup v0 PCIe capabilities Intel 82599 VFs report a PCIe capability version of 0, which is&&&&invalid.  The earliest version of the PCIe spec used version 1.  This&&&&causes Windows to fail startup on the device and it will be disabled&&&&with error code 10.  Our choices are either to drop the PCIe cap on&&&&such devices, which has the side effect of likely preventing the guest&&&&from discovering any extended capabilities, or performing a fixup to&&&&update the capability to the earliest valid version.  This implements&&&&the latter.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& "
1," megasas: always store SCSIRequest* into MegasasCmd This ensures that the request is unref'ed properly, and avoids a&&&&segmentation fault in the new qtest testcase that is added.&&&&This is CVE-2017-9503.&&&&&&&&Reported-by: Zhangyanyu <zyy4013@stu.ouc.edu.cn>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," monitor: resurrect handle_qmp_command trace event Commit 104fc3027960dd2aa9d310936a6cb201c60e1088 (""qmp: Drop duplicated&&&&QMP command object checks"") removed the call to&&&&trace_handle_qmp_command() while eliminating code duplication.&&&&&&&&This patch brings the trace event back so QEMU-internal trace events can&&&&be correlated with the QMP commands that caused them.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170605104216.22429-3-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block/gluster.c: Handle qdict_array_entries() failure In qemu_gluster_parse_json(), the call to qdict_array_entries()&&&&could return a negative error code, which we were ignoring&&&&because we assigned the result to an unsigned variable.&&&&Fix this by using the 'int' type instead, which matches the&&&&return type of qdict_array_entries() and also the type&&&&we use for the loop enumeration variable 'i'.&&&&&&&&(Spotted by Coverity, CID 1360960.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Message-id: 1496682098-1540-1-git-send-email-peter.maydell@linaro.org&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
1, xhci: add CONFIG_USB_XHCI_NEC option Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1451189&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170517103313.8459-2-kraxel@redhat.com&&&& 
1, input: limit kbd queue depth Apply a limit to the number of items we accept into the keyboard queue.&&&&&&&&Impact: Without this limit vnc clients can exhaust host memory by&&&&sending keyboard events faster than qemu feeds them to the guest.&&&&&&&&Fixes: CVE-2017-8379&&&&Cc: P J P <ppandit@redhat.com>&&&&Cc: Huawei PSIRT <PSIRT@huawei.com>&&&&Reported-by: jiangxin1@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170428084237.23960-1-kraxel@redhat.com&&&& 
1," qcow2: Allow discard of final unaligned cluster As mentioned in commit 0c1bd46, we ignored requests to&&&&discard the trailing cluster of an unaligned image.  While&&&&discard is an advisory operation from the guest standpoint,&&&&(and we are therefore free to ignore any request), our&&&&qcow2 implementation exploits the fact that a discarded&&&&cluster reads back as 0.  As long as we discard on cluster&&&&boundaries, we are fine; but that means we could observe&&&&non-zero data leaked at the tail of an unaligned image.&&&&&&&&Enhance iotest 66 to cover this case, and fix the implementation&&&&to honor a discard request on the final partial cluster.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170407013709.18440-1-eblake@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1, ui/console: use exclusive mechanism directly The previous commit (8bb93c6f99) using async_safe_run_on_cpu() doesn't&&&&work on graphics sub-system which restrict which threads can do GUI&&&&updates. Rather the special casing MacOS we just directly call the&&&&helper and move all the exclusive handling into do_dafe_dpy_refresh().&&&&&&&&The unfortunate bouncing of the BQL is to ensure there is no deadlock&&&&as vCPUs waiting on the BQL are kicked into their quiescent state.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," 9pfs: fix file descriptor leak The v9fs_create() and v9fs_lcreate() functions are used to create a file&&&&on the backend and to associate it to a fid. The fid shouldn't be already&&&&in-use, otherwise both functions may silently leak a file descriptor or&&&&allocated memory. The current code doesn't check that.&&&&&&&&This patch ensures that the fid isn't already associated to anything&&&&before using it.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&(reworded the changelog, Greg Kurz)&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&& "
1," e1000e: correctly tear down MSI-X memory regions MSI-X has been disabled by the time the e1000e device is unrealized, hence&&&&msix_uninit is never called.  This causes the object to be leaked, which&&&&shows up as a RAMBlock with empty name when attempting migration.&&&&&&&&Reported-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Cc: Jason Wang <jasowang@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Tested-by: Laurent Vivier <lvivier@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," virtio: Fix error handling in virtio_bus_device_plugged For one thing we shouldn't continue if an error happened, for the other&&&&two steps failing can cause an abort() in error_setg because we reuse&&&&the same errp blindly.&&&&&&&&Add error handling checks to fix both issues.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& "
1," sheepdog: Fix error handling in sd_snapshot_delete() As a bdrv_snapshot_delete() method, sd_snapshot_delete() must set an&&&&error and return negative errno on failure.  It sometimes returns -1,&&&&and sometimes neglects to set an error.  It also prints error messages&&&&with error_report().  Fix all that.&&&&&&&&Moreover, its handling of an attempt to delete a nonexistent snapshot&&&&is wrong: it error_report()s and succeeds.  Fix it to set an error and&&&&return -ENOENT instead.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, iotests: Fix another race in 030 We can't rely on a non-paused job to be present and running for us.&&&&Assume that if the job is not present that it completed already.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," pc: pcihp: avoid adding ACPI_PCIHP_PROP_BSEL twice PCI hotplug for bridges was introduced only since 2.0 however&&&&  acpi_set_bsel()->object_property_add_uint32_ptr(bus, ACPI_PCIHP_PROP_BSEL)&&&&didn't take in account that for legacy mode (1.7) when&&&&PCI hotplug for bridges is unavailable and ACPI_PCIHP_PROP_BSEL property&&&&the only bus ""PCI.0' has been created earlier at acpi_pcihp_init() time.&&&&&&&&We managed to live with it only because of error rised by adding&&&&a duplicate property in acpi_set_bsel() has been ignored which&&&&resulted in useless leaking of just allocated (int)bus_bsel.&&&&&&&&Issue affects only 1.7 machine type as ACPI tables supported by&&&&QEMU were introduced at that time, but there wasn't PCI hotplug&&&&for bridges till the next release (2.0).&&&&&&&&Fix it by removing duplicate ACPI_PCIHP_PROP_BSEL intialization&&&&in acpi_pcihp_init() and doing it only in one place acpi_set_pci_info().&&&&&&&&PS:&&&&do not ignore error returned by object_property_add_uint32_ptr()&&&&and abort QEMU since it's programming error which should be fixed&&&&instead of being ignored.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reported-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1470211497-116801-1-git-send-email-imammedo@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&[ Marc-Andr茅 - Remove now unused ACPI_PCIHP_LEGACY_SIZE ]&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& "
1, tests: fix ipmi-bt-test leak Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& 
1," block/rbd: add all the currently supported runtime_opts This adds all the currently supported runtime opts, which&&&&are the options as parsed from the filename.  All of these&&&&options are explicitly checked for during during runtime,&&&&with an exception to the ""keyvalue-pairs"" option.&&&&&&&&This option contains all the key/value pairs that the QEMU rbd&&&&driver merely unescapes, and passes along blindly to rados.  This&&&&option is a ""legacy"" option, and will not be exposed in the QAPI&&&&or available for introspection.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
1," 9pfs: local: chown: don't follow symlinks The local_chown() callback is vulnerable to symlink attacks because it&&&&calls:&&&&&&&&(1) lchown() which follows symbolic links for all path elements but the&&&&    rightmost one&&&&(2) local_set_xattr()->setxattr() which follows symbolic links for all&&&&    path elements&&&&(3) local_set_mapped_file_attr() which calls in turn local_fopen() and&&&&    mkdir(), both functions following symbolic links for all path&&&&    elements but the rightmost one&&&&&&&&This patch converts local_chown() to rely on open_nofollow() and&&&&fchownat() to fix (1), as well as local_set_xattrat() and&&&&local_set_mapped_file_attrat() to fix (2) and (3) respectively.&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," test-qmp-event: Simplify and tighten event_test_emit() Use qdict_get_qdict() and qdict_get_try_int() to simplify.&&&&&&&&While there, add a sanity check for seconds.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1487363905-9480-7-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," spapr: fix off-by-one error in spapr_ovec_populate_dt() The last byte of the option vector was missing due to an off-by-one&&&&error. Without this fix, client architecture support negotiation will&&&&fail because the last byte of option vector 5, which contains the MMU&&&&support, will be missed.&&&&&&&&Signed-off-by: Sam Bobroff <sam.bobroff@au1.ibm.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," 9pfs: introduce relative_openat_nofollow() helper When using the passthrough security mode, symbolic links created by the&&&&guest are actual symbolic links on the host file system.&&&&&&&&Since the resolution of symbolic links during path walk is supposed to&&&&occur on the client side. The server should hence never receive any path&&&&pointing to an actual symbolic link. This isn't guaranteed by the protocol&&&&though, and malicious code in the guest can trick the server to issue&&&&various syscalls on paths whose one or more elements are symbolic links.&&&&In the case of the ""local"" backend using the ""passthrough"" or ""none""&&&&security modes, the guest can directly create symbolic links to arbitrary&&&&locations on the host (as per spec). The ""mapped-xattr"" and ""mapped-file""&&&&security modes are also affected to a lesser extent as they require some&&&&help from an external entity to create actual symbolic links on the host,&&&&i.e. another guest using ""passthrough"" mode for example.&&&&&&&&The current code hence relies on O_NOFOLLOW and ""l*()"" variants of system&&&&calls. Unfortunately, this only applies to the rightmost path component.&&&&A guest could maliciously replace any component in a trusted path with a&&&&symbolic link. This could allow any guest to escape a virtfs shared folder.&&&&&&&&This patch introduces a variant of the openat() syscall that successively&&&&opens each path element with O_NOFOLLOW. When passing a file descriptor&&&&pointing to a trusted directory, one is guaranteed to be returned a&&&&file descriptor pointing to a path which is beneath the trusted directory.&&&&This will be used by subsequent patches to implement symlink-safe path walk&&&&for any access to the backend.&&&&&&&&Symbolic links aren't the only threats actually: a malicious guest could&&&&change a path element to point to other types of file with undesirable&&&&effects:&&&&- a named pipe or any other thing that would cause openat() to block&&&&- a terminal device which would become QEMU's controlling terminal&&&&&&&&These issues can be addressed with O_NONBLOCK and O_NOCTTY.&&&&&&&&Two helpers are introduced: one to open intermediate path elements and one&&&&to open the rightmost path element.&&&&&&&&Suggested-by: Jann Horn <jannh@google.com>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&(renamed openat_nofollow() to relative_openat_nofollow(),&&&& assert path is relative and doesn't contain '//',&&&& fixed side-effect in assert, Greg Kurz)&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&& "
1," ppc: switch to constants within BUILD_BUG_ON We are switching BUILD_BUG_ON to verify that it's parameter is a&&&&compile-time constant, and it turns out that some gcc versions&&&&(specifically gcc (Ubuntu 5.4.0-6ubuntu1~16.04.4) 5.4.0 20160609) are&&&&not smart enough to figure it out for expressions involving local&&&&variables. This is harmless but means that the check is ineffective for&&&&these platforms.  To fix, replace the variable with macros.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&[dwg: Correct a printf format warning]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1, exec: Add missing rcu_read_unlock rcu_read_unlock was not called if the address_space_access_valid result is&&&&negative.&&&&&&&&This caused (at least) a problem when qemu on PPC/E500+TAP failed to terminate&&&&properly and instead got stuck in a deadlock.&&&&&&&&Signed-off-by: Roman Kapl <rka@sysgo.com>&&&&Message-Id: <20170109110921.4931-1-rka@sysgo.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," aio: add polling mode to AioContext The AioContext event loop uses ppoll(2) or epoll_wait(2) to monitor file&&&&descriptors or until a timer expires.  In cases like virtqueues, Linux&&&&AIO, and ThreadPool it is technically possible to wait for events via&&&&polling (i.e. continuously checking for events without blocking).&&&&&&&&Polling can be faster than blocking syscalls because file descriptors,&&&&the process scheduler, and system calls are bypassed.&&&&&&&&The main disadvantage to polling is that it increases CPU utilization.&&&&In classic polling configuration a full host CPU thread might run at&&&&100% to respond to events as quickly as possible.  This patch implements&&&&a timeout so we fall back to blocking syscalls if polling detects no&&&&activity.  After the timeout no CPU cycles are wasted on polling until&&&&the next event loop iteration.&&&&&&&&The run_poll_handlers_begin() and run_poll_handlers_end() trace events&&&&are added to aid performance analysis and troubleshooting.  If you need&&&&to know whether polling mode is being used, trace these events to find&&&&out.&&&&&&&&Note that the AioContext is now re-acquired before disabling notify_me&&&&in the non-polling case.  This makes the code cleaner since notify_me&&&&was enabled outside the non-polling AioContext release region.  This&&&&change is correct since it's safe to keep notify_me enabled longer&&&&(disabling is an optimization) but potentially causes unnecessary&&&&event_notifer_set() calls.  I think the chance of performance regression&&&&is small here.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 20161201192652.9509-4-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target-m68k: add 680x0 divu/divs variants Update helper to set the throwing location in case of div-by-0.&&&&Cleanup divX.w and add quad word variants of divX.l.&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Reviewed-by: Richard Henderson <rth@twidle.net>&&&&[laurent: modified to clear Z on overflow, as found with risu]&&&& "
1, gluster: Fix use after free in glfs_clear_preopened() This fixes a use-after-free bug introduced in commit 6349c154. We need&&&&to use QLIST_FOREACH_SAFE() when freeing elements in the loop. Spotted&&&&by Coverity.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Message-id: 1479378608-11962-1-git-send-email-kwolf@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& 
1, char: cadence: check baud rate generator and divider values The Cadence UART device emulator calculates speed by dividing the&&&&baud rate by a 'baud rate generator' & 'baud rate divider' value.&&&&The device specification defines these register values to be&&&&non-zero and within certain limits. Add checks for these limits&&&&to avoid errors like divide by zero.&&&&&&&&Reported-by: Huawei PSIRT <psirt@huawei.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 1477596278-1470-1-git-send-email-ppandit@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," ppc/pnv: add XSCOM infrastructure On a real POWER8 system, the Pervasive Interconnect Bus (PIB) serves&&&&as a backbone to connect different units of the system. The host&&&&firmware connects to the PIB through a bridge unit, the&&&&Alter-Display-Unit (ADU), which gives him access to all the chiplets&&&&on the PCB network (Pervasive Connect Bus), the PIB acting as the root&&&&of this network.&&&&&&&&XSCOM (serial communication) is the interface to the sideband bus&&&&provided by the POWER8 pervasive unit to read and write to chiplets&&&&resources. This is needed by the host firmware, OPAL and to a lesser&&&&extent, Linux. This is among others how the PCI Host bridges get&&&&configured at boot or how the LPC bus is accessed.&&&&&&&&To represent the ADU of a real system, we introduce a specific&&&&AddressSpace to dispatch XSCOM accesses to the targeted chiplets. The&&&&translation of an XSCOM address into a PCB register address is&&&&slightly different between the P9 and the P8. This is handled before&&&&the dispatch using a 8byte alignment for all.&&&&&&&&To customize the device tree, a QOM InterfaceClass, PnvXScomInterface,&&&&is provided with a populate() handler. The chip populates the device&&&&tree by simply looping on its children. Therefore, each model needing&&&&custom nodes should not forget to declare itself as a child at&&&&instantiation time.&&&&&&&&Based on previous work done by :&&&&      Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&[dwg: Added cpu parameter to xscom_complete()]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," exec: call cpu_exec_exit() from a CPU unrealize common function As cpu_exec_exit() mirrors the cpu_exec_realizefn(),&&&&rename it as cpu_exec_unrealizefn().&&&&&&&&Create and register a cpu_common_unrealizefn() function for&&&&the CPU device class and call cpu_exec_unrealizefn() from&&&&this function.&&&&&&&&Remove cpu_exec_exit() from cpu_common_finalize()&&&&(which mirrors init, not realize), and as x86_cpu_unrealizefn()&&&&and ppc_cpu_unrealizefn() overwrite the device class unrealize function,&&&&add a call to a parent_unrealize pointer.&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," 9pfs: fix memory leak in v9fs_xattrcreate The 'fs.xattr.value' field in V9fsFidState object doesn't consider the&&&&situation that this field has been allocated previously. Every time, it&&&&will be allocated directly. This leads to a host memory leak issue if&&&&the client sends another Txattrcreate message with the same fid number&&&&before the fid from the previous time got clunked.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&[groug, updated the changelog to indicate how the leak can occur]&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&& "
1, ide: Fix memory leak in ide_register_restart_cb() Fix a memory leak in ide_register_restart_cb() in hw/ide/core.c and add&&&&idebus_unrealize() in hw/ide/qdev.c to have calls to&&&&qemu_del_vm_change_state_handler() to deal with the dangling change&&&&state handler during hot-unplugging ide devices which might lead to a&&&&crash.&&&&&&&&Signed-off-by: Ashijeet Acharya <ashijeetacharya@gmail.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1474995212-10580-1-git-send-email-ashijeetacharya@gmail.com&&&&[Minor whitespace fix --js]&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&& 
1, cpus-common: fix uninitialized variable use in run_on_cpu Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," scsi-disk: change disk serial length from 20 to 36 Openstack Cinder assigns volume a 36 characters uuid as serial.&&&&QEMU will shrinks the uuid to 20 characters, which does not match&&&&the original uuid.&&&&&&&&Note that there is no limit to the length of the serial number in&&&&the SCSI spec.  20 was copy-pasted from virtio-blk which in turn was&&&&copy-pasted from ATA; 36 is even more arbitrary.  However, bumping it&&&&up too much might cause issues (e.g. 252 seems to make sense because&&&&then the maximum amount of returned data is 256; but who knows there's&&&&no off-by-one somewhere for such a nicely rounded number).&&&&&&&&Signed-off-by: Rony Weng <ronyweng@synology.com>&&&&Message-Id: <1472457138-23386-1-git-send-email-ronyweng@synology.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, tests: fix leak in test-string-input-visitor Free the list returned by visit_type_intList().&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1," ppc: Don't update NIP in lswi/lswx/stswi/stswx Instead, pass GETPC() result to the corresponding helpers. This&&&&requires a bit of fiddling to get the PC (hopefully) right in&&&&the case where we generate a program check, though the hacks there&&&&are temporary, a subsequent patch will clean this all up by always&&&&having the nip already set to the right instruction when taking&&&&the fault.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&[dwg: Fix trivial checkpatch warning]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," ARM: ACPI: fix the AML ID format for CPU devices Current QEMU will stall guest VM booting under ACPI mode when vcpu count&&&&is >= 12. Analyzing the booting log, it turns out that DSDT table can't&&&&be loaded correctly due to ""Invalid character(s) in name (0x62303043),&&&&repaired: [C00*]"". This is because existing QEMU uses a lower case AML&&&&ID for CPU devices (e.g. C000, C001, ..., C00a, C00b). The ACPI code&&&&inside guest VM detects this lower case character as an invalid character&&&&(see acpi_ut_valid_acpi_char() in drivers/acpi/acpica/utstring.c file)&&&&and converts it to ""*"". This causes duplicated IDs (i.e. ""C00a"" ==>""C00*""&&&&and ""C00b"" ==> ""C00*""). So ACPI refuses to load the table.&&&&&&&&This patch fixes the problem by changing the format with a upper case&&&&character. It matches the CPU ID formats used in other parts of QEMU&&&&code.&&&&&&&&Reported-by: Eric Auger <eric.auger@redhat.com>&&&&Signed-off-by: Wei Huang <wei@redhat.com>&&&&Reviewed-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Reviewed-by: Eric Auger <eric.auger@redhat.com>&&&&Tested-by: Eric Auger <eric.auger@redhat.com>&&&&Message-id: 1472852809-23042-1-git-send-email-wei@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," vhost: fix cleanup on not fully initialized device If vhost_dev_init() failed, caller may still call vhost_dev_cleanup()&&&&later. However, vhost_dev_cleanup() tries to remove the device from the&&&&list even if it wasn't yet added, which may lead to crashes. Similarly&&&&for the memory listener.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," vnc: don't crash getting server info if lsock is NULL When VNC is started with '-vnc none' there will be no&&&&listener socket present. When we try to populate the&&&&VncServerInfo we'll crash accessing a NULL 'lsock'&&&&field.&&&&&&&& #0  qio_channel_socket_get_local_address (ioc=0x0, errp=errp@entry=0x7ffd5b8aa0f0) at io/channel-socket.c:33&&&& #1  0x00007f4b9a297d6f in vnc_init_basic_info_from_server_addr (errp=0x7ffd5b8aa0f0, info=0x7f4b9d425460, ioc=<optimized out>)  at ui/vnc.c:146&&&& #2  vnc_server_info_get (vd=0x7f4b9e858000) at ui/vnc.c:223&&&& #3  0x00007f4b9a29d318 in vnc_qmp_event (vs=0x7f4b9ef82000, vs=0x7f4b9ef82000, event=QAPI_EVENT_VNC_CONNECTED) at ui/vnc.c:279&&&& #4  vnc_connect (vd=vd@entry=0x7f4b9e858000, sioc=sioc@entry=0x7f4b9e8b3a20, skipauth=skipauth@entry=true, websocket=websocket @entry=false) at ui/vnc.c:2994&&&& #5  0x00007f4b9a29e8c8 in vnc_display_add_client (id=<optimized out>, csock=<optimized out>, skipauth=<optimized out>) at ui/v nc.c:3825&&&& #6  0x00007f4b9a18d8a1 in qmp_marshal_add_client (args=<optimized out>, ret=<optimized out>, errp=0x7ffd5b8aa230) at qmp-marsh al.c:123&&&& #7  0x00007f4b9a0b53f5 in handle_qmp_command (parser=<optimized out>, tokens=<optimized out>) at /usr/src/debug/qemu-2.6.0/mon itor.c:3922&&&& #8  0x00007f4b9a348580 in json_message_process_token (lexer=0x7f4b9c78dfe8, input=0x7f4b9c7350e0, type=JSON_RCURLY, x=111, y=5 9) at qobject/json-streamer.c:94&&&& #9  0x00007f4b9a35cfeb in json_lexer_feed_char (lexer=lexer@entry=0x7f4b9c78dfe8, ch=125 '}', flush=flush@entry=false) at qobj ect/json-lexer.c:310&&&& #10 0x00007f4b9a35d0ae in json_lexer_feed (lexer=0x7f4b9c78dfe8, buffer=<optimized out>, size=<optimized out>) at qobject/json -lexer.c:360&&&& #11 0x00007f4b9a348679 in json_message_parser_feed (parser=<optimized out>, buffer=<optimized out>, size=<optimized out>) at q object/json-streamer.c:114&&&& #12 0x00007f4b9a0b3a1b in monitor_qmp_read (opaque=<optimized out>, buf=<optimized out>, size=<optimized out>) at /usr/src/deb ug/qemu-2.6.0/monitor.c:3938&&&& #13 0x00007f4b9a186751 in tcp_chr_read (chan=<optimized out>, cond=<optimized out>, opaque=0x7f4b9c7add40) at qemu-char.c:2895&&&& #14 0x00007f4b92b5c79a in g_main_context_dispatch () from /lib64/libglib-2.0.so.0&&&& #15 0x00007f4b9a2bb0c0 in glib_pollfds_poll () at main-loop.c:213&&&& #16 os_host_main_loop_wait (timeout=<optimized out>) at main-loop.c:258&&&& #17 main_loop_wait (nonblocking=<optimized out>) at main-loop.c:506&&&& #18 0x00007f4b9a0835cf in main_loop () at vl.c:1934&&&& #19 main (argc=<optimized out>, argv=<optimized out>, envp=<optimized out>) at vl.c:4667&&&&&&&&Do an upfront check for a NULL lsock and report an error to&&&&the caller, which matches behaviour from before&&&&&&&&  commit 04d2529da27db512dcbd5e99d0e26d333f16efcc&&&&  Author: Daniel P. Berrange <berrange@redhat.com>&&&&  Date:   Fri Feb 27 16:20:57 2015 +0000&&&&&&&&    ui: convert VNC server to use QIOChannelSocket&&&&&&&&where getsockname() would be given a FD value -1 and thus report&&&&an error to the caller.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1470134726-15697-2-git-send-email-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, nvdimm: fix memory leak in error code path object_get_canonical_path_component() returns a heap-allocated string&&&&that must be freed using g_free().&&&&&&&&Reported-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1," hw/ppc/spapr: Make sure to close the htab_fd when migration is canceled When canceling a migration process, we currently do not close the&&&&HTAB migration file descriptor since htab_save_complete() is never&&&&called in that case. So we leave the migration process with a&&&&dangling htab_fd value around, and this causes any further migration&&&&attempts to fail. To fix this issue, simply make sure that the&&&&htab_fd is closed during the migration cleanup stage. And since the&&&&cleanup() function is also called when migration succeeds, we can&&&&also remove the call to close_htab_fd() from the htab_save_complete()&&&&function.&&&&&&&&Buglink: https://bugzilla.redhat.com/show_bug.cgi?id=1354341&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," vnc-enc-tight: fix off-by-one bug In tight_encode_indexed_rect32, buf(or src)鈥檚 size is count. In for loop,&&&&the logic is supposed to be that i is an index into src, i should be&&&&incremented when incrementing src.&&&&&&&&This is broken when src is incremented but i is not before while loop,&&&&resulting in off-by-one bug in while loop.&&&&&&&&Signed-off-by: He Rongguang <herongguang.he@huawei.com>&&&&Message-id: 5784B8EB.7010008@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," net: do not use atexit for cleanup This will be necessary in the next patch, which stops using atexit for&&&&character devices; without it, vhost-user and the redirector filter&&&&will cause a use-after-free.  Relying on the ordering of atexit calls&&&&is also brittle, even now that both the network and chardev&&&&subsystems are using atexit.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-ppc: Correct page size decoding in ppc_hash64_pteg_search() The architecture specifies that when searching a PTEG for PTEs, entries&&&&with a page size encoding that's not valid for the current segment should&&&&be ignored, continuing the search.&&&&&&&&The current implementation does this with ppc_hash64_pte_size_decode()&&&&which is a very incomplete implementation of this check.  We already have&&&&code to do a full and correct page size decode in hpte_page_shift().&&&&&&&&This patch moves hpte_page_shift() so it can be used in&&&&ppc_hash64_pteg_search() and adjusts the latter's parameters to include&&&&a full SLBE instead of just a segment page shift.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&& "
1," q35: allow dynamic sysbus Allow adding sysbus devices with -device on Q35.&&&&&&&&At first Q35 will support only intel-iommu to be added this way,&&&&however the command line will support all sysbus devices.&&&&&&&&Mark with 'cannot_instantiate_with_device_add_yet' the ones&&&&causing immediate problems (e.g. crashes).&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, arm: Re-enable tmp105 test The tmp105 test is currently not executed since the following&&&&line in the Makefile overwrites the check-qtest-arm-y variable&&&&instead of extending it.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-id: 1466760306-21849-1-git-send-email-thuth@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," vmxnet3: Fix reading/writing guest memory specially when behind an IOMMU When a PCI device lives behind an IOMMU, it should use 'pci_dma_*' family of&&&&functions when any transfer from/to guest memory is required while&&&&'cpu_physical_memory_*' family of functions completely bypass any MMU/IOMMU in&&&&the system.&&&&&&&&vmxnet3 in some places was using 'cpu_physical_memory_*' family of functions&&&&which works fine with the default QEMU setup where IOMMU is not enabled but&&&&fails miserably when IOMMU is enabled. This commit converts all such instances&&&&in favor of 'pci_dma_*'&&&&&&&&Cc: Dmitry Fleytman <dmitry@daynix.com>&&&&Cc: Jason Wang <jasowang@redhat.com>&&&&Cc: qemu-devel@nongnu.org&&&&Cc: Anthony Liguori <aliguori@amazon.com>&&&&Signed-off-by: KarimAllah Ahmed <karahmed@amazon.de>&&&&Acked-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," linux-user: Block signals during sigaction() handling Block signals while emulating sigaction. This is a non-interruptible&&&&syscall, and using block_signals() avoids races where the host&&&&signal handler is invoked and tries to examine the signal handler&&&&data structures while we are updating them.&&&&&&&&Signed-off-by: Timothy Edward Baldwin <T.E.Baldwin99@members.leeds.ac.uk>&&&&Message-id: 1441497448-32489-29-git-send-email-T.E.Baldwin99@members.leeds.ac.uk&&&&[PMM: expanded commit message]&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," ppc: Do some batching of TCG tlb flushes On ppc64 especially, we flush the tlb on any slbie or tlbie instruction.&&&&&&&&However, those instructions often come in bursts of 3 or more (context&&&&switch will favor a series of slbie's for example to an slbia if the&&&&SLB has less than a certain number of entries in it, and tlbie's can&&&&happen in a series, with PAPR, H_BULK_REMOVE can remove up to 4 entries&&&&at a time.&&&&&&&&Doing a tlb_flush() each time is a waste of time. We end up doing a memset&&&&of the whole TLB, reloading it for the next instruction, memset'ing again,&&&&etc...&&&&&&&&Those instructions don't have to take effect immediately. For slbie, they&&&&can wait for the next context synchronizing event. For tlbie, the next&&&&tlbsync.&&&&&&&&This implements batching by keeping a flag that indicates that we have a&&&&TLB in need of flushing. We check it on interrupts, rfi's, isync's and&&&&tlbsync and flush the TLB if needed.&&&&&&&&This reduces the number of tlb_flush() on a boot to a ubuntu installer&&&&first dialog screen from roughly 360K down to 36K.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&[clg: added a 'CPUPPCState *' variable in h_remove() and&&&&      h_bulk_remove() ]&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&[dwg: removed spurious whitespace change, use 0/1 not true/false&&&&      consistently, since tlb_need_flush has int type]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," scsi: megasas: initialise local configuration data buffer When reading MegaRAID SAS controller configuration via MegaRAID&&&&Firmware Interface(MFI) commands, routine megasas_dcmd_cfg_read&&&&uses an uninitialised local data buffer. Initialise this buffer&&&&to avoid stack information leakage.&&&&&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-Id: <1464178304-12831-1-git-send-email-ppandit@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, loader: fix potential memory leak Signed-off-by: Cao jin <caoj.fnst@cn.fujitsu.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," linux-user: Handle msgrcv error case correctly The msgrcv ABI is a bit odd -- the msgsz argument is a size_t, which is&&&&unsigned, but it must fail EINVAL if the value is negative when cast&&&&to a long. We were incorrectly passing the value through an&&&&""unsigned int"", which meant that if the guest was 32-bit longs and&&&&the host was 64-bit longs an input of 0xffffffff (which should trigger&&&&EINVAL) would simply be passed to the host msgrcv() as 0xffffffff,&&&&where it does not cause the host kernel to reject it.&&&&Follow the same approach as do_msgsnd() in using a ssize_t and&&&&doing the check for negative values by hand, so we correctly fail&&&&in this corner case.&&&&&&&&This fixes the msgrcv03 Linux Test Project test case, which otherwise&&&&hangs.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," iotests: fix the broken 026.nocache output This patch fixes longstanding issue with 026 iotest. Unfortunately,&&&&this test contains 2 versions of the correct output, one for cached&&&&writes and one for non-cached ones. People tends to fix only one&&&&version of output of the test and thus noncached version becomes&&&&broken. Unfortunately, it is default in tests/check-block.sh&&&&&&&&The following problematic commits were made:&&&&    commit 3b5e14c76a6bb142bf250ddf99e24a0ac8c7bc12&&&&    Author: Max Reitz <mreitz@redhat.com>&&&&    Date:   Tue Dec 2 18:32:51 2014 +0100&&&&    qcow2: Flushing the caches in qcow2_close may fail&&&&&&&&    commit a069e2f1372a0a823ab506fc019852a2a652aa54&&&&    Author: John Snow <jsnow@redhat.com>&&&&    Date:   Fri Feb 6 16:26:17 2015 -0500&&&&    blkdebug: fix ""once"" rule&&&&&&&&    commit b106ad9185f35fc4ad669555ad0e79e276083bd7&&&&    Author: Kevin Wolf <kwolf@redhat.com>&&&&    Date:   Fri Mar 28 18:06:31 2014 +0100&&&&    qcow2: Don't rely on free_cluster_index in alloc_refcount_block()&&&&&&&&Signed-off-by: Pavel Butsykin <pbutsykin@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Max Reitz <mreitz@redhat.com>&&&&CC: John Snow <jsnow@redhat.com>&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," block/vpc: make checks on max table size a bit more lax The check on the max_table_size field not being larger than required is&&&&valid, and in accordance with the VHD spec.  However, there have been&&&&VHD images encountered in the wild that have an out-of-spec max table&&&&size that is technically too large.&&&&&&&&There is no issue in allowing this larger table size, as we also&&&&later verify that the computed size (used for the pagetable) is&&&&large enough to fit all sectors.  In addition, max_table_entries&&&&is bounds checked against SIZE_MAX and INT_MAX.&&&&&&&&Remove the strict check, so that we can accomodate these sorts of&&&&images that are benignly out of spec.&&&&&&&&Reported-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reported-by: Grant Wu <grantwwu@gmail.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," ivshmem: Simplify rejection of invalid peer ID from server ivshmem_read() processes server messages.  These are 64 bit signed&&&&integers.  -1 is shared memory setup, 16 bit unsigned is a peer ID,&&&&anything else is invalid.&&&&&&&&ivshmem_read() rejects invalid negative messages right away, silently.&&&&&&&&Invalid positive messages get rejected only in resize_peers(), and&&&&ivshmem_read() then prints the rather cryptic message ""failed to&&&&resize peers array"".&&&&&&&&Extend the first check to cover all invalid messages, make it report&&&&""server sent invalid message"", and drop the second check.&&&&&&&&Now resize_peers() can't fail anymore; simplify.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1458066895-20632-23-git-send-email-armbru@redhat.com>&&&& "
1, vl: fix tracing initialization we should call trace_init_backends() before trace_init_file() for&&&&CONFIG_TRACE_SIMPLE There is no difference for other cases.&&&&&&&&This problem was introduced by the commit&&&&    commit 41fc57e44ed64cd4ab5393d83624afd897dabd4f&&&&    Author: Paolo Bonzini <pbonzini@redhat.com>&&&&    Date:   Thu Jan 7 16:55:24 2016 +0300&&&&&&&&    trace: split trace_init_file out of trace_init_backends&&&&&&&&'make check' was failed as a result if configured with&&&&  --enable-trace-backends=simple&&&&&&&&Spotted by Alex Benn茅e.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Tested-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Message-id: 1455036545-14870-1-git-send-email-den@openvz.org&&&&CC: Alex Benn茅e <alex.bennee@linaro.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," watchdog/diag288: avoid race condition on expired watchdog When configured to inject an NMI, watchdog_perform_action() may cause&&&&the BQL to be temporarily relinquished (inject_nmi() 鈫?... 鈫?&&&s390_nmi() 鈫?s390_cpu_restart() 鈫?run_on_cpu()). When the guest issues&&&&diag 288 again in response to the NMI, the diag 288 operation will&&&&race against wdt_diag288_reset(). Depending on scheduler behaviour,&&&&wdt_diag288_reset() may be run after the guest issued a diag 288&&&&Init. As a result, we will cancel the timer the guest just set up. The&&&&effect observed by the guest is that a second expiry does not trigger&&&&the watchdog action and diag 288 Change operations fail.&&&&&&&&Fix this by resetting the timer _before_ invoking the action.&&&&&&&&Signed-off-by: Sascha Silbe <silbe@linux.vnet.ibm.com>&&&&Acked-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1," gtk: fix uninitialized temporary VirtualConsole Only the echo field is used in the temporary VirtualConsole, so the&&&&damage was limited.  But still, if echo was incorrectly set to true,&&&&the result would be some puzzling output in VTE monitor and serial&&&&consoles.&&&&&&&&Fixes: fba958c692e47a373d15c1fd3d72b255bf76adbd&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Tested-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1455015557-15106-2-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," qapi: Don't box branches of flat unions There's no reason to do two malloc's for a flat union; let's just&&&&inline the branch struct directly into the C union branch of the&&&&flat union.&&&&&&&&Surprisingly, fewer clients were actually using explicit references&&&&to the branch types in comparison to the number of flat unions&&&&thus modified.&&&&&&&&This lets us reduce the hack in qapi-types:gen_variants() added in&&&&the previous patch; we no longer need to distinguish between&&&&alternates and flat unions.&&&&&&&&The change to unboxed structs means that u.data (added in commit&&&&cee2dedb) is now coincident with random fields of each branch of&&&&the flat union, whereas beforehand it was only coincident with&&&&pointers (since all branches of a flat union have to be objects).&&&&Note that this was already the case for simple unions - but there&&&&we got lucky.  Remember, visit_start_union() blindly returns true&&&&for all visitors except for the dealloc visitor, where it returns&&&&the value !!obj->u.data, and that this result then controls&&&&whether to proceed with the visit to the variant.  Pre-patch,&&&&this meant that flat unions were testing whether the boxed pointer&&&&was still NULL, and thereby skipping visit_end_implicit_struct()&&&&and avoiding a NULL dereference if the pointer had not been&&&&allocated.  The same was true for simple unions where the current&&&&branch had pointer type, except there we bypassed visit_type_FOO().&&&&But for simple unions where the current branch had scalar type, the&&&&contents of that scalar meant that the decision to call&&&&visit_type_FOO() was data-dependent - the reason we got lucky there&&&&is that visit_type_FOO() for all scalar types in the dealloc visitor&&&&is a no-op (only the pointer variants had anything to free), so it&&&&did not matter whether the dealloc visit was skipped.  But with this&&&&patch, we would risk leaking memory if we could skip a call to&&&&visit_type_FOO_fields() based solely on a data-dependent decision.&&&&&&&&But notice: in the dealloc visitor, visit_type_FOO() already handles&&&&a NULL obj - it was only the visit_type_implicit_FOO() that was&&&&failing to check for NULL. And now that we have refactored things to&&&&have the branch be part of the parent struct, we no longer have a&&&&separate pointer that can be NULL in the first place.  So we can just&&&&delete the call to visit_start_union() altogether, and blindly visit&&&&the branch type; there is no change in behavior except to the dealloc&&&&visitor, where we now unconditionally visit the branch, but where that&&&&visit is now always safe (for a flat union, we can no longer&&&&dereference NULL, and for a simple union, visit_type_FOO() was already&&&&safely handling NULL on pointer types).&&&&&&&&Unfortunately, simple unions are not as easy to switch to unboxed&&&&layout; because we are special-casing the hidden implicit type with&&&&a single 'data' member, we really DO need to keep calling another&&&&layer of visit_start_struct(), with a second malloc; although there&&&&are some cleanups planned for simple unions in later patches.&&&&&&&&visit_start_union() and gen_visit_implicit_struct() are now unused.&&&&Drop them.&&&&&&&&Note that after this patch, the only remaining use of&&&&visit_start_implicit_struct() is for alternate types; the next patch&&&&will do further cleanup based on that fact.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1455778109-6278-14-git-send-email-eblake@redhat.com>&&&&[Dead code deletion squashed in, commit message updated accordingly]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," ivshmem: remove redundant assignment, fix crash with msi=off Fix crash when msi=false introduced in 660c97ee (msi_vectors is NULL in&&&&this case)&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," s390x: s390_cpu_get_phys_page_debug has to return -1 If translation fails, we have to return -1. For now, we&&&&would simply return the value last stored to raddr (if any).&&&&&&&&This way, reading invalid memory via gdb will return values, although it&&&&shouldn't.&&&&&&&&Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1," configure: sanity check the glib library that pkg-config finds Developers on 64-bit machines will often try to perform a&&&&32-bit build of QEMU by running&&&&&&&&  ./configure --extra-cflags=""-m32""&&&&&&&&Unfortunately if PKG_CONFIG_LIBDIR is not set to point to&&&&the location of the 32-bit pkg-config files, then configure&&&&will silently pick up the 64-bit pkg-config files and still&&&&succeed.&&&&&&&&This causes a problem for glib because it means QEMU will&&&&be pulling in /usr/lib64/glib-2.0/include/glibconfig.h&&&&instead of /usr/lib/glib-2.0/include/glibconfig.h&&&&&&&&This causes problems because the 'gsize' type (defined as&&&&'unsigned long') will no longer be fully compatible with&&&&the 'size_t' type (defined as 'unsigned int'). Although&&&&both are the same size, the compiler refuses to allow&&&&casts from 'unsigned long *' to 'unsigned int *' as they&&&&are different pointer types. This results in non-obvious&&&&compiler errors when building QEMU eg&&&&&&&&qga/commands-posix.c: In function 芒鈧渜mp_guest_set_user_password芒鈧劉:&&&&qga/commands-posix.c:1912:55: error: passing argument 2 of 芒鈧済_base64_decode芒鈧劉 from incompatible pointer type [-Werror=incompatible-pointer-types]&&&&     rawpasswddata = (char *)g_base64_decode(password, &rawpasswdlen);&&&&                                                            ^&&&&In file included from /usr/include/glib-2.0/glib.h:35:0,&&&&                 from qga/commands-posix.c:14:&&&&/usr/include/glib-2.0/glib/gbase64.h:52:9: note: expected 芒鈧済size * {aka long unsigned int *}芒鈧劉 but argument is of type 芒鈧渟ize_t * {aka unsigned int *}芒鈧劉&&&& guchar *g_base64_decode         (const gchar  *text,&&&&         ^&&&&cc1: all warnings being treated as errors&&&&&&&&To detect this problem, add a check to configure that&&&&verifies that GLIB_SIZEOF_SIZE_T matches sizeof(size_t).&&&&If this fails print a warning suggesting that the dev&&&&probably needs to set PKG_CONFIG_LIBDIR.&&&&&&&&On Fedora x86_64 it passes with any of:&&&&&&&& # ./configure&&&& # PKG_CONFIG_LIBDIR=/usr/lib/pkgconfig ./configure --extra-cflags=""-m32""&&&& # PKG_CONFIG_LIBDIR=/usr/lib64/pkgconfig ./configure --extra-cflags=""-m64""&&&&&&&&And fails with a mis-match&&&&&&&& # PKG_CONFIG_LIBDIR=/usr/lib64/pkgconfig ./configure --extra-cflags=""-m32""&&&& # PKG_CONFIG_LIBDIR=/usr/lib/pkgconfig ./configure --extra-cflags=""-m64""&&&&&&&&ERROR: sizeof(size_t) doesn't match GLIB_SIZEOF_SIZE_T.&&&&       You probably need to set PKG_CONFIG_LIBDIR&&&&       to point to the right pkg-config files for your&&&&       build target&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1453885245-15562-1-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, scripts/kvm/kvm_stat: Improve debugfs access checking Access checking with F_OK was replaced with the better readable&&&&os.path.exists().&&&&&&&&On Linux exists() returns False when the user doesn't have sufficient&&&&permissions for statting the directory. Therefore the error message&&&&now states that sufficient rights are needed when the check fails.&&&&&&&&Also added check for /sys/kernel/debug/tracing/.&&&&&&&&Signed-off-by: Janosch Frank <frankja@linux.vnet.ibm.com>&&&&Message-Id: <1452525484-32309-9-git-send-email-frankja@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," audio: Clean up inappropriate and unreachable use of hw_error() audio_init() should not use hw_error(), because dumping CPU registers&&&&is unhelpful there, and aborting is wrong, because it can be called&&&&called from an audio device's realize() method.&&&&&&&&The two uses of hw_error() come from commit 0d9acba:&&&&&&&&* When qemu_new_timer() fails.  It couldn't fail back then, and it&&&&  can't fail now.  Drop the unreachable error handling.&&&&&&&&* When no_audio_driver can't be initialized.  It couldn't fail back&&&&  then, and it can't fail now.  Replace the error handling by an&&&&  assertion.&&&&&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@pond.sub.org>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," spapr_drc: Make device ""spapr-dr-connector"" unavailable with -device It should only be created via spapr_dr_connector_new().  Attempting to&&&&create it with -device crashes.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," bt: check struct sizes See http://permalink.gmane.org/gmane.linux.bluez.kernel/36505.  For historical&&&&reasons these do not use sizeof, and Coverity caught a mistake in&&&&EVT_ENCRYPT_CHANGE_SIZE.&&&&&&&&In addition:&&&&&&&&- remove status from create_conn_cancel_cp; the ""status"" field is only&&&&in rp structs.  Note that this means that the OCF_CREATE_CONN_CANCEL&&&&could never have worked (it would have failed the LENGTH_CHECK), but&&&&I am keeping it anyway.&&&&&&&&- OCF_READ_LINK_QUALITY similarly could never have worked, but I am&&&&fixing read_link_quality_cp anyway.&&&&&&&&- fix inquiry_info which is shorter by one: the kernel has a struct that&&&&is 14 byte long, but not counting the initial num_responses byte which&&&&the kernel parses separately;&&&&&&&&- remove extended_inquiry_info altogether, since it's not used and unlike&&&&the other inquiry structs does not have the initial num_responses byte.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, crypto: fix leak of gnutls_dh_params_t data on credential unload The QCryptoTLSCredsX509 object was not free'ing the allocated&&&&gnutls_dh_params_t data when unloading the credentials&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
1, xen_disk: Account for failed and invalid operations Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: e0cbb96cb0e1f86c37c7ce332efdf02b57b9d365.1446044838.git.berto@igalia.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, nvme: Account for failed and invalid operations Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: 678dc67da229759d404b44f7cc2bf5ed8bf8ad14.1446044838.git.berto@igalia.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, memory: don't try to adjust endianness for zero length eventfd There's no need to adjust endianness for zero length eventfd since the&&&&data wrote was actually ignored by kernel. So skip the adjust in this&&&&case to fix a possible crash when trying to use wildcard mmio eventfd&&&&in ppc.&&&&&&&&Cc: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Acked-by: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1," PPC: mac99: Always add USB controller The mac99 machines always have a USB controller. Usually not having one around&&&&doesn't hurt quite as much, but Mac OS 9 really really wants one or it crashes&&&&on bootup.&&&&&&&&So always add OHCI to make it happy.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," migration_init: Fix lock initialisation/make it explicit Peter reported a lock error on MacOS after my a82d593b&&&&patch.&&&&&&&&migrate_get_current does one-time initialisation of&&&&a bunch of variables.&&&&migrate_init does reinitialisation even on a 2nd&&&&migrate after a cancel.&&&&&&&&The problem here was that I'd initialised the mutex&&&&in migrate_get_current, and the memset in migrate_init&&&&corrupted it.&&&&&&&&Remove the memset and replace it by explicit initialisation&&&&of fields that need initialising; this also turns out to be simpler&&&&than the old code that had to preserve some fields.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Fixes: a82d593b&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," ui: Use g_new() & friends where that makes obvious sense g_new(T, n) is neater than g_malloc(sizeof(T) * n).  It's also safer,&&&&for two reasons.  One, it catches multiplication overflowing size_t.&&&&Two, it returns T * rather than void *, which lets the compiler catch&&&&more type errors.&&&&&&&&This commit only touches allocations with size arguments of the form&&&&sizeof(T).  Same Coccinelle semantic patch as in commit b45c03f.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, target-i386: Don't left shift negative constant Left shift of negative values is undefined behavior. Detected by clang:&&&&  qemu/target-i386/translate.c:2423:26: runtime error:&&&&    left shift of negative value -8&&&&&&&&This changes the code to reverse the sign after the left shift.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
1," qga: guest-get-memory-blocks shouldn't fail for unexposed memory blocks Some guests don't expose memory blocks via sysfs at all. This&&&&shouldn't be a failure, instead just return an empty list. For&&&&other access failures we still report an error.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1, migration: fix deadlock Release qemu global mutex before call synchronize_rcu().&&&&synchronize_rcu() waiting for all readers to finish their critical&&&&sections. There is at least one critical section in which we try&&&&to get QGM (critical section is in address_space_rw() and&&&&prepare_mmio_access() is trying to aquire QGM).&&&&&&&&Both functions (migration_end() and migration_bitmap_extend())&&&&are called from main thread which is holding QGM.&&&&&&&&Thus there is a race condition that ends up with deadlock:&&&&main thread     working thread&&&&Lock QGA                |&&&&|             Call KVM_EXIT_IO handler&&&&|                       |&&&&|        Open rcu reader's critical section&&&&Migration cleanup bh    |&&&&|                       |&&&&synchronize_rcu() is    |&&&&waiting for readers     |&&&&|            prepare_mmio_access() is waiting for QGM&&&&  \                   /&&&&         deadlock&&&&&&&&The patch changes bitmap freeing from direct g_free after synchronize_rcu&&&&to free inside call_rcu.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reported-by: Igor Redko <redkoi@virtuozzo.com>&&&&Tested-by: Igor Redko <redkoi@virtuozzo.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&&&&&CC: Anna Melekhova <annam@virtuozzo.com>&&&&CC: Juan Quintela <quintela@redhat.com>&&&&CC: Amit Shah <amit.shah@redhat.com>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Wen Congyang <wency@cn.fujitsu.com>&&&& 
1, tcg: Allocate a guard page after code_gen_buffer This will catch any overflow of the buffer.&&&&&&&&Add a native win32 alternative for alloc_code_gen_buffer;&&&&remove the malloc alternative.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
1," vfio/pci: Cleanup vfio_early_setup_msix() error path With the addition of the Chelsio quirk we have an error path out of&&&&vfio_early_setup_msix() that doesn't free the allocated VFIOMSIXInfo&&&&struct.  This doesn't introduce a leak as it still gets freed in the&&&&vfio_put_device() path, but it's complicated and sloppy to rely on&&&&that.  Restructure to free the allocated data on error and only link&&&&it into the vdev on success.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Reported-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&& "
1," target-mips: get rid of MIPS_DEBUG_SIGN_EXTENSIONS MIPS_DEBUG_SIGN_EXTENSIONS was used sometimes ago to verify that 32-bit&&&&instructions correctly sign extend their results. It's now not need&&&&anymore, remove it.&&&&&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1," vnc: fix memory corruption (CVE-2015-5225) The _cmp_bytes variable added by commit ""bea60dd ui/vnc: fix potential&&&&memory corruption issues"" can become negative.  Result is (possibly&&&&exploitable) memory corruption.  Reason for that is it uses the stride&&&&instead of bytes per scanline to apply limits.&&&&&&&&For the server surface is is actually fine.  vnc creates that itself,&&&&there is never any padding and thus scanline length always equals stride.&&&&&&&&For the guest surface scanline length and stride are typically identical&&&&too, but it doesn't has to be that way.  So add and use a new variable&&&&(guest_ll) for the guest scanline length.  Also rename min_stride to&&&&line_bytes to make more clear what it actually is.  Finally sprinkle&&&&in an assert() to make sure we never use a negative _cmp_bytes again.&&&&&&&&Reported-by: 鑼冪鑷?搴撶壒) <zuozhi.fzz@alibaba-inc.com>&&&&Reviewed-by: P J P <ppandit@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," ahci.c: Don't assume AHCIState's parent is AHCIPCIState The AHCIState struct can either have AHCIPCIState or SysbusAHCIState&&&&as a parent. The ahci_irq_lower() and ahci_irq_raise() functions&&&&assume that it is always AHCIPCIState, which is not always the&&&&case, which causes a seg fault. Verify what the container of AHCIState&&&&is before setting the PCIDevice struct.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Acked-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Peter Crosthwaite <crosthwaite.peter@gmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, hw/net: handle flow control in mcf_fec driver receiver The network mcf_fec driver emulated receive side method is not dealing&&&&with network queue flow control properly.&&&&&&&&Modify the receive side to check if we have enough space in the&&&&descriptors to store the current packet. If not we process none of it&&&&and return 0. When the guest frees up some buffers through its descriptors&&&&we signal the qemu net layer to send more packets.&&&&&&&&[Fixed coding style: 4-space indent and curly braces on if statement.&&&&--Stefan]&&&&&&&&Signed-off-by: Greg Ungerer <gerg@uclinux.org>&&&&Message-id: 1438045374-10358-1-git-send-email-gerg@uclinux.org&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," scsi: fix buffer overflow in scsi_req_parse_cdb (CVE-2015-5158) This is a guest-triggerable buffer overflow present in QEMU 2.2.0&&&&and newer.  scsi_cdb_length returns -1 as an error value, but the&&&&caller does not check it.&&&&&&&&Luckily, the massive overflow means that QEMU will just SIGSEGV,&&&&making the impact much smaller.&&&&&&&&Reported-by: Zhu Donghai (鏈变笢娴? <donghai.zdh@alibaba-inc.com>&&&&Fixes: 1894df02811f6b79ea3ffbf1084599d96f316173&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," vnc: fix memory leak If vnc's password is configured, it will leak memory&&&&which cipher variable pointed on every vnc connection.&&&&&&&&Cc: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Message-Id: <1437556133-11268-1-git-send-email-arei.gonglei@huawei.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," hw/display/exynos4210_fimd: Fix bit-swapping code fimd_swap_data() includes code to reverse the bits in a&&&&64-bit integer, but an off-by-one error meant that it would&&&&try to shift off the top of the integer. Correct the bug&&&&(spotted by Coverity).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1432912615-23107-1-git-send-email-peter.maydell@linaro.org&&&& "
1," raw-posix: Fix .bdrv_co_get_block_status() for unaligned image size Image files with an unaligned image size have a final hole that starts&&&&at EOF, i.e. in the middle of a sector. Currently, *pnum == 0 is&&&&returned when checking the status of this sector. In qemu-img, this&&&&triggers an assertion failure.&&&&&&&&In order to fix this, one type for the sector that contains EOF must be&&&&found. Treating a hole as data is safe, so this patch rounds the&&&&calculated number of data sectors up, so that a partial sector at EOF is&&&&treated as a full data sector.&&&&&&&&This fixes https://bugzilla.redhat.com/show_bug.cgi?id=1229394&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Tested-by: Cole Robinson <crobinso@redhat.com>&&&& "
1," Add a protective section footer Badly formatted migration streams can go undetected or produce&&&&misleading errors due to a lock of checking at the end of sections.&&&&In particular a section that adds an extra 0x00 at the end&&&&causes what looks like a normal end of stream and thus doesn't produce&&&&any errors, and something that ends in a 0x01..0x04 kind of look&&&&like real section headers and then fail when the section parser tries&&&&to figure out which section they are.  This is made worse by the&&&&choice of 0x00..0x04 being small numbers that are particularly common&&&&in normal section data.&&&&&&&&This patch adds a section footer consisting of a marker (0x7e - ~)&&&&followed by the section-id that was also sent in the header.  If&&&&they mismatch then it throws an error explaining which section was&&&&being loaded.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," monitor: Drop broken, unused asynchronous command interface The asynchronous monitor command interface goes back to commit 940cc30&&&&(Jan 2010).  Added a third case to command execution.  The hope back&&&&then according to the commit message was that all commands get&&&&converted to the asynchronous interface, killing off the other two&&&&cases.  Didn't happen.&&&&&&&&The initial asynchronous commands balloon and info balloon were&&&&converted back to synchronous long ago (commit 96637bc and d72f32),&&&&with commit messages calling the asynchronous interface ""not fully&&&&working"" and ""deprecated"".  The only other user went away in commit&&&&3b5704b.&&&&&&&&New code generally uses synchronous commands and asynchronous events.&&&&&&&&What exactly is still ""not fully working"" with asynchronous commands?&&&&Well, here's a bug that defeats actual asynchronous use pretty&&&&reliably: the reply's ID is wrong (and has always been wrong) unless&&&&you use the command synchronously!  To reproduce, we need an&&&&asynchronous command, so we have to go back before commit 3b5704b.&&&&Run QEMU with spice:&&&&&&&&    $ qemu-system-x86_64 -nodefaults -S -spice port=5900,disable-ticketing -qmp stdio&&&&    {""QMP"": {""version"": {""qemu"": {""micro"": 94, ""minor"": 2, ""major"": 2}, ""package"": """"}, ""capabilities"": []}}&&&&&&&&Connect a spice client in another terminal:&&&&&&&&    $ remote-viewer spice://localhost:5900&&&&&&&&Set up a migration destination dummy in a third terminal:&&&&&&&&    $ socat TCP-LISTEN:12345 STDIO&&&&&&&&Now paste the following into the QMP monitor:&&&&&&&&    { ""execute"": ""qmp_capabilities"", ""id"": ""i0"" }&&&&    { ""execute"": ""client_migrate_info"", ""id"": ""i1"", ""arguments"": { ""protocol"": ""spice"", ""hostname"": ""localhost"", ""port"": 12345 } }&&&&    { ""execute"": ""query-kvm"", ""id"": ""i2"" }&&&&&&&&Produces two replies immediately, one to qmp_capabilities, and one to&&&&query-kvm:&&&&&&&&    {""return"": {}, ""id"": ""i0""}&&&&    {""return"": {""enabled"": false, ""present"": true}, ""id"": ""i2""}&&&&&&&&Both are correct.  Two lines of debug output from libspice-server not&&&&shown.&&&&&&&&Now EOF socat's standard input to make it close the connection.  This&&&&makes the asynchronous client_migrate_info complete.  It replies:&&&&&&&&    {""return"": {}}&&&&&&&&Bug: ""id"": ""i1"" is missing.  Two lines of debug output from&&&&libspice-server not shown.  Cherry on top: storage for the missing ID&&&&is leaked.&&&&&&&&Get rid of this stuff before somebody hurts himself with it.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," qemu-io: prompt for encryption keys when required The qemu-io tool does not check if the image is encrypted so&&&&historically would silently corrupt the sectors by writing&&&&plain text data into them instead of cipher text. The earlier&&&&commit turns this mistake into a fatal abort, so check for&&&&encryption and prompt for key when required.&&&&&&&&This enables us to add unit tests to ensure we don't break&&&&the ability of qemu-img to convert existing encrypted qcow2&&&&files into a non-encrypted format.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, block/parallels: implement parallels_check method of block driver The check is very simple at the moment. It calculates necessary stats&&&&and fix only the following errors:&&&&- space leak at the end of the image. This would happens due to&&&&  preallocation&&&&- clusters outside the image are zeroed. Nothing else could be done here&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Roman Kagan <rkagan@parallels.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Roman Kagan <rkagan@parallels.com>&&&&Message-id: 1430207220-24458-20-git-send-email-den@openvz.org&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, fdc: force the fifo access to be in bounds of the allocated buffer During processing of certain commands such as FD_CMD_READ_ID and&&&&FD_CMD_DRIVE_SPECIFICATION_COMMAND the fifo memory access could&&&&get out of bounds leading to memory corruption with values coming&&&&from the guest.&&&&&&&&Fix this by making sure that the index is always bounded by the&&&&allocated memory.&&&&&&&&This is CVE-2015-3456.&&&&&&&&Signed-off-by: Petr Matousek <pmatouse@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&& 
1," pci: Fix crash with illegal ""-net nic, model=xxx"" option Current QEMU crashes when specifying an illegal model with the&&&&""-net nic,model=xxx"" option, e.g.:&&&&&&&& $ qemu-system-x86_64 -net nic,model=n/a&&&& qemu-system-x86_64: Unsupported NIC model: n/a&&&&&&&& Program received signal SIGSEGV, Segmentation fault.&&&&&&&&The gdb backtrace looks like this:&&&&&&&&0x0000555555965fe0 in error_get_pretty (err=0x0) at util/error.c:152&&&&152	    return err->msg;&&&&(gdb) bt&&&& 0  0x0000555555965fe0 in error_get_pretty (err=0x0) at util/error.c:152&&&& 1  0x0000555555965ffd in error_report_err (err=0x0) at util/error.c:157&&&& 2  0x0000555555809c90 in pci_nic_init_nofail (nd=0x555555e49860 <nd_table>, rootbus=0x5555564409b0,&&&&    default_model=0x55555598c37b ""e1000"", default_devaddr=0x0) at hw/pci/pci.c:1663&&&& 3  0x0000555555691e42 in pc_nic_init (isa_bus=0x555556f71900, pci_bus=0x5555564409b0)&&&&    at hw/i386/pc.c:1506&&&& 4  0x000055555569396b in pc_init1 (machine=0x5555562abbf0, pci_enabled=1, kvmclock_enabled=1)&&&&    at hw/i386/pc_piix.c:248&&&& 5  0x0000555555693d27 in pc_init_pci (machine=0x5555562abbf0) at hw/i386/pc_piix.c:310&&&& 6  0x000055555572ddf5 in main (argc=3, argv=0x7fffffffe018, envp=0x7fffffffe038) at vl.c:4226&&&&&&&&The problem is that pci_nic_init_nofail() does not check whether the err&&&&parameter from pci_nic_init has been set up and thus passes a NULL pointer&&&&to error_report_err(). Fix it by correctly checking the err parameter.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," qga: fitering out -fstack-protector-strong configure script may add -fstack-protector-strong option instead&&&&of -fstack-protector-all, depending on availability ( see&&&&commit 63678e17c ). Both options have to by filtered out for&&&&qga-vss.dll, otherwise MinGW cross-compilation fails at linking&&&&stage.&&&&&&&&Signed-off-by: Joseph Hindin <jhindin@daynix.com>&&&&Message-Id: <1427906337-20805-2-git-send-email-jhindin@daynix.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," machine: query dump-guest-core machine property Running&&&&    qemu-bin ... -machine pc,dump-guest-core=on&&&&leads to crash:&&&&    x86_64-softmmu/qemu-system-x86_64 -machine pc,dump-guest-core=on&&&&    qemu-system-x86_64: qemu/util/qemu-option.c:387: qemu_opt_get_bool_helper:&&&&    Assertion `opt->desc && opt->desc->type == QEMU_OPT_BOOL' failed.  Aborted&&&&    (core dumped)&&&&&&&&This happens because the commit e79d5a6 (""machine: remove qemu_machine_opts&&&&global list"") removed the global option descriptions and moved them to&&&&MachineState's QOM properties.&&&&&&&&Fix this by querying machine properties through designated wrappers.&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," block/xen: Use blk_new_open() in blk_connect() As part of the required changes, this fixes a bug where specifying an&&&&invalid driver would result in the block layer probing the image format;&&&&now it will result in an error, unless ""<unset>"" is specified as the&&&&driver name. Fixing this would require further work on the xen_disk code&&&&which does not seem worth it (at this point and for this patch).&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1423162705-32065-7-git-send-email-mreitz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," PPC: Fix crash on spapr_tce_table_finalize() spapr_tce_table_finalize() can SEGV if the object was not previously&&&&realized.  In particular this can be triggered by running&&&&         qemu-system-ppc -device spapr-tce-table,?&&&&&&&&The basic problem is that we have mismatched initialization versus&&&&finalization: spapr_tce_table_finalize() is attempting to undo things that&&&&are done in spapr_tce_table_realize(), not an instance_init function.&&&&&&&&Therefore, replace spapr_tce_table_finalize() with&&&&spapr_tce_table_unrealize().&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," coverity: Model GLib string allocation partially Without a model, Coverity can't know that the result of g_strdup()&&&&needs to be fed to g_free().&&&&&&&&One way to get such a model is to scan GLib, build a derived model&&&&file with cov-collect-models, and use that when scanning QEMU.&&&&Unfortunately, the Coverity Scan service we use doesn't support that.&&&&&&&&Thus, we're stuck with the other way: write a user model.  Doing that&&&&for all of GLib is hardly practical.  I'm doing it for the ""String&&&&Utility Functions"" we actually use that return dynamically allocated&&&&strings.&&&&&&&&In a local scan, this flags 20 additional RESOURCE_LEAKs.  The ones I&&&&checked look genuine.&&&&&&&&It also loses a NULL_RETURNS about ppce500_init() using&&&&qemu_find_file() without error checking.  I don't understand why.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, target-arm: fix for exponent comparison in recpe_f64 f64 exponent in HELPER(recpe_f64) should be compared to 2045 rather than 1023&&&&(FPRecipEstimate in ARMV8 spec). This fixes incorrect underflow handling when&&&&flushing denormals to zero in the FRECPE instructions operating on 64-bit&&&&values.&&&&&&&&Signed-off-by: Ildar Isaev <ild@inbox.ru>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," fw_cfg: fix endianness in fw_cfg_data_mem_read() / _write() (1) Let's contemplate what device endianness means, for a memory mapped&&&&device register (independently of QEMU -- that is, on physical hardware).&&&&&&&&It determines the byte order that the device will put on the data bus when&&&&the device is producing a *numerical value* for the CPU. This byte order&&&&may differ from the CPU's own byte order, therefore when software wants to&&&&consume the *numerical value*, it may have to swap the byte order first.&&&&&&&&For example, suppose we have a device that exposes in a 2-byte register&&&&the number of sheep we have to count before falling asleep. If the value&&&&is decimal 37 (0x0025), then a big endian register will produce [0x00,&&&&0x25], while a little endian register will produce [0x25, 0x00].&&&&&&&&If the device register is big endian, but the CPU is little endian, the&&&&numerical value will read as 0x2500 (decimal 9472), which software has to&&&&byte swap before use.&&&&&&&&However... if we ask the device about who stole our herd of sheep, and it&&&&answers ""XY"", then the byte representation coming out of the register must&&&&be [0x58, 0x59], regardless of the device register's endianness for&&&&numeric values. And, software needs to copy these bytes into a string&&&&field regardless of the CPU's own endianness.&&&&&&&&(2) QEMU's device register accessor functions work with *numerical values*&&&&exclusively, not strings:&&&&&&&&The emulated register's read accessor function returns the numerical value&&&&(eg. 37 decimal, 0x0025) as a *host-encoded* uint64_t. QEMU translates&&&&this value for the guest to the endianness of the emulated device register&&&&(which is recorded in MemoryRegionOps.endianness). Then guest code must&&&&translate the numerical value from device register to guest CPU&&&&endianness, before including it in any computation (see (1)).&&&&&&&&(3) However, the data register of the fw_cfg device shall transfer strings&&&&*only* -- that is, opaque blobs. Interpretation of any given blob is&&&&subject to further agreement -- it can be an integer in an independently&&&&determined byte order, or a genuine string, or an array of structs of&&&&integers (in some byte order) and fixed size strings, and so on.&&&&&&&&Because register emulation in QEMU is integer-preserving, not&&&&string-preserving (see (2)), we have to jump through a few hoops.&&&&&&&&(3a) We defined the memory mapped fw_cfg data register as&&&&DEVICE_BIG_ENDIAN.&&&&&&&&The particular choice is not really relevant -- we picked BE only for&&&&consistency with the control register, which *does* transfer integers --&&&&but our choice affects how we must host-encode values from fw_cfg strings.&&&&&&&&(3b) Since we want the fw_cfg string ""XY"" to appear as the [0x58, 0x59]&&&&array on the data register, *and* we picked DEVICE_BIG_ENDIAN, we must&&&&compose the host (== C language) value 0x5859 in the read accessor&&&&function.&&&&&&&&(3c) When the guest performs the read access, the immediate uint16_t value&&&&will be 0x5958 (in LE guests) and 0x5859 (in BE guests). However, the&&&&uint16_t value does not matter. The only thing that matters is the byte&&&&pattern [0x58, 0x59], which the guest code must copy into the target&&&&string *without* any byte-swapping.&&&&&&&&(4) Now I get to explain where I screwed up. :(&&&&&&&&When we decided for big endian *integer* representation in the MMIO data&&&&register -- see (3a) --, I mindlessly added an indiscriminate&&&&byte-swizzling step to the (little endian) guest firmware.&&&&&&&&This was a grave error -- it violates (3c) --, but I didn't realize it. I&&&&only saw that the code I otherwise intended for fw_cfg_data_mem_read():&&&&&&&&    value = 0;&&&&    for (i = 0; i < size; ++i) {&&&&        value = (value << 8) | fw_cfg_read(s);&&&&    }&&&&&&&&didn't produce the expected result in the guest.&&&&&&&&In true facepalm style, instead of blaming my guest code (which violated&&&&(3c)), I blamed my host code (which was correct). Ultimately, I coded&&&&ldX_he_p() into fw_cfg_data_mem_read(), because that happened to work.&&&&&&&&Obviously (...in retrospect) that was wrong. Only because my host happened&&&&to be LE, ldX_he_p() composed the (otherwise incorrect) host value 0x5958&&&&from the fw_cfg string ""XY"". And that happened to compensate for the bogus&&&&indiscriminate byte-swizzling in my guest code.&&&&&&&&Clearly the current code leaks the host endianness through to the guest,&&&&which is wrong. Any device should work the same regardless of host&&&&endianness.&&&&&&&&The solution is to compose the host-endian representation (2) of the big&&&&endian interpretation (3a, 3b) of the fw_cfg string, and to drop the wrong&&&&byte-swizzling in the guest (3c).&&&&&&&&Brown paper bag time for me.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Message-id: 1420024880-15416-1-git-send-email-lersek@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," hw/net/xen_nic.c: Free 'netdev->txs' when map 'netdev->rxs' fails When map 'netdev->rxs' fails, need free the original resource, or will&&&&cause resource leak.&&&&&&&&Signed-off-by: Chen Gang <gang.chen.5i5j@gmail.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, vga: Add mechanism to force the use of a shadow surface This prevents surface sharing which will be necessary to&&&&fix cirrus HW cursor support.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," hw/arm/boot: fix uninitialized scalar variable warning reported by coverity Coverity reports the 'size' may be used uninitialized, but that can't happen,&&&&because the caller has checked ""if (binfo->dtb_filename || binfo->get_dtb)""&&&&before call 'load_dtb'.&&&&&&&&Here we simply remove the 'if (binfo->get_dtb)' to satisfy coverity.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Message-id: 1416826240-12368-1-git-send-email-zhang.zhanghailiang@huawei.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, bitmap.h: Don't include qemu-common.h This will avoid unexpected circular header dependencies in the future.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," virtio-serial: use aliases instead of duplicate qdev properties virtio-serial-{pci, s390, ccw} all duplicate the&&&&qdev properties of their VirtIOSerial child.&&&&This approach does not work well with string or pointer&&&&properties since we must be careful about leaking or&&&&double-freeing them.&&&&&&&&Use the QOM alias property to forward property accesses to the&&&&VirtIOSerial child.  This way no duplication is necessary.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," virtio/vhost-scsi: use aliases instead of duplicate qdev properties {virtio, vhost}-scsi-{pci, s390, ccw} all duplicate the&&&&qdev properties of their VirtIOSCSI/VHostSCSI child.&&&&This approach does not work well with string or pointer&&&&properties since we must be careful about leaking or&&&&double-freeing them.&&&&&&&&Use the QOM alias property to forward property accesses to the&&&&VirtIOSCSI/VHostSCSI child. This way no duplication is necessary.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qemu-char: Permit only a single ""stdio"" character device When more than one is used, the terminal settings aren't restored&&&&correctly on exit.  Fixable.  However, such usage makes no sense,&&&&because the users race for input, so outlaw it instead.&&&&&&&&If you want to connect multiple things to stdio, use the mux&&&&chardev.&&&&&&&&Signed-off-by: Li Liu <john.liuli@huawei.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," target-ppc: Bug Fix: mulldo OV Detection Fix the code to properly detect overflow; the 128 bit signed&&&&product must have all zeroes or all ones in the first 65 bits&&&&otherwise OV should be set.&&&&&&&&Example:&&&&&&&&R3 45F086A5D5887509&&&&R4 0000000000000002&&&&mulldo 3,3,4&&&&&&&&Should set XER[OV].&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," spice: make sure we don't overflow ssd->buf Related spice-only bug.  We have a fixed 16 MB buffer here, being&&&&presented to the spice-server as qxl video memory in case spice is&&&&used with a non-qxl card.  It's also used with qxl in vga mode.&&&&&&&&When using display resolutions requiring more than 16 MB of memory we&&&&are going to overflow that buffer.  In theory the guest can write,&&&&indirectly via spice-server.  The spice-server clears the memory after&&&&setting a new video mode though, triggering a segfault in the overflow&&&&case, so qemu crashes before the guest has a chance to do something&&&&evil.&&&&&&&&Fix that by switching to dynamic allocation for the buffer.&&&&&&&&CVE-2014-3615&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Cc: secalert@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&& "
1," libqtest: Correct small memory leak. Fixes a small memory leak inside of libqtest.&&&&After we produce a test path and glib copies the string&&&&for itself, we should clean up our temporary copy.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block: Handle failure for potentially large allocations Some code in the block layer makes potentially huge allocations. Failure&&&&is not completely unexpected there, so avoid aborting qemu and handle&&&&out-of-memory situations gracefully.&&&&&&&&This patch addresses bounce buffer allocations in block.c. While at it,&&&&convert bdrv_commit() from plain g_malloc() to qemu_try_blockalign().&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," image-fuzzer: Tool for fuzz tests execution The purpose of the test runner is to prepare the test environment (e.g. create&&&&a work directory, a test image, etc), execute a program under test with&&&&parameters, indicate a test failure if the program was killed during the test&&&&execution and collect core dumps, logs and other test artifacts.&&&&&&&&The test runner doesn't depend on an image format, so it can be used with any&&&&external image generator.&&&&&&&&[Fixed path to qcow2 format module ""qcow2"" instead of ""../qcow2"" since&&&&runner.py is no longer in a sub-directory.&&&&--Stefan]&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Maria Kustova <maria.k@catit.be>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," pc-dimm: error out if memory hotplug is not enabled fixes QEMU abort in case it's started without memory&&&&hotplug enabled.&&&&&&&&as result of fix it will print following messages:&&&&""&&&&-device pc-dimm,id=d1,memdev=m1: memory hotplug is not enabled, enable it on startup&&&&-device pc-dimm,id=d1,memdev=m1: Device 'pc-dimm' could not be initialized&&&&""&&&&&&&&Also fixup assert condition to detect hotplug address&&&&space overflow.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reported-by:  Hu Tao <hutao@cn.fujitsu.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," disas/libvixl: Fix wrong format strings When the compiler is told to check the arguments of AppendToOutput,&&&&it reports several errors of this kind:&&&&&&&&error: format 鈥?d鈥?expects argument of type 鈥榠nt鈥?&&&& but argument 3 has type 鈥榠nt64_t {aka long int}鈥?[-Werror=format]&&&&&&&&Fix those bugs by using the correct format strings with PRId64, PRIx64.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Message-id: 1403113751-19799-1-git-send-email-sw@weilnetz.de&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," qemu_opts_append: Play nicely with QemuOptsList's head When running a libvirt test suite I've noticed the qemu-img is&&&&crashing occasionally. Tracing the problem down led me to the&&&&following valgrind output:&&&&&&&&qemu.git $ valgrind -q ./qemu-img create -f qed -obacking_file=/dev/null,backing_fmt=raw qed&&&&==14881== Invalid write of size 8&&&&==14881==    at 0x1D263F: qemu_opts_create (qemu-option.c:692)&&&&==14881==    by 0x130782: bdrv_img_create (block.c:5531)&&&&==14881==    by 0x118DE0: img_create (qemu-img.c:462)&&&&==14881==    by 0x11E7E4: main (qemu-img.c:2830)&&&&==14881==  Address 0x11fedd38 is 24 bytes inside a block of size 232 free'd&&&&==14881==    at 0x4C2CA5E: realloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)&&&&==14881==    by 0x592D35E: g_realloc (in /usr/lib64/libglib-2.0.so.0.3800.2)&&&&==14881==    by 0x1D38D8: qemu_opts_append (qemu-option.c:1129)&&&&==14881==    by 0x13075E: bdrv_img_create (block.c:5528)&&&&==14881==    by 0x118DE0: img_create (qemu-img.c:462)&&&&==14881==    by 0x11E7E4: main (qemu-img.c:2830)&&&&==14881==&&&&Formatting 'qed', fmt=qed size=0 backing_file='/dev/null' backing_fmt='raw' cluster_size=65536&&&&==14881== Invalid write of size 8&&&&==14881==    at 0x1D28BE: qemu_opts_del (qemu-option.c:750)&&&&==14881==    by 0x130BF3: bdrv_img_create (block.c:5638)&&&&==14881==    by 0x118DE0: img_create (qemu-img.c:462)&&&&==14881==    by 0x11E7E4: main (qemu-img.c:2830)&&&&==14881==  Address 0x11fedd38 is 24 bytes inside a block of size 232 free'd&&&&==14881==    at 0x4C2CA5E: realloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)&&&&==14881==    by 0x592D35E: g_realloc (in /usr/lib64/libglib-2.0.so.0.3800.2)&&&&==14881==    by 0x1D38D8: qemu_opts_append (qemu-option.c:1129)&&&&==14881==    by 0x13075E: bdrv_img_create (block.c:5528)&&&&==14881==    by 0x118DE0: img_create (qemu-img.c:462)&&&&==14881==    by 0x11E7E4: main (qemu-img.c:2830)&&&&==14881==&&&&&&&&The problem is apparently in the qemu_opts_append(). Well, if it&&&&gets called twice or more. On the first call, when @dst is NULL&&&&some initialization is done during which @dst->head list gets&&&&initialized. The list is initialized in a way, so that the list&&&&tail points at the list head. However, the next time&&&&qemu_opts_append() is called for new options to be added,&&&&g_realloc() may move @dst to a new address making the old list tail&&&&point at an invalid address. If that's the case, we must update the&&&&list pointers.&&&&&&&&Signed-off-by: Michal Privoznik <mprivozn@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," vl: allow other threads to do qemu_system_vmstop_request There patch protects vmstop_requested with a lock and introduces&&&&qemu_system_vmstop_request_prepare.&&&&&&&&Together with the new call to qemu_vmstop_requested in vm_start,&&&&qemu_system_vmstop_request_prepare avoids a race where the VM could remain&&&&stopped even though the iostatus of a block device has already been set&&&&(for example).&&&&&&&&qemu_system_vmstop_request_prepare however also lets the caller thread&&&&delay observation of the state change until it has itself communicated&&&&that change to the user.  This delay avoids any possibility of a wrong&&&&reordering of the BLOCK_IO_ERROR event and the subsequent STOP event.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target-mips: implement UserLocal Register From MIPS documentation (Volume III):&&&&&&&&UserLocal Register (CP0 Register 4, Select 2)&&&&Compliance Level: Recommended.&&&&&&&&The UserLocal register is a read-write register that is not interpreted by&&&&the hardware and conditionally readable via the RDHWR instruction.&&&&&&&&This register only exists if the Config3-ULRI register field is set.&&&&&&&&Privileged software may write this register with arbitrary information and&&&&make it accessible to unprivileged software via register 29 (ULR) of the&&&&RDHWR instruction. To do so, bit 29 of the HWREna register must be set to a&&&&1 to enable unprivileged access to the register.&&&&&&&&Signed-off-by: Petar Jovanovic <petar.jovanovic@imgtec.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," block: asynchronously stop the VM on I/O errors With virtio-blk dataplane, I/O errors might occur while QEMU is&&&&not in the main I/O thread.  However, it's invalid to call vm_stop&&&&when we're neither in a VCPU thread nor in the main I/O thread,&&&&even if we were to take the iothread mutex around it.&&&&&&&&To avoid this problem, we can raise a request to the main I/O thread,&&&&similar to what QEMU does when vm_stop is called from a CPU thread.&&&&We know that bdrv_error_action is called from an AIO callback, and&&&&the moment at which the callback will fire is not well-defined; it&&&&depends on the moment at which the disk or OS finishes the operation,&&&&which can happen at any time.  Note that QEMU is certainly not in a CPU&&&&thread and we do not need to call cpu_stop_current() like vm_stop() does.&&&&&&&&However, we need to ensure that any action taken by management will&&&&result in correct detection of the error _and_ a running VM.  In particular:&&&&&&&&- the event must be raised after the iostatus has been set, so that&&&&""info block"" will return an iostatus that matches the event.&&&&&&&&- the VM must be stopped after the iostatus has been set, so that&&&&""info block"" will return an iostatus that matches the runstate.&&&&&&&&The ordering between the STOP and BLOCK_IO_ERROR events is preserved;&&&&BLOCK_IO_ERROR is documented to come first.&&&&&&&&This makes bdrv_error_action() thread safe (assuming QMP events are,&&&&which is attacked by a separate series).&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target-ppc: Remove PVR check from migration Currently migration fails if CPU version (PVR register) is different&&&&even a bit. This check is performed at the very end of migration when&&&&device states are sent. This is too late for management software and&&&&we need to provide a way for the user to make sure that migration&&&&will succeed if QEMU is started with appropritate command line parameters.&&&&&&&&This removes the PVR check.&&&&&&&&This resets PVR to the default value as the existing VMSTATE record&&&&for SPR array sends all 1024 registers unconditionally and overwrites&&&&the destination PVR.&&&&&&&&If the user wants some guarantees for migration to succeed, then&&&&a CPU name or ""host"" CPU with a ""compat"" option (on its way to upsteam)&&&&should be used and KVM or TCG is expected to fail on unsupported values&&&&at the moment of QEMU start.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," qdev: Add test of qdev_prop_check_global This will generate a warning from ""make check"":&&&&&&&&...&&&&GTESTER tests/test-qdev-global-props&&&&Warning: ""-global dynamic-prop-type-bad.prop3=103"" not used&&&&GTESTER tests/check-qom-interface&&&&...&&&&&&&&If the warning is not generated, the test will fail.&&&&&&&&Signed-off-by: Don Slutz <dslutz@verizon.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qcow1: Check maximum cluster size Huge values for header.cluster_bits cause unbounded allocations (e.g.&&&&for s->cluster_cache) and crash qemu this way. Less huge values may&&&&survive those allocations, but can cause integer overflows later on.&&&&&&&&The only cluster sizes that qemu can create are 4k (for standalone&&&&images) and 512 (for images with backing files), so we can limit it&&&&to 64k.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&& "
1," virtio-scsi: fix buffer overrun on invalid state load CVE-2013-4542&&&&&&&&hw/scsi/scsi-bus.c invokes load_request.&&&&&&&& virtio_scsi_load_request does:&&&&    qemu_get_buffer(f, (unsigned char *)&req->elem, sizeof(req->elem));&&&&&&&&this probably can make elem invalid, for example,&&&&make in_num or out_num huge, then:&&&&&&&&    virtio_scsi_parse_req(s, vs->cmd_vqs[n], req);&&&&&&&&will do:&&&&&&&&    if (req->elem.out_num > 1) {&&&&        qemu_sgl_init_external(req, &req->elem.out_sg[1],&&&&                               &req->elem.out_addr[1],&&&&                               req->elem.out_num - 1);&&&&    } else {&&&&        qemu_sgl_init_external(req, &req->elem.in_sg[1],&&&&                               &req->elem.in_addr[1],&&&&                               req->elem.in_num - 1);&&&&    }&&&&&&&&and this will access out of array bounds.&&&&&&&&Note: this adds security checks within assert calls since&&&&SCSIBusInfo's load_request cannot fail.&&&&For now simply disable builds with NDEBUG - there seems&&&&to be little value in supporting these.&&&&&&&&Cc: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," hpet: fix buffer overrun on invalid state load CVE-2013-4527 hw/timer/hpet.c buffer overrun&&&&&&&&hpet is a VARRAY with a uint8 size but static array of 32&&&&&&&&To fix, make sure num_timers is valid using VMSTATE_VALID hook.&&&&&&&&Reported-by: Anthony Liguori <anthony@codemonkey.ws>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1, usb: mtp: fix possible buffer overflow Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Peter Wu <peter@lekensteyn.nl>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," qom: Fix crash with qom-list and link properties Commit 9561fda8d90e176bef598ba87c42a1bd6ad03ef7 changed the type of&&&&'opaque' for link properties, but missed updating this call site.&&&&Reproducer:&&&&&&&&./x86_64-softmmu/qemu-system-x86_64 -qmp unix:./qmp.sock,server &&&&&./scripts/qmp/qmp-shell ./qmp.sock&&&&(QEMU) qom-list path=//machine/i440fx/pci.0/child[2]&&&&&&&&Reported-by: Marcin Gibu艂a <m.gibula@beyond.pl>&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Message-id: 2f8f007ce2152ac3b65f0811199662799c509225.1397155389.git.crobinso@redhat.com&&&&Acked-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," hw/ide/ahci.c: Avoid shift left into sign bit Add U suffix to avoid shifting left into the sign bit, which&&&&is undefined behaviour.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," dmg: prevent chunk buffer overflow (CVE-2014-0145) Both compressed and uncompressed I/O is buffered.  dmg_open() calculates&&&&the maximum buffer size needed from the metadata in the image file.&&&&&&&&There is currently a buffer overflow since ->lengths[] is accounted&&&&against the maximum compressed buffer size but actually uses the&&&&uncompressed buffer:&&&&&&&&  switch (s->types[chunk]) {&&&&  case 1: /* copy */&&&&      ret = bdrv_pread(bs->file, s->offsets[chunk],&&&&                       s->uncompressed_chunk, s->lengths[chunk]);&&&&&&&&We must account against the maximum uncompressed buffer size for type=1&&&&chunks.&&&&&&&&This patch fixes the maximum buffer size calculation to take into&&&&account the chunk type.  It is critical that we update the correct&&&&maximum since there are two buffers ->compressed_chunk and&&&&->uncompressed_chunk.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," qcow2: Check refcount table size (CVE-2014-0144) Limit the in-memory reference count table size to 8 MB, it's enough in&&&&practice. This fixes an unbounded allocation as well as a buffer&&&&overflow in qcow2_refcount_init().&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," curl: check data size before memcpy to local buffer. (CVE-2014-0144) curl_read_cb is callback function for libcurl when data arrives. The&&&&data size passed in here is not guaranteed to be within the range of&&&&request we submitted, so we may overflow the guest IO buffer. Check the&&&&real size we have before memcpy to buffer to avoid overflow.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, bochs: Check catalog_size header field (CVE-2014-0143) It should neither become negative nor allow unbounded memory&&&&allocations. This fixes aborts in g_malloc() and an s->catalog_bitmap&&&&buffer overflow on big endian hosts.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," page_check_range: don't bail out early after unprotecting page When checking a page range, if we found that a page was&&&&made read-only by QEMU because it contained translated code,&&&&we were incorrectly returning immediately after unprotecting&&&&that page, rather than continuing to check the entire range,&&&&so we might fail to unprotect pages later in the range, or&&&&might incorrectly return a ""success"" result even if later&&&&pages were not writable.&&&&&&&&In particular, this could cause segfaults in a case where&&&&signals are delivered back to back on a target architecture&&&&which uses trampoline code in the stack frame (as AArch64&&&&currently does). The second signal causes a segfault because&&&&the frame cannot be written to (it was protected because&&&&we translated and executed the restorer trampoline, and the&&&&unprotect logic did not unprotect the whole range).&&&&&&&&Signed-off-by: Andrei Warkentin <andrey.warkentin@gmail.com&&&&[PMM: expanded commit message a bit]&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, block: make bdrv_swap rebuild the bs graph node list field. Moving only the node_name one field could lead to some inconsitencies where a&&&&node_name was defined on a bs which was not registered in the graph node list.&&&&&&&&bdrv_swap between a named node bs and a non named node bs would lead to this.&&&&&&&&bdrv_make_anon would then crash because it would try to remove the bs from the&&&&graph node list while it is not in it.&&&&&&&&This patch remove named node bses from the graph node list before doing the swap&&&&then insert them back.&&&&&&&&Signed-off-by: Benoit Canet <benoit@irqsave.net>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," target-ppc: Enable frsqrtes on Power7 and Power8 The frsqrtes instruction was introduced prior to ISA 2.06 and is&&&&support on both the Power7 and Power8 processors.  However, this&&&&instruction is handled as illegal in the current QEMU emulation&&&&machines.  This patch enables the existing implemention of frsqrtes&&&&in the P7 and P8 machines.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," s390x/virtio-hcall: Add range check for hypervisor call The handler for diag 500 did not check whether the requested function&&&&was in the supported range, so illegal values could crash QEMU in the&&&&worst case.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&CC: qemu-stable@nongnu.org&&&& "
1, qxl: add sanity check Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&& 
1," qapi: Refine human printing of sizes This fixes several bugs or shortcomings of the previous pretty-printer.&&&&In particular:&&&&&&&&* use PRIu64 instead of casting to long long&&&&&&&&* the exact value is included too&&&&&&&&* the correct unit of measure (MiB, GiB, etc.) is used.  PiB and EiB&&&&are added too.&&&&&&&&* due to an off-by-one error, 512*2^30 was printed as 0.500MiB rather than&&&&512MiB.  floor(log2(val)) is equal to 63 - clz(val), while the code used 64.&&&&&&&&* The desired specification is %g rather than %f, which always uses three&&&&decimals in the current code.  However %g would switch to scientific&&&&notation when the integer part is >= 1000 (e.g. 1000*2^30).  To keep the&&&&code simple, switch to the higher power when the integer part is >= 1000;&&&&overflow is avoided by using frexp instead of clz.&&&&&&&&Suggested-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, hw/lm32: print error if cpu model is not found QEMU crashed if a the given cpu_model is not found.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1, blkdebug: Don't leak bs->file on failure Reported-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&& 
1," migration:fix free XBZRLE decoded_buf wrong When qemu do live migration with xbzrle, qemu malloc decoded_buf&&&&at destination end but free it at source end. It will crash qemu&&&&by double free error in some scenarios. Splitting the XBZRLE structure&&&&for clear logic distinguishing src/dst side.&&&&&&&&Signed-off-by: ChenLiang <chenliang88@huawei.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Orit Wasserman <owasserm@redhat.com>&&&&Signed-off-by: GongLei <arei.gonglei@huawei.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," rbd: switch from pipe to QEMUBH completion notification rbd callbacks are called from non-QEMU threads.  Up until now a pipe was&&&&used to signal completion back to the QEMU iothread.&&&&&&&&The pipe writer code handles EAGAIN using select(2).  The select(2) API&&&&is not scalable since fd_set size is static.  FD_SET() can write beyond&&&&the end of fd_set if the file descriptor number is too high.  (QEMU's&&&&main loop uses poll(2) to avoid this issue with select(2).)&&&&&&&&Since the pipe itself is quite clumsy to use and QEMUBH is now&&&&thread-safe, just schedule a BH from the rbd callback function.  This&&&&way we can simplify I/O completion in addition to eliminating the&&&&potential FD_SET() crash when file descriptor numbers become too high.&&&&&&&&Crash scenario: QEMU already has 1024 file descriptors open.  Hotplug an&&&&rbd drive and get the pipe writer to take the select(2) code path.&&&&&&&&Reviewed-by: Josh Durgin <josh.durgin@inktank.com>&&&&Tested-by: Josh Durgin <josh.durgin@inktank.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, KVM: Retry KVM_CREATE_VM on EINTR Upstreaming this change from Android (https://android-review.googlesource.com/54211).&&&&&&&&On heavily loaded machines with many VM instances we see KVM_CREATE_VM&&&&failing with EINTR on this path:&&&&&&&&kvm_dev_ioctl_create_vm -> kvm_create_vm -> kvm_init_mmu_notifier -> mmu_notifier_register ->  do_mmu_notifier_register -> mm_take_all_locks&&&&&&&&which checks if any signals have been raised while it was attaining locks&&&&and returns EINTR.  Retrying the system call greatly improves reliability.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: thomas knych <thomaswk@google.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, mempath prefault: fix off-by-one error Fix off-by-one error (noticed by Andrea Arcangeli).&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& 
1," target-arm: A64: add support for EXTR This patch adds emulation support for the EXTR instruction.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&&&&&[claudio: adapted for new decoder, removed a few temporaries,&&&&          fixed the 32bit bug, added checks for more&&&&          unallocated cases]&&&&&&&&Signed-off-by: Claudio Fontana <claudio.fontana@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
1," scsi-disk: reject ANCHOR=1 for UNMAP and WRITE SAME commands Since we report ANC_SUP==0 in VPD page B2h, we need to return&&&&an error (ILLEGAL REQUEST/INVALID FIELD IN CDB) for all WRITE SAME&&&&requests with ANCHOR==1.&&&&&&&&Inspired by a similar patch to the LIO in-kernel target.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block/iscsi: check WRITE SAME support differently depending on MAY_UNMAP The current check is right for MAY_UNMAP=1.  For MAY_UNMAP=0, just&&&&try and fall back to regular writes as soon as a WRITE SAME command&&&&fails.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," scsi: Allocate SCSITargetReq r->buf dynamically [CVE-2013-4344] r->buf is hardcoded to 2056 which is (256 + 1) * 8, allowing 256 luns at&&&&most. If more than 256 luns are specified by user, we have buffer&&&&overflow in scsi_target_emulate_report_luns.&&&&&&&&To fix, we allocate the buffer dynamically.&&&&&&&&Signed-off-by: Asias He <asias@redhat.com>&&&&Tested-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qemu-char: Fix potential out of bounds access to local arrays Latest gcc-4.8 supports a new option -fsanitize=address which activates&&&&an AddressSanitizer. This AddressSanitizer stops the QEMU system emulation&&&&very early because two character arrays of size 8 are potentially written&&&&with 9 bytes.&&&&&&&&Commit 6ea314d91439741e95772dfbab98b4135e04bebb added the code.&&&&&&&&There is no obvious reason why width or height could need 8 characters,&&&&so reduce it to 7 characters which together with the terminating '\0'&&&&fit into the arrays.&&&&&&&&Cc: qemu-stable <qemu-stable@nongnu.org>&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: Alex Benn茅e <alex@bennee.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, qemu/xen: make use of xenstore relative paths Qemu has several hardcoded xenstore paths that are only valid on Dom0.&&&&Attempts to launch a Qemu instance (to act as a userspace backend for&&&&PV disks) will fail because Qemu is not able to access those paths&&&&when running on a domain different than Dom0.&&&&&&&&Instead make the xenstore paths relative to the domain where Qemu is&&&&actually running.&&&&&&&&Signed-off-by: Roger Pau Monn茅 <roger.pau@citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Reviewed-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Cc: xen-devel@lists.xenproject.org&&&&Cc: Anthony PERARD <anthony.perard@citrix.com>&&&& 
1," tcg-ppc: Fix and cleanup tcg_out_tlb_check The fix is that sparc has so many mmu modes that the last one overflowed&&&&the 16-bit signed offset we assumed would fit.  Handle this, and check&&&&the new assumption at compile time.&&&&&&&&Load the tlb addend earlier for the fast path.&&&&&&&&Remove the explicit address + addend and make use of index addressing.&&&&&&&&Adjust constraints for qemu_ld64 such that we don't clobber the address&&&&register or tlb addend before loading both values.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
1," scsi: Fix scsi_bus_legacy_add_drive() scsi-generic with serial scsi_bus_legacy_add_drive() creates either a scsi-disk or a&&&&scsi-generic device.  It sets property ""serial"" to argument serial&&&&unless null.  Crashes with scsi-generic, because it doesn't have such&&&&the property.&&&&&&&&Only usb_msd_initfn_storage() passes non-null serial.  Reproducer:&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -S -usb \&&&&    -drive if=none,file=/dev/sg1,id=usb-drv0 \&&&&    -device usb-storage,id=usb-msd0,drive=usb-drv0,serial=123&&&&    qemu-system-x86_64: -device usb-storage,id=usb-msd0,drive=usb-drv0,serial=123: Property '.serial' not found&&&&    Aborted (core dumped)&&&&&&&&Fix by handling exactly like ""removable"": set the property only when&&&&it exists.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," linux-user/signal.c: Avoid using uninitialized data in ARM sigreturn Rephrase code used in ARM sigreturn functions to avoid using&&&&uninitialized variables. This fixes one genuine problem ('frame'&&&&would not be initialized if we took the error-exit path because&&&&our stackpointer was misaligned) and one which is clang being&&&&alarmist (frame_addr wouldn't be initialized, though this is&&&&harmless since unlock_user_struct ignores its second argument&&&&in these cases; however since we don't generally make use of&&&&this not-really-documented effect it's better avoided).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1375095632-13735-3-git-send-email-peter.maydell@linaro.org&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Fix real mode guest migration Older KVM versions save CS dpl value to an invalid value for real mode guests&&&&(0x3). This patch detect this situation when loading CPU state and set all the&&&&segments dpl to zero.&&&&This will allow migration from older KVM on host without unrestricted guest&&&&to hosts with restricted guest support.&&&&For example migration from a Penryn host (with kernel 2.6.32) to&&&&a Westmere host (for real mode guest) will fail with ""kvm: unhandled exit 80000021"".&&&&&&&&Signed-off-by: Orit Wasserman <owasserm@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," qemu-option: Fix qemu_opts_find() for null id arguments Crashes when the first list member has an ID.  Admittedly nonsensical&&&&reproducer:&&&&&&&&$ qemu-system-x86_64 -nodefaults -machine id=foo -machine """"&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1372943363-24081-2-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," xen_machine_pv: do not create a dummy CPU in machine->init This fixes a regression introduced by:&&&&&&&&commit 62fc403f11523169eb4264de31279745f48e3ecc&&&&Author: Igor Mammedov <imammedo@redhat.com>&&&&Date:   Mon Apr 29 18:54:13 2013 +0200&&&&&&&&    target-i386: Attach ICC bus to CPU on its creation&&&&&&&&    X86CPU should have parent bus so it could provide bus for child APIC.&&&&&&&&The commit makes it mandatory to pass a valid ICC bus to cpu_x86_create,&&&&but cpu_x86_init just passes NULL to it.&&&&xen_machine_pv uses cpu_x86_init, therefore it has been broken.&&&&&&&&This patch fixes the problem by removing the dummy CPU creation&&&&altogether from xen_init_pv, relying on the fact that QEMU can now cope&&&&with a machine without an emulated CPU.&&&&&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&CC: imammedo@redhat.com&&&&CC: qemu-stable@nongnu.org&&&& "
1," exec: eliminate io_mem_ram It is never used, the IOTLB always goes through io_mem_notdirty.&&&&&&&&In fact in softmmu_template.h, if it were, QEMU would crash just&&&&below the tests, as soon as io_mem_read/write dispatches to&&&&error_mem_read/write.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," configure: Detect uuid on MacOSX (fixes compile failure) Commit 7791dba3ec broke compilation on MacOSX, because it introduced&&&&a new include of util.h. On MacOSX this includes pwd.h which in turn&&&&includes the system uuid/uuid.h, which causes a compile failure if&&&&QEMU was configured without CONFIG_UUID due to a conflict between&&&&the system header and our fallback versions:&&&&  block/vdi.c:124:20: error: static declaration of 'uuid_generate'&&&&  follows non-static declaration&&&&  static inline void uuid_generate(uuid_t out)&&&&                     ^&&&&  /usr/include/uuid/uuid.h:63:6: note: previous declaration is here&&&&  void uuid_generate(uuid_t out);&&&&       ^&&&&&&&&Fix this breakage by improving configure's check for uuid to work on&&&&MacOSX (where there is no need to link in a separate libuuid).&&&&&&&&Note that if the user explicitly runs configure with '--disable-uuid'&&&&on MacOSX then QEMU will fail to compile.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1368563799-22755-1-git-send-email-peter.maydell@linaro.org&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, qemu-iotests: Filter out 'adapter_type' Filter out vmdk creation option 'adapter_type' for vmdk. So that tests&&&&with an explicit './check -o adapter_type=XXX' will not fail.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," ccid-card-emul: do not crash if backend is not provided Program received signal SIGSEGV, Segmentation fault.&&&&__strcmp_sse42 () at ../sysdeps/x86_64/multiarch/strcmp-sse42.S:164&&&&164               movdqu        (%rsi), %xmm2&&&&(gdb) bt&&&&    at /home/elmarco/320g/src/qemu/hw/ccid-card-emulated.c:477&&&&    at /home/elmarco/320g/src/qemu/hw/ccid-card-emulated.c:503&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <mlureau@redhat.com>&&&&Reviewed-by: Alon Levy <alevy@redhat.com>&&&& "
1," qemu-log: Remove qemu_log_try_set_file() and its users Remove the function qemu_log_try_set_file() and its users (which&&&&are all in TCG code generation functions for various targets).&&&&This function was added to abstract out code which was originally&&&&written as ""if (!logfile) logfile = stderr;"" in order that BUG:&&&&case code which did an unguarded ""fprintf(logfile, ...)"" would&&&&not crash if debug logging was not enabled. Since those direct&&&&uses of logfile have also been abstracted away into qemu_log()&&&&calls which check for a NULL logfile, there is no need for the&&&&target-* files to mess with the user's chosen logging settings.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Acked-by: Michael Walle <michael@walle.cc>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," bochs: Fix bdrv_open() error handling Return -errno instead of -1 on errors. While touching the&&&&code, fix a memory leak.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, target-arm: Fix TCG temp leaks for WI and UNDEF VFP sysreg writes Fix a leak of a TCG temporary in code paths for VFP system register&&&&writes for cases which UNDEF or are write-ignored.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," target-i386: Remove setting tsc-frequency from x86_def_t Setting tsc-frequency from x86_def_t is NOP because default tsc_khz&&&&in x86_def_t is 0 and CPUX86State.tsc_khz is also initialized to 0&&&&by default. So there is no need to overwrite tsc_khz with default 0&&&&because field was already initialized to 0.&&&&&&&&Custom tsc-frequency setting is not affected due to it being set&&&&without using x86_def_t.&&&&&&&&Field tsc_khz in x86_def_t becomes unused with this patch, so drop it&&&&as well.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," vnc: Clean up vncws_send_handshake_response() Use appropriate types, drop superfluous casts, use sizeof, don't&&&&exploit that this particular call of gnutls_fingerprint() doesn't&&&&change its last argument.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block: Monitor command commit neglects to report some errors The non-live bdrv_commit() function may return one of the following&&&&errors: -ENOTSUP, -EBUSY, -EACCES, -EIO.  The only error that is&&&&checked in the HMP handler is -EBUSY, so the monitor command 'commit'&&&&silently fails for all error cases other than 'Device is in use'.&&&&&&&&Report error using monitor_printf() and strerror(), and convert existing&&&&qerror_report() calls in do_commit() to monitor_printf().&&&&&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," dataplane: avoid reentrancy during virtio_blk_data_plane_stop() When dataplane is stopping, the s->vdev->binding->set_host_notifier(...,&&&&false) call can invoke the virtqueue handler if an ioeventfd&&&&notification is pending.  This causes hw/virtio-blk.c to invoke&&&&virtio_blk_data_plane_start() before virtio_blk_data_plane_stop()&&&&returns!&&&&&&&&The result is that we try to restart dataplane while trying to stop it&&&&and the following assertion is raised:&&&&&&&&  msix_set_mask_notifier: Assertion `!dev->msix_mask_notifier' failed.&&&&&&&&Although the code was intended to prevent this scenario, the s->started&&&&boolean isn't enough.  Add s->stopping so that we can postpone clearing&&&&s->started until we've completely stopped dataplane.&&&&&&&&This way, virtqueue handler calls during virtio_blk_data_plane_stop()&&&&are ignored.  When dataplane is legitimately started again later we&&&&already self-kick ourselves to resume processing.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," openpic: don't crash on a register access without a CPU context If we access a register via the QEMU memory inspection commands (e.g.&&&&""xp"") rather than from guest code, we won't have a CPU context.&&&&Gracefully fail to access the register in that case, rather than&&&&crashing.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," usb: Fix usb_ep_find_packet_by_id usb_ep_find_packet_by_id mistakenly only checks the first packet and if that&&&&is not a match, keeps trying the first packet! This patch fixes this.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," uhci: Limit amount of frames processed in one go Before this patch uhci would process an unlimited amount of frames when&&&&behind on schedule, by setting the timer to a time already past, causing the&&&&timer subsys to immediately recall the frame_timer function gain.&&&&&&&&This would cause invalid cancellations of bulk queues when the catching up&&&&processed more then 32 frames at a moment when the bulk qh was temporarily&&&&unlinked (which the Linux uhci driver does).&&&&&&&&This patch fixes this by processing maximum 16 frames in one go, and always&&&&setting the timer one ms later, making the code behave more like the ehci&&&&code.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," pc_sysfw: Check for qemu_find_file() failure pc_fw_add_pflash_drv() ignores qemu_find_file() failure, and happily&&&&creates a drive without a medium.&&&&&&&&When pc_system_flash_init() asks for its size, bdrv_getlength() fails&&&&with -ENOMEDIUM, which isn't checked either.  It fails relatively&&&&cleanly only because -ENOMEDIUM isn't a multiple of 4096:&&&&&&&&    $ qemu-system-x86_64 -S -vnc :0 -bios nonexistant&&&&    qemu: PC system firmware (pflash) must be a multiple of 0x1000&&&&    [Exit 1 ]&&&&&&&&Fix by handling the qemu_find_file() failure.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," qemu-char: Inherit ptys and improve output from -serial pty Changes since V1:&&&&  - Avoid crashing since qemu_opts_id() may return null on some&&&&    systems according to Markus's suggestion.&&&&&&&&When controlling a qemu instance from another program, it's&&&&hard to know which serial port or monitor device is redirected&&&&to which pty. With more than one device using ""pty"" a lot of&&&&guesswork is involved.&&&&&&&&$ ./x86_64-softmmu/qemu-system-x86_64 -serial pty -serial pty -monitor pty&&&&char device redirected to /dev/pts/5&&&&char device redirected to /dev/pts/6&&&&char device redirected to /dev/pts/7&&&&&&&&Although we can find out what everything else is connected to&&&&by the ""info chardev"" with ""-monitor stdio"" in the command line,&&&&It'd be very useful to be able to have qemu inherit pseudo-tty&&&&file descriptors so they could just be specified on the command&&&&line like:&&&&&&&&$ ./x86_64-softmmu/qemu-system-x86_64 -serial pty -serial pty -monitor pty&&&&char device compat_monitor0 redirected to /dev/pts/5&&&&char device serial0 redirected to /dev/pts/6&&&&char device serial1 redirected to /dev/pts/7&&&&&&&&Referred link: https://bugs.launchpad.net/qemu/+bug/938552&&&&&&&&Signed-off-by: Lei Li <lilei@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, spice: add new spice-server callbacks to ui/spice-display.c Otherwise qemu crashes with non-qxl graphics cards.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," hw/qxl: guest bug on primary create with stride %4 != 0 Due to usage of pixman for rendering on all spice surfaces we have&&&&pixman's requirement that the stride be word aligned. A guest not&&&&honoring that can crash spice and qemu with it due to failure to create&&&&a surface (in spice-server). Avoid this early on in primary surface&&&&creation and offscreen surface creation.&&&&&&&&Recently windows guests got odd width support which triggers a non word&&&&aligned primary surface in 16bit color depth. Off screen surfaces have&&&&always been word aligned, but doesn't hurt to check them here too.&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," Issue warning when deprecated drive parameter boot=on|off is used Releases of qemu-kvm will be interrupted at qemu 1.3.0.&&&&Users should switch to plain qemu releases.&&&&To avoid breaking scenarios which are setup with command line&&&&options specific to qemu-kvm, port these switches from qemu-kvm&&&&to qemu.git.&&&&&&&&Port drive boot option. From the qemu-kvm original commit message:&&&&&&&&We do not want to maintain this option forever. It will be removed after&&&&a grace period of a few releases. So warn the user that this option has&&&&no effect and will become invalid soon.&&&&&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
1," sheepdog: avoid a few buffer overruns * parse_vdiname: Use pstrcpy, not strncpy, when the destination&&&&buffer must be NUL-terminated.&&&&* sd_open: Likewise, avoid buffer overrun.&&&&* do_sd_create: Likewise.  Leave the preceding memset, since&&&&pstrcpy does not NUL-fill, and filename needs that.&&&&* sd_snapshot_create: Add a comment/question.&&&&* find_vdi_name: Remove a useless memset.&&&&* sd_snapshot_goto: Remove a useless memset.&&&&Use pstrcpy to NUL-terminate, because find_vdi_name requires&&&&that its vdi arg (filename parameter) be NUL-terminated.&&&&It seems ok not to NUL-fill the buffer.&&&&Do the same for snapid: remove useless memset-0 (instead,&&&&zero tag[0]).  Use pstrcpy, not strncpy.&&&&* sd_snapshot_list: Use pstrcpy, not strncpy to write&&&&into the ->name member.  Each must be NUL-terminated.&&&&&&&&Acked-by: Kevin Wolf <kwolf@redhat.com>&&&&Acked-by: MORITA Kazutaka <morita.kazutaka@lab.ntt.co.jp>&&&&Signed-off-by: Jim Meyering <meyering@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," hw/arm_gic.c: Fix improper DPRINTF output. s->cpu_enabled is an array, so s->cpu_enabled ? ""En"" : ""Dis"" returns&&&&""En"" always. We should use s->cpu_enabled[cpu] here.&&&&&&&&Signed-off-by: Evgeny Voevodin <e.voevodin@samsung.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," qemu-iotests: add test for pausing a streaming operation These check that a paused streaming job does not advance its offset.&&&&&&&&Sometimes the new test fails; the map is different between the source&&&&and the destination of the streaming because qemu-io does not always&&&&pack adjacent clusters that have the same allocated/unallocated state.&&&&However, this also happens with the existing test_stream testcase, and&&&&is better fixed in qemu-io.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Fix address handling in inet_nonblocking_connect getaddrinfo can give us a list of addresses, but we only try to&&&&connect to the first one. If that fails we never proceed to&&&&the next one.  This is common on desktop setups that often have ipv6&&&&configured but not actually working.&&&&&&&&To fix this make inet_connect_nonblocking retry connection with a different&&&&address.&&&&callers on inet_nonblocking_connect register a callback function that will&&&&be called when connect opertion completes, in case of failure the fd will have&&&&a negative value&&&&&&&&Signed-off-by: Orit Wasserman <owasserm@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, ehci: check for EHCI_ASYNC_FINISHED first in ehci_free_packet Otherwise we'll see the packet free twice in the trace log even though&&&&it actually happens only once.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," ehci: Fix memory leak in handling of NAK-ed packets Currently each time we try to execute a NAK-ed packet we redo&&&&ehci_init_transfer, and usb_packet_map, re-allocing (without freeing) the&&&&sg list every time.&&&&&&&&This patch fixes this, it does this by introducing another async state, so&&&&that we also properly cleanup a NAK-ed packet on cancel.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," i8259: add -no-spurious-interrupt-hack option This patch provides a way to optionally suppress spurious interrupts,&&&&as a workaround for systems described below:&&&&&&&&Some old operating systems do not handle spurious interrupts well,&&&&and qemu tends to generate them significantly more often than&&&&real hardware.&&&&&&&&Examples:&&&&  - Microport UNIX System V/386 v 2.1 (ca 1987)&&&&    (The main problem I'm fixing: Without this patch, it panics&&&&    sporadically when accessing the hard disk.)&&&&  - AT&T UNIX System V/386 Release 4.0 Version 2.1a (ca 1991)&&&&    See screenshot in ""QEMU Official OS Support List"":&&&&    http://www.claunia.com/qemu/objectManager.php?sClass=application&iId=9&&&&    (I don't have this system to test.)&&&&  - A report about OS/2 boot lockup from 2004 by Hampa Hug:&&&&    http://lists.nongnu.org/archive/html/qemu-devel/2004-09/msg00367.html&&&&    (My patch was partially inspired by his.)&&&&    Also: http://lists.nongnu.org/archive/html/qemu-devel/2005-06/msg00243.html&&&&    (I don't have this system to test.)&&&&&&&&Signed-off-by: Matthew Ogilvie <mmogilvi_qemu@miniinfo.net>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
1, Fix invalidate if memory requested was not bucket aligned When memory is mapped in qemu_map_cache with lock != 0 a reverse mapping&&&&is created pointing to the virtual address of location requested.&&&&The cached mapped entry is saved in last_address_vaddr with the memory&&&&location of the base virtual address (without bucket offset).&&&&However when this entry is invalidated the virtual address saved in the&&&&reverse mapping is used. This cause that the mapping is freed but the&&&&last_address_vaddr is not reset.&&&&&&&&Signed-off-by: Frediano Ziglio <frediano.ziglio@citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&& 
1," xbzrle: fix compilation on ppc32 When compiling the xbzrle code on my ppc32 user space, I hit the following&&&&gcc compiler warning (treated as an error):&&&&&&&&  cc1: warnings being treated as errors&&&&  savevm.c: In function 鈥榵bzrle_encode_buffer鈥?&&&&  savevm.c:2476: error: overflow in implicit constant conversion&&&&&&&&Fix this by making the cast explicit, rather than implicit.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," migration: don't rely on any QERR_SOCKET_* Use the in_progress argument for QERR_SOCKET_CONNECT_IN_PROGRESS. The&&&&other errors are handled the same by checking if the error is set and&&&&then calling migrate_fd_error() if it's.&&&&&&&&It's also necessary to change inet_connect_opts() not to set&&&&QERR_SOCKET_CONNECT_IN_PROGRESS. This error is only used by&&&&tcp_start_outgoing_migration() and not changing it along with the&&&&usage of in_progress would break migration.&&&&&&&&Furthermore this commit fixes a bug. Today, there's a spurious error&&&&report when migration succeeds:&&&&&&&&(qemu) migrate tcp:0:4444&&&&migrate: Connection can not be completed immediately&&&&(qemu)&&&&&&&&After this commit no spurious error is reported anymore.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," exec.c: Fix off-by-one error in register_subpage subpage_register() expects ""end"" to be the last byte in the mapping.&&&&Registering a non-page-aligned memory region that extends up to or&&&&beyond a page boundary causes subpage_register() to silently fail&&&&through the (end >= PAGE_SIZE) check.&&&&&&&&This bug does not cause noticeable problems for mappings that do not&&&&extend to a page boundary, though they do register an extra byte.&&&&&&&&Signed-off-by: Tyler Hall <tylerwhall@gmail.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," lsi: use qdev_reset_all By first resetting the devices, lsi_soft_reset will find the queue&&&&already cleared so there is no need to do that forcibly (which may also&&&&leak SCSIRequests, and/or worse due to dangling references to the&&&&lsi_request in the hba_private field).&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qapi: fix error propagation Don't overwrite / leak previously set errors.&&&&Make traversal cope with missing mandatory sub-structs.&&&&Don't try to end a container that could not be started.&&&&&&&&v1->v2:&&&&- unchanged&&&&&&&&v2->v3:&&&&- instead of examining, assert that we never overwrite errors with&&&&  error_set()&&&&- allow visitors to set a NULL struct pointer successfully, so traversal&&&&  of incomplete objects can continue&&&&- check for a NULL ""obj"" before accessing ""(*obj)->has_XXX"" (this is not a&&&&  typo, ""obj != NULL"" implies ""*obj != NULL"" here)&&&&- fix start_struct / end_struct balance for unions as well&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," powerpc pci: fixed packing of ranges[] By default mingw-gcc is trying to pack structures the way to&&&&preserve binary compatibility with MS Visual C what leads to&&&&incorrect and unexpected padding in the PCI bus ranges property of&&&&the sPAPR PHB.&&&&&&&&The patch replaces __attribute__((packed)) with more strict QEMU_PACKED&&&&which actually is __attribute__((gcc_struct, packed)) on Windows.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Tested-by: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: Stefan Weil <sw@weilnetz.de>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," qemu-iotests: add qed.py image manipulation utility The qed.py utility can inspect and manipulate QED image files.  It can&&&&be used for testing to see the state of image metadata and also to&&&&inject corruptions into the image file.  It also has a scrubbing feature&&&&to copy just the metadata out of an image file, allowing users to share&&&&broken image files without revealing data in bug reports.&&&&&&&&This has lived in my local repo for a long time but could be useful&&&&to others.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, monitor: Fix memory leak with readline completion Each string which is shown during readline completion in the QEMU monitor&&&&is allocated dynamically but currently never deallocated.&&&&&&&&Add the missing loop which calls g_free for the allocated strings.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
1," Revert ""rtl8139: do the network/host communication only in normal operating mode"" This reverts commit ff71f2e8cacefae99179993204172bc65e4303df. This is because&&&&the linux 8139cp driver would leave the card in ""Config Register Write Enable""&&&&mode after the eeprom were read or write ( which is unexpected in the spec&&&&). Also a physical 8139 card can still DMA into host memory in modes other than&&&&Normal mode, so we need revert this commit to align with the behavior of&&&&physical card.&&&&&&&&The issue of 8139cp driver should be fixed in linux seperately.&&&&&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qapi: fix double free in qmp_output_visitor_cleanup() Stack entries in QmpOutputVisitor are navigation links (weak references),&&&&except the bottom (ie. least recently added) entry, which owns the root&&&&QObject [1]. Make qmp_output_visitor_cleanup() drop the stack entries,&&&&then release the QObject tree by the root.&&&&&&&&Attempting to serialize an invalid enum inside a dictionary is an example&&&&for triggering the double free.&&&&&&&&[1] http://lists.nongnu.org/archive/html/qemu-devel/2012-03/msg03276.html&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," Remove screendump dummy functions. The code in console.c verifies whenever a screen_dump function&&&&pointer is present before calling it, so there is no need to supply an&&&&dummy function.  Remove them.  Also report an error to notify the user&&&&that he didn't got a screenshot.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qed: do not evict in-use L2 table cache entries The L2 table cache reduces QED metadata reads that would be required&&&&when translating LBAs to offsets into the image file.  Since requests&&&&execute in parallel it is possible to share an L2 table between multiple&&&&requests.&&&&&&&&There is a potential data corruption issue when an in-use L2 table is&&&&evicted from the cache because the following situation occurs:&&&&&&&&  1. An allocating write performs an update to L2 table ""A"".&&&&&&&&  2. Another request needs L2 table ""B"" and causes table ""A"" to be&&&&     evicted.&&&&&&&&  3. A new read request needs L2 table ""A"" but it is not cached.&&&&&&&&As a result the L2 update from #1 can overlap with the L2 fetch from #3.&&&&We must avoid doing overlapping I/O requests here since the worst case&&&&outcome is that the L2 fetch completes before the L2 update and yields&&&&stale data.  In that case we would effectively discard the L2 update and&&&&lose data clusters!&&&&&&&&Thanks to Beno卯t Canet <benoit.canet@gmail.com> for extensive testing&&&&and debugging which lead to discovery of this bug.&&&&&&&&Reported-by: Beno卯t Canet <benoit.canet@gmail.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Tested-by: Beno卯t Canet <benoit.canet@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qemu-iotests: fix pattern for write test The write pattern value 0axb is invalid and evaluates to 0,&&&&so the read check (which uses a correct value of 0xab) will fail.&&&&&&&&This failure will only be detected with a separate patch for&&&&qemu-io. Without it, qemu-io cannot interpret hex values&&&&and always uses a pattern value of 0.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&& "
1, qom: introduce QERR_PROPERTY_VALUE_OUT_OF_RANGE This will be used when reject invalid values for integer fields that&&&&are less than 64-bits wide.&&&&&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, net: take ownership of fd in socket init functions Today net/socket.c has no consistent policy for closing the socket file&&&&descriptor when initialization fails.  This means we leak the file&&&&descriptor in some cases or we could also try to close it twice.&&&&&&&&Make error paths consistent by taking ownership of the file descriptor&&&&and closing it on error.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," tcp_close(): check for close() errors too (v2) In case close() fails, we want to report the error back.&&&&&&&&Changes v1 -> v2:&&&& - Use braces on if statement to match coding style&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qemu_fclose: return last_error if set (v3) This will make sure no error will be missed as long as callers always&&&&check for qemu_fclose() return value. For reference, this is the&&&&complete list of qemu_fclose() callers:&&&&&&&& - exec_close(): already fixed to check for negative values, not -1&&&& - migrate_fd_cleanup(): already fixed to consider only negative values&&&&   as error, not any non-zero value&&&& - exec_accept_incoming_migration(): no return value check (yet)&&&& - fd_accept_incoming_migration(): no return value check (yet)&&&& - tcp_accept_incoming_migration(): no return value check (yet)&&&& - unix_accept_incoming_migration(): no return value check (yet)&&&& - do_savevm(): no return value check (yet)&&&& - load_vmstate(): no return value check (yet)&&&&&&&&Changes v1 -> v2:&&&& - Add small comment about the need to return previously-spotted errors&&&&&&&&Changes v2 -> v3:&&&& - Add braces to ""if"" statements to match coding style&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, sheepdog: Avoid deadlock in error path s->lock should be unlocked before leaving add_aio_request.&&&&&&&&Signed-off-by: Dong Xu Wang <wdongxu@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," vl: Tighten parsing of -m argument strtosz_suffix() fails unless the size is followed by 0, whitespace or&&&&','.  Useless here, because we need to fail for any junk following the&&&&size, even if it starts with whitespace or ','.  Check manually.&&&&Things like ""-m 1024,"" are now caught.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," readline: Fix buffer overrun on re-add to history readline_hist_add() moves the history entry to the end of history.  It&&&&uses memmove() to move rs->history[idx + 1..] to rs->history[idx..].&&&&However, its size argument is off by two array elements, so it writes&&&&one element beyond rs->history[], and reads two.&&&&&&&&On my system, this clobbers rs->hist_entry and the hole right after&&&&it.  Since the function assigns to rs->hist_entry in time, the bug has&&&&no ill effects for me.&&&&&&&&Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," block: Fix vpc initialization of the Dynamic Disk Header The Data Offset field in the Dynamic Disk Header is an 8 byte field.&&&&Although the specification (2006-10-11) gives an example of initializing&&&&only the first 4 bytes, images generated by Microsoft on Windows initialize&&&&all 8 bytes.&&&&&&&&Failure to initialize all 8 bytes results in errors from utilities&&&&like Citrix's vhd-util which checks specifically for the proper Data&&&&Offset field initialization.&&&&&&&&Signed-off-by: Charles Arnold <carnold@suse.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qemu-io: delete bs instead of leaking it Using bdrv_close() is not enough to free a BlockDriverState.  Since we&&&&explicitly create it with bdrv_new(), use bdrv_delete() to close and&&&&delete it.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," vmdk: Fix use of uninitialised value In error cases, cid is never set.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," savevm: improve subsections detection on load We add qemu_peek_buffer, that is identical to qemu_get_buffer, just&&&&that it don't update f->buf_index.&&&&&&&&We add a paramenter to qemu_peek_byte() to be able to peek more than&&&&one byte.&&&&&&&&Once this is done, to see if we have a subsection we look:&&&&- 1st byte is QEMU_VM_SUBSECTION&&&&- 2nd byte is a length, and is bigger than section name&&&&- 3rd element is a string that starts with section_name&&&&&&&&So, we shouldn't have false positives (yes, content could still get us&&&&wrong but probabilities are really low).&&&&&&&&v2:&&&&- Alex Williamsom found that we could get negative values on index.&&&&- Rework code to fix that part.&&&&- Rewrite qemu_get_buffer() using qemu_peek_buffer()&&&&&&&&v3:&&&&- return ""done"" on error case&&&&&&&&v4:&&&&- fix qemu_file_skip() off by one.&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," Add support for 128-bit arithmetic The memory API supports 64-bit buses (e.g. PCI).  A size on such a bus cannot&&&&be represented with a 64-bit data type, if both 0 and the entire address&&&&space size are to be represented.  Futhermore, any address arithemetic may&&&&overflow and return unexpected results.&&&&&&&&Introduce a 128-bit signed integer type for use in such cases.  Addition,&&&&subtraction, and comparison are the only operations supported.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," build: fix race with creating qapi-generated Since qapi-generated/ is a global QEMU include path, we need to make&&&&sure it is created before anything is compiled, so do this in the&&&&configure phase rather than via the Makefile.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, hw/scsi-bus.c: Fix use of uninitialised variable Don't use req before it has been initialised in scsi_req_new().&&&&This fixes a compile failure due to gcc complaining about this.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1, sdl: Do not make full screen mode resizable This prevents continuous resizing events and improper screen setups when&&&&going full screen.&&&&&&&&CC: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," pcie_host: verify mmcfg address range For a conventional pci device behind&&&&a pcie-to-pci bridge, pci_host handlers get confused by&&&&an out of bounds access in the range [256, 4K).&&&&&&&&Check for such an access and make it have no effect.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," vhost: remove an incorrect assert The 'to' can go negative when the first region gets removed&&&&(it gets incremented by to 0 immediately afterward), which&&&&makes the assertion fail. Nothing breaks if&&&&to < 0 here so just remove the assert.&&&&&&&&Tested-by: David Ahern <daahern@cisco.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," iothread: replace fair_mutex with a condition variable This conveys the intention better, and scales to more than >1&&&&threads contending the mutex with the iothread (as long as all&&&&of them have a ""quiescent point"" like the TCG thread has).&&&&&&&&Also, on Mac OS X the fair_mutex somehow didn't work as intended&&&&and deadlocked.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Tested-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," libcacard: don't leak vcard_emul_alloc_arrays mem vcard_emul_mirror_card and vcard_emul_init use&&&&vcard_emul_alloc_arrays to allocate memory for temporary arrays&&&&which will contain elements that in the end will be used one by&&&&one in cac_card_init. The arrays themselves are never stored&&&&anywhere, they are only used as temporary containers. Hence&&&&the memory that was allocated for these arrays should be freed&&&&after use or they will be leaked.&&&& "
1," PPC: 440: Use 440 style MMU as default, so Qemu knows the MMU type We have some KVM interaction code in Qemu that tries to be clever and&&&&ignore some capabilities when running on BookE style MMUs. Unfortunately,&&&&the default CPU bamboo was defaulting to was not a BookE-style MMU,&&&&resulting in the check to fail.&&&&&&&&With this patch, guests can run again on 440 with -enable-kvm.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, Fix buffer overrun in sched_getaffinity Zeroing of the cpu array should start from &cpus[kernel_ret]&&&&not &cpus[num_zeros_to_fill].&&&&&&&&This fixes a crash in EFL's edje_cc running under qemu-arm.&&&&&&&&Signed-off-by: Mike McCormack <mj.mccormack@samsung.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Acked-by: Mike Frysinger <vapier@gentoo.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@iki.fi>&&&& 
1," kvm: ppc: fixes for KVM_SET_SREGS on init Classic/server ppc has had SREGS for a while now (though I think not&&&&always?), but it's still missing for booke.  Check the capability before&&&&calling KVM_SET_SREGS.&&&&&&&&Without this, booke kvm fails to boot as of commit&&&&84b4915dd2c0eaa86c970ffc42a68ea8ba9e48b5 (kvm: Handle kvm_init_vcpu&&&&errors).&&&&&&&&Also, don't write random stack state into the non-PVR sregs fields --&&&&have kvm fill it in first.&&&&&&&&Eventually booke will have sregs and it will have its own capability to&&&&be tested here.  However, we will want a way for platform code to request&&&&to look like the actual CPU we're running on, especially if SoC devices&&&&are being directly assigned.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," target-arm: Set Q bit for overflow in SMUAD and SMLAD SMUAD and SMLAD are supposed to set the Q bit if the addition of&&&&the two 16x16 multiply products and optional accumulator overflows&&&&considered as a signed value. However we were only doing this check&&&&for the addition of the accumulator, not when adding the products,&&&&with the effect that we were mishandling the edge case where&&&&both inputs are 0x80008000.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, linux-user: Add configure check for linux/fiemap.h and IOC_FS_FIEMAP Add a configure check for the existence of linux/fiemap.h and the&&&&IOC_FS_FIEMAP ioctl. This fixes a compilation failure on Linux&&&&systems which don't have that header file.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," linux-user: fix memory leaks with NPTL emulation Running programs that create large numbers of threads, such as this&&&&snippet from libstdc++'s pthread7-rope.cc:&&&&&&&&  const int max_thread_count = 4;&&&&  const int max_loop_count = 10000;&&&&  ...&&&&  for (int j = 0; j < max_loop_count; j++)&&&&    {&&&&      ...&&&&      for (int i = 0; i < max_thread_count; i++)&&&&	pthread_create (&tid[i], NULL, thread_main, 0);&&&&&&&&      for (int i = 0; i < max_thread_count; i++)&&&&	pthread_join (tid[i], NULL);&&&&    }&&&&&&&&in user-mode emulation will quickly run out of memory.  This is caused&&&&by a failure to free memory in do_syscall prior to thread exit:&&&&&&&&          /* TODO: Free CPU state.  */&&&&          pthread_exit(NULL);&&&&&&&&The first step in fixing this is to make all TaskStates used by QEMU&&&&dynamically allocated.  The TaskState used by the initial thread was&&&&not, as it was allocated on main's stack.  So fix that, free the&&&&cpu_env, free the TaskState, and we're home free, right?&&&&&&&&Not exactly.  When we create a thread, we do:&&&&&&&&        ts = qemu_mallocz(sizeof(TaskState) + NEW_STACK_SIZE);&&&&        ...&&&&        new_stack = ts->stack;&&&&        ...&&&&        ret = pthread_attr_setstack(&attr, new_stack, NEW_STACK_SIZE);&&&&&&&&If we blindly free the TaskState, then, we yank the current (host)&&&&thread's stack out from underneath it while it still has things to do,&&&&like calling pthread_exit.  That causes problems, as you might expect.&&&&&&&&The solution adopted here is to let the C library allocate the thread's&&&&stack (so the C library can properly clean it up at pthread_exit) and&&&&provide a hint that we want NEW_STACK_SIZE bytes of stack.&&&&&&&&With those two changes, we're done, right?  Well, almost.  You see,&&&&we're creating all these host threads and their parent threads never&&&&bother to check that their children are finished.  There's no good place&&&&for the parent threads to do so.  Therefore, we need to create the&&&&threads in a detached state so the parent thread doesn't have to call&&&&pthread_join on the child to release the child's resources; the child&&&&does so automatically.&&&&&&&&With those three major changes, we can comfortably run programs like the&&&&above without exhausting memory.  We do need to delete 'stack' from the&&&&TaskState structure.&&&&&&&&Signed-off-by: Nathan Froyd <froydnj@codesourcery.com>&&&&Signed-off-by: Riku Voipio <riku.voipio@nokia.com>&&&& "
1," pci/bridge: fix pci_bridge_reset() The lower bits of base/limit registers is RO and shouldn't be zero&&&&cleared on reset. This patch fixes it.&&&&In fact, the default value of base/limit registers aren't specified&&&&in the spec. And some bridges disable forwarding on reset instead of&&&&zeroing base/limit registers.&&&&So introduce one function to disable bridge forwarding so that&&&&such bridges can use it. It will be used later.&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," scsi-disk: respect the page control (PC) field in the MODE SENSE command The page control (PC) field defines the type of mode parameter values&&&&to be returned in the mode pages:&&&&&&&&PC=0 : Current values&&&&PC=1 : Changeable values&&&&PC=2 : Default values&&&&PC=3 : Saved values&&&&&&&&The current implementation always returns the same type of parameters.&&&&This is OK for Current and Default values as we don't support changes&&&&to be done by the MODE SELECT command.&&&&&&&&For Saved values the following applies (implemented by this patch):&&&&""A PC field value of 3h requests that the target return the saved&&&&values of the mode parameters. Implementation of saved page parameters&&&&is optional. Mode parameters not supported by the target shall be set&&&&to zero. If saved values are not implemented, the command shall be&&&&terminated with CHECK CONDITION status, the sense key set to&&&&ILLEGAL REQUEST and the additional sense code set to&&&&SAVING PARAMETERS NOT SUPPORTED.""&&&&&&&&For Changeable values the following applies (implemented by this patch):&&&&""A PC field value of 1h requests that the target return a mask denoting&&&&those mode parameters that are changeable. In the mask, the fields of&&&&the mode parameters that are changeable shall be set to all one bits and&&&&the fields of the mode parameters that are non-changeable (i.e. defined&&&&by the target) shall be set to all zero bits.""&&&&&&&&In newer versions of the SCSI-2 spec the following clause was added.&&&&""If the logical unit does not implement changeable parameters mode pages&&&&and the device server receives a MODE SENSE command with 01b in the PC&&&&field, then the command shall be terminated with CHECK CONDITION status,&&&&with the sense key set to ILLEGAL REQUEST, and the additional sense code&&&&set to INVALID FIELD IN CDB.""&&&&&&&&This was not yet included in the SCSI-2 Working Drafts from 1986-1993.&&&&I assume that the variant to return CHECK CONDITION for PC=1 is not&&&&widely implemented by real devices. I have a legacy OS which fails,&&&&if MODE_SENSE returns non GOOD for PC=1. So for highest compatibility I&&&&implemented the former variant with this patch.&&&&&&&&The last Working Draft X3T9.2 Rev. 10L 7-SEP-93 can be found here:&&&&http://ldkelley.com/SCSI2/SCSI2/SCSI2-08.html#8.2.10&&&&&&&&In mode_sense_page() this patch also avoids multiple hard coded&&&&definitions of the same mode page length. Instead I use the varable&&&&p[1]. In fact the returned length of the mode pages 4 and 5 were wrong&&&&(2 bytes less).&&&&&&&&Signed-off-by: Bernhard Kohl <bernhard.kohl@nsn.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, vpc: Use bdrv_(p)write_sync for metadata writes Use bdrv_(p)write_sync to ensure metadata integrity in case of a crash.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," check-qjson: Add more escape tests While there make the fail_unless() calls print error messages.&&&&&&&&IMPORTANT: The test for ""\/"" is failing, don't know why.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," qcow2: Fix error handling in l2_allocate l2_allocate has some intermediate states in which the image is inconsistent.&&&&Change the order to write to the L1 table only after the new L2 table has&&&&successfully been initialized.&&&&&&&&Also reset the L2 cache in failure case, it's very likely wrong.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," virtio-serial: Fix check for 'assert'; prevent NULL derefs In the flush_queued_data() function, we expect port to be valid. Assert&&&&only for port and not port || discard.&&&&&&&&Reported-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," KVM: Rework of guest debug state writing So far we synchronized any dirty VCPU state back into the kernel before&&&&updating the guest debug state. This was a tribute to a deficite in x86&&&&kernels before 2.6.33. But as this is an arch-dependent issue, it is&&&&better handle in the x86 part of KVM and remove the writeback point for&&&&generic code. This also avoids overwriting the flushed state later on if&&&&user space decides to change some more registers before resuming the&&&&guest.&&&&&&&&We furthermore need to reinject guest exceptions via the appropriate&&&&mechanism. That is KVM_SET_GUEST_DEBUG for older kernels and&&&&KVM_SET_VCPU_EVENTS for recent ones. Using both mechanisms at the same&&&&time will cause state corruptions.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
1," block: Simplify usb_msd_initfn() test for ""can read bdrv key"" The old test assumes that ""hotplugged"" implies ""we have a current&&&&monitor for reading the key"".  This is in fact true, but it's not&&&&obviously true.&&&&&&&&Aside: if it were false, we could pass a null pointer to&&&&monitor_read_bdrv_key_start(), which would then crash.&&&&&&&&The previous commit permits us to check for ""we have a current&&&&monitor"" directly, so do that.&&&& "
1," tcg/mips: fix crash in tcg_out_qemu_ld() The address register is overriden when it corresponds to v0 and the fast&&&&path is taken, which leads to a crash. Fix that by using the a0 register&&&&instead.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, kvm: Fix eflags corruption in kvm mode This should explain a lot of the weird breakages of upstream KVM we've&&&&seen recently (actually we should have seen it much earlier):&&&&&&&&Stop translating eflags into TCG format when in kvm mode as we never&&&&translate it back and rather sync this broken state into the kernel.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& 
1," Fix backcompat for hotplug of SCSI controllers SCSI controllers have no trouble existing without any attached&&&&disks. This could be achieved with the (legacy) monitor syntax&&&&&&&&  pci_add pci_addr=auto storage if=scsi&&&&&&&&This is now denied with&&&&&&&&  scsi requires a backing file/device.&&&&  failed to add if=scsi&&&&&&&&There is no need for this denial and it breaks compatability&&&&with existing QEMU usage, so remove the check for presence&&&&of a drive.&&&&&&&&  Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," net: check for TUNSETOFFLOAD support before trying to enable offload features This avoids the ""TUNSETOFFLOAD ioctl() failed: Invalid argument"" message&&&&on kernels without TUNSETOFFLOAD support.&&&&&&&&Signed-off-by: Pierre Riteau <Pierre.Riteau@irisa.fr>&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, Expose a mechanism to trace block writes To support live migration without shared storage we need to be able to trace&&&&writes to disk while migrating. This Patch expose dirty block tracking per&&&&device to be polled from upper layer.&&&&&&&&Changes from v4:&&&&- Register dirty tracking for each block device.&&&&- Minor coding style issues.&&&&- Block.c will now manage a dirty bitmap per device once&&&&  bdrv_set_dirty_tracking() is called. Bitmap is polled by the upper&&&&  layer (block-migration.c).&&&&&&&&Signed-off-by: Liran Schour <lirans@il.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," qcow2: Fix grow_refcount_table error handling In case of failure, we haven't increased the refcount for the newly allocated&&&&cluster yet. Therefore we must not free the cluster or its refcount will become&&&&negative (and endless recursion is possible).&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, qdev: don't crash on unset drive properties. Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," Correctly free nd structure When we ""free"" a NICInfo structure, we can leak pointers, since we don't do&&&&much more than setting used = 0.&&&&&&&&We free() the model parameter, but we don't set it to NULL. This means that&&&&a new user of this structure will see garbage in there. It was not noticed&&&&before because reusing a NICInfo is not that common, but it can be, for&&&&users of device pci hotplug.&&&&&&&&A user hit it, described at https://bugzilla.redhat.com/show_bug.cgi?id=524022&&&&&&&&This patch memset's the whole structure, guaranteeing that anyone reusing it&&&&will see a fresh NICinfo. Also, we free some other strings that are currently&&&&leaking.&&&&&&&&This codebase is quite old, so this patch should feed all stable trees.&&&&&&&&Signed-off-by: Glauber Costa <glommer@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, microblaze: Correct prio between MMU and unaligned exceptions. The microblaze gives MMU faults priority. For stores we still&&&&have a flaw that the value leaks to memory in the case of an&&&&unaligned exception.&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
1, PPC: convert Uni-north to qdev: also fixes Mac99 machine crash Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," bsd-users: fix strace Hi!&&&&&&&&Attached patch fixes an unlock bug in strace.&&&&Catched by gcc due to an use of uninitialized variable.&&&&&&&&Signed-off-by: Christoph Egger <Christoph.Egger@amd.com>&&&&&&&&--&&&&---to satisfy European Law for business letters:&&&&Advanced Micro Devices GmbH&&&&Karl-Hammerschmidt-Str. 34, 85609 Dornach b. Muenchen&&&&Geschaeftsfuehrer: Thomas M. McCoy, Giuliano Meroni&&&&Sitz: Dornach, Gemeinde Aschheim, Landkreis Muenchen&&&&Registergericht Muenchen, HRB Nr. 43632&&&& "
1," Allow adjustment of http block device's readahead size, via a new "":readahead=###:"" suffix. Signed-off-by: Nolan Leake <nolan <at> sigbus.net>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," slirp: Factor out one-time initialization In order to prepare re-initialization and multi-instance slirp, factor&&&&out init code that is of global scope and (at least for now) only need&&&&to be run once.&&&&&&&&This also fixes the potentially uninitialized use of our_addr in&&&&get_dns_addr.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, Apply TCGV_UNUSED on variables that GCC mistakenly thinks can be used uninitialized  
1," Prevent CD-ROM media eject while device is locked Section 10.8.25 (""START/STOP UNIT Command"") of SFF-8020i states that&&&&if the device is locked we should refuse to eject if the device is&&&&locked.&&&&&&&&ASC_MEDIA_REMOVAL_PREVENTED is the appropriate return in this case.&&&&&&&&In order to stop itself from ejecting the media it is running from,&&&&Fedora's installer (anaconda) requires the CDROMEJECT ioctl() to fail&&&&if the drive has been previously locked.&&&&&&&&See also https://bugzilla.redhat.com/501412&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Make `-icount' help fit 80 chars screen width (Robert Riebisch) On Windows default screen width for the command prompt (A.K.A. ""DOS&&&&window"") is 80 chars. `-icount' help is 87 chars wide. So make it fit.&&&&&&&&Signed-off-by: Robert Riebisch <rr@bttr-software.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6991 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Compile all files with -ffixed-g5 etc. to avoid env (%g5) corruption git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6972 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Fix Sparc64 VGA memory size bug exposed by r6604 git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6618 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, mips: limit RAM size to 256MB on malta and qemu boards This avoid crash when a bigger RAM size is requested (the devices are&&&&mapped at 0x01000000).&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6419 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, powerpc/kvm: Fix a uninitialized bug (Liu Yu) Signed-off-by: Liu Yu <yu.liu@freescale.com>&&&&Acked-by: Hollis Blanchard <hollisb@us.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6327 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, check for bs->drv in bdrv_flush (Christoph Hellwig) All the bdrv_ helpers should check for bs->drv being zero as that means&&&&there is no backend image open.  bdrv_flush fails to perform that check&&&&and can thus cause NULL pointer dereferences.&&&&&&&&Found using qemu-io.&&&&&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6943 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," ppc: fix crash in ppc system single step support There was a bogus case where two system debug ops get generated.  This&&&&patch removes the broken system debug op. This was a left over after&&&&making some changes to correctly generate debug ops on branch&&&&operations inside gen_goto_tb();&&&&&&&&The test case against this patch is to turn on single stepping with&&&&timers, boot a linux kernel, set a breakpoint a do_fork and in gdb&&&&execute ""si 3000"".  Then qemu-system-ppc will fault executing a debug&&&&op, which should not have been executed.&&&&&&&&Signed-off-by: Jason Wessel <jason.wessel@windriver.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5391 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Add support for the 'k' (kill) and 'D' (detach) packets (Jason Wessel). Implement the 'k' gdbserial packet which kills the qemu instance via&&&&the debugger stub.&&&&&&&&Implement the 'D' detach packet for the gdb stub such that you can&&&&disconnect gdb with the ""detach"" command.  This required implementing&&&&a cpu_breakpoint_remove_all() and a cpu_watchpoint_remove_all()&&&&function to cleanup all the breakpoints and watchpoints prior to&&&&leaving the gdb stub else simulation can stop with no debugger&&&&attached.&&&&&&&&On a '?' packet remove all the breakpoints and watchpoints.  This is&&&&considered more of a safety net in case you force killed gdb or it&&&&crashed and you are reconnecting.  The identical behavior exists for&&&&kgdb in the linux kernel.&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4478 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Upgrade emulated UART to 16550A (Stefano Stabellini) This patch upgrades the emulated UART to 16550A, the code comes from&&&&xen-unstable. The main improvement was introduced with the following patch and&&&&subsequent email thread:&&&&&&&&http://lists.xensource.com/archives/html/xen-devel/2007-12/msg00129.html&&&&&&&&The changes compared to previous version are:&&&&&&&&- change clock_gettime to qemu_get_clock&&&&&&&&- no token bucket anymore;&&&&&&&&- fixed a small bug handling IRQs; this was the problem that prevented&&&&kgdb to work over the serial (thanks to Jason Wessel for the help&&&&spotting and reproducing this bug).&&&&&&&&- many many style fixes;&&&&&&&&- savevm version number increased;&&&&&&&&- not including termios.h and sys/ioctl.h anymore, declaring static&&&&constants in qemu-char.h instead;&&&&&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4993 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Check for out of range update regions (original patch from Anthony Liguori). git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4024 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Work around a crash when timer signal occurs before main loop, original patch by 姝︾敯 淇婁篃. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3820 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Update OpenBIOS images to SVN revision 181. Changes: r177: Reset fixes:  * recalculate CRC to avoid error message and halt after reset  * fix bug that crashed SS10/SMP when reset r178: Remove unused variable r179: Improved Module ID generation r180: Add support for eccmemctl r181: Add support for SPARCstation 20 machine type git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3804 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Fix invalid PowerPC 64 rldimi optimized case. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3638 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Synchronize with latest PowerPC ISA VEA: * fix invalid instructions bits masks * new wait instruction * more comments about effect of cache instructions on the MMU git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3287 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Fix qemu SIGFPE caused by division-by-zero due to underflow. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2673 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, xilinx_spips: Correct usage of an uninitialized local variable Coverity found that the variable tx_rx in the function&&&&xilinx_spips_flush_txfifo was being used uninitialized (CID 1383841). This&&&&patch corrects this by always initializing tx_rx to zeros.&&&&&&&&Signed-off-by: Francisco Iglesias <frasse.iglesias@gmail.com>&&&&Message-id: 20180124215708.30400-1-frasse.iglesias@gmail.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," s390x: fix storage attributes migration for non-small guests Fix storage attribute migration so that it does not fail for guests&&&&with more than a few GB of RAM.&&&&With such guests, the index in the buffer would go out of bounds,&&&&usually by large amounts, thus receiving -EFAULT from the kernel.&&&&Migration itself would be successful, but storage attributes would then&&&&not be migrated completely.&&&&&&&&This patch fixes the out of bounds access, and thus migration of all&&&&storage attributes when the guest have large amounts of memory.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>&&&&Fixes: 903fd80b03243476 (""s390x/migration: Storage attributes device"")&&&&Message-Id: <1516297904-18188-1-git-send-email-imbrenda@linux.vnet.ibm.com>&&&&Reviewed-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
1, tcg/ppc: Allow a 32-bit offset to the constant pool We recently relaxed the limit of the number of opcodes that can&&&&appear in a TranslationBlock.  In certain cases this has resulted&&&&in relocation overflow.&&&&&&&&Signed-off-by: Richard Henderson <richard.henderson@linaro.org>&&&& 
1," tests: fix coroutine leak in /basic/entered The coroutine is not finished by the time the test ends, resulting in&&&&ASAN warning:&&&&&&&&==7005==ERROR: LeakSanitizer: detected memory leaks&&&&&&&&Direct leak of 312 byte(s) in 1 object(s) allocated from:&&&&    #0 0x7fd35290fa38 in __interceptor_calloc (/lib64/libasan.so.4+0xdea38)&&&&    #1 0x7fd3506c5f75 in g_malloc0 ../glib/gmem.c:124&&&&    #2 0x55994af03e47 in qemu_coroutine_new /home/elmarco/src/qemu/util/coroutine-ucontext.c:144&&&&    #3 0x55994aefed99 in qemu_coroutine_create /home/elmarco/src/qemu/util/qemu-coroutine.c:76&&&&    #4 0x55994ac1eb50 in verify_entered_step_1 /home/elmarco/src/qemu/tests/test-coroutine.c:80&&&&    #5 0x55994af03c75 in coroutine_trampoline /home/elmarco/src/qemu/util/coroutine-ucontext.c:119&&&&    #6 0x7fd34ec02bef  (/lib64/libc.so.6+0x50bef)&&&&&&&&Do not yield() to let the coroutine terminate.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-Id: <20180104160523.22995-17-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," input: fix memory leak If kbd_queue is not empty and queue_count >= queue_limit,&&&&we should free evt.&&&&&&&&Change-Id: Ieeacf90d5e7e370a40452ec79031912d8b864d83&&&&Signed-off-by: linzhecheng <linzhecheng@huawei.com>&&&&Message-id: 20171225023730.5512-1-linzhecheng@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," target/xtensa: add internal/noop SRs and opcodes Add two special registers: MMID and DDR:&&&&- MMID is write-only and the only side effect of writing to it is output&&&&  to the trace port, which is not emulated;&&&&- DDR is only accessible in debug mode, which is not emulated.&&&&&&&&Add two debug-mode-only opcodes:&&&&- rfdd and rfdo do return from the debug mode, which is not emulated.&&&&&&&&Add three internal opcodes for full MMU:&&&&- hwwdtlba and hwwitlba are the internal opcodes that write a value into&&&&  autoupdate DTLB or ITLB entry.&&&&- ldpte is internal opcode that loads PTE entry that covers the most&&&&  recent page fault address.&&&&None of these three opcodes may appear in a valid instruction.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
1," build-sys: compile with -Og or -O1 when --enable-debug When --enable-debug is turned on, configure doesn't set -O level, and&&&&uses default compiler -O0 level, which is slow.&&&&&&&&Instead, use -Og if supported by the compiler (optimize debugging&&&&experience), or -O1 (keeps code somewhat debuggable and works around&&&&compiler bugs).&&&&&&&&Unfortunately, gcc has many false-positive maybe-uninitialized&&&&errors with Og and O1 (f27 gcc 7.2.1 20170915):&&&&&&&&/home/elmarco/src/qemu/hw/ipmi/isa_ipmi_kcs.c: In function 鈥榠pmi_kcs_ioport_read鈥?&&&&/home/elmarco/src/qemu/hw/ipmi/isa_ipmi_kcs.c:279:12: error: 鈥榬et鈥?may be used uninitialized in this function [-Werror=maybe-uninitialized]&&&&     return ret;&&&&            ^~~&&&&cc1: all warnings being treated as errors&&&&make: *** [/home/elmarco/src/qemu/rules.mak:66: hw/ipmi/isa_ipmi_kcs.o] Error 1&&&&make: *** Waiting for unfinished jobs....&&&&/home/elmarco/src/qemu/hw/ide/ahci.c: In function 鈥榓hci_populate_sglist鈥?&&&&/home/elmarco/src/qemu/hw/ide/ahci.c:903:58: error: 鈥榯bl_entry_size鈥?may be used uninitialized in this function [-Werror=maybe-uninitialized]&&&&         if ((off_idx == -1) || (off_pos < 0) || (off_pos > tbl_entry_size)) {&&&&                                                 ~~~~~~~~~^~~~~~~~~~~~~~~~~&&&&cc1: all warnings being treated as errors&&&&make: *** [/home/elmarco/src/qemu/rules.mak:66: hw/ide/ahci.o] Error 1&&&&/home/elmarco/src/qemu/hw/display/qxl.c: In function 鈥榪xl_add_memslot鈥?&&&&/home/elmarco/src/qemu/hw/display/qxl.c:1397:52: error: 鈥榩ci_start鈥?may be used uninitialized in this function [-Werror=maybe-uninitialized]&&&&     memslot.virt_end   = virt_start + (guest_end   - pci_start);&&&&                                       ~~~~~~~~~~~~~^~~~~~~~~~~~&&&&/home/elmarco/src/qemu/hw/display/qxl.c:1389:9: error: 鈥榩ci_region鈥?may be used uninitialized in this function [-Werror=maybe-uninitialized]&&&&         qxl_set_guest_bug(d, ""%s: pci_region = %d"", __func__, pci_region);&&&&         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&&&&cc1: all warnings being treated as errors&&&&&&&&There seems to be a long list of related bugs in upstream GCC, some of&&&&them are being fixed very recently:&&&&https://gcc.gnu.org/bugzilla/show_bug.cgi?id=24639&&&&&&&&For now, let's workaround it by using Wno-maybe-uninitialized (gcc-only).&&&&&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20180104160523.22995-5-marcandre.lureau@redhat.com>&&&&Tested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," which isn't recommended for security reasons&&&&&&&&This backend should not be used and wil be removed. The 'local'&&&&backend is the recommended alternative.&&&&&&&&[1] https://www.tuxera.com/community/posix-test-suite/&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& """
1," spapr/rtas: disable the decrementer interrupt when a CPU is unplugged When a CPU is stopped with the 'stop-self' RTAS call, its state&&&&'halted' is switched to 1 and, in this case, the MSR is not taken into&&&&account anymore in the cpu_has_work() routine. Only the pending&&&&hardware interrupts are checked with their LPCR:PECE* enablement bit.&&&&&&&&If the DECR timer fires after 'stop-self' is called and before the CPU&&&&'stop' state is reached, the nearly-dead CPU will have some work to do&&&&and the guest will crash. This case happens very frequently with the&&&&not yet upstream P9 XIVE exploitation mode. In XICS mode, the DECR is&&&&occasionally fired but after 'stop' state, so no work is to be done&&&&and the guest survives.&&&&&&&&I suspect there is a race between the QEMU mainloop triggering the&&&&timers and the TCG CPU thread but I could not quite identify the root&&&&cause. To be safe, let's disable in the LPCR all the exceptions which&&&&can cause an exit while the CPU is in power-saving mode and reenable&&&&them when the CPU is started.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," spapr: don't initialize PATB entry if max-cpu-compat < power9 if KVM is enabled and KVM capabilities MMU radix is available,&&&&the partition table entry (patb_entry) for the radix mode is&&&&initialized by default in ppc_spapr_reset().&&&&&&&&It's a problem if we want to migrate the guest to a POWER8 host&&&&while the kernel is not started to set the value to the one&&&&expected for a POWER8 CPU.&&&&&&&&The ""-machine max-cpu-compat=power8"" should allow to migrate&&&&a POWER9 KVM host to a POWER8 KVM host, but because patb_entry&&&&is set, the destination QEMU tries to enable radix mode on the&&&&POWER8 host. This fails and cancels the migration:&&&&&&&&    Process table config unsupported by the host&&&&    error while loading state for instance 0x0 of device 'spapr'&&&&    load of migration failed: Invalid argument&&&&&&&&This patch doesn't set the PATB entry if the user provides&&&&a CPU compatibility mode that doesn't support radix mode.&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," nbd/server: CVE-2017-15118 Stack smash on large export name Introduced in commit f37708f6b8 (2.10).  The NBD spec says a client&&&&can request export names up to 4096 bytes in length, even though&&&&they should not expect success on names longer than 256.  However,&&&&qemu hard-codes the limit of 256, and fails to filter out a client&&&&that probes for a longer name; the result is a stack smash that can&&&&potentially give an attacker arbitrary control over the qemu&&&&process.&&&&&&&&The smash can be easily demonstrated with this client:&&&&$ qemu-io f raw nbd://localhost:10809/$(printf %3000d 1 | tr ' ' a)&&&&&&&&If the qemu NBD server binary (whether the standalone qemu-nbd, or&&&&the builtin server of QMP nbd-server-start) was compiled with&&&&-fstack-protector-strong, the ability to exploit the stack smash&&&&into arbitrary execution is a lot more difficult (but still&&&&theoretically possible to a determined attacker, perhaps in&&&&combination with other CVEs).  Still, crashing a running qemu (and&&&&losing the VM) is bad enough, even if the attacker did not obtain&&&&full execution control.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&& "
1," build: allow automatic git submodule updates to be disabled Some people building QEMU use VPATH builds where the source directory is on a&&&&read-only volume. In such a case 'scripts/git-submodules.sh update' will always&&&&fail and users are required to run it manually themselves on their original&&&&writable source directory.&&&&&&&&While this is already supported, it is nice to give users a command line flag&&&&to configure to permanently disable automatic submodule updates, as it means&&&&they won't get hard to diagnose failures from git-submodules.sh at an arbitrary&&&&later date.&&&&&&&&This patch thus introduces a flag '--disable-git-update' which will prevent&&&&'make' from ever running 'scripts/git-submodules.sh update'. It will still run&&&&the 'status' command to determine if a submodule update is needed, but when it&&&&does this it'll simply stop and print a message instructing the developer what&&&&todo. eg&&&&&&&&$ ./configure  --target-list=x86_64-softmmu --disable-git-update&&&&...snip...&&&&&&&&$ make&&&&  GEN     config-host.h&&&&  GEN     trace/generated-tcg-tracers.h&&&&  GEN     trace/generated-helpers-wrappers.h&&&&  GEN     trace/generated-helpers.h&&&&  GEN     trace/generated-helpers.c&&&&  GEN     module_block.h&&&&&&&&GIT submodule checkout is out of date. Please run&&&&  scripts/git-submodule.sh update ui/keycodemapdb&&&&from the source directory checkout /home/berrange/src/virt/qemu&&&&&&&&make: *** [Makefile:31: git-submodule-update] Error 1&&&&&&&&Tested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," hw/net/vmxnet3: Fix code to work on big endian hosts, too Since commit ab06ec43577177a442e8 we test the vmxnet3 device in the&&&&pxe-tester, too (when running ""make check SPEED=slow""). This now&&&&revealed that the code is not working there if the host is a big&&&&endian machine (for example ppc64 or s390x) - ""make check SPEED=slow""&&&&is now failing on such hosts.&&&&&&&&The vmxnet3 code lacks endianness conversions in a couple of places.&&&&Interestingly, the bitfields in the structs in vmxnet3.h already tried to&&&&take care of the *bit* endianness of the C compilers - but the code missed&&&&to change the *byte* endianness when reading or writing the corresponding&&&&structs. So the bitfields are now wrapped into unions which allow to change&&&&the byte endianness during runtime with the non-bitfield member of the union.&&&&With these changes, ""make check SPEED=slow"" now properly works on big endian&&&&hosts, too.&&&&&&&&Reported-by: David Gibson <dgibson@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: David Gibson <dgibson@redhat.com>&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," Revert ""s390x/ccw: create s390 phb conditionally"" This reverts commit d32bd032d8fde41281aae34c16a4aa97e9acfeac.&&&&&&&&Turns out that old QEMUs always created a pci host bridge&&&&and for many CPU models the migration from old QEMUs to new&&&&QEMUs will fail with&&&&qemu-system-s390x: Unknown savevm section or instance 'PCIBUS' 0&&&&qemu-system-s390x: load of migration failed: Invalid argument&&&&&&&&As a quick fix we will revert the commit and always create the&&&&pci host bridge.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&[fixed revert to keep the comment fixup, added a comment in the code]&&&&Cc: Cornelia Huck <cohuck@redhat.com>&&&&Cc: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170928131831.81393-1-borntraeger@de.ibm.com>&&&&Reviewed-by: David Hildenbrand <david@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
1," 390x/css: introduce maximum data address checking The architecture mandates the addresses to be accessed on the first&&&&indirection level (that is, the data addresses without IDA, and the&&&&(M)IDAW addresses with (M)IDA) to be checked against an CCW format&&&&dependent limit maximum address.  If a violation is detected, the storage&&&&access is not to be performed and a channel program check needs to be&&&&generated. As of today, we fail to do this check.&&&&&&&&Let us stick even closer to the architecture specification.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Message-Id: <20170921180841.24490-5-pasic@linux.vnet.ibm.com>&&&&Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Reviewed-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
1," checkpatch: fix incompatibility with old perl Do not use '/r' modifier which was introduced in perl 5.14.&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Fixes: 3e5875afc0f (""checkpatch: check trace-events code style"")&&&&Tested-by: Alex Williamson <alex.williamson@redhat.com>&&&&Message-id: 20171004154420.34596-1-vsementsov@virtuozzo.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," ppc/kvm: change kvmppc_get_htab_fd() to return -errno on error When kvmppc_get_htab_fd() fails, its return value is propagated up to&&&&qemu_savevm_state_iterate() or to qemu_savevm_state_complete_precopy().&&&&All savevm handlers expect to receive a negative errno on error.&&&&&&&&Let's patch kvmppc_get_htab_fd() accordingly.&&&&&&&&While here, let's change htab_load() in the spapr code to also&&&&propagate the error, since it doesn't make sense to abort() if&&&&we couldn't get the htab fd from KVM.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," net/rocker: Remove the dead error handling Memory allocation functions like world_alloc, desc_ring_alloc etc,&&&&they are all wrappers around g_malloc, g_new etc. But g_malloc and&&&&similar functions doesn't return null. Because they ignore the fact&&&&that g_malloc() of 0 bytes returns null. So error checks for these&&&&allocation failure are superfluous. Now, remove them entirely.&&&&&&&&Cc: jasowang@redhat.com&&&&Cc: jiri@resnulli.us&&&&Cc: armbru@redhat.com&&&&Cc: f4bug@amsat.org&&&&Signed-off-by: Mao Zhongyi <maozy.fnst@cn.fujitsu.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," qapi-schema: Rocker doc section contains unrelated stuff, fix Bug: section ""Rocker switch device"" starts with the rocker stuff, but&&&&then has unrelated stuff, like ReplayMode, xen-load-devices-state, ...&&&&&&&&Cause: rocker.json is included in the middle of section ""QMP commands"".&&&&&&&&Fix: include it in a sane place, namely next to the other sub-schemas.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1503602048-12268-4-git-send-email-armbru@redhat.com>&&&& "
1," tests: fix incorrect size_t format in benchmark-crypto   $ make check-speed&&&&  tests/benchmark-crypto-hash.c: In function 'test_hash_speed':&&&&  tests/benchmark-crypto-hash.c:44:5: error: format '%ld' expects argument of type 'long int', but argument 2 has type 'size_t' [-Werror=format=]&&&&       g_print(""Testing chunk_size %ld bytes "", chunk_size);&&&&       ^&&&&  tests/benchmark-crypto-hash.c: In function 'main':&&&&  tests/benchmark-crypto-hash.c:62:9: error: format '%lu' expects argument of type 'long unsigned int', but argument 4 has type 'size_t' [-Werror=format=]&&&&           snprintf(name, sizeof(name), ""/crypto/hash/speed-%lu"", i);&&&&           ^&&&&  cc1: all warnings being treated as errors&&&&  rules.mak:66: recipe for target 'tests/benchmark-crypto-hash.o' failed&&&&  make: *** [tests/benchmark-crypto-hash.o] Error 1&&&&&&&&Reviewed-by: Longpeng(Mike) <longpeng@huawei.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1, vga: fix display update region calculation (split screen) vga display update mis-calculated the region for the dirty bitmap&&&&snapshot in case split screen mode is used.  This can trigger an&&&&assert in cpu_physical_memory_snapshot_get_dirty().&&&&&&&&Impact:  DoS for privileged guest users.&&&&&&&&Fixes: CVE-2017-13673&&&&Fixes: fec5e8c92becad223df9d972770522f64aafdb72&&&&Cc: P J P <ppandit@redhat.com>&&&&Reported-by: David Buchanan <d@vidbuchanan.co.uk>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170828123307.15392-1-kraxel@redhat.com&&&& 
1, qxl: drop mono cursor support The chunk size sanity check in qxl_render_cursor works for&&&&SPICE_CURSOR_TYPE_ALPHA cursors only.  So support for&&&&SPICE_CURSOR_TYPE_MONO cursors must be broken for ages without anyone&&&&noticing.  Most likely it simply isn't used any more by guest drivers.&&&&Drop the dead code.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170828123933.30323-2-kraxel@redhat.com&&&& 
1," libvhost-user: quit when no more data received End processing of messages when VHOST_USER_NONE&&&&is received.&&&&&&&&Without this we run into a vubr_panic() call and get&&&&""PANIC: Unhandled request: 0""&&&&&&&&Signed-off-by: Jens Freimann <jfreiman@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," block/nfs: fix mutex assertion in nfs_file_close() Commit c096358e747e88fc7364e40e3c354ee0bb683960 introduced assertion&&&&checks for when qemu_mutex() functions are called without the&&&&corresponding qemu_mutex_init() having initialized the mutex.&&&&&&&&This uncovered a latent bug in qemu's nfs driver - in&&&&nfs_client_close(), the NFSClient structure is overwritten with zeros,&&&&prior to the mutex being destroyed.&&&&&&&&Go ahead and destroy the mutex in nfs_client_close(), and change where&&&&we call qemu_mutex_init() so that it is correctly balanced.&&&&&&&&There are also a couple of memory leaks obscured by the memset, so this&&&&fixes those as well.&&&&&&&&Finally, we should be able to get rid of the memset(), as it isn't&&&&necessary.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Peter Lieven <pl@kamp.de>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," hw/ppc/spapr_rtc: Mark the RTC device with user_creatable = false QEMU currently aborts unexpectedly when a user tries to do something&&&&like this:&&&&&&&&$ qemu-system-ppc64 -nographic -S -nodefaults -monitor stdio&&&&QEMU 2.9.92 monitor - type 'help' for more information&&&&(qemu) device_add spapr-rtc,id=spapr-rtc&&&&(qemu) device_del spapr-rtc&&&&**&&&&ERROR:qemu/qdev-monitor.c:872:qdev_unplug: assertion failed: (hotplug_ctrl)&&&&Aborted (core dumped)&&&&&&&&The RTC device is not meant to be hot-pluggable - it's an internal&&&&device only and it even should not be possible to create it a&&&&second time with the ""-device"" parameter, so let's mark this&&&&with ""user_creatable = false"".&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," qemu-iotests/162: Fix leaked temporary files qemu-iotests 162 left qemu-nbd.pid behind in the scratch directory, and&&&&potentially a file called '42' in the current directory. Make sure to&&&&clean it up after completing the tests.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," Revert ""syscall: fix dereference of undefined pointer"" This reverts commit bc658e4a2e81593f75a3ae34b112be77efbb3e0a.&&&&&&&&Some versions of gcc warn about this:&&&&&&&&linux-user/syscall.c: In function 鈥榙o_ioctl_rt鈥?&&&&linux-user/syscall.c:5577:37: error: 鈥榟ost_rt_dev_ptr鈥?may be used uninitialized in this function [-Werror=uninitialized]&&&&&&&&and in particular the Travis builds fail; they use&&&&gcc (Ubuntu/Linaro 4.6.3-1ubuntu5) 4.6.3.&&&&&&&&Revert the change to fix the travis builds.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, qcow2-bitmap: fix bitmap_free Fix possible crash on error path in&&&&qcow2_remove_persistent_dirty_bitmap. Although bitmap_free was added in&&&&88ddffae8fc the bug was introduced later in commit 469c71edc72 (when&&&&qcow2_remove_persistent_dirty_bitmap was added).&&&&&&&&Signed-off-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170714123341.373857-1-vsementsov@virtuozzo.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& 
1, target/alpha: Fix temp leak in gen_fbcond Tested-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
1, target/sh4: Merge DREG into fpr64 routines Also add a debugging assert that we did signal illegal opc&&&&for odd double-precision registers.&&&&&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Message-Id: <20170718200255.31647-16-rth@twiddle.net>&&&&[aurel32: fix whitespace issues]&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," trace: update old trace events in docs Commit c5f1ad429cdf26023cf331075a7d327708e3db6d (""block: Remove&&&&bdrv_aio_readv/writev/flush()"") removed&&&&bdrv_aio_readv()/bdrv_aio_writev() so the example in the tracing&&&&documentation is no longer valid.&&&&&&&&Reported-by: Wang Dong <dongdwdw@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170714133111.27359-1-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," spapr: Remove 'awaiting_allocation' DRC flag The awaiting_allocation flag in the DRC was introduced by aab9913&&&&""spapr_drc: Prevent detach racing against attach for CPU DR"", allegedly to&&&&prevent a guest crash on racing attach and detach.  Except.. information&&&&from the BZ actually suggests a qemu crash, not a guest crash.  And there&&&&shouldn't be a problem here anyway: if the guest has already moved the DRC&&&&away from UNUSABLE state, the detach would already be deferred, and if it&&&&hadn't it should be safe to detach it (the guest should fail gracefully&&&&when it attempts to change the allocation state).&&&&&&&&I think this was probably just a bandaid for some other problem in the&&&&state management.  So, remove awaiting_allocation and associated code.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Tested-by: Greg Kurz <groug@kaod.org>&&&&Tested-by: Daniel Barboza <danielhb@linux.vnet.ibm.com>&&&& "
1," Revert ""exec.c: Fix breakpoint invalidation race"" Now that we have proper locking after MTTCG patches have landed, we&&&&can revert the commit.  This reverts commit&&&&&&&&a9353fe897ca2687e5b3385ed39e3db3927a90e0.&&&&&&&&CC: Peter Maydell <peter.maydell@linaro.org>&&&&CC: Alex Benn脙漏e <alex.bennee@linaro.org>&&&&Signed-off-by: Pranith Kumar <bobby.prani@gmail.com>&&&&Message-Id: <20170712215143.19594-1-bobby.prani@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," xilinx: Fix latent error handling bug Assigning directly to *errp is not valid, as errp may be null,&&&&&error_fatal, or &error_abort.  The !*errp conditional protects&&&&against the latter two, but we then leak @local_err.  Fortunately,&&&&the qdev core always passes pointer to null, so this is ""merely"" a&&&&latent bug.&&&&&&&&Use error_propagate() instead.&&&&&&&&Cc: ""Edgar E. Iglesias"" <edgar.iglesias@gmail.com>&&&&Cc: Alistair Francis <alistair.francis@xilinx.com>&&&&Cc: Jason Wang <jasowang@redhat.com>&&&&Cc: qemu-arm@nongnu.org&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-Id: <20170608133906.12737-2-ehabkost@redhat.com>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&[Commit message clarified]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," tcg/mips: Bugfix for crash when running program with qemu-i386. When running a helloworld program with qemu-i386 in linux-user&&&&mode on Loongson 3A3000, it will crash. This patch fix the bug.&&&&&&&&Signed-off-by: Jiang Biao <jiang.biao2@zte.com.cn>&&&&Message-Id: <1499669979-25904-1-git-send-email-jiang.biao2@zte.com.cn>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
1," vhost-user: unregister slave req handler at cleanup time If the backend sends a request just before closing the socket,&&&&the aio dispatcher might schedule its reading after the vhost&&&&device has been cleaned, leading to a NULL pointer dereference&&&&in slave_read();&&&&&&&&vhost_user_cleanup() already closes the socket but it is not&&&&enough, the handler has to be unregistered.&&&&&&&&Signed-off-by: Maxime Coquelin <maxime.coquelin@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qom/cpu: remove host_tid field This was only used by the gdbstub and even then was only being set for&&&&subsequent threads. Rather the continue duplicating the number just&&&&make the gdbstub get the information from TaskState structure.&&&&&&&&Now the tid is correctly reported for all threads the bug I was seeing&&&&with ""vCont;C04:0;c"" packets is fixed as the correct tid is reported&&&&to gdb.&&&&&&&&I moved cpu_gdb_index into the gdbstub to facilitate easy access to&&&&the TaskState which is used elsewhere in gdbstub.&&&&&&&&To prevent BSD failing to build I've included ts_tid into its&&&&TaskStruct but not populated it - which was the same state as the old&&&&cpu->host_tid. I'll leave it up to the BSD maintainers to actually&&&&populate this properly if they want a working gdbstub with&&&&user-threads.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Claudio Imbrenda <imbrenda@linux.vnet.ibm.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Laurent Vivier <laurent@vivier.eu>&&&&&&&&Message-Id: <20170712105216.747-4-alex.bennee@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," pci: Clean up error checking in pci_add_capability() On success, pci_add_capability2() returns a positive value. On&&&&failure, it sets an error and return a negative value.&&&&&&&&pci_add_capability() laboriously checks this behavior. No other&&&&caller does. Drop the checks from pci_add_capability().&&&&&&&&Cc: mst@redhat.com&&&&Cc: marcel@redhat.com&&&&Signed-off-by: Mao Zhongyi <maozy.fnst@cn.fujitsu.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, spapr: prevent QEMU crash when CPU realization fails ICPState objects were being allocated before CPU thread realization.&&&&However commit 9ed656631d73 (xics: setup cpu at realize time) reversed it&&&&by allocating ICPState objects after CPU thread is realized. But it&&&&didn't take care to fix the error path because of which we observe&&&&a SIGSEGV when CPU thread realization fails during cold/hotplug.&&&&&&&&Fix this by ensuring that we do object_unparent() of ICPState object&&&&only in case when is was created earlier.&&&&&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1," scripts: Test script to look for -device crashes Test code to check if we can crash QEMU using -device. It will&&&&test all accel/machine/device combinations by default, which may&&&&take a few hours (it's more than 90k test cases). There's a ""-r""&&&&option that makes it test a random sample of combinations.&&&&&&&&The scripts contains a whitelist for: 1) known error messages&&&&that make QEMU exit cleanly; 2) known QEMU crashes.&&&&&&&&This is the behavior when the script finds a failure:&&&&&&&&* Known clean (exitcode=1) errors generate DEBUG messages&&&&  (hidden by default)&&&&* Unknown clean (exitcode=1) errors will generate INFO messages&&&&  (visible by default)&&&&* Known crashes generate error messages, but are not fatal&&&&  (unless --strict mode is used)&&&&* Unknown crashes generate fatal error messages&&&&&&&&Having an updated whitelist of known clean errors is useful to make the&&&&script less verbose and run faster when in --quick mode, but the&&&&whitelist doesn't need to be always up to date.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-Id: <20170526181200.17227-4-ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," q35/mch: implement extended TSEG sizes The q35 machine type currently lets the guest firmware select a 1MB, 2MB&&&&or 8MB TSEG (basically, SMRAM) size. In edk2/OVMF, we use 8MB, but even&&&&that is not enough when a lot of VCPUs (more than approx. 224) are&&&&configured -- SMRAM footprint scales largely proportionally with VCPU&&&&count.&&&&&&&&Introduce a new property for ""mch"" called ""extended-tseg-mbytes"", which&&&&expresses (in megabytes) the user's choice of TSEG (SMRAM) size.&&&&&&&&Invent a new, QEMU-specific register in the config space of the DRAM&&&&Controller, at offset 0x50, in order to allow guest firmware to query the&&&&TSEG (SMRAM) size.&&&&&&&&According to Intel Document Number 316966-002, Table 5-1 ""DRAM Controller&&&&Register Address Map (D0:F0)"":&&&&&&&&    Warning: Address locations that are not listed are considered Intel&&&&             Reserved registers locations. Reads to Reserved registers may&&&&             return non-zero values. Writes to reserved locations may&&&&             cause system failures.&&&&&&&&             All registers that are defined in the PCI 2.3 specification,&&&&             but are not necessary or implemented in this component are&&&&             simply not included in this document. The&&&&             reserved/unimplemented space in the PCI configuration header&&&&             space is not documented as such in this summary.&&&&&&&&Offsets 0x50 and 0x51 are not listed in Table 5-1. They are also not part&&&&of the standard PCI config space header. And they precede the capability&&&&list as well, which starts at 0xe0 for this device.&&&&&&&&When the guest writes value 0xffff to this register, the value that can be&&&&read back is that of ""mch.extended-tseg-mbytes"" -- unless it remains&&&&0xffff. The guest is required to write 0xffff first (as opposed to a&&&&read-only register) because PCI config space is generally not cleared on&&&&QEMU reset, and after S3 resume or reboot, new guest firmware running on&&&&old QEMU could read a guest OS-injected value from this register.&&&&&&&&After reading the available ""extended"" TSEG size, the guest firmware may&&&&actually request that TSEG size by writing pattern 11b to the ESMRAMC&&&&register's TSEG_SZ bit-field. (The Intel spec referenced above defines&&&&only patterns 00b (1MB), 01b (2MB) and 10b (8MB); 11b is reserved.)&&&&&&&&On the QEMU command line, the value can be set with&&&&&&&&  -global mch.extended-tseg-mbytes=N&&&&&&&&The default value for 2.10+ q35 machine types is 16. The value is limited&&&&to 0xfff (4095) at the moment, purely so that the product (4095 MB) can be&&&&stored to the uint32_t variable ""tseg_size"" in mch_update_smram(). Users&&&&are responsible for choosing sensible TSEG sizes.&&&&&&&&On 2.9 and earlier q35 machine types, the default value is 0. This lets&&&&the 11b bit pattern in ESMRAMC.TSEG_SZ, and the register at offset 0x50,&&&&keep their original behavior.&&&&&&&&When ""extended-tseg-mbytes"" is nonzero, the new register at offset 0x50 is&&&&set to that value on reset, for completeness.&&&&&&&&PCI config space is migrated automatically, so no VMSD changes are&&&&necessary.&&&&&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Ref: https://bugzilla.redhat.com/show_bug.cgi?id=1447027&&&&Ref: https://lists.01.org/pipermail/edk2-devel/2017-May/010456.html&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," curl: split curl_find_state/curl_init_state If curl_easy_init fails, a CURLState is left with s->in_use = 1.  Split&&&&curl_init_state in two, so that we can distinguish the two failures and&&&&call curl_clean_state if needed.&&&&&&&&While at it, simplify curl_find_state, removing a dummy loop.  The&&&&aio_poll loop is moved to the sole caller that needs it.&&&&&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20170515100059.15795-5-pbonzini@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
1," qcow2: Optimize write zero of unaligned tail cluster We've already improved discards to operate efficiently on the tail&&&&of an unaligned qcow2 image; it's time to make a similar improvement&&&&to write zeroes.  The special case is only valid at the tail&&&&cluster of a file, where we must recognize that any sectors beyond&&&&the image end would implicitly read as zero, and therefore should&&&&not penalize our logic for widening a partial cluster into writing&&&&the whole cluster as zero.&&&&&&&&However, note that for now, the special case of end-of-file is only&&&&recognized if there is no backing file, or if the backing file has&&&&the same length; that's because when the backing file is shorter&&&&than the active layer, we don't have code in place to recognize&&&&that reads of a sector unallocated at the top and beyond the backing&&&&end-of-file are implicitly zero.  It's not much of a real loss,&&&&because most people don't use images that aren't cluster-aligned,&&&&or where the active layer is a different size than the backing&&&&layer (especially where the difference falls within a single cluster).&&&&&&&&Update test 154 to cover the new scenarios, using two images of&&&&intentionally differing length.&&&&&&&&While at it, fix the test to gracefully skip when run as&&&&./check -qcow2 -o compat=0.10 154&&&&since the older format lacks zero clusters already required earlier&&&&in the test.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20170507000552.20847-11-eblake@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," target/sh4: fix RTE instruction delay slot The ReTurn from Exception (RTE) instruction loads the system register&&&&(SR) with the saved system register (SSR). It has a delay slot, and&&&&behaves specially according to the SH4 manual:&&&&&&&&  The SR value accessed by the instruction in the RTE delay slot is the&&&&  value restored from SSR by the RTE instruction. The SR and MD values&&&&  defined prior to RTE execution are used to fetch the instruction in&&&&  the RTE delay slot.&&&&&&&&The instruction in the delay slot being often a NOP, it doesn't cause&&&&any issue most of the time except in some rare cases where the NOP is&&&&being splitted in a different TB (for example when the TCG op buffer&&&&is full). In that case the NOP is fetched with the user permissions&&&&and causes an instruction TLB protection violation exception.&&&&&&&&This patches fixes that by introducing a new delay slot flag for the&&&&RTE instruction. Given it's a privileged instruction, the RTE delay&&&&slot instruction is always fetched in privileged mode. It is therefore&&&&enough to to check for this flag in cpu_mmu_index.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," Revert ""COLO-compare: Optimize tcp compare trace event"" This reverts commit 0fc8aec7de64f2bf83a274a2a38b938ce03425d2.&&&&&&&&In commit 2dfe5113b11 we split a trace event with a lot of arguments&&&&in two, because the UST trace backend has a limit on the number&&&&of arguments you can have in a single trace event. Unfortunately&&&&we subsequently forgot about this, and in commit 0fc8aec7de64f2&&&&we merged the two trace events again, recreating the ""UST backend&&&&doesn't build"" bug.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," tests: Add a tester for HMP commands HMP commands do not get any automatic testing yet, so on certain&&&&QEMU machines, some HMP commands were causing crashes in the past.&&&&Thus we should test HMP commands in our test suite, too, to avoid&&&&that such problems creep in again in the future.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-Id: <1493097407-20482-1-git-send-email-thuth@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
1," use _Static_assert in QEMU_BUILD_BUG_ON QEMU_BUILD_BUG_ON should use C11's _Static_assert, if the compiler supports it,&&&&to provide more readable messages on failure.&&&&&&&&We check for _Static_assert in configure, and set CONFIG_STATIC_ASSERT&&&&accordingly. QEMU_BUILD_BUG_ON invokes _Static_assert if CONFIG_STATIC_ASSERT&&&&is defined, and reverts to the old way otherwise.&&&&&&&&That way, systems without C11 conforming compiler will still have the old&&&&messages, as verified by intentionally breaking the configure check.&&&&&&&&the following example output was generated by inverting the condition in&&&&QEMU_BUILD_BUG_ON:&&&&&&&&without _Static_assert:&&&&&&&&> In file included from /qemu/include/qemu/osdep.h:36:0,&&&&>                  from /qemu/qga/commands.c:13:&&&&> /qemu/qga/commands.c: In function 鈥榪mp_guest_exec_status鈥?&&&&> /qemu/include/qemu/compiler.h:89:12: error: negative width in bit-field 鈥?anonymous>鈥?&&&>      struct { \&&&&>             ^&&&&> /qemu/include/qemu/compiler.h:96:38: note: in expansion of macro  QEMU_BUILD_BUG_ON_STRUCT鈥?&&&>  #define QEMU_BUILD_BUG_ON(x) typedef QEMU_BUILD_BUG_ON_STRUCT(x) \&&&&>                                       ^~~~~~~~~~~~~~~~~~~~~~~~&&&&> /qemu/include/qemu/atomic.h:146:5: note: in expansion of macro 鈥楺EMU_BUILD_BUG_ON鈥?&&&>      QEMU_BUILD_BUG_ON(sizeof(*ptr) > sizeof(void *));   \&&&&>      ^~~~~~~~~~~~~~~~~&&&&> /qemu/include/qemu/atomic.h:417:5: note: in expansion of macro 鈥榓tomic_load_acquire鈥?&&&>      atomic_load_acquire(ptr)&&&&>      ^~~~~~~~~~~~~~~~~~~&&&&> /qemu/qga/commands.c:160:21: note: in expansion of macro 鈥榓tomic_mb_read鈥?&&&>      bool finished = atomic_mb_read(&gei->finished);&&&&>                      ^~~~~~~~~~~~~~&&&&&&&&with _Static_assert:&&&&&&&&> In file included from /qemu/include/qemu/osdep.h:36:0,&&&&>                  from /qemu/qga/commands.c:13:&&&&> /qemu/qga/commands.c: In function 鈥榪mp_guest_exec_status鈥?&&&&> /qemu/include/qemu/compiler.h:94:30: error: static assertion failed: ""not expecting: sizeof(*&gei->finished) > sizeof(void *)""&&&&>  #define QEMU_BUILD_BUG_ON(x) _Static_assert(!(x), #x)&&&&>                               ^&&&&> /qemu/include/qemu/atomic.h:146:5: note: in expansion of macro 鈥楺EMU_BUILD_BUG_ON鈥?&&&>      QEMU_BUILD_BUG_ON(sizeof(*ptr) > sizeof(void *));   \&&&&>      ^~~~~~~~~~~~~~~~~&&&&> /qemu/include/qemu/atomic.h:417:5: note: in expansion of macro 鈥榓tomic_load_acquire鈥?&&&>      atomic_load_acquire(ptr)&&&&>      ^~~~~~~~~~~~~~~~~~~&&&&> /qemu/qga/commands.c:160:21: note: in expansion of macro 鈥榓tomic_mb_read鈥?&&&>      bool finished = atomic_mb_read(&gei->finished);&&&&>                      ^~~~~~~~~~~~~~&&&&&&&&Signed-off-by: Andreas Grapentin <andreas@grapentin.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," ui/console: ensure do_safe_dpy_refresh holds BQL I missed the fact that when an exclusive work item runs it drops the&&&&BQL to ensure all no vCPUs are stuck waiting for it, hence causing a&&&&deadlock. However the actual helper needs to take the BQL especially&&&&as we'll be messing with device emulation bits during the update which&&&&all assume BQL is held.&&&&&&&&We make a minor cpu_reloading_memory_map which must try and unlock the&&&&RCU if we are actually outside the running context.&&&&&&&&Reported-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, cirrus: fix off-by-one in cirrus_bitblt_rop_bkwd_transp_*_16 The switch from pointers to addresses (commit&&&&026aeffcb4752054830ba203020ed6eb05bcaba8 and&&&&ffaf857778286ca54e3804432a2369a279e73aa7) added&&&&a off-by-one bug to 16bit backward blits.  Fix.&&&&&&&&Reported-by: 鏉庡己 <liqiang6-s@360.cn>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Li Qiang <liqiang6-s@360.cn>&&&&Message-id: 1489735296-19047-1-git-send-email-kraxel@redhat.com&&&& 
1," hw/misc/imx6_src: Don't crash trying to reset missing CPUs Commit 4881658a4b introduced a call to arm_get_cpu_by_id(),&&&&and Coverity noticed that we weren't checking that it didn't&&&&return NULL (CID 1371652).&&&&&&&&Normally this won't happen (because all 4 CPUs are expected&&&&to exist), but it's possible the user requested fewer CPUs&&&&on the command line. Handle this possibility by silently&&&&doing nothing, which is the same behaviour as before commit&&&&4881658a4b and also how we handle the other CPU operations&&&&(since we ignore the INVALID_PARAM returns from arm_set_cpu_on()&&&&and friends).&&&&&&&&There is a slight behavioural difference to the pre-4881658a4b&&&&situation: the ""reset this core"" bit will remain set rather&&&&than not being permitted to be set. The imx6 datasheet is&&&&unclear about the behaviour in this odd corner case, so we&&&&opt for the simpler code rather than complicated logic to&&&&maintain identical behaviour.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1488542374-1256-1-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&& "
1, 9pfs: fix fd leak in local_opendir() Coverity issue CID1371731&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& 
1," qmp: Drop duplicated QMP command object checks qmp_check_input_obj() duplicates qmp_dispatch_check_obj(), except the&&&&latter screws up an error message.  handle_qmp_command() runs first&&&&the former, then the latter via qmp_dispatch(), masking the screwup.&&&&&&&&qemu-ga also masks the screwup, because it also duplicates checks,&&&&just differently.&&&&&&&&qmp_check_input_obj() exists because handle_qmp_command() needs to&&&&examine the command before dispatching it.  The previous commit got&&&&rid of this need, except for a tracepoint, and a bit of ""id"" code that&&&&relies on qdict not being null.&&&&&&&&Fix up the error message in qmp_dispatch_check_obj(), drop&&&&qmp_check_input_obj() and the tracepoint.  Protect the ""id"" code with&&&&a conditional.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1488544368-30622-9-git-send-email-armbru@redhat.com>&&&& "
1, tests: fix virtio-blk-test leaks Use qvirtio_pci_device_find_slot() to avoid leaking the non-hp&&&&device. Add assert() to avoid further leaks in the future.&&&&&&&&Use qvirtio_pci_device_free() to correctly free QVirtioPCIDevice.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1, tests: fix q35-test leaks Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1," 9pfs: local: symlink: don't follow symlinks The local_symlink() callback is vulnerable to symlink attacks because it&&&&calls:&&&&&&&&(1) symlink() which follows symbolic links for all path elements but the&&&&    rightmost one&&&&(2) open(O_NOFOLLOW) which follows symbolic links for all path elements but&&&&    the rightmost one&&&&(3) local_set_xattr()->setxattr() which follows symbolic links for all&&&&    path elements&&&&(4) local_set_mapped_file_attr() which calls in turn local_fopen() and&&&&    mkdir(), both functions following symbolic links for all path&&&&    elements but the rightmost one&&&&&&&&This patch converts local_symlink() to rely on opendir_nofollow() and&&&&symlinkat() to fix (1), openat(O_NOFOLLOW) to fix (2), as well as&&&&local_set_xattrat() and local_set_mapped_file_attrat() to fix (3) and&&&&(4) respectively.&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, 9pfs: local: unlinkat: don't follow symlinks The local_unlinkat() callback is vulnerable to symlink attacks because it&&&&calls remove() which follows symbolic links in all path elements but the&&&&rightmost one.&&&&&&&&This patch converts local_unlinkat() to rely on opendir_nofollow() and&&&&unlinkat() instead.&&&&&&&&Most of the code is moved to a separate local_unlinkat_common() helper&&&&which will be reused in a subsequent patch to fix the same issue in&&&&local_remove().&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," migration/vmstate: split up vmstate_base_addr Currently vmstate_base_addr does several things: it pinpoints the field&&&&within the struct, possibly allocates memory and possibly does the first&&&&pointer dereference. Obviously allocation is needed only for load.&&&&&&&&Let us split up the functionality in vmstate_base_addr and move the&&&&address manipulations (that is everything but the allocation logic) to&&&&load and save so it becomes more obvious what is actually going on. Like&&&&this all the address calculations (and the handling of the flags&&&&controlling these) is in one place and the sequence is more obvious.&&&&&&&&The newly introduced function vmstate_handle_alloc also fixes the&&&&allocation for the unused VMS_VBUFFER|VMS_MULTIPLY|VMS_ALLOC scenario&&&&and is substantially simpler than the original vmstate_base_addr.&&&&&&&&In load and save some asserts are added so it's easier to debug&&&&situations where we would end up with a null pointer dereference.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Message-Id: <20170222160119.52771-3-pasic@linux.vnet.ibm.com>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
1," option: Fix checking of sizes for overflow and trailing crap parse_option_size()'s checking for overflow and trailing crap is&&&&wrong.  Has always been that way.  qemu_strtosz() gets it right, so&&&&use that.&&&&&&&&This adds support for size suffixes 'P', 'E', and ignores case for all&&&&suffixes, not just 'k'.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1487708048-2131-25-git-send-email-armbru@redhat.com>&&&& "
1," check-qdict: Tighten qdict_crumple_test_recursive() some Consistently check for unexpected QDict entries, and qdict_get_qdict()&&&&success.  The latter doesn't tighten the test, it only makes it fail&&&&more nicely.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1487363905-9480-4-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1, target/openrisc: Fix exception handling status registers I am working on testing instruction emulation patches for the linux&&&&kernel. During testing I found these 2 issues:&&&&&&&& - sets DSX (delay slot exception) but never clears it&&&& - EEAR for illegal insns should point to the bad exception (as per&&&&   openrisc spec) but its not&&&&&&&&This patch fixes these two issues by clearing the DSX flag when not in a&&&&delay slot and by setting EEAR to exception PC when handling illegal&&&&instruction exceptions.&&&&&&&&After this patch the openrisc kernel with latest patches boots great on&&&&qemu and instruction emulation works.&&&&&&&&Cc: qemu-trivial@nongnu.org&&&&Cc: openrisc@lists.librecores.org&&&&Signed-off-by: Stafford Horne <shorne@gmail.com>&&&&Message-Id: <20170113220028.29687-1-shorne@gmail.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
1," qemu-img: Avoid setting ret to unused value in img_convert() Coverity points out that we assign the return value from&&&&bdrv_snapshot_load_tmp() to 'ret' in img_convert(), but then&&&&never use that variable. (We check for failure by looking&&&&at local_err instead.) Drop the unused assignment, bringing&&&&the call into line with the following call to&&&&bdrv_snapshot_laod_tmp_by_id_or_name().&&&&&&&&(Fixes CID 1247240.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1486744104-15590-3-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," ahci: advertise HOST_CAP_64 The AHCI emulation code supports 64-bit addressing and should advertise this&&&&fact in the Host Capabilities register. Both Linux and Windows drivers test&&&&this bit to decide if the upper 32 bits of various registers may be written&&&&to, and at least some versions of Windows have a bug where DMA is attempted&&&&with an address above 4GB but, in the absence of HOST_CAP_64, the upper 32&&&&bits are left unititialized which leads to a memory corruption.&&&&&&&&[Maintainer edit:&&&&&&&&This fixes https://bugzilla.redhat.com/show_bug.cgi?id=1411105,&&&&which affects Windows Server 2008 SP2 in some cases.]&&&&&&&&Signed-off-by: Ladi Prosek <lprosek@redhat.com>&&&&Message-id: 1484305370-6220-1-git-send-email-lprosek@redhat.com&&&&[Amended commit message --js]&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&& "
1, trace: Lock vCPU list when initializing dynamic tracing state Fixes potential corruption when a vCPU is hot-(un)plugged while&&&&initializing the current one.&&&&&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Message-id: 148278747515.1404.6538173443841279200.stgit@fimbulvetr.bsc.es&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," migration: Allow ""device add"" options to only add migratable devices Introduce checks for the unmigratable flag in the VMStateDescription&&&&structs of respective devices when user attempts to add them. If the&&&&""--only-migratable"" was specified, all unmigratable devices will&&&&rightly fail to add. This feature is made compatible for both ""-device""&&&&and ""-usbdevice"" command line options and covers their hmp and qmp&&&&counterparts as well.&&&&&&&&Signed-off-by: Ashijeet Acharya <ashijeetacharya@gmail.com>&&&&Message-Id: <1484566314-3987-4-git-send-email-ashijeetacharya@gmail.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
1," virtio-gpu: fix memory leak in update_cursor_data_virgl In update_cursor_data_virgl function, if the 'width'/ 'height'&&&&is not equal to current cursor's width/height it will return&&&&without free the 'data' allocated previously. This will lead&&&&a memory leak issue. This patch fix this issue.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Message-id: 58187760.41d71c0a.cca75.4cb9@mx.google.com&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," target-xtensa: implement RER/WER instructions RER and WER are privileged instructions for accessing external&&&&registers. External register address space is local to processor core.&&&&There's no alignment requirements, addressable units are 32-bit wide&&&&registers.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
1," virtio-gpu: fix information leak in getting capset info dispatch In virgl_cmd_get_capset_info dispatch function, the 'resp' hasn't&&&&been full initialized before writing to the guest. This will leak&&&&the 'resp.padding' and 'resp.hdr.padding' fieds to the guest. This&&&&patch fix this issue.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Message-id: 5818661e.0860240a.77264.7a56@mx.google.com&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," migration: re-active images while migration been canceled after inactive them commit fe904ea8242cbae2d7e69c052c754b8f5f1ba1d6 fixed a case&&&&which migration aborted QEMU because it didn't regain the control&&&&of images while some errors happened.&&&&&&&&Actually, there are another two cases can trigger the same error reports:&&&&"" bdrv_co_do_pwritev: Assertion `!(bs->open_flags & 0x0800)' failed"",&&&&&&&&Case 1, codes path:&&&&migration_thread()&&&&    migration_completion()&&&&        bdrv_inactivate_all() ----------------> inactivate images&&&&        qemu_savevm_state_complete_precopy()&&&&            socket_writev_buffer() --------> error because destination fails&&&&                qemu_fflush() ----------------> set error on migration stream&&&&-> qmp_migrate_cancel() ----------------> user cancelled migration concurrently&&&&    -> migrate_set_state() ------------------> set migrate CANCELLIN&&&&    migration_completion() -----------------> go on to fail_invalidate&&&&	if (s->state == MIGRATION_STATUS_ACTIVE) -> Jump this branch&&&&&&&&Case 2, codes path:&&&&migration_thread()&&&&    migration_completion()&&&&        bdrv_inactivate_all() ----------------> inactivate images&&&&    migreation_completion() finished&&&&-> qmp_migrate_cancel() ---------------> user cancelled migration concurrently&&&&    qemu_mutex_lock_iothread();&&&&    qemu_bh_schedule (s->cleanup_bh);&&&&&&&&As we can see from above, qmp_migrate_cancel can slip in whenever&&&&migration_thread does not hold the global lock. If this happens after&&&&bdrv_inactive_all() been called, the above error reports will appear.&&&&&&&&To prevent this, we can call bdrv_invalidate_cache_all() in qmp_migrate_cancel()&&&&directly if we find images become inactive.&&&&&&&&Besides, bdrv_invalidate_cache_all() in migration_completion() doesn't have the&&&&protection of big lock, fix it by add the missing qemu_mutex_lock_iothread();&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Message-Id: <1485244792-11248-1-git-send-email-zhang.zhanghailiang@huawei.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
1," pseries: Update SLOF firmware image to 20161019 The main changes are:&&&&* virtio-serial&&&&* booting speed imrovement&&&&* better PCI bridge support&&&&&&&&The complete changelog is:&&&&  > virtio-serial: Fix compile error&&&&  > scsi: Remove debug functions from scsi-loader.fs&&&&  > scsi: Remove unused read-6 command&&&&  > obp-tftp: Remove the ciregs-buffer&&&&  > libnet: Simplify the net-load arguments passing&&&&  > libnet: Simplify the Forth-to-C wrapper of ping()&&&&  > Do not link libnet to net-snk anymore, and remove net-snk from board-qemu&&&&  > Add a Forth-to-C wrapper for the ping command, too&&&&  > Link libnet code to Paflof and add a wrapper for netboot()&&&&  > Remember execution tokens of ""write"" and ""read"" for socket operations&&&&  > Add virtio-serial device support&&&&  > Generalize output banner write routine&&&&  > Improve indentation in OF.fs&&&&  > scsi: implement READ (16) command&&&&  > rtas: Improve rtas-do-config-@ and rtas-do-config-! a little bit&&&&  > libnet: Make netapps.h includable from .code files&&&&  > libnet: Remove unused prototypes from netapps.h&&&&  > libnet: Fix the printout of the ping command&&&&  > libnet: Make sure to close sockets when we're done&&&&  > scsi: implement read-capacity-16&&&&  > pci: Fix secondary and subordinate PCI bus enumeration with board-qemu&&&&  > pci-phb: Fix stack underflow in phb-pci-walk-bridge&&&&  > paflof: Add a read() function to read keyboard input&&&&  > paflof: Add socket(), send() and recv() functions to paflof&&&&  > paflof: Provide get_timer() and set_timer() helper functions&&&&  > paflof: Add a write_mm_log helper function&&&&  > paflof: Copy sbrk code from net-snk&&&&  > paflof: Use CFLAGS from make.rules instead of completely redefining them&&&&  > Do not include the FCode evaluator by default anymore&&&&  > Source code beautification of board-qemu/slof/pci-interrupts.fs&&&&  > Allow PCI devices in PCI bridge slots greater than 4&&&&  > Fix bad interrupt pin numbering in interrupt-map property of PCI bridges&&&&  > Improve SLOF_alloc_mem_aligned()&&&&  > instance: Fix set-my-args for empty arguments&&&&  > Fix remaining compiler warnings in sloffs.c&&&&  > Remove misleading padding fields from ROM header definition&&&&  > Improve indentation in calculatecrc.h&&&&  > Do not include calculatecrc.h from assembler files&&&&  > Remove unused defines in calculatecrc.h&&&&  > libnet: Re-initialize global variables at the beginning of tftp()&&&&  > Remove dependency on cpu/@0 for booting&&&&  > usb: Set XHCI slot speed according to port status&&&&  > usb: Build correct route string for USB3 devices behind a hub&&&&  > usb: Initialize USB3 devices on a hub and keep track of hub topology&&&&  > usb: Increase amount of maximum slot IDs and add a sanity check&&&&  > usb: Move XHCI port state arrays from header to .c file&&&&  > tools: add copy functionality&&&&  > tools: added support to sloffs to read from /dev/slof_flash&&&&  > tools: added file append functionality&&&&  > tools: use crc checking code from romfs/tools&&&&  > tools: added initial version of sloffs&&&&  > romfs: factored out crc code, to make it usable from other locations&&&&  > tools: remove unused parts from the Makefile&&&&  > usb-hid: Fix non-working comma key&&&&  > fat-files: Fix access to FAT32 dir/files when cluster > 16-bits&&&&  > virtio-net: fix ring handling in receive&&&&  > net: Remove remainders of the MTFTP code&&&&  > net: Move also files from clients/net-snk/app/netapps/ to lib/libnet/&&&&  > net: Move files from clients/net-snk/app/netlib/ to lib/libnet/&&&&  > net-snk: Get rid of netlib and netapps prefixes in include statements&&&&  > usb-xhci: assign field4 before conditional&&&&  > Improve F12 key handling in boot menu&&&&  > Fix stack underflow that occurs with duplicated ESC in input&&&&  > rtas-nvram: optimize erase&&&&  > ipv6: Replace magic number 1500 with ETH_MTU_SIZE (i.e. 1518)&&&&  > ipv6: Fix NULL pointer dereference in ip6addr_add()&&&&  > ipv6: Fix memory leak in set_ipv6_address() / ip6_create_ll_address()&&&&  > ipv6: Clear memory after malloc if necessary&&&&  > ipv6: Fix possible NULL-pointer dereference in send_ipv6()&&&&  > ping: use gateway address for routing&&&&  > ping: add netmask in the ping argument&&&&  > xhci: fix missing keys from keyboard&&&&  > xhci: add memory barrier after filling the trb&&&&  > loaders: Remove netflash command&&&&  > boot: Remove legacy Forth words for network loading&&&&  > base: Move cnt-bits and bcd-to-bin to board-js2x folder&&&&  > base: Move huge-tftp-load variable to obp-tftp package&&&&  > base: Remove unused IP address conversion functions&&&&  > virtio: White space cleanup in virtio-9p.c&&&&  > virtio: Add modern version 1.0 support to 9p driver&&&&  > virtio: Set a proper name for virtio-9p device tree nodes&&&&  > pci: Fix mistype in ""unkown-bridge""&&&&  > ipv6: Indent code with tabs, not with spaces&&&&  > ipv6: send_ipv6() has to return after doing NDP&&&&  > ipv6: Do not use unitialized MAC address array&&&&  > ipv6: Add support for sending packets through a router&&&&  > Remove unused sms code.&&&&  > virtio-net: initialize to populate mac address&&&&  > libbootmsg: Do not use '\b' characters when printing checkpoints&&&&  > dev-null: The ""read"" function has to return 0 if nothing has been read&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," trace: don't abort qemu if ftrace can't be initialized If the ftrace backend is compiled into QEMU, any attempt&&&&to start QEMU while non-root will fail due to the&&&&inability to open /sys/kernel/debug/tracing/tracing_on.&&&&&&&&Add a fallback into the code so that it connects up the&&&&trace_marker_fd variable to /dev/null when getting&&&&EACCES on the 'trace_on' file. This allows QEMU to&&&&run, with ftrace turned into a no-op.&&&&&&&&[Fixed s/setting/getting/ and s/EACCESS/EACCES/ errors pointed out by&&&&Eric Blake <eblake@redhat.com>.&&&&--Stefan]&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1475588159-30598-13-git-send-email-berrange@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, tests: acpi: extend cphp testcase with numa check so it would be possible to verify _PXM generation in&&&&DSDT and SRAT tables.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1, cadence_gem: Fix priority queue out of bounds access There was an error with some of the register implementation assuming&&&&there are 16 priority queues supported when the IP only supports 8. This&&&&patch corrects the registers to only support 8 queues.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reported-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 33bf2d28326d22875602234b8b15cf56fb678333.1474911607.git.alistair.francis@xilinx.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1, linux-user: Use glib malloc functions in load_symbols() Switch to using the glib malloc functions in load_symbols();&&&&this deals with a Coverity complaint about possible&&&&integer overflow calculating the allocation size with&&&&'nsyms * sizeof(*syms)'.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
1," usb-mtp: fix sending files larger than 4gb MTP requires that if a file is larger than 4gb or if sending data larger&&&&than 4gb, that the length field be set to 0xFFFFFFFF.&&&&&&&&Also widened a couple variables to prevent overflow errors.&&&&&&&&Signed-off-by: Isaac Lozano <109lozanoi@gmail.com>&&&&Message-id: 01ad8ec7775f58575801ac3f13716f553a16815e.1470477265.git.109lozanoi@gmail.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," tests: fix rsp leak in postcopy-test In all cases, even when the dict doesn't contain 'ram', the qmp response&&&&must be unref.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," vnc: fix qemu crash because of SIGSEGV The backtrace is:&&&&&&&&0x00007f0b75cdf880 in pixman_image_get_stride () from /lib64/libpixman-1.so.0&&&&0x00007f0b77bcb3cf in vnc_server_fb_stride (vd=0x7f0b7a1a2bb0) at ui/vnc.c:680&&&&vnc_dpy_copy (dcl=0x7f0b7a1a2c00, src_x=224, src_y=263, dst_x=319, dst_y=363, w=1, h=1) at ui/vnc.c:915&&&&0x00007f0b77bbcc35 in dpy_gfx_copy (con=0x7f0b7a146210, src_x=src_x@entry=224, src_y=src_y@entry=263, dst_x=dst_x@entry=319,&&&&dst_y=dst_y@entry=363, w=1, h=1) at ui/console.c:1575&&&&0x00007f0b77bbda4e in qemu_console_copy (con=<optimized out>, src_x=src_x@entry=224, src_y=src_y@entry=263, dst_x=dst_x@entry=319,&&&&dst_y=dst_y@entry=363, w=<optimized out>, h=<optimized out>) at ui/console.c:2111&&&&0x00007f0b77ac0980 in cirrus_do_copy (h=<optimized out>, w=<optimized out>, src=<optimized out>, dst=<optimized out>, s=0x7f0b7b086090) at hw/display/cirrus_vga.c:774&&&&cirrus_bitblt_videotovideo_copy (s=0x7f0b7b086090) at hw/display/cirrus_vga.c:793&&&&cirrus_bitblt_videotovideo (s=0x7f0b7b086090) at hw/display/cirrus_vga.c:915&&&&cirrus_bitblt_start (s=0x7f0b7b086090) at hw/display/cirrus_vga.c:1056&&&&0x00007f0b77965cfb in memory_region_write_accessor (mr=0x7f0b7b096e40, addr=320, value=<optimized out>, size=1, shift=<optimized out>,mask=<optimized out>, attrs=...) at /root/rpmbuild/BUILD/master/qemu/memory.c:525&&&&0x00007f0b77963f59 in access_with_adjusted_size (addr=addr@entry=320, value=value@entry=0x7f0b69a268d8, size=size@entry=4,&&&&access_size_min=<optimized out>, access_size_max=<optimized out>, access=access@entry=0x7f0b77965c80 <memory_region_write_accessor>,&&&&mr=mr@entry=0x7f0b7b096e40, attrs=attrs@entry=...) at /root/rpmbuild/BUILD/master/qemu/memory.c:591&&&&0x00007f0b77968315 in memory_region_dispatch_write (mr=mr@entry=0x7f0b7b096e40, addr=addr@entry=320, data=18446744073709551362,&&&&size=size@entry=4, attrs=attrs@entry=...) at /root/rpmbuild/BUILD/master/qemu/memory.c:1262&&&&0x00007f0b779256a9 in address_space_write_continue (mr=0x7f0b7b096e40, l=4, addr1=320, len=4, buf=0x7f0b77713028 ""\002\377\377\377"",&&&&attrs=..., addr=4273930560, as=0x7f0b7827d280 <address_space_memory>) at /root/rpmbuild/BUILD/master/qemu/exec.c:2544&&&&address_space_write (as=<optimized out>, addr=<optimized out>, attrs=..., buf=<optimized out>, len=<optimized out>) at /root/rpmbuild/BUILD/master/qemu/exec.c:2601&&&&0x00007f0b77925c1d in address_space_rw (as=<optimized out>, addr=<optimized out>, attrs=..., attrs@entry=...,&&&&buf=buf@entry=0x7f0b77713028 ""\002\377\377\377"", len=<optimized out>, is_write=<optimized out>) at /root/rpmbuild/BUILD/master/qemu/exec.c:2703&&&&0x00007f0b77962f53 in kvm_cpu_exec (cpu=cpu@entry=0x7f0b79fcc2d0) at /root/rpmbuild/BUILD/master/qemu/kvm-all.c:1965&&&&0x00007f0b77950cc6 in qemu_kvm_cpu_thread_fn (arg=0x7f0b79fcc2d0) at /root/rpmbuild/BUILD/master/qemu/cpus.c:1078&&&&0x00007f0b744b3dc5 in start_thread (arg=0x7f0b69a27700) at pthread_create.c:308&&&&0x00007f0b70d3d66d in clone () from /lib64/libc.so.6&&&&&&&&The code path while meeting segfault:&&&& vnc_dpy_copy&&&&   vnc_update_client&&&&     vnc_disconnect_finish [while vnc_disconnect_start() is invoked because somethins wrong]&&&&       vnc_update_server_surface&&&&         vd->server = NULL;&&&&   vnc_server_fb_stride&&&&     pixman_image_get_stride(vd->server)&&&&&&&&Let's add a non-NULL check before calling vnc_server_fb_stride() to avoid segmentation fault.&&&&&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Cc: Daniel P. Berrange <berrange@redhat.com>&&&&Reported-by: Yanying Zhuang <ann.zhuangyanying@huawei.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1472788698-120964-1-git-send-email-arei.gonglei@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, tests: fix test-vmstate leaks Spotted thanks to ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1," coroutine: Assert that no locks are held on termination A coroutine that takes a lock must also release it again. If the&&&&coroutine terminates without having released all its locks, it's buggy&&&&and we'll probably run into a deadlock sooner or later. Make sure that&&&&we don't get such cases.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target-sh4: Use glib allocator in movcal helper Coverity spots that helper_movcal() calls malloc() but doesn't&&&&check for failure. Fix this by switching to the glib allocation&&&&functions, which abort on allocation failure.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1468327859-21385-1-git-send-email-peter.maydell@linaro.org&&&&Acked-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," arm_gicv3: Add assert()s to tell Coverity that offsets are aligned Coverity complains that the GICR_IPRIORITYR case in gicv3_readl()&&&&can overflow an array, because it doesn't know that the offsets&&&&passed to that function must be word aligned. Add some assert()s&&&&which hopefully tell Coverity that this isn't possible.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1468261372-17508-1-git-send-email-peter.maydell@linaro.org&&&& "
1," vnc: fix incorrect checking condition when updating client vs->disconnecting is set to TRUE and vs->ioc is closed, but&&&&vs->ioc isn't set to NULL, so that the vnc_disconnect_finish()&&&&isn't invoked when you update client in vnc_update_client()&&&&after vnc_disconnect_start invoked. Let's using change the checking&&&&condition to avoid resource leak.&&&&&&&&Signed-off-by: Haibin Wang <wanghaibin.wang@huawei.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1467949056-81208-1-git-send-email-arei.gonglei@huawei.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, qxl: factor out qxl_get_check_slot_offset New helper function which translates a qxl physical address into&&&&memory slot and offset.  Also applies sanity checks.  Factored out&&&&from qxl_phys2virt.  No functional change.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1466597244-5938-1-git-send-email-kraxel@redhat.com&&&& 
1," megasas: remove unnecessary megasas_use_msi() megasas overwrites user configuration when msi_init fail to flag internal msi&&&&state, which is unsuitable. megasa_use_msi() is unnecessary, we can call&&&&msi_uninit() directly when unrealize, even no need to call msi_enabled() first.&&&&&&&&cc: Hannes Reinecke <hare@suse.de>&&&&cc: Paolo Bonzini <pbonzini@redhat.com>&&&&cc: Markus Armbruster <armbru@redhat.com>&&&&cc: Marcel Apfelbaum <marcel@redhat.com>&&&&cc: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&Acked-by: Hannes Reinecke <hare@suse.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Cao jin <caoj.fnst@cn.fujitsu.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, target-sparc: fix register corruption in ldstub if there is no write permission Signed-off-by: Artyom Tarasenko <atar4qemu@gmail.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&& 
1," linux-user: Avoid possible misalignment in host_to_target_siginfo() host_to_target_siginfo() is implemented by a combination of&&&&host_to_target_siginfo_noswap() followed by tswap_siginfo().&&&&The first of these two functions assumes that the target_siginfo_t&&&&it is writing to is correctly aligned, but the pointer passed&&&&into host_to_target_siginfo() is directly from the guest and&&&&might be misaligned. Use a local variable to avoid this problem.&&&&(tswap_siginfo() does now correctly handle a misaligned destination.)&&&&&&&&We have to add a memset() to host_to_target_siginfo_noswap()&&&&to avoid some false positive ""may be used uninitialized"" warnings&&&&from gcc about subfields of the _sifields union if it chooses to&&&&inline both tswap_siginfo() and host_to_target_siginfo_noswap()&&&&into host_to_target_siginfo().&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Peter Maydell <riku.voipio@linaro.org>&&&& "
1, ppc: Add real mode CI load/store instructions for P7 and P8 Those instructions are only available in hypervisor real mode and&&&&allow cache inhibited garded access to devices in that mode.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&[clg: fixed checkpatch.pl errors ]&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1," qdev_try_create(): Assert that devices we put onto the system bus are SysBusDevices If qdev_try_create() is passed NULL for the bus, it will automatically&&&&put the newly created device onto the default system bus. However&&&&if the device is not actually a SysBusDevice then this will result&&&&in later crashes (for instance when running the monitor ""info qtree""&&&&command) because code reasonably assumes that all devices on the system&&&&bus are system bus devices.&&&&&&&&Generally the mistake is that the calling code should create the&&&&object with object_new(TYPE_FOO) rather than qdev_create(NULL, TYPE_FOO);&&&&see commit 6749695eaaf346c1 for an example of fixing this bug.&&&&&&&&Assert in qdev_try_create() if the device isn't suitable to put on&&&&the system bus, so that this mistake results in failure earlier&&&&and more reliably.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," vmsvga: don't process more than 1024 fifo commands at once vmsvga_fifo_run is called in regular intervals (on each display update)&&&&and will resume where it left off.  So we can simply exit the loop,&&&&without having to worry about how processing will continue.&&&&&&&&Fixes: CVE-2016-4453&&&&Cc: qemu-stable@nongnu.org&&&&Cc: P J P <ppandit@redhat.com>&&&&Reported-by: 鏉庡己 <liqiang6-s@360.cn>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 1464592161-18348-5-git-send-email-kraxel@redhat.com&&&& "
1," linux-user: Check array bounds in errno conversion Check array bounds in host_to_target_errno() and target_to_host_errno().&&&&&&&&Signed-off-by: Timothy Edward Baldwin <T.E.Baldwin99@members.leeds.ac.uk>&&&&Message-id: 1441497448-32489-2-git-send-email-T.E.Baldwin99@members.leeds.ac.uk&&&&[PMM: Add a lower-bound check, use braces on if(), tweak commit message]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Laurent Vivier <laurent@vivier.eu>&&&& "
1," net: fix OptsVisitor memory leak Fixes 96a1616(""qapi-dealloc: Reduce use outside of generated code"")&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," .travis.yml: collapse the test matrix Remove the concept of TARGETS and build the complete target list for&&&&each config combination. Now the matrix is just based on CONFIG stanzas&&&&and we use the additional stuff for:&&&&&&&&  - things that only work on one compiler (sparse, gcov, gprof)&&&&  - combos where ""make check"" fails&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," char: fix broken EAGAIN retry on OS-X due to errno clobbering Some of the chardev I/O paths really want to write the&&&&complete data buffer even though the channel is in&&&&non-blocking mode. To achieve this they look for EAGAIN&&&&and g_usleep() for 100ms. Unfortunately the code is set&&&&to check errno == EAGAIN a second time, after the g_usleep()&&&&call has completed. On OS-X at least, g_usleep clobbers&&&&errno to ETIMEDOUT, causing the retry to be skipped.&&&&&&&&This failure to retry means the full data isn't written&&&&to the chardev backend, which causes various failures&&&&including making the tests/ahci-test qtest hang.&&&&&&&&Rather than playing games trying to reset errno just&&&&simplify the code to use a goto to retry instead of a&&&&a loop.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1459438168-8146-2-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qapi: Split visit_end_struct() into pieces As mentioned in previous patches, we want to call visit_end_struct()&&&&functions unconditionally, so that visitors can release resources&&&&tied up since the matching visit_start_struct() without also having&&&&to worry about error priority if more than one error occurs.&&&&&&&&Even though error_propagate() can be safely used to ignore a second&&&&error during cleanup caused by a first error, it is simpler if the&&&&cleanup cannot set an error.  So, split out the error checking&&&&portion (basically, input visitors checking for unvisited keys) into&&&&a new function visit_check_struct(), which can be safely skipped if&&&&any earlier errors are encountered, and leave the cleanup portion&&&&(which never fails, but must be called unconditionally if&&&&visit_start_struct() succeeded) in visit_end_struct().&&&&&&&&Generated code in qapi-visit.c has diffs resembling:&&&&&&&&|@@ -59,10 +59,12 @@ void visit_type_ACPIOSTInfo(Visitor *v,&&&&|         goto out_obj;&&&&|     }&&&&|     visit_type_ACPIOSTInfo_members(v, obj, &err);&&&&|-    error_propagate(errp, err);&&&&|-    err = NULL;&&&&|+    if (err) {&&&&|+        goto out_obj;&&&&|+    }&&&&|+    visit_check_struct(v, &err);&&&&| out_obj:&&&&|-    visit_end_struct(v, &err);&&&&|+    visit_end_struct(v);&&&&| out:&&&&&&&&and in qapi-event.c:&&&&&&&&@@ -47,7 +47,10 @@ void qapi_event_send_acpi_device_ost(ACP&&&&|         goto out;&&&&|     }&&&&|     visit_type_q_obj_ACPI_DEVICE_OST_arg_members(v, &param, &err);&&&&|-    visit_end_struct(v, err ? NULL : &err);&&&&|+    if (!err) {&&&&|+        visit_check_struct(v, &err);&&&&|+    }&&&&|+    visit_end_struct(v);&&&&|     if (err) {&&&&|         goto out;&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1461879932-9020-20-git-send-email-eblake@redhat.com>&&&&[Conflict with a doc fixup resolved]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," ivshmem: Failed realize() can leave migration blocker behind If pci_ivshmem_realize() fails after it created its migration blocker,&&&&the blocker is left in place.  Fix that by creating it last.&&&&&&&&Likewise, if it fails after it called fifo8_create(), it leaks fifo&&&&memory.  Fix that the same way.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1458066895-20632-18-git-send-email-armbru@redhat.com>&&&& "
1, aio-posix: Change CONFIG_EPOLL to CONFIG_EPOLL_CREATE1 CONFIG_EPOLL was being used to guard epoll_create1 which results&&&&in build failures on CentOS 5.&&&&&&&&Signed-off-by: Matthew Fortune <matthew.fortune@imgtec.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 6D39441BF12EF246A7ABCE6654B023536BB85D08@hhmail02.hh.imgtec.org&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," pc-dimm: fix error handling in pc_dimm_check_memdev_is_busy() If host_memory_backend_get_memory() were to return error and&&&&NULL MemoryRegion, pc_dimm_check_memdev_is_busy() would crash&&&&dereferencing NULL pointer in memory_region_is_mapped().&&&&But if error is set and non NULL MemoryRegion is returned&&&&then error_setg() will fail with ""error already set"" assertion&&&&in error_setv()&&&&&&&&To avoid above issues use typical error handling pattern&&&&for property setters:&&&&&&&&Error *local_error = NULL;&&&&...&&&&error_propagate(errp, local_err);&&&&&&&&Reported-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," target-arm: Forbid mode switch to Mon from Secure EL1 In v8 trying to switch mode to Mon from Secure EL1 is an&&&&illegal mode switch. (In v7 this is impossible as all secure&&&&modes except User are at EL3.) We can handle this case by&&&&making a switch to Mon valid only if the current EL is 3,&&&&which then gives the correct answer whether EL3 is AArch32&&&&or AArch64.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Message-id: 1455556977-3644-9-git-send-email-peter.maydell@linaro.org&&&& "
1," usb: check RNDIS buffer offsets & length When processing remote NDIS control message packets,&&&&the USB Net device emulator uses a fixed length(4096) data buffer.&&&&The incoming informationBufferOffset & Length combination could&&&&overflow and cross that range. Check control message buffer&&&&offsets and length to avoid it.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-id: 1455648821-17340-3-git-send-email-ppandit@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, throttle: Check that burst_level leaks correctly This patch expands test_leak_bucket() to check that burst_level leaks&&&&correctly.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, ipmi_bmc_sim: Fix off by one in check. Found by Paolo.&&&&&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Cc: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Corey Minyard <cminyard@mvista.com>&&&&Message-Id: <1452519152-6500-2-git-send-email-minyard@acm.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," qmp: Fix reference-counting of qnull on empty output visit Commit 6c2f9a15 ensured that we would not return NULL when the&&&&caller used an output visitor but had nothing to visit. But&&&&in doing so, it added a FIXME about a reference count leak&&&&that could abort qemu in the (unlikely) case of SIZE_MAX such&&&&visits (more plausible on 32-bit).  (Although that commit&&&&suggested we might fix it in time for 2.5, we ran out of time;&&&&fortunately, it is unlikely enough to bite that it was not&&&&worth worrying about during the 2.5 release.)&&&&&&&&This fixes things by documenting the internal contracts, and&&&&explaining why the internal function can return NULL and only&&&&the public facing interface needs to worry about qnull(),&&&&thus avoiding over-referencing the qnull_ global object.&&&&&&&&It does not, however, fix the stupidity of the stack mixing&&&&up two separate pieces of information; add a FIXME to explain&&&&that issue, which will be fixed shortly in a future patch.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Message-Id: <1454075341-13658-25-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," virtio-gpu: fix memory leak in error path Found by Coverity Scan, buf not freed on error.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& "
1," scsi: revert change to scsi_req_cancel_async and add assertions Fam Zheng noticed that the change in commit 36896bf (""scsi: always call&&&&notifier on async cancellation"", 2015-12-16) could cause a leak of&&&&the request; scsi_req_cancel_async now calls scsi_req_ref&&&&multiple times for multiple cancellations, but there is only&&&&one call to scsi_req_cancel_complete.&&&&&&&&So revert the patch and instead assert that the problematic case (a call&&&&to scsi_req_cancel_async after the aiocb has been completed) cannot&&&&happen.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qemu-iotests: Reduce racy output in 028 On my machine, './check -qcow2 028' was failing about 80% of the&&&&time, due to a race in how many times the repeated attempts&&&&to run 'info block-jobs' could occur before the job was done,&&&&showing up as a failure of fewer '(qemu) ' prompts than in the&&&&expected output.  Silence the output during the repetitions, then&&&&add a final clean command to keep the expected output useful;&&&&once patched, I was finally able to run the test 20 times in a&&&&row with no failures.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," net/vmxnet3: fix debug macro pattern for vmxnet3 Vmxnet3 uses the following debug macro style:&&&&&&&& #ifdef SOME_DEBUG&&&& #  define debug(...) do{ printf(...); } while (0)&&&& # else&&&& #  define debug(...) do{ } while (0)&&&& #endif&&&&&&&&If SOME_DEBUG is undefined, then format string inside the&&&&debug macro will never be checked by compiler. Code is&&&&likely to break in the future when SOME_DEBUG is enabled&&&& because of lack of testing. This patch changes this&&&&to the following:&&&&&&&& #define debug(...) \&&&&  do { if (SOME_DEBUG_ENABLED) printf(...); } while (0)&&&&&&&&Signed-off-by: Miao Yan <yanmiaobest@gmail.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," io: fix stack allocation when sending of file descriptors When sending file descriptors over a socket, we have to&&&&allocate a data buffer to hold the FDs in the scmsghdr.&&&&Unfortunately we allocated the buffer on the stack inside&&&&an if () {} block, but called sendmsg() outside the block.&&&&So the stack bytes holding the FDs were liable to be&&&&overwritten with other data. By luck this was not a problem&&&&when sending 1 FD, but if sending 2 or more then it would&&&&fail.&&&&&&&&The fix is to simply move the variables outside the nested&&&&'if' block. To keep valgrind quiet we also zero-initialize&&&&the 'control' buffer.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," block-migration: limit the memory usage If we set migration speed in a very large value, block-migration will try to read&&&&all data to the memory. Because&&&&    (block_mig_state.submitted + block_mig_state.read_done) * BLOCK_SIZE&&&&will be overflow, and it will be always less than rate limit.&&&&&&&&There is no need to read too many data into memory when the rate limit is very large.&&&&So limit the memory usage can fix the overflow problem.&&&&&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," PPC: Fix lswx bounds checks The lswx instruction checks whether the desired string actually fits&&&&into all defined registers. Unfortunately it does the calculation wrong,&&&&resulting in illegal instruction traps for loads that really should fit.&&&&&&&&Fix it up, making Mac OS happier.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," usb: Use g_new() & friends where that makes obvious sense g_new(T, n) is neater than g_malloc(sizeof(T) * n).  It's also safer,&&&&for two reasons.  One, it catches multiplication overflowing size_t.&&&&Two, it returns T * rather than void *, which lets the compiler catch&&&&more type errors.&&&&&&&&This commit only touches allocations with size arguments of the form&&&&sizeof(T).  Same Coccinelle semantic patch as in commit b45c03f.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," bt: fix use of uninitialized variable seqlen sdp_svc_match, sdp_attr_match and sdp_svc_attr_match read the last&&&&argument.  The only sensible way to change the code is to make that last&&&&argument ""len"" instead of ""seqlen"" which is the length of a subsequence&&&&in the previous ""if"" branch.&&&&&&&&To make the structure of the code clearer, use ""else"" instead of&&&&""else if"".&&&&&&&&Reported by Coverity.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," xen: fix invalid assertion Asserting ""true"" is not that useful.&&&&&&&&Reported by Coverity.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," crypto: don't let builtin aes crash if no IV is provided If no IV is provided, then use a default IV of all-zeros&&&&instead of crashing. This gives parity with gcrypt and&&&&nettle backends.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," hmp: added io apic dump state Added the hmp command to query io apic state, may be usefull after guest&&&&crashes to understand IRQ routing in guest.&&&&&&&&Implementation is only for kvm here. The dump will look like&&&&(qemu) info ioapic&&&&ioapic id=0x00 sel=0x26 (redir[11])&&&&pin 0  0x0000000000010000 dest=0 vec=0   active-hi edge  masked fixed  physical&&&&pin 1  0x0000000000000031 dest=0 vec=49  active-hi edge         fixed  physical&&&&...&&&&pin 23 0x0000000000010000 dest=0 vec=0   active-hi edge  masked fixed  physical&&&&IRR        (none)&&&&Remote IRR (none)&&&&&&&&Signed-off-by: Pavel Butsykin <pbutsykin@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Andreas F脙陇rber <afaerber@suse.de>&&&&Message-Id: <1442927901-1084-9-git-send-email-den@openvz.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qapi: Make output visitor return qnull() instead of NULL Before commit 1d10b44, it crashed.  Since then, it returns NULL, with&&&&a FIXME comment.  The FIXME is valid: code that assumes QObject *&&&&can't be null exists.  I'm not aware of a way to feed this problematic&&&&return value to code that actually chokes on null in the current code,&&&&but the next few commits will create one, failing ""make check"".&&&&&&&&Commit 481b002 solved a very similar problem by introducing a special&&&&null QObject.  Using this special null QObject is clearly the right&&&&way to resolve this FIXME, so do that, and update the test&&&&accordingly.&&&&&&&&However, the patch isn't quite right: it messes up the reference&&&&counting.  After about SIZE_MAX visits, the reference counter&&&&overflows, failing the assertion in qnull_destroy_obj().  Because&&&&that's many orders of magnitude more visits of nulls than we expect,&&&&we take this patch despite its flaws, to get the QMP introspection&&&&stuff in without further delay.  We'll want to fix it for real before&&&&the release.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1442401589-24189-21-git-send-email-armbru@redhat.com>&&&& "
1," qom: Do not reuse errp after a possible error The argument for an Error **errp parameter must point to a null&&&&pointer.  If it doesn't, and an error happens, error_set() fails its&&&&assertion.&&&&&&&&Instead of&&&&&&&&    foo(foos, errp);&&&&    bar(bars, errp);&&&&&&&&you need to do something like&&&&&&&&    Error *err = NULL;&&&&&&&&    foo(foos, &err);&&&&    if (err) {&&&&        error_propagate(errp, err);&&&&        goto out;&&&&    }&&&&&&&&    bar(bars, errp);&&&&out:&&&&&&&&Screwed up in commit 0e55884 (v1.3.0): property_get_bool().&&&&&&&&Screwed up in commit 1f21772 (v2.1.0): object_property_get_enum() and&&&&object_property_get_uint16List().&&&&&&&&Screwed up in commit a8e3fbe (v2.4.0): property_get_enum(),&&&&property_set_enum().&&&&&&&&Found by inspection, no actual crashes observed.&&&&&&&&Fix them up.&&&&&&&&Cc: Anthony Liguori <anthony@codemonkey.ws>&&&&Cc: Hu Tao <hutao@cn.fujitsu.com>&&&&Cc: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, qcow2: Fix memory leak in qcow2_update_options() error path Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& 
1, cpu: Add crash_occurred flag into CPUState CPUState::crash_occurred field inside CPUState marks&&&&that guest crash occurred. This value is added into&&&&cpu common migration subsection.&&&&&&&&Signed-off-by: Andrey Smetanin <asmetanin@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Andreas F盲rber <afaerber@suse.de>&&&&Message-Id: <1435924905-8926-12-git-send-email-den@openvz.org>&&&&[Document the new field. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," target-mips: fix resource leak reported by Coverity UHI assert and link operations call lock_user_string() twice to obtain two&&&&strings pointed by gpr[4] and gpr[5]. If the second lock_user_string()&&&&fails, then the first one won't get freed. Fix this by introducing another&&&&macro responsible for obtaining two strings and handling allocation&&&&failure.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, virtio-pci: don't crash on illegal length Some guests seem to access cfg with an illegal length value.&&&&It's worth fixing them but debugging is easier if&&&&qemu does not crash.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1, migration: fix RCU deadlock migration_end calls synchronize_rcu() within a critical section.&&&&That causes a deadlock; move the call after rcu_read_unlock().&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," spapr_vty: lookup should only return valid VTY objects If a guest passes the reg property of a valid VIO object that is not a VTY&&&&to either H_GET_TERM_CHAR or H_PUT_TERM_CHAR, QEMU hits a dynamic cast&&&&assertion and aborts.&&&&&&&&PAPR+ says ""Hypervisor checks the termno parameter for validity against the&&&&Vterm IOA unit addresses assigned to the partition, else return H_Parameter.""&&&&&&&&This patch adds a type check to ensure vty_lookup() either returns a pointer&&&&to a valid VTY object or NULL.  H_GET_TERM_CHAR and H_PUT_TERM_CHAR will&&&&now return H_PARAMETER to the guest instead of crashing.&&&&&&&&The patch has no effect on the reg == 0 hack used to implement the RTAS call&&&&display-character.&&&&&&&&Signed-off-by: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," target-i386: avoid overflow in the tsc-frequency property The TSC frequency fits comfortably in an int when expressed in kHz,&&&&but it may overflow when converted to Hz.  In this case,&&&&tsc-frequency returns a negative value because x86_cpuid_get_tsc_freq&&&&does a 32-bit multiplication before assigning to int64_t.&&&&&&&&For simplicity just make tsc_khz a 64-bit value.&&&&&&&&Spotted by Coverity.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," migration: Make events a capability Make check fails with events.  THis is due to the parser/lexer that it&&&&uses.  Just in case that they are more broken parsers, just only send&&&&events when there are capabilities.&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
1, qcow2: Handle EAGAIN returned from update_refcount Fixes a crash during image compression&&&&&&&&Signed-off-by: Jind艡ich Makovi膷ka <makovick@gmail.com>&&&&Tested-by: Richard W.M. Jones <rjones@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," virtio-pci: correctly set host notifiers for modern bar Currently, during host notifier set. We only add eventfd for legacy&&&&bar, this is not correct since:&&&&&&&&- Non-transitional device does not have legacy bar, so qemu will crash&&&&  since proxy->bar was not initialized.&&&&- Modern device uses modern bar and notify cap to notify the device,&&&&  we should add eventfd for proxy->notify.&&&&&&&&So this patch fixes the above two issues by adding eventfd based on&&&&whether legacy or modern device were supported.&&&&&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&& "
1," target-s390x: Only access allocated storage keys We allocate ram_size / PAGE_SIZE storage keys, so we need to make sure that&&&&we only access that many. Unfortunately the code can overrun this array by&&&&one, potentially overwriting unrelated memory.&&&&&&&&Fix it by limiting storage keys to their scope.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," monitor: Use trad. command interface for HMP pcie_aer_inject_error All QMP commands use the ""new"" handler interface (mhandler.cmd_new).&&&&Most HMP commands still use the traditional interface (mhandler.cmd),&&&&but a few use the ""new"" one.  Complicates handle_user_command() for no&&&&gain, so I'm converting these to the traditional interface.&&&&&&&&pcie_aer_inject_error's implementation is split into the&&&&hmp_pcie_aer_inject_error() and pcie_aer_inject_error_print().  The&&&&former is a peculiar crossbreed between HMP and QMP handler.  On&&&&success, it works like a QMP handler: store QDict through ret_data&&&&parameter, return 0.  Printing the QDict is left to&&&&pcie_aer_inject_error_print().  On failure, it works more like an HMP&&&&handler: print error to monitor, return negative number.&&&&&&&&To convert to the traditional interface, turn&&&&pcie_aer_inject_error_print() into a command handler wrapping around&&&&hmp_pcie_aer_inject_error().  By convention, this command handler&&&&should be called hmp_pcie_aer_inject_error(), so rename the existing&&&&hmp_pcie_aer_inject_error() to do_pcie_aer_inject_error().&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1, kvm: Silence warning from valgrind valgrind complains here about uninitialized bytes with the following message:&&&&&&&&==17814== Syscall param ioctl(generic) points to uninitialised byte(s)&&&&==17814==    at 0x466A780: ioctl (in /usr/lib64/power8/libc-2.17.so)&&&&==17814==    by 0x100735B7: kvm_vm_ioctl (kvm-all.c:1920)&&&&==17814==    by 0x10074583: kvm_set_ioeventfd_mmio (kvm-all.c:574)&&&&&&&&Let's fix it by using a proper struct initializer in kvm_set_ioeventfd_mmio().&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-Id: <1430153944-24368-1-git-send-email-thuth@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," hw/arm/virt: Fix memory leak reported by Coverity As the conditional statement had to be split anyway, we can also&&&&add a better error report message.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Message-id: 1426877982-3603-1-git-send-email-sw@weilnetz.de&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," block: Deprecate QCOW/QCOW2 encryption We've steered users away from QCOW/QCOW2 encryption for a while,&&&&because it's a flawed design (commit 136cd19 Describe flaws in&&&&qcow/qcow2 encryption in the docs).&&&&&&&&In addition to flawed crypto, we have comically bad usability, and&&&&plain old bugs.  Let me show you.&&&&&&&&= Example images =&&&&&&&&I'm going to use a raw image as backing file, and two QCOW2 images,&&&&one encrypted, and one not:&&&&&&&&    $ qemu-img create -f raw backing.img 4m&&&&    Formatting 'backing.img', fmt=raw size=4194304&&&&    $ qemu-img create -f qcow2 -o encryption,backing_file=backing.img,backing_fmt=raw geheim.qcow2 4m&&&&    Formatting 'geheim.qcow2', fmt=qcow2 size=4194304 backing_file='backing.img' backing_fmt='raw' encryption=on cluster_size=65536 lazy_refcounts=off&&&&    $ qemu-img create -f qcow2 -o backing_file=backing.img,backing_fmt=raw normal.qcow2 4m&&&&    Formatting 'normal.qcow2', fmt=qcow2 size=4194304 backing_file='backing.img' backing_fmt='raw' encryption=off cluster_size=65536 lazy_refcounts=off&&&&&&&&= Usability issues =&&&&&&&&== Confusing startup ==&&&&&&&&When no image is encrypted, and you don't give -S, QEMU starts the&&&&guest immediately:&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -monitor stdio normal.qcow2&&&&    QEMU 2.2.50 monitor - type 'help' for more information&&&&    (qemu) info status&&&&    VM status: running&&&&&&&&But as soon as there's an encrypted image in play, the guest is *not*&&&&started, with no notification whatsoever:&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -monitor stdio geheim.qcow2&&&&    QEMU 2.2.50 monitor - type 'help' for more information&&&&    (qemu) info status&&&&    VM status: paused (prelaunch)&&&&&&&&If the user figured out that he needs to type ""cont"" to enter his&&&&keys, the confusion enters the next level: ""cont"" asks for at most&&&&*one* key.  If more are needed, it then silently does nothing.  The&&&&user has to type ""cont"" once per encrypted image:&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -monitor stdio -drive if=none,file=geheim.qcow2 -drive if=none,file=geheim.qcow2&&&&    QEMU 2.2.50 monitor - type 'help' for more information&&&&    (qemu) info status&&&&    VM status: paused (prelaunch)&&&&    (qemu) c&&&&    none0 (geheim.qcow2) is encrypted.&&&&    Password: ******&&&&    (qemu) info status&&&&    VM status: paused (prelaunch)&&&&    (qemu) c&&&&    none1 (geheim.qcow2) is encrypted.&&&&    Password: ******&&&&    (qemu) info status&&&&    VM status: running&&&&&&&&== Incorrect passwords not caught ==&&&&&&&&All existing encryption schemes give you the GIGO treatment: garbage&&&&password in, garbage data out.  Guests usually refuse to mount&&&&garbage, but other usage is prone to data loss.&&&&&&&&== Need to stop the guest to add an encrypted image ==&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -monitor stdio&&&&    QEMU 2.2.50 monitor - type 'help' for more information&&&&    (qemu) info status&&&&    VM status: running&&&&    (qemu) drive_add """" if=none,file=geheim.qcow2&&&&    Guest must be stopped for opening of encrypted image&&&&    (qemu) stop&&&&    (qemu) drive_add """" if=none,file=geheim.qcow2&&&&    OK&&&&&&&&Commit c3adb58 added this restriction.  Before, we could expose images&&&&lacking an encryption key to guests, with potentially catastrophic&&&&results.  See also ""Use without key is not always caught"".&&&&&&&&= Bugs =&&&&&&&&== Use without key is not always caught ==&&&&&&&&Encrypted images can be in an intermediate state ""opened, but no key"".&&&&The weird startup behavior and the need to stop the guest are there to&&&&ensure the guest isn't exposed to that state.  But other things still&&&&are!&&&&&&&&* drive_backup&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -monitor stdio geheim.qcow2&&&&    QEMU 2.2.50 monitor - type 'help' for more information&&&&    (qemu) drive_backup -f ide0-hd0 out.img raw&&&&    Formatting 'out.img', fmt=raw size=4194304&&&&&&&&  I guess this writes encrypted data to raw image out.img.  Good luck&&&&  with figuring out how to decrypt that again.&&&&&&&&* commit&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -monitor stdio geheim.qcow2&&&&    QEMU 2.2.50 monitor - type 'help' for more information&&&&    (qemu) commit ide0-hd0&&&&&&&&  I guess this writes encrypted data into the unencrypted raw backing&&&&  image, effectively destroying it.&&&&&&&&== QMP device_add of usb-storage fails when it shouldn't ==&&&&&&&&When the image is encrypted, device_add creates the device, defers&&&&actually attaching it to when the key becomes available, then fails.&&&&This is wrong.  device_add must either create the device and succeed,&&&&or do nothing and fail.&&&&&&&&    $ qemu-system-x86_64 -nodefaults -display none -usb -qmp stdio -drive if=none,id=foo,file=geheim.qcow2&&&&    {""QMP"": {""version"": {""qemu"": {""micro"": 50, ""minor"": 2, ""major"": 2}, ""package"": """"}, ""capabilities"": []}}&&&&    { ""execute"": ""qmp_capabilities"" }&&&&    {""return"": {}}&&&&    { ""execute"": ""device_add"", ""arguments"": { ""driver"": ""usb-storage"", ""id"": ""bar"", ""drive"": ""foo"" } }&&&&    {""error"": {""class"": ""DeviceEncrypted"", ""desc"": ""'foo' (geheim.qcow2) is encrypted""}}&&&&    {""execute"":""device_del"",""arguments"": { ""id"": ""bar"" } }&&&&    {""timestamp"": {""seconds"": 1426003440, ""microseconds"": 237181}, ""event"": ""DEVICE_DELETED"", ""data"": {""path"": ""/machine/peripheral/bar/bar.0/legacy[0]""}}&&&&    {""timestamp"": {""seconds"": 1426003440, ""microseconds"": 238231}, ""event"": ""DEVICE_DELETED"", ""data"": {""device"": ""bar"", ""path"": ""/machine/peripheral/bar""}}&&&&    {""return"": {}}&&&&&&&&This stuff is worse than useless, it's a trap for users.&&&&&&&&If people become sufficiently interested in encrypted images to&&&&contribute a cryptographically sane implementation for QCOW2 (or&&&&whatever other format), then rewriting the necessary support around it&&&&from scratch will likely be easier and yield better results than&&&&fixing up the existing mess.&&&&&&&&Let's deprecate the mess now, drop it after a grace period, and move&&&&on.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," machine: query kernel-irqchip property Running&&&&    x86_64-softmmu/qemu-system-x86_64 -machine pc,kernel_irqchip=on -enable-kvm&&&&leads to crash:&&&&    qemu-system-x86_64: qemu/util/qemu-option.c:387: qemu_opt_get_bool_helper:&&&&    Assertion `opt->desc && opt->desc->type == QEMU_OPT_BOOL' failed.  Aborted&&&&    (core dumped)&&&&&&&&This happens because the commit e79d5a6 (""machine: remove qemu_machine_opts&&&&global list"") removed the global option descriptions and moved them to&&&&MachineState's QOM properties.&&&&&&&&Fix this by querying machine properties through designated wrappers.&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," cpus: initialize cpu->memory_dispatch This fixes a NULL pointer dereference in s390x-softmmu.&&&&&&&&On pretty much all other architectures, creating an MMIO region calls&&&&cpu_reload_memory_map.  On s390, however, there are no MMIO regions&&&&and everything is done via hypercalls.&&&&&&&&Fixes: 9d82b5a792236db31a75b9db5c93af69ac07c7c5&&&&Reported-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qcow2: Helper function for refcount modification Since refcounts do not always have to be a uint16_t, all refcount blocks&&&&and arrays in memory should not have a specific type (thus they become&&&&pointers to void) and for accessing them, two helper functions are used&&&&(a getter and a setter). Those functions are called indirectly through&&&&function pointers in the BDRVQcowState so they may later be exchanged&&&&for different refcount orders.&&&&&&&&With the check and repair functions using this function, the refcount&&&&array they are creating will be in big endian byte order; additionally,&&&&using realloc_refcount_array() makes the size of this refcount array&&&&always cluster-aligned. Both combined allow rebuild_refcount_structure()&&&&to drop the bounce buffer which was used to convert parts of the&&&&refcount array to big endian byte order and store them on disk. Instead,&&&&those parts can now be written directly.&&&&&&&&[ kwolf: Fixed a build failure on 32 bit and another with old glib ]&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," parallel: parallel_hds_isa_init() shouldn't fail It shouldn't fail, and no caller checks for failure.  Make failure&&&&fatal.&&&&&&&&Maintainers of affected machines cc'ed.&&&&&&&&Cc: Anthony Liguori <aliguori@amazon.com>&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, libqos/ahci: add ahci command verify Helps to verify that a command completed successfully.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1423158090-25580-14-git-send-email-jsnow@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," target-arm: Make arm_current_el() return sensible values for M profile Although M profile doesn't have the same concept of exception level&&&&as A profile, it does have a notion of privileged versus not, which&&&&we currently track in the privmode TB flag. Support returning this&&&&information if arm_current_el() is called on an M profile core, so&&&&that we can identify the correct MMU index to use (and put the MMU&&&&index in the TB flags) without having to special-case M profile.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Greg Bellows <greg.bellows@linaro.org>&&&& "
1, coverity/s390x: avoid false positive in kvm_irqchip_add_adapter_route Paolo Bonzini reported that Coverity reports an uninitialized pad value.&&&&Let's use a designated initializer for kvm_irq_routing_entry to avoid&&&&this false positive. This is similar to kvm_irqchip_add_msi_route and&&&&other users of kvm_irq_routing_entry.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," qcow2: Fix header extension size check After reading the extension header, offset is incremented, but not&&&&checked against end_offset any more. This way an integer overflow could&&&&happen when checking whether the extension end is within the allowed&&&&range, effectively disabling the check.&&&&&&&&This patch adds the missing check and a test case for it.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reported-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1416935562-7760-2-git-send-email-kwolf@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," target-i386: fix Coverity complaints about overflows sipi_vector is an int; it is shifted by 12 and passed as a 64-bit value,&&&&which makes Coverity think that we wanted (uint64_t)sipi_vector << 12.&&&&&&&&But actually it must be between 0 and 255.  Make this explicit.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," migration: fix parameter validation on ram load During migration, the values read from migration stream during ram load&&&&are not validated. Especially offset in host_from_stream_offset() and&&&&also the length of the writes in the callers of said function.&&&&&&&&To fix this, we need to make sure that the [offset, offset + length]&&&&range fits into one of the allocated memory regions.&&&&&&&&Validating addr < len should be sufficient since data seems to always be&&&&managed in TARGET_PAGE_SIZE chunks.&&&&&&&&Fixes: CVE-2014-7840&&&&&&&&Note: follow-up patches add extra checks on each block->host access.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
1," l2tpv3: fix possible double free freeaddrinfo(result) does not assign result = NULL, after frees it.&&&&There will be a double free when it goes error case.&&&&It is reported by covertiy.&&&&&&&&Reviewed-by: Gonglei <arei.gonglei@huawei.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, xhci: add sanity checks to xhci_lookup_uport Also catch xhci_lookup_uport failures in post_load.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1074219&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," qemu-img: Fix insignificant memleak As soon as options is set in img_amend(), it needs to be freed before&&&&the function returns. This leak is rather insignificant, as qemu-img&&&&will exit subsequently anyway, but there's no point in not fixing it.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Beno卯t Canet <benoit.canet@nodalink.com>&&&&Message-id: 1414404776-4919-4-git-send-email-mreitz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," hw/i386/acpi-build.c: Fix memory leak in acpi_build_tables_cleanup() There are three ACPI tables: 'linker_data', 'rsdp' and 'table_data'. They are&&&&used differently. Two of them are being copied before using and only the copy&&&&is used later. But the third is used directly. Because of that we need to free&&&&two tables completely and delete only wrapper for the third one.&&&&&&&&Valgrind output:&&&&==23931== 131,072 bytes in 1 blocks are definitely lost in loss record 7,729 of 7,734&&&&==23931==    at 0x4C2CE8E: realloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)&&&&==23931==    by 0x2EA920: realloc_and_trace (vl.c:2811)&&&&==23931==    by 0x509E6AE: g_realloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.4000.0)&&&&==23931==    by 0x506DB32: ??? (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.4000.0)&&&&==23931==    by 0x506E463: g_array_set_size (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.4000.0)&&&&==23931==    by 0x256A4F: acpi_align_size (acpi-build.c:487)&&&&==23931==    by 0x259F92: acpi_build (acpi-build.c:1601)&&&&==23931==    by 0x25A212: acpi_setup (acpi-build.c:1682)&&&&==23931==    by 0x24F346: pc_guest_info_machine_done (pc.c:1110)&&&&==23931==    by 0x55FAAB: notifier_list_notify (notify.c:39)&&&&==23931==    by 0x2EA704: qemu_run_machine_init_done_notifiers (vl.c:2759)&&&&==23931==    by 0x2EEC3C: main (vl.c:4504)&&&&&&&&Signed-off-by: Nikita Belov <zodiac@ispras.ru>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
1," qga: Rewrite code where using readdir_r If readdir_r fails, error_setg_errno will reference the freed&&&&pointer *dirpath*.&&&&&&&&Moreover, readdir_r may cause a buffer overflow, using readdir instead.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," hmp: Remove ""info pcmcia"" This command lists PCMCIA sockets and cards.  Only a few ARM boards&&&&have sockets (akita, borzoi, connex, mainstone, spitz, terrier, tosa,&&&&verdex, z2), the only card is the DSCM-1xxxx Hitachi Microdrive (qdev&&&&""microdrive""), and it is only inserted during machine init, if ever.&&&&So this command doesn't really tell anybody anything new so far.&&&&&&&&Moreover, pcmcia_socket_unregister() has a use-after-free bug, flagged&&&&by Coverity.  Has never been used, because there has never been code&&&&to eject a PCMCIA card.&&&&&&&&Not worth fixing & converting to QMP.  Remove it.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Acked-by: Andreas F盲rber <afaerber@suse.de>&&&&Message-id: 1411144812-22958-1-git-send-email-armbru@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," virtio-net: use aliases instead of duplicate qdev properties virtio-net-pci, virtio-net-s390, and virtio-net-ccw all duplicate the&&&&qdev properties of their VirtIONet child. This approach does not work&&&&well with string or pointer properties since we must be careful about&&&&leaking or double-freeing them.&&&&&&&&Use the QOM alias property to forward property accesses to the&&&&VirtIONet child.  This way no duplication is necessary.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," block: Keep DriveInfo alive until BlockDriverState dies If the BDS's refcnt > 0, drive_del() destroys the DriveInfo, but not&&&&the BDS.  This can happen in three places:&&&&&&&&* Device model destruction during unplug: blockdev_auto_del()&&&&&&&&* Xen IDE unplug: pci_piix3_xen_ide_unplug()&&&&&&&&* drive_del command when no device model is attached: do_drive_del()&&&&&&&&The other callers of drive_del are on error paths where refcnt == 1.&&&&&&&&If the user somehow manages to plug in a device model using a BDS that&&&&has gone through drive_del(), the legacy configuration passed in&&&&DriveInfo doesn't reach the device model, and automatic deletion on&&&&unplug doesn't work.  Worse, some device models such as scsi-disk&&&&crash when DriveInfo doesn't exist.&&&&&&&&This is theoretical; I didn't research an actual reproducer. The problem&&&&was introduced when we replaced DriveInfo reference counting by BDS&&&&reference counting in commit a94a3fa..fa510eb.&&&&&&&&Fix by keeping DriveInfo alive until its BDS dies.&&&&&&&&This affects qemu_drive_opts: now you can't reuse the same ID for new&&&&drive options until the BDS dies.  Before, you could, but since the&&&&code always attempts to create a BDS with the same ID next, the&&&&enclosing operation ""create a new drive"" failed anyway.  Different&&&&error path, same result.&&&&&&&&Unfortunately, the fix involves use of blockdev.c stuff from block.c,&&&&which is a layering violation.  Fortunately, my forthcoming&&&&BlockBackend work will get rid of it again.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Beno卯t Canet <benoit.canet@nodalink.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, image-fuzzer: Trivial readability and formatting improvements Signed-off-by: Maria Kustova <maria.k@catit.be>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," main-loop: narrow win32 pollfds_fill() event bitmasks pollfds_fill() and pollfds_poll() translate GPollFD to rfds/wfds/xfds&&&&for sockets on win32.  select(2) is the underlying system call which is&&&&used to monitor sockets for activity.&&&&&&&&Currently file descriptors that monitor G_IO_ERR will be included in&&&&both rfds and wfds.  As a result, select(2) will report writability on&&&&file descriptors where we only really wanted to monitor readability&&&&(with errors).&&&&&&&&slirp_pollfds_poll() hit this issue: UDP sockets are blocking sockets so&&&&we hang in sorecvfrom() when G_IO_ERR is set due to the socket being&&&&writable (we only wanted to check for readability).&&&&&&&&This patch fixes the slirp_pollfds_poll() hang.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1368718561-7816-2-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," iotests: Use _img_info qemu-img info should only be used directly if the format-specific&&&&information or the name of the format is relevant (some tests explicitly&&&&test format-specific information; test 082 uses qcow2-specific settings&&&&to test the qemu-img interface); otherwise, tests should always use&&&&_img_info instead.&&&&&&&&Test 082 was touched only partially. It does test the qemu-img&&&&interface; however, its invocations of qemu-img info are not real tests&&&&but rather verifications, so if format-specific information is not&&&&important for the test, there is no reason not to use _img_info. In&&&&contrast to directly invoking qemu-img info, ""qcow2"" is replaced by&&&&""IMGFMT""; but as ""qcow2"" is only mentioned once in test 082 (in&&&&_supported_fmt), I consider this an improvement.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1412105489-7681-2-git-send-email-mreitz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," PPC: Cuda: Use cuda timer to expose tbfreq to guest Mac OS X calibrates a number of frequencies on bootup based on reading&&&&tb values on bootup and comparing them to via cuda timer values.&&&&&&&&The only variable we can really steer well (thanks to KVM) is the cuda&&&&frequency. So let's use that one to fake Mac OS X into believing the&&&&bus frequency is tbfreq * 4. That way Mac OS X will automatically&&&&calculate the correct timebase frequency.&&&&&&&&With this patch and the patch set I posted earlier I can successfully&&&&run Mac OS X 10.2, 10.3 and 10.4 guests with -M mac99 on TCG and KVM.&&&&&&&&Suggested-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," loader: Add load_image_size() to replace load_image() A subsequent patch to ppc/spapr needs to load the RTAS blob into&&&&qemu memory rather than target memory (so it can later be copied&&&&into the right spot at machine reset time).&&&&&&&&I would use load_image() but it is marked deprecated because it&&&&doesn't take a buffer size as argument, so let's add load_image_size()&&&&that does.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&[aik: fixed errors from checkpatch.pl]&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, image-fuzzer: Add fuzzing functions for L1/L2 table entries Signed-off-by: Maria Kustova <maria.k@catit.be>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," PPC: mac99: Move NVRAM to page boundary when necessary When running KVM we have to adhere to host page boundaries for memory slots.&&&&Unfortunately the NVRAM on mac99 is a 4k RAM hole inside of an MMIO flash&&&&area.&&&&&&&&So if our host is configured with 64k page size, we can't use the mac99 target&&&&with KVM. This is a real shame, as this limitation is not really an issue - we&&&&can easily map NVRAM somewhere else and at least Linux and Mac OS X use it&&&&at their new location.&&&&&&&&So in that emergency case when it's about failing to run at all and moving NVRAM&&&&to a place it shouldn't be at, choose the latter.&&&&&&&&This patch enables -M mac99 with KVM on 64k page size hosts.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," libqos: Correct memory leak Fix a small memory leak inside of libqos, in the pc_alloc_init routine.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, xen_disk:  fix possible null-ptr dereference Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," acpi-build: tweak acpi migration limits - Tweak error message for legacy machine type:&&&&  Basically if table size exceeds the limits we set all&&&&  bets are off for migration: e.g. it can start failing even&&&&  within given qemu minor version simply because of a bugfix.&&&&- Increase table size to 128k.&&&&- Make sure we notice it long before we start getting close to the&&&&  128k limit: warn at 64k.&&&&- Don't fail if we exceed the limit: most people don't care about&&&&  migration, even less people care about cross version miration.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, block/nfs: fix url parameter checking this patch fixes the incorrect usage of strncmp and&&&&adds simple error checking by means of parse_uint_full&&&&instead of atoi for the supplied URL parameters.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," PPC: Fix TCG chunks that don't free their temps We want to make sure that every instruction cleans up after itself and&&&&clears every temporary it allocated.&&&&&&&&While checking whether this is already the case, I came across a few&&&&cases where it isn't. This patch fixes every translation I found that&&&&doesn't free their allocated temporaries.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," cg3: add extra check to prevent CG3 register array overflow The case statements in the CG3 read and write register routines have a maximum&&&&value of CG3_REG_SIZE, so if a value were written to this offset then it&&&&would overflow the register array.&&&&&&&&Currently this cannot be exploited since the MemoryRegion restricts accesses&&&&to the range 0 ... CG3_REG_SIZE - 1, but it seems worth clarifying this for&&&&future review and/or static analysis.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-i386: fix protection bits in the TLB for SMEP User pages must be marked as non-executable when running under SMEP;&&&&otherwise, fetching the page first and then calling it will fail.&&&&&&&&With this patch, all SMEP testcases in kvm-unit-tests now pass.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, block/vvfat: Plug memory leak in read_directory() Has always been leaky.  Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," blockdev: Plug memory leak in blockdev_init() blockdev_init() leaks bs_opts when qemu_opts_create() fails, i.e. when&&&&the ID is bad.  Missed in commit ec9c10d.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, block: Plug memory leak on brv_open_image() error path Introduced in commit da557a.  Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," qapi: treat all negative return of strtosz_suffix() as error strtosz_suffix() might return negative error, this patch fixes&&&&the error handling.&&&&&&&&This patch also changes to handle error in the if statement&&&&rather than handle success specially, this will make this use&&&&of strtosz_suffix consistent with all other uses.&&&&&&&&Signed-off-by: Amos Kong <akong@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," qtest: Be paranoid about accept() addrlen argument POSIX specifies that address_len shall on output specify the length of&&&&the stored address; it does not however specify whether it may get&&&&updated on failure as well to, e.g., zero.&&&&&&&&In case EINTR occurs, re-initialize the variable to the desired value.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, pxa2xx: avoid buffer overrun on incoming migration CVE-2013-4533&&&&&&&&s->rx_level is read from the wire and used to determine how many bytes&&&&to subsequently read into s->rx_fifo[]. If s->rx_level exceeds the&&&&length of s->rx_fifo[] the buffer can be overrun with arbitrary data&&&&from the wire.&&&&&&&&Fix this by validating rx_level against the size of s->rx_fifo.&&&&&&&&Cc: Don Koch <dkoch@verizon.com>&&&&Reported-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Don Koch <dkoch@verizon.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
1," qga: Drop superfluous error_is_set() acquire_privilege(), execute_async() and check_suspend_mode() do&&&&nothing when called with an error set.  Callers shouldn't do that, and&&&&no caller does.  Drop the superfluous tests.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," block: vhdx - account for identical header sections The VHDX spec v1.00 declares that ""a header is current if it is the only&&&&valid header or if it is valid and its SequenceNumber field is greater&&&&than the other header鈥檚 SequenceNumber field. The parser must only use&&&&data from the current header. If there is no current header, then the&&&&VHDX file is corrupt.""&&&&&&&&However, the Disk2VHD tool from Microsoft creates a VHDX image file that&&&&has 2 identical headers, including matching checksums and matching&&&&sequence numbers.  Likely, as a shortcut the tool is just writing the&&&&header twice, for the active and inactive headers, during the image&&&&creation.  Technically, this should be considered a corrupt VHDX file&&&&(at least per the 1.00 spec, and that is how we currently treat it).&&&&&&&&But in order to accomodate images created with Disk2VHD, we can safely&&&&create an exception for this case.  If we find identical sequence&&&&numbers, then we check the VHDXHeader-sized chunks of each 64KB header&&&&sections (we won't rely just on the crc32c to indicate the headers are&&&&the same).  If they are identical, then we go ahead and use the first&&&&one.&&&&&&&&Reported-by: Nerijus Bali奴nas <nerijus@users.sourceforge.net>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," vmstate: s/VMSTATE_INT32_LE/VMSTATE_INT32_POSITIVE_LE/ As the macro verifies the value is positive, rename it&&&&to make the function clearer.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1, mirror: Check for bdrv_get_info result bdrv_get_info could fail. Add check before using the returned value.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, block: Prevent coroutine stack overflow when recursing in bdrv_open_backing_file. In 1.7.1 qcow2_create2 reopen the file for flushing without the BDRV_O_NO_BACKING&&&&flags.&&&&&&&&As a consequence the code would recursively open the whole backing chain.&&&&&&&&These three stack arrays would pile up through the recursion and lead to a coroutine&&&&stack overflow.&&&&&&&&Convert these array to malloced buffers in order to streamline the coroutine&&&&footprint.&&&&&&&&Symptoms where freezes or segfaults on production machines while taking QMP externals&&&&snapshots. The overflow disturbed coroutine switching.&&&&&&&&[Resolved conflicts on qemu.git/master since the patch was against v1.7.1&&&&--Stefan]&&&&&&&&Signed-off-by: Benoit Canet <benoit.canet@gmail.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, vmxnet3: validate interrupt indices coming from guest CVE-2013-4544&&&&&&&&Signed-off-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Reported-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Message-id: 1396604722-11902-2-git-send-email-dmitry@daynix.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1, bochs: Use unsigned variables for offsets and sizes (CVE-2014-0147) Gets us rid of integer overflows resulting in negative sizes which&&&&aren't correctly checked.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, qcow2: fix two memory leaks in qcow2_open error code path Signed-off-by: Prasad Joshi <prasadjoshi.linux@gmail.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, target-sparc: fix 32bit integer division overflow The signed integer division -0x8000_0000_0000_0000 / -1 must be handled&&&&separately to avoid an overflow on the QEMU host.&&&&&&&&Negative overflow must be a negative number for correct sign&&&&extension in Sparc64 mode. Use <stdint.h> constants.&&&&&&&&Signed-off-by: Olivier Danet <odanet@caramail.com>&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&& 
1, vl.c: Fix memory leak in qemu_register_machine() Since commit 261747f176f6 (vl: Use MachineClass instead of global&&&&QEMUMachine list) valgrind complains about the following:&&&&&&&&==54082== 57 bytes in 3 blocks are definitely lost in loss record 365 of&&&&729&&&&==54082==    at 0x4031AFE: malloc (vg_replace_malloc.c:292)&&&&==54082==    by 0x4145569: g_malloc (in&&&&/usr/lib64/libglib-2.0.so.0.3400.2)&&&&==54082==    by 0x415F9E9: g_strconcat (in&&&&/usr/lib64/libglib-2.0.so.0.3400.2)&&&&==54082==    by 0x80157FE7: qemu_register_machine (vl.c:1597)&&&&==54082==    by 0x80208E6B: module_call_init (module.c:105)&&&&==54082==    by 0x80013B91: main (vl.c:3000)&&&&&&&&Turns out that valgrind is right. We simply forget the memory that&&&&g_strconcat() has allocated. Lets free it after the type_register().&&&&We need a 2nd variable due to constness of the name part of the&&&&type structure.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
1," tests: test-qmp-commands: Fix double free The ret variable is freed twice, but on the second time we actually want&&&&to free ret3 instead. Don't know why this didn't explode.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Tested-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1, ahci: fix sysbus support Non-PCI AHCI support is broken due to assertion failures when trying&&&&to convert AHCIState to a PCIDevice pointer as AHCIState can have&&&&different container structs. Fix this by using the non-asserting object&&&&cast and checking the returned pointer is not NULL.&&&&&&&&The AddressSpace pointer is also being initialized to NULL and causing&&&&dma_memory_map call to fail. Fix this by initializing to&&&&address_space_memory for sysbus instances.&&&&&&&&Also correct AHCI_VMSTATE to use the correct container SysbusAHCIState&&&&for sysbus instances.&&&&&&&&Signed-off-by: Rob Herring <rob.herring@linaro.org>&&&&Message-id: 1392073373-3295-1-git-send-email-robherring2@gmail.com&&&&[PMM: added linebreaks to fix overlong lines]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," tests: Correctly skip qtest on non-POSIX hosts qtest test cases only work on POSIX hosts.  The following line only&&&&defines dependencies for qtest binaries on POSIX hosts:&&&&&&&&  check-qtest-$(CONFIG_POSIX)=$(foreach TARGET,$(TARGETS),$(check-qtest-$(TARGET)-y))&&&&&&&&But the QTEST_TARGETS definition earlier in the Makefile fails to check&&&&CONFIG_POSIX.  This causes make targets to be generated for qtest test&&&&cases even though we don't know how to build the binaries.&&&&&&&&The following error message is printed when trying to run gtester on a&&&&binary that was never built:&&&&&&&&  GLib-WARNING **: Failed to execute test binary: tests/endianness-test.exe: Failed to execute child process ""tests/endianness-test.exe"" (No such file or directory)&&&&&&&&This patch makes QTEST_TARGETS empty on non-POSIX hosts.  This prevents&&&&the targets from being generated.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, hw/ide/ahci.h: Avoid shifting left into sign bit Add 'U' suffixes to avoid undefined behaviour shifting left into&&&&the signed bit of a signed integer type. Clang's sanitizer will&&&&warn about this:&&&&&&&& hw/ide/ahci.c:1210:27: runtime error: left shift of 1 by 31 places cannot be represented in type 'int'&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," target-i386: Fix SSE status flag corruption When we restore the mxcsr register with FXRSTOR, or set it with gdb,&&&&we need to update the various SSE status flags in CPUX86State&&&&&&&&Reported-by: Richard Purdie <richard.purdie@linuxfoundation.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
1," scsi-bus: Fix transfer length for VERIFY with BYTCHK=11b The transfer length depends on field BYTCHK, which is encoded in byte&&&&1, bits 1..2.  However, the guard for for case BYTCHK=11b doesn't&&&&work, and we get case 01b instead.  Fix it.&&&&&&&&Note that since emulated scsi-hd fails the command outright, it takes&&&&SCSI passthrough of a device that actually implements VERIFY with&&&&BYTCHK=11b to make the bug bite.&&&&&&&&Screwed up in commit d12ad44.  Spotted by Coverity.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-xtensa: add basic checks to icache opcodes Check privilege level for privileged instructions (IHU, III, IIU and IPFL&&&&are privileged), memory accessibility for instructions that reference memory&&&&(IH* and IPFL) and windowed register validity for all instruction cache&&&&instructions.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& "
1, Set xbzrle buffers to NULL after freeing them to avoid double free errors Signed-off-by: Orit Wasserman <owasserm@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
1," qtest: unlink QEMU pid file after startup After starting the QEMU process and initializing the QMP connection, we&&&&can read the pid file and unlink it.&&&&&&&&Just stash away the pid instead of the pid filename.  This way we can&&&&avoid pid file leaks since running tests may abort(3) without cleanup.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," acpi unit-test: resolved iasl crash It seems that iasl has an issue when disassembles&&&&some ACPI tables using the command line:&&&&iasl -e DSDT -e SSDT -d HPET&&&&&&&&Modified the iasl command line to ""iasl -d HPET""&&&&until the problem is solved. The command line&&&&remained the same for DSDT and SSDT tables.&&&&&&&&Reported-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Marcel Apfelbaum <marcel.a@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," block: vhdx - improve error message, and .bdrv_check implementation If there is a dirty log file to be replayed in a VHDX image, it is&&&&replayed in .vhdx_open().  However, if the file is opened read-only,&&&&then a somewhat cryptic error message results.&&&&&&&&This adds a more helpful error message for the user.  If an image file&&&&contains a log to be replayed, and is opened read-only, the user is&&&&instructed to run 'qemu-img check -r all' on the image file.&&&&&&&&Running qemu-img check -r all will cause the image file to be opened&&&&r/w, which will replay the log file.  If a log file replay is detected,&&&&this is flagged, and bdrv_check will increase the corruptions_fixed&&&&count for the image.&&&&&&&&[Fixed typo in error message that was pointed out by Eric Blake&&&&<eblake@redhat.com>.&&&&--Stefan]&&&&&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, qcow2: fix possible corruption when reading multiple clusters if multiple sectors spanning multiple clusters are read the&&&&function count_contiguous_clusters should ensure that the&&&&cluster type should not change between the clusters.&&&&&&&&Especially the for-loop should break when we have one&&&&or more normal clusters followed by a compressed cluster.&&&&&&&&Unfortunately the wrong macro was used in the mask to&&&&compare the flags.&&&&&&&&This was discovered while debugging a data corruption&&&&issue when converting a compressed qcow2 image to raw.&&&&qemu-img reads 2MB chunks which span multiple clusters.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," qemu-iotests: Extend 041 for unbacked mirroring Add a new test case in file 041 for mirroring unbacked images in&&&&""absolute-paths"" mode. This should work, if possible, but most&&&&importantly, qemu should never crash.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Wenchao Xia <xiawenc@linux.vnet.ibm.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," acpi-build: disable with -no-acpi QEMU will currently crash if started with -no-acpi flag&&&&since acpi build code probes the PM device which isn't present&&&&in this configuration.&&&&&&&&To fix, don't expose ACPI tables to guest when acpi has been&&&&disabled from command line.&&&&&&&&Fixes LP# 1248854&&&&https://bugs.launchpad.net/qemu/+bug/1248854&&&&&&&&Reported-by: chao zhou <chao.zhou@intel.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," timers: fix stop/cont with -icount Stop/cont commands are broken with -icount due to a deadlock.  The&&&&real problem is that the computation of timers_state.cpu_ticks_offset&&&&makes no sense with -icount enabled: we set it to an icount clock value&&&&in cpu_disable_ticks, and subtract a TSC (or similar, whatever&&&&cpu_get_real_ticks happens to return) value in cpu_enable_ticks.&&&&&&&&The fix is simple.  timers_state.cpu_ticks_offset is only used&&&&together with cpu_get_real_ticks, so we can use cpu_get_real_ticks&&&&in cpu_disable_ticks.  There is no need to update cpu_ticks_prev&&&&at the time cpu_disable_ticks is called; instead, we can do it&&&&the next time cpu_get_ticks is called.&&&&&&&&The change to cpu_disable_ticks is the important part of the patch.&&&&The rest modifies the code to always check timers_state.cpu_ticks_prev,&&&&even when the ticks are not advancing (i.e. the VM is stopped).  It also&&&&makes a similar change to cpu_get_clock_locked, so that the code remains&&&&similar for cpu_get_ticks and cpu_get_clock_locked.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1382977938-13844-1-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@amazon.com>&&&& "
1," tcg-arm: Use QEMU_BUILD_BUG_ON to verify constraints on tlb One of the two constraints we already checked via #if, but&&&&the tlb offset distance was only checked at runtime.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
1," block: Remove redundant assertion The failing condition is checked immediately before the assertion, so&&&&keeping the assertion is kind of redundant.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, kvm: x86: fix setting IA32_FEATURE_CONTROL with nested VMX disabled This patch is to fix the bug https://bugs.launchpad.net/qemu-kvm/+bug/1207623&&&&&&&&IA32_FEATURE_CONTROL is pointless if not expose VMX or SMX bits to&&&&cpuid.1.ecx of vcpu. Current qemu-kvm will error return when kvm_put_msrs&&&&or kvm_get_msrs.&&&&&&&&Signed-off-by: Liu Jinsong <jinsong.liu@intel.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, qga: escape cmdline args when registering win32 service (CVE-2013-2231) Reported-by: Lev Veyde <lveyde@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& 
1," exec: fix incorrect assumptions in memory_access_size access_size_min can be 1 because erroneous accesses must not crash&&&&QEMU, they should trigger exceptions in the guest or just return&&&&garbage (depending on the CPU).  I am not sure I understand the&&&&comment: placing a 4-byte field at the last byte of a region&&&&makes no sense (unless impl.unaligned is true), and that is&&&&why memory.c:access_with_adjusted_size does not bother with&&&&minimums larger than the remaining length.&&&&&&&&access_size_max can be mr->ops->valid.max_access_size because memory.c&&&&can and will still break accesses bigger than&&&&mr->ops->impl.max_access_size.&&&&&&&&Reported-by: Markus Armbruster <armbru@redhat.com>&&&&Tested-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," rdma: IPv6 over Ethernet (RoCE) is broken in linux - workaround We've gotten reports from multiple testers (including Frank Yangjie&&&&and myself) that RDMA IPv6 support over RocE (Ethernet) is broken&&&&in linux.&&&&&&&&A patch to Linux is still in review:&&&&&&&&http://comments.gmane.org/gmane.linux.drivers.rdma/16448&&&&&&&&If the user is listening on '[::]', then we will not have a opened a device&&&&yet and have no way of verifying if the device is RoCE or not.&&&&&&&&In this case, the source VM will throw an error for ALL types of&&&&connections (both IPv4 and IPv6) if the destination machine does not have&&&&a regular infiniband network available for use.&&&&&&&&The only way to gaurantee that an error is thrown for broken kernels is&&&&for the management software to choose a *specific* interface at bind time&&&&and validate what time of hardware it is.&&&&&&&&Unfortunately, this puts the user in a fix:&&&&&&&& If the source VM connects with an IPv4 address without knowing that the&&&& destination has bound to '[::]' the migration will unconditionally fail&&&& unless the management software is not explicitly listening on the the IPv4&&&& address while using a RoCE-based device.&&&&&&&& If the source VM connects with an IPv6 address, then we're OK because we can&&&& throw an error on the source (and similarly on the destination).&&&&&&&& But in mixed environments, this will be broken for a while until it is fixed&&&& inside linux.&&&&&&&&We do provide a *tiny* bit of help in mixed environments, though in this patch:&&&&&&&&We can list all of the devices in the system and check to see if all the&&&&devices are RoCE or Infiniband.&&&&&&&&If we detect that we have a *pure* RoCE environment, then we can safely&&&&thrown an error even if the management sofware has specified '[::]' as the&&&&bind address.&&&&&&&&However, if there is are multiple hetergeneous devices, then we cannot make&&&&this assumption and the user just has to be sure they know what they are doing.&&&&&&&&Signed-off-by: Michael R. Hines <mrhines@us.ibm.com>&&&&Message-id: 1376078746-24948-6-git-send-email-mrhines@linux.vnet.ibm.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qapi: qapi-commands: fix possible leaks on visitor dealloc In qmp-marshal.c the dealloc visitor calls use the same errp&&&&pointer of the input visitor calls. This means that if any of&&&&the input visitor calls fails, then the dealloc visitor will&&&&return early, before freeing the object's memory.&&&&&&&&Here's an example, consider this code:&&&&&&&&int qmp_marshal_input_block_passwd(Monitor *mon, const QDict *qdict, QObject **ret)&&&&{&&&&	[...]&&&&&&&&    char * device = NULL;&&&&    char * password = NULL;&&&&&&&&    mi = qmp_input_visitor_new_strict(QOBJECT(args));&&&&    v = qmp_input_get_visitor(mi);&&&&    visit_type_str(v, &device, ""device"", errp);&&&&    visit_type_str(v, &password, ""password"", errp);&&&&    qmp_input_visitor_cleanup(mi);&&&&&&&&    if (error_is_set(errp)) {&&&&        goto out;&&&&    }&&&&    qmp_block_passwd(device, password, errp);&&&&&&&&out:&&&&    md = qapi_dealloc_visitor_new();&&&&    v = qapi_dealloc_get_visitor(md);&&&&    visit_type_str(v, &device, ""device"", errp);&&&&    visit_type_str(v, &password, ""password"", errp);&&&&    qapi_dealloc_visitor_cleanup(md);&&&&&&&&	[...]&&&&&&&&    return 0;&&&&}&&&&&&&&Consider errp != NULL when the out label is reached, we're going&&&&to leak device and password.&&&&&&&&This patch fixes this by always passing errp=NULL for dealloc&&&&visitors, meaning that we always try to free them regardless of&&&&any previous failure. The above example would then be:&&&&&&&&out:&&&&    md = qapi_dealloc_visitor_new();&&&&    v = qapi_dealloc_get_visitor(md);&&&&    visit_type_str(v, &device, ""device"", NULL);&&&&    visit_type_str(v, &password, ""password"", NULL);&&&&    qapi_dealloc_visitor_cleanup(md);&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," kvm: add detail error message when fail to add ioeventfd I try to hotplug 28 * 8 multiple-function devices to guest with&&&&old host kernel, ioeventfds in host kernel will be exhausted, then&&&&qemu fails to allocate ioeventfds for blk/nic devices.&&&&&&&&It's better to add detail error here.&&&&&&&&Signed-off-by: Amos Kong <akong@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&& "
1," s390x: reduce TARGET_PHYS_ADDR_SPACE_BITS to 62 With the next patch, the memory API will complain if the&&&&TARGET_PHYS_ADDR_SPACE_BITS gets dangerously close to an&&&&overflow.  s390x can handle up to 64 bit of physical address&&&&space from its page tables, but we never use that much.  Just&&&&decrease the value.&&&&&&&&Cc: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," memory: assert that PhysPageEntry's ptr does not overflow While sized to 15 bits in PhysPageEntry, the ptr field is ORed into the&&&&iotlb entries together with a page-aligned pointer.  The ptr field must&&&&not overflow into this page-aligned value, assert that it is smaller than&&&&the page size.&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qemu-char: do not operate on sources from finalize callbacks Due to a glib bug, the finalize callback is called with the GMainContext&&&&lock held.  Thus, any operation on the context from the callback will&&&&cause recursive locking and a deadlock.  This happens, for example,&&&&when a client disconnects from a socket chardev.&&&&&&&&The fix for this is somewhat ugly, because we need to forego polymorphism&&&&and implement our own function to destroy IOWatchPoll sources.  The&&&&right thing to do here would be child sources, but we support older&&&&glib versions that do not have them.  Not coincidentially, glib developers&&&&found and fixed the deadlock as part of implementing child sources.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Tested-by: Sander Eikelenboom <linux@eikelenboom.it>&&&&Message-id: 1366385529-10329-5-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, i386 ROR r8/r16 instruction fix Fixed EFLAGS corruption by ROR r8/r16 instruction located at the end of the TB.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@gmail.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," fpu: Correct edgecase in float64_muladd In handling float64_muladd, if we end up doing a subtraction of the&&&&product and c, and the 128 bit result of this subtraction happens to&&&&have its most significant bit in bit 63, we weren't handling this&&&&correctly when attempting to normalize to put the most significant&&&&bit into bit 126.  We would end up doing a right shift by a negative&&&&number (undefined behaviour in C) so at best we would return an&&&&incorrect result to the guest.  MSB in bit 63 has to be handled as a&&&&special case separately from MSB in 0..62 and MSB in 63..126.  (MSB&&&&in 127 is not possible.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," libi2c-omap: Fix endianness dependency The libqos driver for omap_i2c currently does not work on Big Endian.&&&&Introduce helpers for reading from and writing to 16-bit armel registers.&&&&&&&&This fixes tmp105-test failures on ppc.&&&&&&&&To prepare for a QTest-level endianness solution, poison mem{read,write}&&&&and always use the helpers. Adopt the expected signatures.&&&&To avoid an unused variable warning, assert the STAT Single Byte Data&&&&bit but, due to it not getting cleared, only it being set when len == 1.&&&&&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&&Message-id: 1360600914-5448-3-git-send-email-afaerber@suse.de&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," disallow -daemonize usage of stdio (curses display, -nographic, -serial stdio etc) Curses display requires stdin/out to stay on the terminal,&&&&so -daemonize makes no sense in this case.  Instead of&&&&leaving display uninitialized like is done since 995ee2bf469de6bb,&&&&explicitly detect this case earlier and error out.&&&&&&&&-nographic can actually be used with -daemonize, by redirecting&&&&everything to a null device, but the problem is that according&&&&to documentation and historical behavour, -nographic redirects&&&&guest ports to stdin/out, which, again, makes no sense in case&&&&of -daemonize.  Since -nographic is a legacy option, don't bother&&&&fixing this case (to allow -nographic and -daemonize by redirecting&&&&guest ports to null instead of stdin/out in this case), but disallow&&&&it completely instead, to stop garbling host terminal.&&&&&&&&If no display display needed and user wants to use -nographic,&&&&the right way to go is to use&&&&  -serial null -parallel null -monitor none -display none -vga none&&&&instead of -nographic.&&&&&&&&Also prevent the same issue -- it was possible to get garbled&&&&host tty after&&&&&&&&  -nographic -daemonize&&&&&&&&and it is still possible to have it by using&&&&&&&&  -serial stdio -daemonize&&&&&&&&Fix this by disallowing opening stdio chardev when -daemonize&&&&is specified.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qcow2: Fix refcount table size calculation A missing factor for the refcount table entry size in the calculation&&&&could mean that too little memory was allocated for the in-memory&&&&representation of the table, resulting in a buffer overflow.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Tested-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," target-mips: optimize ddiv/ddivu/div/divu with movcond The result of a division by 0, or a division of INT_MIN by -1 in the&&&&signed case, is unpredictable. Just replace 0 by 1 in that case so that&&&&it doesn't trigger a floating point exception on the host.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," configure: fix seccomp check Currently, if libseccomp is missing but the user explicitly requested&&&&seccomp support using --enable-seccomp, configure silently ignores the&&&&situation and disables seccomp support.&&&&&&&&This is unlike all other tests that explicitly fail in such situation.&&&&&&&&Fix that.&&&&&&&&Signed-off-by: ""Yann E. MORIN"" <yann.morin.1998@free.fr>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@gmail.com>&&&& "
1," ivshmem: fix memory_region_del_eventfd assertion failure We do not register ioeventfds unless the IVSHMEM_IOEVENTFD feature&&&&is set.  The same feature must be checked before releasing the eventfds.&&&&Regression introduced by commit 563027c (ivshmem: use EventNotifier and&&&&memory API, 2012-07-05).&&&&&&&&Reported-by: Cam Macdonnell <cam@cs.ualberta.ca>&&&&Tested-by: Cam Macdonnell <cam@cs.ualberta.ca>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qemu-ga: switch to the new error format on the wire IMPORTANT: this BREAKS qemu-ga compatibility for the error response.&&&&&&&&Instead of returning something like:&&&&&&&&{ ""error"": { ""class"": ""InvalidParameterValue"",&&&&             ""data"": {""name"": ""mode"", ""expected"": ""halt|powerdown|reboot"" } } }&&&&&&&&qemu-ga now returns:&&&&&&&& { ""error"": { ""class"": ""GenericError"",&&&&              ""desc"": ""Parameter 'mode' expects halt|powerdown|reboot"" } }&&&&&&&&Notice that this is also a bug fix, as qemu-ga wasn't returning the&&&&human message.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," tests: Makefile: include dependency files Otherwise 'make check' won't recompile files that need to be recompiled&&&&because of header changes.&&&&&&&&To reproduce the bug, run:&&&&&&&& $ make check  # succeeds&&&& $ echo B0RKED > hw/mc146818rtc_regs.h&&&& $ make check  # is supposed to try to rebuild tests/rtc-test.o and fail&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," qtest: fix infinite loop when QEMU aborts abruptly From Markus:&&&&&&&&Makes ""make check"" hang:&&&&&&&&    QTEST_QEMU_BINARY=x86_64-softmmu/qemu-system-x86_64 gtester -k --verbose -m=quick tests/crash-test tests/rtc-test&&&&    TEST: tests/crash-test... (pid=972)&&&&    qemu-system-x86_64: Device needs media, but drive is empty&&&&[Nothing happens, wait a while, then hit ^C]&&&&    make: *** [check-qtest-x86_64] Interrupt&&&&&&&&This was due to the fact that we weren't checked for errors when&&&&reading from the QMP socket.  This patch adds appropriate error&&&&checking.&&&&&&&&Reported-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," tci: don't write zero for reloc in tci_out_label If tci_out_label is called in the context of tcg_gen_code_search_pc, we&&&&could be overwriting an already patched relocation with zero -- and not&&&&repatch it because the set_label is past search_pc, causing a QEMU crash&&&&when it tries to branch to a zero label.&&&&&&&&Not writing anything to the relocation area seems to be in line with what&&&&other backends do from the couple I looked at (x86, ppc).&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1, monitor: Fix memory leak with readline completion Each string which is shown during readline completion in the QEMU monitor&&&&is allocated dynamically but currently never deallocated.&&&&&&&&Add the missing loop which calls g_free for the allocated strings.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
1," pci_bridge_dev: fix error path in pci_bridge_dev_initfn() Currently, we do not properly cleanup, if pci_bridge_dev_initfn&&&&fails to initialize properly. Make sure to call pci_bridge_exitfn()&&&&in the error path.&&&&&&&&Signed-off-by: Jason Baron <jbaron@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," Add API to get memory mapping without do paging crash does not need the virtual address and physical address mapping, and the&&&&mapping does not include the memory that is not referenced by the page table.&&&&crash does not use the virtual address, so we can create the mapping for all&&&&physical memory(virtual address is always 0). This patch provides a API to do&&&&this thing, and it will be used in the following patch.&&&&&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," tcg/ppc: Do not overwrite lower address word on Darwin and AIX For targets where TARGET_LONG_BITS != 32, i.e. 64-bit guests,&&&&addr_reg is moved to r4. For hosts without TCG_TARGET_CALL_ALIGN_ARGS&&&&either data_reg2 or data_reg or a masked version thereof would overwrite&&&&r4. Place it in r5 instead, matching TCG_TARGET_CALL_ALIGN_ARGS hosts.&&&&&&&&This fixes immediate crashes of 64-bit guests observed on Darwin/ppc but&&&&not on Darwin/ppc64.&&&&&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&&Acked-by: malc <av1474@comtv.ru>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Declare state directory in smb.conf The smb.conf generated by the userspace networking does not include a state directory&&&&directive. Samba therefore falls back to the default value. Since the user generally&&&&does not have write access to this path, smbd immediately crashes.&&&&&&&&The ""state directory"" option was added in Samba 3.4.0 (commit&&&&http://gitweb.samba.org/?p=samba.git;a=commit;h=7b02e05eb64f3ffd7aa1cf027d10a7343c0da757).&&&&&&&&This patch adds the missing option.&&&&&&&&Signed-off-by: Nikolaus Rath <Nikolaus@rath.org>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
1, i82378/i82374: Do not create DMA controller twice This fixes a crash in PReP emulation when using DMA controller to access&&&&floppy drive.&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Andreas F盲rber <andreas.faerber@web.de>&&&& 
1," qcow2: Fix error handling in qcow2_alloc_cluster_offset If do_alloc_cluster_offset() fails, the error handling code tried to&&&&remove the request from the in-flight queue, to which it wasn't added&&&&yet, resulting in a NULL pointer dereference.&&&&&&&&m->nb_clusters really only becomes != 0 when the request is in the list.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," linux-user: fix QEMU_STRACE=1 segfault While debugging some issues with QEMU_STRACE I stumbled over segmentation&&&&faults that were pretty reproducible. Turns out we tried to treat a&&&&normal return value as errno, resulting in an access over array boundaries&&&&for the resolution.&&&&&&&&Fix this by allowing failure to resolve invalid errnos into strings.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," qdev: accept both strings and integers for PCI addresses Visitors allow a limited form of polymorphism.  Exploit it to support&&&&setting the non-legacy PCI address property both as a DD.F string&&&&and as an 8-bit integer.&&&&&&&&The 8-bit integer form is just too clumsy, it is unlikely that we will&&&&ever drop it.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," Revert ""Handle SDL grabs failing (Mark McLoughlin)"" This reverts commit 6bb816031f8bc0aafc3476e6dfa4293ee3a5f106.&&&&&&&&SDL_WM_GrabInput does not reliably bail out if grabbing is impossible.&&&&So if we get here, we already lost and will block. But this can no&&&&longer happen due to the check in sdl_grab_start. So this patch became&&&&obsolete.&&&&&&&&Conflicts:&&&&&&&&	sdl.c&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, Fix off-by-one in dirty bitmap functions Reported-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," hw/sd.c: Correct handling of APP_CMD status bit Fix some bugs in our implementation of the APP_CMD status bit:&&&& * the response to an ACMD should have APP_CMD set, not cleared&&&& * if an illegal ACMD is sent then the next command should be&&&&   handled as a normal command&&&&&&&&This requires that we split ""card is expecting an ACMD"" from&&&&the state of the APP_CMD status bit (the latter indicates&&&&both ""expecting ACMD"" and ""that was an ACMD"").&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andrzej Zaborowski <andrew.zaborowski@intel.com>&&&& "
1," qiov: prevent double free or use-after-free qemu_iovec_destroy does not clear the QEMUIOVector fully, and the data&&&&could thus be used after free or freed again.  While I do not know any&&&&example in the tree, I observed this using virtio-scsi (and SCSI&&&&scatter/gather) when canceling DMA requests.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," target-arm: Ignore attempts to set invalid modes in CPSR Ignore attempts to set the CPSR mode field to an invalid value.&&&&This is UNPREDICTABLE, but we should not cpu_abort() for things&&&&a malicious guest (or a confused user on the gdbstub interface)&&&&can provoke.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," block: add request tracking The block layer does not know about pending requests.  This information&&&&is necessary for copy-on-read since overlapping requests must be&&&&serialized to prevent races that corrupt the image.&&&&&&&&The BlockDriverState gets a new tracked_request list field which&&&&contains all pending requests.  Each request is a BdrvTrackedRequest&&&&record with sector_num, nb_sectors, and is_write fields.&&&&&&&&Note that request tracking is always enabled but hopefully this extra&&&&work is so small that it doesn't justify adding an enable/disable flag.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," ccid: Fix buffer overrun in handling of VSC_ATR message ATR size exceeding the limit is diagnosed, but then we merrily use it&&&&anyway, overrunning card->atr[].&&&&&&&&The message is read from a character device.  Obvious security&&&&implications unless the other end of the character device is trusted.&&&&&&&&Spotted by Coverity.  CVE-2011-4111.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, s390x: initialize virtio dev region When running the s390x virtio machine we can potentially use uninitialized&&&&memory for the virtio device backing ram. That can lead to weird breakge.&&&&&&&&So let's better initialize it to 0 properly.&&&&&&&&Reported-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&&&&&---&&&&&&&&v1 -> v2:&&&&&&&&  - use target_phys_addr_t&&&& 
1, ui: Plug memory leaks on parse_keyboard_layout() error path Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," block: Make cache=unsafe flush to the OS cache=unsafe completely ignored bdrv_flush, because flushing the host disk&&&&costs a lot of performance. However, this means that qcow2 images (and&&&&potentially any other format) can lose data even after the guest has issued a&&&&flush if the qemu process crashes/is killed. In case of a host crash, data loss&&&&is certainly expected with cache=unsafe, but if just the qemu process dies this&&&&is a bit too unsafe.&&&&&&&&Now that we have two separate flush functions, we can choose to flush&&&&everythign to the OS, but don't enforce that it's physically written to the&&&&disk.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, qemu-io: Handle create_iovec errors Callers of create_iovec() didn't check for failure and continued with&&&&uninitialised data in error cases. This patch adds checks to each call.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, hw/tc58128.c: Remove unnecessary check for g_malloc failure Remove a check for g_malloc failing: this never happens.&&&&Also use g_malloc rather than g_malloc0 as we immediately&&&&memset the entire region and so zero-initialising it is pointless.&&&&Spotted by Coverity (see bug 887883).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," loader: Fix read_targphys() to behave when read() fails Happily passes (size_t)-1 to rom_add_blob_fixed(), which promptly dies&&&&attempting to malloc that much.  Spotted by Coverity.&&&&&&&&Bonus fix for ROMs larger than INT_MAX bytes: return ssize_t instead&&&&of int.  Bug can't bite, because the only user load_aout() limits ROM&&&&size to an int value.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," PPC: Fail configure when libfdt is not available We have several targets in the PPC tree now that basically require libfdt&&&&to function properly, namely the pseries and the e500 targets. This dependency&&&&will rather increase than decrease in the future, so I want to make sure&&&&that people building shiny new 1.0 actually have libfdt installed to get&&&&rid of a few ifdefs in the code.&&&&&&&&Warning: This patch will likely make configure fail for people who don't&&&&select their own --target-list, but don't have libfdt development packages&&&&installed. However, we really need this new dependency to move on.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&&&&&---&&&&&&&&v1 -> v2:&&&&&&&&  - no paranthesis&&&&  - no fdt check for config_pseries&&&&  - add . in error message&&&& "
1, fix memory leak in aio_write_f Haven't released memory of 'ctx' before return.&&&&&&&&Signed-off-by: Alex Jia <ajia@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, qed: fix use-after-free during l2 cache commit QED's metadata caching strategy allows two parallel requests to race for&&&&metadata lookup.  The first one to complete will populate the metadata&&&&cache and the second one will drop the data it just read in favor of the&&&&cached data.&&&&&&&&There is a use-after-free in qed_read_l2_table_cb() and&&&&qed_commit_l2_update() where l2_table->offset was used after the&&&&l2_table may have been freed due to a metadata lookup race.  Fix this by&&&&keeping the l2_offset in a local variable and not reaching into the&&&&possibly freed l2_table.&&&&&&&&Reported-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, trace: use binary file open mode in simpletrace For Windows portability the simple trace backend must use the 'b' file&&&&open mode.  This prevents the stdio library from mangling 0x0a/0x0d&&&&newline characters.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
1," iSCSI block driver This provides built-in support for iSCSI to QEMU.&&&&&&&&This has the advantage that the iSCSI devices need not be made visible to the host, which is useful if you have very many virtual machines and very many iscsi devices.&&&&It also has the benefit that non-root users of QEMU can access iSCSI devices across the network without requiring root privilege on the host.&&&&&&&&This driver interfaces with the multiplatform posix library for iscsi initiator/client access to iscsi devices hosted at&&&&    git://github.com/sahlberg/libiscsi.git&&&&&&&&The patch adds the driver to interface with the iscsi library.&&&&It also updated the configure script to&&&&* by default, probe is libiscsi is available and if so, build&&&&  qemu against libiscsi.&&&&* --enable-libiscsi&&&&  Force a build against libiscsi. If libiscsi is not available&&&&  the build will fail.&&&&* --disable-libiscsi&&&&  Do not link against libiscsi, even if it is available.&&&&&&&&When linked with libiscsi, qemu gains support to access iscsi resources such as disks and cdrom directly, without having to make the devices visible to the host.&&&&&&&&You can specify devices using a iscsi url of the form :&&&&iscsi://[<username>[:<password>@]]<host>[:<port]/<target-iqn-name>/<lun>&&&&When using authentication, the password can optionally be set with&&&&LIBISCSI_CHAP_PASSWORD=""password"" to avoid it showing up in the process list&&&&&&&&Signed-off-by: Ronnie Sahlberg <ronniesahlberg@gmail.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," configure: Copy test data to build directory The QDict unit-tests (check-qdict) will fail when ran on a different&&&&build directory. That's, it only works when ran on the source dir.&&&&&&&&This happens because its data file (qdict-test-data.txt) is not&&&&copied to the build dir. Fix it.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," coroutine: introduce coroutines Asynchronous code is becoming very complex.  At the same time&&&&synchronous code is growing because it is convenient to write.&&&&Sometimes duplicate code paths are even added, one synchronous and the&&&&other asynchronous.  This patch introduces coroutines which allow code&&&&that looks synchronous but is asynchronous under the covers.&&&&&&&&A coroutine has its own stack and is therefore able to preserve state&&&&across blocking operations, which traditionally require callback&&&&functions and manual marshalling of parameters.&&&&&&&&Creating and starting a coroutine is easy:&&&&&&&&  coroutine = qemu_coroutine_create(my_coroutine);&&&&  qemu_coroutine_enter(coroutine, my_data);&&&&&&&&The coroutine then executes until it returns or yields:&&&&&&&&  void coroutine_fn my_coroutine(void *opaque) {&&&&      MyData *my_data = opaque;&&&&&&&&      /* do some work */&&&&&&&&      qemu_coroutine_yield();&&&&&&&&      /* do some more work */&&&&  }&&&&&&&&Yielding switches control back to the caller of qemu_coroutine_enter().&&&&This is typically used to switch back to the main thread's event loop&&&&after issuing an asynchronous I/O request.  The request callback will&&&&then invoke qemu_coroutine_enter() once more to switch back to the&&&&coroutine.&&&&&&&&Note that if coroutines are used only from threads which hold the global&&&&mutex they will never execute concurrently.  This makes programming with&&&&coroutines easier than with threads.  Race conditions cannot occur since&&&&only one coroutine may be active at any time.  Other coroutines can only&&&&run across yield.&&&&&&&&This coroutines implementation is based on the gtk-vnc implementation&&&&written by Anthony Liguori <anthony@codemonkey.ws> but it has been&&&&significantly rewritten by Kevin Wolf <kwolf@redhat.com> to use&&&&setjmp()/longjmp() instead of the more expensive swapcontext() and by&&&&Paolo Bonzini <pbonzini@redhat.com> for Windows Fibers support.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," virtio-balloon: Check if balloon registration failed Multiple balloon registrations are not allowed; check if the&&&&registration with the qemu balloon api succeeded.  If not, fail the&&&&device init.&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," kvm: x86: Save/restore FPU OP, IP and DP These FPU states are properly maintained by KVM but not yet by TCG. So&&&&far we unconditionally set them to 0 in the guest which may cause&&&&state corruptions, though not with modern guests.&&&&&&&&To avoid breaking backward migration, use a conditional subsection that&&&&is only written if any of the three fields is non-zero. The guest's&&&&FNINIT clears them frequently, and cleared IA32_MISC_ENABLE MSR[2]&&&&reduces the probability of non-zero values further so that this&&&&subsection is not expected to restrict migration in any common scenario.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," fix crash in migration, 32-bit userspace on 64-bit host This change fixes a long-standing immediate crash (memory corruption&&&&and abort in glibc malloc code) in migration on 32bits.&&&&&&&&The bug is present since this commit:&&&&&&&&  commit 692d9aca97b865b0f7903565274a52606910f129&&&&  Author: Bruce Rogers <brogers@novell.com>&&&&  Date:   Wed Sep 23 16:13:18 2009 -0600&&&&&&&&    qemu-kvm: allocate correct size for dirty bitmap&&&&&&&&    The dirty bitmap copied out to userspace is stored in a long array,&&&&    and gets copied out to userspace accordingly.  This patch accounts&&&&    for that correctly.  Currently I'm seeing kvm crashing due to writing&&&&    beyond the end of the alloc'd dirty bitmap memory, because the buffer&&&&    has the wrong size.&&&&&&&&    Signed-off-by: Bruce Rogers&&&&    Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&&&&&& --- a/qemu-kvm.c&&&& +++ b/qemu-kvm.c&&&& @@ int kvm_get_dirty_pages_range(kvm_context_t kvm, unsigned long phys_addr,&&&& -            buf = qemu_malloc((slots[i].len / 4096 + 7) / 8 + 2);&&&& +            buf = qemu_malloc(BITMAP_SIZE(slots[i].len));&&&&             r = kvm_get_map(kvm, KVM_GET_DIRTY_LOG, i, buf);&&&&&&&&BITMAP_SIZE is now open-coded in that function, like this:&&&&&&&& size = ALIGN(((mem->memory_size) >> TARGET_PAGE_BITS), HOST_LONG_BITS) / 8;&&&&&&&&The problem is that HOST_LONG_BITS in 32bit userspace is 32&&&&but it's 64 in 64bit kernel.  So userspace aligns this to&&&&32, and kernel to 64, but since no length is passed from&&&&userspace to kernel on ioctl, kernel uses its size calculation&&&&and copies 4 extra bytes to userspace, corrupting memory.&&&&&&&&Here's how it looks like during migrate execution:&&&&&&&&our=20, kern=24&&&&our=4, kern=8&&&&...&&&&our=4, kern=8&&&&our=4064, kern=4064&&&&our=512, kern=512&&&&our=4, kern=8&&&&our=20, kern=24&&&&our=4, kern=8&&&&...&&&&our=4, kern=8&&&&our=4064, kern=4064&&&&*** glibc detected *** ./x86_64-softmmu/qemu-system-x86_64: realloc(): invalid next size: 0x08f20528 ***&&&&&&&&(our is userspace size above, kern is the size as calculated&&&&by the kernel).&&&&&&&&Fix this by always aligning to 64 in a hope that no platform will&&&&have sizeof(long)>8 any time soon, and add a comment describing it&&&&all.  It's a small price to pay for bad kernel design.&&&&&&&&Alternatively it's possible to fix that in the kernel by using&&&&different size calculation depending on the current process.&&&&But this becomes quite ugly.&&&&&&&&Special thanks goes to Stefan Hajnoczi for spotting the fundamental&&&&cause of the issue, and to Alexander Graf for his support in #qemu.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&CC: Bruce Rogers <brogers@novell.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," Don't call cpu_synchronize_state() from machine init. This will deadlock when the I/O thread is used, since the&&&&CPU thread is blocked waiting for qemu_system_ready.&&&&&&&&The synchronization is unnecessary since this is before&&&&cpu_synchronize_all_post_init().&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&Acked-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," virtio: guard against negative vq notifies The virtio_queue_notify() function checks that the virtqueue number is&&&&less than the maximum number of virtqueues.  A signed comparison is used&&&&but the virtqueue number could be negative if a buggy or malicious guest&&&&is run.  This results in memory accesses outside of the virtqueue array.&&&&&&&&It is risky doing input validation in common code instead of at the&&&&guest<->host boundary.  Note that virtio_queue_set_addr(),&&&&virtio_queue_get_addr(), virtio_queue_get_num(), and many other virtio&&&&functions do *not* validate the virtqueue number argument.&&&&&&&&Instead of fixing the comparison in virtio_queue_notify(), move the&&&&comparison to the virtio bindings (just like VIRTIO_PCI_QUEUE_SEL) where&&&&we have a uint32_t value and can avoid ever calling into common virtio&&&&code if the virtqueue number is invalid.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," ccid: add passthru card device The passthru ccid card is a device sitting on the usb-ccid bus and&&&&using a chardevice to communicate with a remote device using the&&&&VSCard protocol defined in libcacard/vscard_common.h&&&&&&&&Usage docs available in following patch in docs/ccid.txt&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&&&&&---&&&&&&&&Changes from v23->v24:&&&& * fixed double license line in header.&&&&&&&&Changes from v20->v21: (Jes Sorensen review)&&&& * add reference to COPYING in header&&&& * long comment reformatting&&&&&&&&Changes from v19->v20:&&&& * checkpatch.pl&&&&&&&&Changes from v18->v19:&&&& * add qdev.desc&&&& * remove .qdev.unplug (no hot unplug support for ccid bus)&&&&&&&&Changes from v16->v17:&&&& * fix wrong cast when receiving VSC_Error&&&& * ccid-card-passthru: force chardev user wakeup by sending Init&&&&   see lengthy comment below.&&&&&&&&Changes from v15->v16:&&&&&&&&Behavioral changes:&&&& * return correct size&&&& * return error instead of assert if client sent too large ATR&&&& * don't assert if client sent too large a size, but add asserts for indices to buffer&&&& * reset vscard_in indices on chardev disconnect&&&& * handle init from client&&&& * error if no chardev supplied&&&& * use ntoh, hton&&&& * eradicate reader_id_t&&&& * remove Reconnect usage (removed from VSCARD protocol)&&&& * send VSC_SUCCESS on card insert/remove and reader add/remove&&&&&&&&Style fixes:&&&& * width of line fix&&&& * update copyright&&&& * remove old TODO's&&&& * update file header comment&&&& * use macros for debug levels&&&& * c++ style comment replacement&&&& * update copyright license&&&& * fix ATR size comment&&&& * fix whitespace in struct def&&&& * fix DPRINTF prefix&&&& * line width fix&&&&&&&&ccid-card-passthru: force chardev user wakeup by sending Init&&&&&&&&The problem: how to wakeup the user of the smartcard when the smartcard&&&&device is initialized?&&&&&&&&Long term solution: have a callback interface. This was done via&&&&the deprecated so called chardev ioctl interface.&&&&&&&&Short term solution: do a write. Specifically we write an Init message.&&&&And we change the client to send it's own Init message regardless of&&&&receiving this one. Additional Init messages will be regarded as&&&&acceptable, the first one received after connection establishment is&&&&the determining one wrt capabilities.&&&& "
1, bitops: fix test_and_change_bit() ./bitops.h:192: warning: 鈥榦ld鈥?is used uninitialized in this function&&&&&&&&Signed-off-by: Corentin Chary <corentincj@iksaif.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," tests: Fix two memory leaks Although both leaks are not really important, fix them&&&&to avoid cppcheck warnings:&&&&&&&&tests/linux-test.c:433: error: Memory leak: stack1&&&&tests/linux-test.c:433: error: Memory leak: stack2&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," target-arm: Fix rounding constant addition for Neon shifts Handle cases where adding the rounding constant could overflow in Neon&&&&shift instructions: VRSHR, VRSRA, VQRSHRN, VQRSHRUN, VRSHRN.&&&&&&&&Signed-off-by: Christophe Lyon <christophe.lyon@st.com>&&&&[peter.maydell@linaro.org: fix handling of large shifts in rshl_s32,&&&&calculate signed saturated value as other functions do.]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," QCOW2: bug fix - read base image beyond its size This patch fixes the following bug in QCOW2. For a QCOW2 image that is larger&&&&than its base image, when handling a read request straddling over the end of the&&&&base image, the QCOW2 driver attempts to read beyond the end of the base image&&&&and the request would fail.&&&&&&&&This bug was found by Fast Virtual Disk (FVD)'s fully automated testing tool.&&&&The following test triggered the bug.&&&&&&&&dd if=/dev/zero of=/var/ramdisk/truth.raw count=0 bs=1 seek=1098561536&&&&dd if=/dev/zero of=/var/ramdisk/zero-500M.raw count=0 bs=1 seek=593099264&&&&./qemu-img create -f qcow2 -ocluster_size=65536,backing_fmt=blksim -b /var/ramdisk/zero-500M.raw /var/ramdisk/test.qcow2 1098561536&&&&./qemu-io --auto --seed=30477694 --truth=/var/ramdisk/truth.raw --format=qcow2 --test=blksim:/var/ramdisk/test.qcow2 --verify_write=true --compare_before=false --compare_after=true --round=100000 --parallel=100 --io_size=10485760 --fail_prob=0 --cancel_prob=0 --instant_qemubh=true&&&&&&&&Signed-off-by: Chunqiang Tang <ctang@us.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," linux-user: decode MAP_{UNINITIALIZED,EXECUTABLE} in strace Signed-off-by: Mike Frysinger <vapier@gentoo.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@nokia.com>&&&& "
1, Set the right overflow bit for neon 32 and 64 bit saturating add/sub. Signed-off-by: Christophe Lyon <christophe.lyon@st.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," escc: fix interrupt flags Recent PowerPC kernel end up in kernel panic during boot in -nographic&&&&mode. In this mode the second serial port is used as the udbg console,&&&&and thus a few characters are sent on this port. This activates the&&&&tx interrupt flag, and later choke the Linux kernel, as it was not&&&&expecting such a flag to be set.&&&&&&&&The problem here comes from the fact that contrary to most devices the&&&&interrupt flags are only set if the interrupt is enabled. Quoting the&&&&datasheet: ""If the corresponding IE bit is not set, the IP for that&&&&source of interrupt will never be set.""&&&&&&&&This patch fixes that by enabling the interrupt flag only when the&&&&corresponding interrupt is enabled.&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," bsd-user: Fix possible memory leaks and wrong realloc call These errors were reported by cppcheck:&&&&&&&&[bsd-user/elfload.c:1108]: (error) Common realloc mistake: ""syms"" nulled but not freed upon failure&&&&[bsd-user/elfload.c:1076]: (error) Memory leak: s&&&&[bsd-user/elfload.c:1079]: (error) Memory leak: syms&&&&&&&&v2:&&&&* The previous fix for memory leaks was incomplete (thanks to Peter Maydell for te hint).&&&&* Fix wrong realloc usage, too.&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," ppc405_uc: fix a buffer overflow Fix a buffer overflow, reported by cppcheck:&&&&[/src/qemu/hw/ppc405_uc.c:72]: (error) Buffer access out-of-bounds: bd.bi_s_version&&&&&&&&The use of field bi_s_version seems to be a typo, it should be&&&&bi_r_version.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1, tap: clear vhost_net backend on cleanup Frontends calling tap_get_vhost_net get an invalid pointer after the&&&&peer backend has been deleted. Jason Wang <jasowang@redhat.com> reports&&&&this leading to a crash in ack_features when we remove the vhost-net&&&&bakend of a virtio nic.&&&&&&&&The fix is simply to clear the backend pointer.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1," ide/atapi: add support for GET EVENT STATUS NOTIFICATION The GET EVENT STATUS NOTIFICATION is a mandatory command according&&&&to MMC-3, even if event status notification is not supported.&&&&&&&&This patch adds support for this command. It returns NEA (""No Event&&&&Available"") with an empty ""Supported Event Classes"" to show that it&&&&doesn't event support status notification. If asychronous operation is&&&&requested, which requires NCQ support, it returns an error according&&&&to the specifications.&&&&&&&&This fixes HAL support on FreeBSD and derivatives, which fill up the&&&&logs every second with:&&&&&&&&  acd0: FAILURE - unknown CMD (0x03) ILLEGAL REQUEST asc=0x20 ascq=0x00&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, qcow2: Use bdrv_(p)write_sync for metadata writes Use bdrv_(p)write_sync to ensure metadata integrity in case of a crash.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," monitor: allow device to be ejected if no disk is inserted This changes the monitor eject_device() function to not check for&&&&bdrv_is_inserted().&&&&&&&&Example run where the bug manifests itself:&&&&&&&&(output of 'info block' is stripped to include only the CD-ROM device)&&&&&&&&  (qemu) info block&&&&  ide1-cd0: type=cdrom removable=1 locked=0 [not inserted]&&&&  (qemu) change ide1-cd0 /dev/cdrom host_cdrom&&&&  (qemu) info block&&&&  ide1-cd0: type=cdrom removable=1 locked=0 file=/dev/cdrom ro=1 drv=host_cdrom encrypted=0&&&&  (qemu) eject ide1-cd0&&&&  (qemu) info block&&&&  ide1-cd0: type=cdrom removable=1 locked=0 file=/dev/cdrom ro=1 drv=host_cdrom encrypted=0&&&&&&&&  # at this point, a disk was inserted on the host CD-ROM drive&&&&&&&&  (qemu) info block&&&&  ide1-cd0: type=cdrom removable=1 locked=0 file=/dev/cdrom ro=1 drv=host_cdrom encrypted=0&&&&  (qemu) eject ide1-cd0&&&&  (qemu) info block&&&&  ide1-cd0: type=cdrom removable=1 locked=0 [not inserted]&&&&  (qemu)&&&&&&&&The first eject command didn't work because the is_inserted() check&&&&failed.&&&&&&&&I have no clue why the code had the is_inserted() check, as it doesn't matter&&&&if there is a disk present at the host drive, when the user wants the virtual&&&&device to be disconnected from the host device.&&&&&&&&The is_inserted() check has another side effect: a memory leak if the ""change""&&&&command is used multiple times, as do_change() calls eject_device() before&&&&re-opening the block device, but bdrv_close() is never called.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," un-register kbd driver in case of USB kbd unplug. If a USB keyboard is unplugged, the keyboard eventhandler is never&&&&removed, and events will continue to be passed through to the device,&&&&causing crashes or memory corruption.&&&&&&&&Signed-off-by: Jes Sorensen <Jes.Sorensen@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, sparc64: improve ldf and stf insns - implemented block load/store primary/secondary with user privilege&&&&&&&&Signed-off-by: Igor V. Kovalenko <igor.v.kovalenko@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," stash away SCM_RIGHTS fd until a getfd command arrives If there is already a fd in s->msgfd before recvmsg it is&&&&closed by parts that this patch does not touch.  So, only&&&&one descriptor can be ""leaked"" by attaching it to a command&&&&other than getfd.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1, target-arm: resource leak fixes for iwmmxt disassemble This patch fixes few resource leaks in the iwmmxt disassemble.&&&&&&&&Signed-off-by: Lars Munch <lars@segv.dk>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1, qemu-nbd: Fix invalid usage of the first argument of errx errx takes the exit status of a process as the first&&&&argument. Passing errno to it is wrong. Instead the&&&&patch lets errx take EXIT_FAILURE.&&&&&&&&Signed-off-by: Ryota Ozaki <ozaki.ryota@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," Fix -usbdevice crash If -usbdevice is used on a machine with no USB busses, usb_create&&&&will fail and return NULL.  Patch below handles this failure gracefully&&&&rather than crashing when we try to init the device.&&&&&&&&Signed-off-by: Paul Brook <paul@codesourcery.com>&&&& "
1," don't dereference NULL after failed strdup Most of these are obvious NULL-deref bug fixes, for example,&&&&the ones in these files:&&&&&&&&  block/curl.c&&&&  net.c&&&&  slirp/misc.c&&&&&&&&and the first one in block/vvfat.c.&&&&The others in block/vvfat.c may not lead to an immediate segfault, but I&&&&traced the two schedule_rename(..., strdup(path)) uses, and a failed&&&&strdup would appear to trigger this assertion in handle_renames_and_mkdirs:&&&&&&&&	    assert(commit->path);&&&&&&&&The conversion to use qemu_strdup in envlist_to_environ is not technically&&&&needed, but does avoid a theoretical leak in the caller when strdup fails&&&&for one value, but later succeeds in allocating another buffer(plausible,&&&&if one string length is much larger than the others).  The caller does&&&&not know the length of the returned list, and as such can only free&&&&pointers until it hits the first NULL.  If there are non-NULL pointers&&&&beyond the first, their buffers would be leaked.  This one is admittedly&&&&far-fetched.&&&&&&&&The two in linux-user/main.c are worth fixing to ensure that an&&&&OOM error is diagnosed up front, rather than letting it provoke some&&&&harder-to-diagnose secondary error, in case of exec failure, or worse, in&&&&case the exec succeeds but with an invalid list of command line options.&&&&However, considering how unlikely it is to encounter a failed strdup early&&&&in main, this isn't a big deal.  Note that adding the required uses of&&&&qemu_strdup here and in envlist.c induce link failures because qemu_strdup&&&&is not currently in any library they're linked with.  So for now, I've&&&&omitted those changes, as well as the fixes in target-i386/helper.c&&&&and target-sparc/helper.c.&&&&&&&&If you'd like to see the above discussion (or anything else)&&&&in the commit log, just let me know and I'll be happy to adjust.&&&&&&&&>From 9af42864fd1ea666bd25e2cecfdfae74c20aa8c7 Mon Sep 17 00:00:00 2001&&&&From: Jim Meyering <meyering@redhat.com>&&&&Date: Mon, 8 Feb 2010 18:29:29 +0100&&&&Subject: [PATCH] don't dereference NULL after failed strdup&&&&&&&&Handle failing strdup by replacing each use with qemu_strdup,&&&&so as not to dereference NULL or trigger a failing assertion.&&&&* block/curl.c (curl_open): s/\bstrdup\b/qemu_strdup/&&&&* block/vvfat.c (init_directories): Likewise.&&&&(get_cluster_count_for_direntry, check_directory_consistency): Likewise.&&&&* net.c (parse_host_src_port): Likewise.&&&&* slirp/misc.c (fork_exec): Likewise.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," MCE: Fix bug of IA32_MCG_STATUS after system reset Now, if we inject a fatal MCE into guest OS, for example Linux, Linux&&&&will go panic and then reboot. But if we inject another MCE now,&&&&system will reset directly instead of go panic firstly, because&&&&MCG_STATUS.MCIP is set to 1 and not cleared after reboot. This is does&&&&not follow the behavior in real hardware.&&&&&&&&This patch fixes this via set env->mcg_status to 0 during system reset.&&&&&&&&Signed-off-by: Huang Ying <ying.huang@intel.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," linux-user: Fix mmap_lock ordering mmap_lock() can be called while tb_lock() is being held. To&&&&avoid deadlock when one thread is holding mmap_lock and another&&&&tb_lock, _always_ lock first tb_lock().&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@nokia.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," target-alpha: Fix compiler warning for gcc-4.3 (and older) ""Old"" compilers obviously are not able to recognise&&&&that all cases are handled here:&&&&&&&&qemu/target-alpha/helper.c:70: error: 鈥榬ound_mode鈥?may be used uninitialized in this function&&&&&&&&A small modification helps the compiler to do its jobs.&&&&&&&&gcc-4.4 does not need this, but is still not standard on all platforms.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Acked-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," target-s390: Fail on unknown instructions We were being a bit too nice and didn't give the guest an invalid instruction&&&&interrupt.&&&&&&&&While that works, it's not exactly the fastest thing to do, since now the&&&&guest doesn't know that we're not really implementing that instruction, so it&&&&continues doing it.&&&&&&&&We run into this with the set_page_unstable hint instruction. So let's bail out&&&&in these cases.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, Fix 32-bit overflow in parallels image support Signed-off-by: David Woodhouse <David.Woodhouse@intel.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," whitelist host virtio networking features This patch is a followup to 8eca6b1bc770982595db2f7207c65051572436cb,&&&&fixing crashes when guests with 2.6.25 virtio drivers have saturated&&&&virtio network connections.&&&&&&&&https://bugs.edge.launchpad.net/ubuntu/+source/qemu-kvm/+bug/458521&&&&&&&&That patch should have been whitelisting *_HOST_* rather than the the&&&&*_GUEST_* features.&&&&&&&&I tested this by running an Ubuntu 8.04 Hardy guest (2.6.24 kernel +&&&&2.6.25-virtio driver).  I saturated both the incoming, and outgoing&&&&network connection with nc, seeing sustained 6MB/s up and 6MB/s down&&&&bitrates for ~20 minutes.  Previously, this crashed immediately.  Now,&&&&the guest does not crash and maintains network connectivity throughout&&&&the test.&&&&&&&&Signed-off-by: Dustin Kirkland <kirkland@canonical.com>&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, net: add macaddr type. Add new type for mac addresses.&&&&&&&&Add function which sets the qemu default mac address if it finds the mac&&&&address uninitialized (i.e. all zeros).&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," net: Fix -net socket,listen (Jan Kiszka) In case no symbolic name is provided when requesting VLAN connection via&&&&listening TCP socket ('-net socket,listen=...'), qemu crashes. This&&&&fixes the cause.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7196 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Introduce VLANClientState::cleanup() (Mark McLoughlin) We're currently leaking memory and file descriptors on device&&&&hot-unplug.&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7150 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Remove some useless malloc() checking (Mark McLoughlin) Now that we abort() on malloc, neither qemu_find_vlan() nor&&&&net_tap_fd_init() can fail.&&&&&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7146 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, array overflow in hw/stellaris.c and hw/omap_dss.c (Jindrich Makovicka)&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5064 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Add a path length check to prevent heap overflow (Eric Milliken). git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3916 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Fix off-by-one address checks in MIPS64 MMU, by Aurelien Jarno. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3718 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Fix PowerPC 64x64 bits multiplication overflow check. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3444 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Fix overflow when multiplying two large positive numbers. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3429 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, DOS 6.22 fix (Johannes Schindelin) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1627 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Handle division by zero case in Sparc64 udivx and sdivx ops git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2767 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, lmsw fix (aka dos4gw bug) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@885 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, buffer overflow fix - handle case where stdin is closed (Rusty Russell) git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@397 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," virito-pci: fix OVERRUN problem Overrunning array ""proxy->guest_features"" of 2 4-byte&&&&elements at element index 2 (byte offset 8) using index&&&&""proxy->gfselect"" (which evaluates to 2). Normally, the&&&&Linux kernel driver just read/write '0' or '1' as the&&&&""proxy->gfselect"" values, so using '<' instead of '=<' to&&&&make coverity happy and avoid potential harm.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
1," tcg/sparc: Zero extend address argument to ld/st helpers The C store helper functions take the address argument as a&&&&target_ulong type; if this is 32 bit but the host is 64 bit&&&&then the SPARC calling convention requires that the caller&&&&must zero extend the value. We weren't doing this, which&&&&meant we could pass values to the caller with high bits set&&&&and QEMU would crash if it was compiled with optimizations.&&&&In particular, the i386 BIOS would not start.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1490871151-29029-3-git-send-email-peter.maydell@linaro.org&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
1," qdev: Check for the availability of a hotplug controller before adding a device The qdev_unplug() function contains a g_assert(hotplug_ctrl) statement,&&&&so QEMU crashes when the user tries to device_add + device_del a device&&&&that does not have a corresponding hotplug controller. This could be&&&&provoked for a couple of devices in the past (see commit 4c93950659487c7ad&&&&or 84ebd3e8c7d4fe955 for example), and can currently for example also be&&&&triggered like this:&&&&&&&&$ s390x-softmmu/qemu-system-s390x -M none -nographic&&&&QEMU 2.10.50 monitor - type 'help' for more information&&&&(qemu) device_add qemu-s390x-cpu,id=x&&&&(qemu) device_del x&&&&**&&&&ERROR:qemu/qdev-monitor.c:872:qdev_unplug: assertion failed: (hotplug_ctrl)&&&&Aborted (core dumped)&&&&&&&&So devices clearly need a hotplug controller when they should be usable&&&&with device_add.&&&&The code in qdev_device_add() already checks whether the bus has a proper&&&&hotplug controller, but for devices that do not have a corresponding bus,&&&&there is no appropriate check available yet. In that case we should check&&&&whether the machine itself provides a suitable hotplug controller and&&&&refuse to plug the device if none is available.&&&&&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-Id: <1509617407-21191-3-git-send-email-thuth@redhat.com>&&&&Reviewed-by: Cornelia Huck <cohuck@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," iothread: fix iothread_stop() race condition There is a small chance that iothread_stop() hangs as follows:&&&&&&&&  Thread 3 (Thread 0x7f63eba5f700 (LWP 16105)):&&&&  #0  0x00007f64012c09b6 in ppoll () at /lib64/libc.so.6&&&&  #1  0x000055959992eac9 in ppoll (__ss=0x0, __timeout=0x0, __nfds=<optimized out>, __fds=<optimized out>) at /usr/include/bits/poll2.h:77&&&&  #2  0x000055959992eac9 in qemu_poll_ns (fds=<optimized out>, nfds=<optimized out>, timeout=<optimized out>) at util/qemu-timer.c:322&&&&  #3  0x0000559599930711 in aio_poll (ctx=0x55959bdb83c0, blocking=blocking@entry=true) at util/aio-posix.c:629&&&&  #4  0x00005595996806fe in iothread_run (opaque=0x55959bd78400) at iothread.c:59&&&&  #5  0x00007f640159f609 in start_thread () at /lib64/libpthread.so.0&&&&  #6  0x00007f64012cce6f in clone () at /lib64/libc.so.6&&&&&&&&  Thread 1 (Thread 0x7f640b45b280 (LWP 16103)):&&&&  #0  0x00007f64015a0b6d in pthread_join () at /lib64/libpthread.so.0&&&&  #1  0x00005595999332ef in qemu_thread_join (thread=<optimized out>) at util/qemu-thread-posix.c:547&&&&  #2  0x00005595996808ae in iothread_stop (iothread=<optimized out>) at iothread.c:91&&&&  #3  0x000055959968094d in iothread_stop_iter (object=<optimized out>, opaque=<optimized out>) at iothread.c:102&&&&  #4  0x0000559599857d97 in do_object_child_foreach (obj=obj@entry=0x55959bdb8100, fn=fn@entry=0x559599680930 <iothread_stop_iter>, opaque=opaque@entry=0x0, recurse=recurse@entry=false) at qom/object.c:852&&&&  #5  0x0000559599859477 in object_child_foreach (obj=obj@entry=0x55959bdb8100, fn=fn@entry=0x559599680930 <iothread_stop_iter>, opaque=opaque@entry=0x0) at qom/object.c:867&&&&  #6  0x0000559599680a6e in iothread_stop_all () at iothread.c:341&&&&  #7  0x000055959955b1d5 in main (argc=<optimized out>, argv=<optimized out>, envp=<optimized out>) at vl.c:4913&&&&&&&&The relevant code from iothread_run() is:&&&&&&&&  while (!atomic_read(&iothread->stopping)) {&&&&      aio_poll(iothread->ctx, true);&&&&&&&&and iothread_stop():&&&&&&&&  iothread->stopping = true;&&&&  aio_notify(iothread->ctx);&&&&  ...&&&&  qemu_thread_join(&iothread->thread);&&&&&&&&The following scenario can occur:&&&&&&&&1. IOThread:&&&&  while (!atomic_read(&iothread->stopping)) -> stopping=false&&&&&&&&2. Main loop:&&&&  iothread->stopping = true;&&&&  aio_notify(iothread->ctx);&&&&&&&&3. IOThread:&&&&  aio_poll(iothread->ctx, true); -> hang&&&&&&&&The bug is explained by the AioContext->notify_me doc comments:&&&&&&&&  ""If this field is 0, everything (file descriptors, bottom halves,&&&&  timers) will be re-evaluated before the next blocking poll(), thus the&&&&  event_notifier_set call can be skipped.""&&&&&&&&The problem is that ""everything"" does not include checking&&&&iothread->stopping.  This means iothread_run() will block in aio_poll()&&&&if aio_notify() was called just before aio_poll().&&&&&&&&This patch fixes the hang by replacing aio_notify() with&&&&aio_bh_schedule_oneshot().  This makes aio_poll() or g_main_loop_run()&&&&to return.&&&&&&&&Implementing this properly required a new bool running flag.  The new&&&&flag prevents races that are tricky if we try to use iothread->stopping.&&&&Now iothread->stopping is purely for iothread_stop() and&&&&iothread->running is purely for the iothread_run() thread.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20171207201320.19284-6-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," trace: Try using tracefs first Recent Linux kernel provides separate tracefs which doesn't need to be&&&&mounted on the debugfs.  Although most systems mount it at the&&&&traditional place on the debugfs, it'd be safer to check tracefs first.&&&&&&&&Signed-off-by: Namhyung Kim <namhyung@gmail.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," xen/pt: Set is_express to avoid out-of-bounds write The passed-through device might be an express device. In this case the&&&&old code allocated a too small emulated config space in&&&&pci_config_alloc() since pci_config_size() returned the size for a&&&&non-express device. This leads to an out-of-bound write in&&&&xen_pt_config_reg_init(), which sometimes results in crashes. So set&&&&is_express as already done for KVM in vfio-pci.&&&&&&&&Shortened ASan report:&&&&&&&&==17512==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x611000041648 at pc 0x55e0fdac51ff bp 0x7ffe4af07410 sp 0x7ffe4af07408&&&&WRITE of size 2 at 0x611000041648 thread T0&&&&    #0 0x55e0fdac51fe in memcpy /usr/include/x86_64-linux-gnu/bits/string3.h:53&&&&    #1 0x55e0fdac51fe in stw_he_p include/qemu/bswap.h:330&&&&    #2 0x55e0fdac51fe in stw_le_p include/qemu/bswap.h:379&&&&    #3 0x55e0fdac51fe in pci_set_word include/hw/pci/pci.h:490&&&&    #4 0x55e0fdac51fe in xen_pt_config_reg_init hw/xen/xen_pt_config_init.c:1991&&&&    #5 0x55e0fdac51fe in xen_pt_config_init hw/xen/xen_pt_config_init.c:2067&&&&    #6 0x55e0fdabcf4d in xen_pt_realize hw/xen/xen_pt.c:830&&&&    #7 0x55e0fdf59666 in pci_qdev_realize hw/pci/pci.c:2034&&&&    #8 0x55e0fdda7d3d in device_set_realized hw/core/qdev.c:914&&&&[...]&&&&&&&&0x611000041648 is located 8 bytes to the right of 256-byte region [0x611000041540,0x611000041640)&&&&allocated by thread T0 here:&&&&    #0 0x7ff596a94bb8 in __interceptor_calloc (/usr/lib/x86_64-linux-gnu/libasan.so.4+0xd9bb8)&&&&    #1 0x7ff57da66580 in g_malloc0 (/lib/x86_64-linux-gnu/libglib-2.0.so.0+0x50580)&&&&    #2 0x55e0fdda7d3d in device_set_realized hw/core/qdev.c:914&&&&[...]&&&&&&&&Signed-off-by: Simon Gaiser <hw42@ipsumj.de>&&&&Acked-by: Stefano Stabellini <sstabellini@kernel.org>&&&&Signed-off-by: Stefano Stabellini <sstabellini@kernel.org>&&&& "
1," blockjob: Make block_job_pause_all() keep a reference to the jobs Starting from commit 40840e419be31e6a32e6ea24511c74b389d5e0e4 we are&&&&pausing all block jobs during bdrv_reopen_multiple() to prevent any of&&&&them from finishing and removing nodes from the graph while they are&&&&being reopened.&&&&&&&&It turns out that pausing a block job doesn't necessarily prevent it&&&&from finishing: a paused block job can still run its exit function&&&&from the main loop and call block_job_completed(). The mirror block&&&&job in particular always goes to the main loop while it is paused (by&&&&virtue of the bdrv_drained_begin() call in mirror_run()).&&&&&&&&Destroying a paused block job during bdrv_reopen_multiple() has two&&&&consequences:&&&&&&&&   1) The references to the nodes involved in the job are released,&&&&      possibly destroying some of them. If those nodes were in the&&&&      reopen queue this would trigger the problem originally described&&&&      in commit 40840e419be, crashing QEMU.&&&&&&&&   2) At the end of bdrv_reopen_multiple(), bdrv_drain_all_end() would&&&&      not be doing all necessary bdrv_parent_drained_end() calls.&&&&&&&&I can reproduce problem 1) easily with iotest 030 by increasing&&&&STREAM_BUFFER_SIZE from 512KB to 8MB in block/stream.c, or by tweaking&&&&the iotest like in this example:&&&&&&&&   https://lists.gnu.org/archive/html/qemu-block/2017-11/msg00934.html&&&&&&&&This patch keeps an additional reference to all block jobs between&&&&block_job_pause_all() and block_job_resume_all(), guaranteeing that&&&&they are kept alive.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," block: Close a BlockDriverState completely even when bs->drv is NULL bdrv_close() skips much of its logic when bs->drv is NULL. This is&&&&fine when we're closing a BlockDriverState that has just been created&&&&(because e.g the initialization process failed), but it's not enough&&&&in other cases.&&&&&&&&For example, when a valid qcow2 image is found to be corrupted then&&&&QEMU marks it as such in the file header and then sets bs->drv to&&&&NULL in order to make the BlockDriverState unusable. When that BDS is&&&&later closed then many of its data structures are not freed (leaking&&&&their memory) and none of its children are detached. This results in&&&&bdrv_close_all() failing to close all BDSs and making this assertion&&&&fail when QEMU is being shut down:&&&&&&&&   bdrv_close_all: Assertion `QTAILQ_EMPTY(&all_bdrv_states)' failed.&&&&&&&&This patch makes bdrv_close() do the full uninitialization process&&&&in all cases. This fixes the problem with corrupted images and still&&&&works fine with freshly created BDSs.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: 20171106145345.12038-1-berto@igalia.com&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," nbd/server: Fix error reporting for bad requests The NBD spec says an attempt to NBD_CMD_TRIM on a read-only&&&&export should fail with EPERM, as a trim has the potential&&&&to change disk contents, but we were relying on the block&&&&layer to catch that for us, which might not always give the&&&&right error (and even if it does, it does not let us pass&&&&back a sane message for structured replies).&&&&&&&&The NBD spec says an attempt to NBD_CMD_WRITE_ZEROES out of&&&&bounds should fail with ENOSPC, not EINVAL.&&&&&&&&Our check for u64 offset + u32 length wraparound up front is&&&&pointless; nothing uses offset until after the second round&&&&of sanity checks, and we can just as easily ensure there is&&&&no wraparound by checking whether offset is in bounds (since&&&&a disk size cannot exceed off_t which is 63 bits, adding a&&&&32-bit number for a valid offset can't overflow).  Bonus:&&&&dropping the up-front check lets us keep the connection alive&&&&after NBD_CMD_WRITE, whereas before we would drop the&&&&connection (of course, any client sending a packet that would&&&&trigger the failure is already buggy, so it's also okay to&&&&drop the connection, but better quality-of-implementation&&&&never hurts).&&&&&&&&Solve all of these issues by some code motion and improved&&&&request validation.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171115213557.3548-1-eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&& "
1," hw/ppc/spapr: Fix virtio-scsi bootindex handling for LUNs >= 256 LUNs >= 256 have to be encoded with the so-called ""flat space&&&&addressing method"" for virtio-scsi, where an additional bit has to&&&&be set. SLOF already took care of this with the following commit:&&&&&&&& https://git.qemu.org/?p=SLOF.git;a=commitdiff;h=f72a37713fea47da&&&& (see https://bugzilla.redhat.com/show_bug.cgi?id=1431584 for details)&&&&&&&&But QEMU does not use this encoding yet for device tree paths&&&&that have to be handed over to SLOF to deal with the ""bootindex""&&&&property, so SLOF currently fails to boot from virtio-scsi devices&&&&with LUNs >= 256 in the right boot order. Fix it by using the bit&&&&to indicate the ""flat space addressing method"" for LUNs >= 256.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," fix: unrealize virtio device if we fail to hotplug it If we fail to hotplug virtio-blk device and then suspend&&&&or shutdown VM, qemu is likely to crash.&&&&&&&&Re-production steps:&&&&1. Run VM named vm001&&&&2. Create a virtio-blk.xml which contains wrong configurations:&&&&<disk device=""lun"" rawio=""yes"" type=""block"">&&&&  <driver cache=""none"" io=""native"" name=""qemu"" type=""raw"" />&&&&  <source dev=""/dev/mapper/11-dm"" />&&&&  <target bus=""virtio"" dev=""vdx"" />&&&&</disk>&&&&3. Run command : virsh attach-device vm001 virtio-blk.xml&&&&error: Failed to attach device from blk-scsi.xml&&&&error: internal error: unable to execute QEMU command 'device_add': Please set scsi=off for virtio-blk devices in order to use virtio 1.0&&&&it means hotplug virtio-blk device failed.&&&&4. Suspend or shutdown VM will leads to qemu crash&&&&&&&&Problem happens in virtio_vmstate_change which is called by&&&&vm_state_notify:&&&&vdev鈥檚 parent_bus is NULL, so qdev_get_parent_bus(DEVICE(vdev)) will crash.&&&&virtio_vmstate_change is added to the list vm_change_state_head at virtio_blk_device_realize(virtio_init),&&&&but after hotplug virtio-blk failed, virtio_vmstate_change will not be removed from vm_change_state_head.&&&&Adding unrealize function of virtio-blk device can solve this problem.&&&&&&&&Signed-off-by: linzhecheng <linzhecheng@huawei.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," nbd/client: Don't hard-disconnect on ESHUTDOWN from server The NBD spec says that a server may fail any transmission request&&&&with ESHUTDOWN when it is apparent that no further request from&&&&the client can be successfully honored.  The client is supposed&&&&to then initiate a soft shutdown (wait for all remaining in-flight&&&&requests to be answered, then send NBD_CMD_DISC).  However, since&&&&qemu's server never uses ESHUTDOWN errors, this code was mostly&&&&untested since its introduction in commit b6f5d3b5.&&&&&&&&More recently, I learned that nbdkit as the NBD server is able to&&&&send ESHUTDOWN errors, so I finally tested this code, and noticed&&&&that our client was special-casing ESHUTDOWN to cause a hard&&&&shutdown (immediate disconnect, with no NBD_CMD_DISC), but only&&&&if the server sends this error as a simple reply.  Further&&&&investigation found that commit d2febedb introduced a regression&&&&where structured replies behave differently than simple replies -&&&&but that the structured reply behavior is more in line with the&&&&spec (even if we still lack code in nbd-client.c to properly quit&&&&sending further requests).  So this patch reverts the portion of&&&&b6f5d3b5 that introduced an improper hard-disconnect special-case&&&&at the lower level, and leaves the future enhancement of a nicer&&&&soft-disconnect at the higher level for another day.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171113194857.13933-1-eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&& "
1," tests-aio-multithread: fix /aio/multi/schedule race condition test_multi_co_schedule_entry() set to_schedule[id] in the final loop&&&&iteration before terminating the coroutine.  There is a race condition&&&&where the main thread attempts to enter the terminating or terminated&&&&coroutine when signalling coroutines to stop:&&&&&&&&  atomic_mb_set(&now_stopping, true);&&&&  for (i = 0; i < NUM_CONTEXTS; i++) {&&&&      ctx_run(i, finish_cb, NULL);  <--- enters dead coroutine!&&&&      to_schedule[i] = NULL;&&&&  }&&&&&&&&Make sure only to set to_schedule[id] if this coroutine really needs to&&&&be scheduled!&&&&&&&&Reported-by: ""R.Nageswara Sastry"" <nasastry@in.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 20171106190233.1175-1-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," scripts: don't throw away stderr when checking out git submodules The stderr from git is important if git fails to checkout modules&&&&due to network problems, or other unexpected errors.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 20171020130748.22983-1-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," qdev: defer DEVICE_DEL event until instance_finalize() DEVICE_DEL is currently emitted when a Device is unparented, as&&&&opposed to when it is finalized. The main design motivation for this&&&&seems to be that after unparent()/unrealize(), the Device is no&&&&longer visible to the guest, and thus the operation is complete&&&&from the perspective of management.&&&&&&&&However, there are cases where remaining host-side cleanup is also&&&&pertinent to management. The is generally handled by treating these&&&&resources as aspects of the ""backend"", which can be managed via&&&&separate interfaces/events, such as blockdev_add/del, netdev_add/del,&&&&object_add/del, etc, but some devices do not have this level of&&&&compartmentalization, namely vfio-pci, and possibly to lend themselves&&&&well to it.&&&&&&&&In the case of vfio-pci, the ""backend"" cleanup happens as part of&&&&the finalization of the vfio-pci device itself, in particular the&&&&cleanup of the VFIO group FD. Failing to wait for this cleanup can&&&&result in tools like libvirt attempting to rebind the device to&&&&the host while it's still being used by VFIO, which can result in&&&&host crashes or other misbehavior depending on the host driver.&&&&&&&&Deferring DEVICE_DEL still affords us the ability to manage backends&&&&explicitly, while also addressing cases like vfio-pci's, so we&&&&implement that approach here.&&&&&&&&An alternative proposal involving having VFIO emit a separate event&&&&to denote completion of host-side cleanup was discussed, but the&&&&prevailing opinion seems to be that it is not worth the added&&&&complexity, and leaves the issue open for other Device implementations&&&&to solve in the future.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Tested-by: Eric Auger <eric.auger@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Message-Id: <20171016222315.407-4-mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," sockets: Handle race condition between binds to the same port If an offset of ports is specified to the inet_listen_saddr function(),&&&&and two or more processes tries to bind from these ports at the same time,&&&&occasionally more than one process may be able to bind to the same&&&&port. The condition is detected by listen() but too late to avoid a failure.&&&&&&&&This function is called by socket_listen() and used&&&&by all socket listening code in QEMU, so all cases where any form of dynamic&&&&port selection is used should be subject to this issue.&&&&&&&&Add code to close and re-establish the socket when this&&&&condition is observed, hiding the race condition from the user.&&&&&&&&Also clean up some issues with error handling to allow more&&&&accurate reporting of the cause of an error.&&&&&&&&This has been developed and tested by means of the&&&&test-listen unit test in the previous commit.&&&&Enable the test for make check now that it passes.&&&&&&&&Reviewed-by: Bhavesh Davda <bhavesh.davda@oracle.com>&&&&Reviewed-by: Yuval Shaia <yuval.shaia@oracle.com>&&&&Reviewed-by: Girish Moodalbail <girish.moodalbail@oracle.com>&&&&Signed-off-by: Knut Omang <knut.omang@oracle.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," tcg: Fix off-by-one in assert in page_set_flags Most of the users of page_set_flags offset (page, page + len) as&&&&the end points.  One might consider this an error, since the other&&&&users do supply an endpoint as the last byte of the region.&&&&&&&&However, the first thing that page_set_flags does is round end UP&&&&to the start of the next page.  Which means computing page + len - 1&&&&is in the end pointless.  Therefore, accept this usage and do not&&&&assert when given the exact size of the vm as the endpoint.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <20170708025030.15845-2-rth@twiddle.net>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," qemu-iotests: cleanup and fix search for programs Instead of ./check failing when a binary is missing, we try each test&&&&case now and each one fails with tons of test case diffs.  Also, all the&&&&variables were initialized by ""check"" prior to ""common"" being sourced,&&&&and then (uselessly) checked for emptiness again in ""check"".&&&&&&&&Centralize the search for programs in ""common"" (which will soon be&&&&one with ""check""), including the ""realpath"" invocation which can be done&&&&just once in ""check"" rather than in the tests.&&&&&&&&For qnio_server, move the detection to ""common"", simplifying&&&&set_prog_path to stop handling the unused second argument, and&&&&embedding the ""realpath"" pass.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," s390x/tcg: make STFL store into the lowcore Using virtual memory access is wrong and will soon include low-address&&&&protection checks, which is to be bypassed for STFL.&&&&&&&&STFL is a privileged instruction and using LowCore requires&&&&!CONFIG_USER_ONLY, so add the ifdef and move the declaration to the&&&&right place.&&&&&&&&This was originally part of a bigger STFL(E) refactoring.&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20170927170027.8539-4-david@redhat.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
1," osdep.h: Prohibit disabling assert() in supported builds We already have several files that knowingly require assert()&&&&to work, sometimes because refactoring the code for proper&&&&error handling has not been tackled yet; there are probably&&&&other files that have a similar situation but with no comments&&&&documenting the same.  In fact, we have places in migration&&&&that handle untrusted input with assertions, where disabling&&&&the assertions risks a worse security hole than the current&&&&behavior of losing the guest to SIGABRT when migration fails&&&&because of the assertion.  Promote our current per-file&&&&safety-valve to instead be project-wide, and expand it to also&&&&cover glib's g_assert().&&&&&&&&Note that we do NOT want to encourage 'assert(side-effects);'&&&&(that is a bad practice that prevents copy-and-paste of code to&&&&other projects that CAN disable assertions; plus it costs&&&&unnecessary reviewer mental cycles to remember whether a project&&&&special-cases the crippling of asserts); and we would LIKE to&&&&fix migration to not rely on asserts (but that takes a big code&&&&audit).  But in the meantime, we DO want to send a message&&&&that anyone that disables assertions has to tweak code in order&&&&to compile, making it obvious that they are taking on additional&&&&risk that we are not going to support.  At the same time, leave&&&&comments mentioning NDEBUG in files that we know still need to&&&&be scrubbed, so there is at least something to grep for.&&&&&&&&It would be possible to come up with some other mechanism for&&&&doing runtime checking by default, but which does not abort&&&&the program on failure, while leaving side effects in place&&&&(unlike how crippling assert() avoids even the side effects),&&&&perhaps under the name q_verify(); but it was not deemed worth&&&&the effort (developers should not have to learn a replacement&&&&when the standard C macro works just fine, and it would be a lot&&&&of churn for little gain).  The patch specifically uses #error&&&&rather than #warn so that a user is forced to tweak the header&&&&to acknowledge the issue, even when not using a -Werror&&&&compilation.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud脙漏 <f4bug@amsat.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&&&&&Message-Id: <20170911211320.25385-1-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," vga: stop passing pointers to vga_draw_line* functions Instead pass around the address (aka offset into vga memory).&&&&Add vga_read_* helper functions which apply vbe_size_mask to&&&&the address, to make sure the address stays within the valid&&&&range, similar to the cirrus blitter fixes (commits ffaf857778&&&&and 026aeffcb4).&&&&&&&&Impact:  DoS for privileged guest users.  qemu crashes with&&&&a segfault, when hitting the guard page after vga memory&&&&allocation, while reading vga memory for display updates.&&&&&&&&Fixes: CVE-2017-13672&&&&Cc: P J P <ppandit@redhat.com>&&&&Reported-by: David Buchanan <d@vidbuchanan.co.uk>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170828122906.18993-1-kraxel@redhat.com&&&& "
1," qcow: fix memory leaks related to encryption Fix leak of the 'encryptopts' string, which was mistakenly&&&&declared const.&&&&&&&&Fix leak of QemuOpts entry which should not have been deleted&&&&from the opts array.&&&&&&&&Reported by: coverity&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170714103105.5781-1-berrange@redhat.com&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1, target/arm: fix TCG temp leak in aarch64 rev16 Fix a TCG temporary leak in the new aarch64 rev16 handling.&&&&&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1, target/alpha: Fix temp leak in gen_call_pal Tested-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
1, target/alpha: Fix temp leak in gen_mtpr Tested-by: Emilio G. Cota <cota@braap.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
1," target/sh4: Tidy misc illegal insn checks Now that we have a do_illegal label, use goto in order&&&&to self-document the forcing of the exception.&&&&&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Message-Id: <20170718200255.31647-22-rth@twiddle.net>&&&&[aurel32: fix whitespace issues]&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, vvfat: initialize memory after allocating it This prevents some host to guest memory content leaks.&&&&&&&&Fixes: https://bugs.launchpad.net/qemu/+bug/1599539&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," spapr: fix memory leak in spapr_core_pre_plug() In case of error, we must ensure the dynamically allocated base_core_type&&&&is freed, like it is done everywhere else in this function.&&&&&&&&This is a regression introduced in QEMU 2.9 by commit 8149e2992f78.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," vmgenid-test: use boot-sector infrastructure There's no requirement for RSDP to be installed last&&&&by the firmware, so in rare cases vmgen id test hits&&&&a race: RSDP is there but VM GEN ID isn't.&&&&&&&&To fix, switch to common boot sector infrastructure.&&&&&&&&Cc: Laszlo Ersek <lersek@redhat.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Ben Warren <ben@skyportsystems.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Ben Warren <ben@skyportsystems.com>&&&&Message-id: 1500046217-24597-1-git-send-email-mst@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," slirp: Handle error returns from sosendoob() sosendoob() can return a failure code, but all its callers ignore it.&&&&This is OK in sbappend(), as the comment there states -- we will try&&&&again later in sowrite(). Add a (void) cast to tell Coverity so.&&&&In sowrite() we do need to check the return value -- we should handle&&&&a write failure in sosendoob() the same way we handle a write failure&&&&for the normal data.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>&&&& "
1," hid: Reset kbd modifiers on reset When resetting the keyboard, we need to reset not just the pending keystrokes,&&&&but also any pending modifiers. Otherwise there's a race when we're getting&&&&reset while running an escape sequence (modifier 0x100).&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Message-id: 1498117295-162030-1-git-send-email-agraf@suse.de&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," spapr: introduce the XIVE_EXPLOIT option in CAS On POWER9, the Client Architecture Support (CAS) negotiation process&&&&determines whether the guest operates in XIVE Legacy compatibility&&&&(the former POWER8 interrupt model) or in XIVE exploitation mode (the&&&&newer POWER9 interrupt model).&&&&&&&&Bit 7 of Byte 23 of vector 5 is used for this purpose.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," pseries: Correct panic behaviour for pseries machine type The pseries machine type doesn't usually use the 'pvpanic' device as such,&&&&because it has a firmware/hypervisor facility with roughly the same&&&&purpose.  The 'ibm,os-term' RTAS call notifies the hypervisor that the&&&&guest has crashed.&&&&&&&&Our implementation of this call was sending a GUEST_PANICKED qmp event;&&&&however, it was not doing the other usual panic actions, making its&&&&behaviour different from pvpanic for no good reason.&&&&&&&&To correct this, we should call qemu_system_guest_panicked() rather than&&&&directly sending the panic event.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&& "
1, usb: don't wakeup during coldplug Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1452512&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170523084635.20062-1-kraxel@redhat.com&&&& 
1," stream: fix crash in stream_start() when block_job_create() fails The code that tries to reopen a BlockDriverState in stream_start()&&&&when the creation of a new block job fails crashes because it attempts&&&&to dereference a pointer that is known to be NULL.&&&&&&&&This is a regression introduced in a170a91fd3eab6155da39e740381867e,&&&&likely because the code was copied from stream_complete().&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reported-by: Kashyap Chamarthy <kchamart@redhat.com>&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Tested-by: Kashyap Chamarthy <kchamart@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," usb-redir: fix stack overflow in usbredir_log_data Don't reinvent a broken wheel, just use the hexdump function we have.&&&&&&&&Impact: low, broken code doesn't run unless you have debug logging&&&&enabled.&&&&&&&&Reported-by: 鏉庡己 <liqiang6-s@360.cn>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170509110128.27261-1-kraxel@redhat.com&&&& "
1," audio: release capture buffers AUD_add_capture() allocates two buffers which are never released.&&&&Add the missing calls to AUD_del_capture().&&&&&&&&Impact: Allows vnc clients to exhaust host memory by repeatedly&&&&starting and stopping audio capture.&&&&&&&&Fixes: CVE-2017-8309&&&&Cc: P J P <ppandit@redhat.com>&&&&Cc: Huawei PSIRT <PSIRT@huawei.com>&&&&Reported-by: ""Jiangxin (hunter, SCC)"" <jiangxin1@huawei.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-id: 20170428075612.9997-1-kraxel@redhat.com&&&& "
1," target/openrisc: Implement full vmstate serialization Previously serialization did not persist the tlb, timer, pic and other&&&&key state items.  This meant snapshotting and restoring a running os&&&&would crash. After adding these I am able to take snapshots of a&&&&running linux os and restore at a later time.&&&&&&&&I am currently not trying to maintain capatibility with older versions&&&&as I do not believe this really worked before or anyone used it.&&&&&&&&Signed-off-by: Stafford Horne <shorne@gmail.com>&&&& "
1," console: add same surface replace pre-condition Catch an invalid state early, before a potential use-after-free. This is&&&&mainly useful for documentation purposes.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 20170406120513.638-2-marcandre.lureau@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," spapr: fix buffer-overflow Running postcopy-test with ASAN produces the following error:&&&&&&&&QTEST_QEMU_BINARY=ppc64-softmmu/qemu-system-ppc64  tests/postcopy-test&&&&...&&&&=================================================================&&&&==23641==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x7f1556600000 at pc 0x55b8e9d28208 bp 0x7f1555f4d3c0 sp 0x7f1555f4d3b0&&&&READ of size 8 at 0x7f1556600000 thread T6&&&&    #0 0x55b8e9d28207 in htab_save_first_pass /home/elmarco/src/qq/hw/ppc/spapr.c:1528&&&&    #1 0x55b8e9d2939c in htab_save_iterate /home/elmarco/src/qq/hw/ppc/spapr.c:1665&&&&    #2 0x55b8e9beae3a in qemu_savevm_state_iterate /home/elmarco/src/qq/migration/savevm.c:1044&&&&    #3 0x55b8ea677733 in migration_thread /home/elmarco/src/qq/migration/migration.c:1976&&&&    #4 0x7f15845f46c9 in start_thread (/lib64/libpthread.so.0+0x76c9)&&&&    #5 0x7f157d9d0f7e in clone (/lib64/libc.so.6+0x107f7e)&&&&&&&&0x7f1556600000 is located 0 bytes to the right of 2097152-byte region [0x7f1556400000,0x7f1556600000)&&&&allocated by thread T0 here:&&&&    #0 0x7f159bb76980 in posix_memalign (/lib64/libasan.so.3+0xc7980)&&&&    #1 0x55b8eab185b2 in qemu_try_memalign /home/elmarco/src/qq/util/oslib-posix.c:106&&&&    #2 0x55b8eab186c8 in qemu_memalign /home/elmarco/src/qq/util/oslib-posix.c:122&&&&    #3 0x55b8e9d268a8 in spapr_reallocate_hpt /home/elmarco/src/qq/hw/ppc/spapr.c:1214&&&&    #4 0x55b8e9d26e04 in ppc_spapr_reset /home/elmarco/src/qq/hw/ppc/spapr.c:1261&&&&    #5 0x55b8ea12e913 in qemu_system_reset /home/elmarco/src/qq/vl.c:1697&&&&    #6 0x55b8ea13fa40 in main /home/elmarco/src/qq/vl.c:4679&&&&    #7 0x7f157d8e9400 in __libc_start_main (/lib64/libc.so.6+0x20400)&&&&&&&&Thread T6 created by T0 here:&&&&    #0 0x7f159bae0488 in __interceptor_pthread_create (/lib64/libasan.so.3+0x31488)&&&&    #1 0x55b8eab1d9cb in qemu_thread_create /home/elmarco/src/qq/util/qemu-thread-posix.c:465&&&&    #2 0x55b8ea67874c in migrate_fd_connect /home/elmarco/src/qq/migration/migration.c:2096&&&&    #3 0x55b8ea66cbb0 in migration_channel_connect /home/elmarco/src/qq/migration/migration.c:500&&&&    #4 0x55b8ea678f38 in socket_outgoing_migration /home/elmarco/src/qq/migration/socket.c:87&&&&    #5 0x55b8eaa5a03a in qio_task_complete /home/elmarco/src/qq/io/task.c:142&&&&    #6 0x55b8eaa599cc in gio_task_thread_result /home/elmarco/src/qq/io/task.c:88&&&&    #7 0x7f15823e38e6  (/lib64/libglib-2.0.so.0+0x468e6)&&&&SUMMARY: AddressSanitizer: heap-buffer-overflow /home/elmarco/src/qq/hw/ppc/spapr.c:1528 in htab_save_first_pass&&&&&&&&index seems to be wrongly incremented, unless I miss something that&&&&would be worth a comment.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," rbd: Fix to cleanly reject -drive without pool or image qemu_rbd_open() neglects to check pool and image are present.  Missing&&&&image is caught by rbd_open(), but missing pool crashes.  Reproducer:&&&&&&&&    $ qemu-system-x86_64 -nodefaults -drive driver=rbd,id=rbd,image=i,...&&&&    terminate called after throwing an instance of 'std::logic_error'&&&&      what():  basic_string::_M_construct null not valid&&&&    Aborted (core dumped)&&&&&&&&where ... is a working server.0.{host,port} configuration.&&&&&&&&Doesn't affect -drive with file=..., because qemu_rbd_parse_filename()&&&&always sets both pool and image.&&&&&&&&Doesn't affect -blockdev, because pool and image are mandatory in the&&&&QAPI schema.&&&&&&&&Fix by adding the missing checks.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Message-id: 1490691368-32099-3-git-send-email-armbru@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
1," user-exec: handle synchronous signals from QEMU gracefully When ""tcg: enable thread-per-vCPU"" (commit 3725794) was merged the&&&&lifetime of current_cpu was changed. Previously a broken linux-user&&&&call might abort() which can eventually escalate into a SIGSEGV which&&&&would then crash qemu as it attempted to deref a NULL current_cpu.&&&&After commit 3725794 it would attempt to fixup state and re-start the&&&&run-loop and much hilarity (i.e. a looping lockup) would ensue from&&&&jumping into a stale jmp_env.&&&&&&&&As we can actually tell if we are in the run-loop from looking at the&&&&cpu->running flag we should catch this badness first and abort()&&&&cleanly rather than try to soldier on. There is a theoretical race&&&&between the flag being set and sigsetjmp refreshing the jump buffer&&&&but we can try really hard to not introduce crashes into that code.&&&&&&&&[LV: setgroups03 fails on powerpc LTP]&&&&Reported-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," parallels: fix default options parsing parallels block driver is completely broken since commit&&&&    commit 75cdcd1553e74b5edc58aed23e3b2da8dabb1876&&&&    Author: Markus Armbruster <armbru@redhat.com>&&&&    Date:   Tue Feb 21 21:14:08 2017 +0100&&&&    option: Fix checking of sizes for overflow and trailing crap&&&&Right now even simple&&&&    qemu-io -c ""read 512 64k"" 1.hds&&&&ends up with&&&&    Unexpected error in parse_option_size() at util/qemu-option.c:188:&&&&    Parameter 'prealloc-size' expects a non-negative number below 2^64&&&&    Aborted (core dumped)&&&&The cure is simple - we should use 'M' as a suffix in default option value&&&&instead of 'MiB'.&&&&&&&&Signed-off-by: Edgar Kaziahmedov <edos@virtuozzo.mipt.ru>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Message-id: 1490002022-22653-1-git-send-email-den@openvz.org&&&&CC: Markus Armbruster <armbru@redhat.com>&&&&CC: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," scripts/dump-guest-memory.py: fix int128_get64 on recent gcc The Int128 is no longer a struct, reaching a python exception:&&&&Python Exception <class 'gdb.error'> Attempt to extract a component of a value that is not a (null).:&&&&&&&&Replace struct access with a cast to uint64[] instead.&&&&&&&&Fixes:&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1427466&&&&&&&&Signed-off-by: Marc-Andr脙漏 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20170310112819.16760-1-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qxl: clear guest_cursor on QXL_CURSOR_HIDE Make sure we don't leave guest_cursor pointing into nowhere.  This might&&&&lead to (rare) live migration failures, due to target trying to restore&&&&the cursor from the stale pointer.&&&&&&&&Bugzilla: https://bugzilla.redhat.com/show_bug.cgi?id=1421788&&&&Reported-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1488789111-27340-1-git-send-email-kraxel@redhat.com&&&& "
1," qapi: Improve how keyval input visitor reports unexpected dicts Incorrect option&&&&&&&&    -blockdev node-name=foo,driver=file,filename=foo.img,aio.unmap=on&&&&&&&&is rejected with ""Invalid parameter type for 'aio', expected: string"".&&&&To make sense of this, you almost have to translate it into the&&&&equivalent QMP command&&&&&&&&    { ""execute"": ""blockdev-add"", ""arguments"": { ""node-name"": ""foo"", ""driver"": ""file"", ""filename"": ""foo.img"", ""aio"": { ""unmap"": true } } }&&&&&&&&Improve the error message to ""Parameters 'aio.*' are unexpected"".&&&&Take care not to confuse the case ""unexpected nested parameters""&&&&(i.e. the object is a QDict or QList) with the case ""non-string scalar&&&&parameter"".  The latter is a misuse of the visitor, and should perhaps&&&&be an assertion.  Note that test-qobject-input-visitor exercises this&&&&misuse in test_visitor_in_int_keyval(), test_visitor_in_bool_keyval()&&&&and test_visitor_in_number_keyval().&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Message-Id: <1488317230-26248-23-git-send-email-armbru@redhat.com>&&&& "
1, tests: fix e1000-test leak Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& 
1," sheepdog: Report errors in pseudo-filename more usefully Errors in the pseudo-filename are all reported with the same laconic&&&&""Can't parse filename"" message.&&&&&&&&Add real error reporting, such as:&&&&&&&&    $ qemu-system-x86_64 --drive driver=sheepdog,filename=sheepdog:///&&&&    qemu-system-x86_64: --drive driver=sheepdog,filename=sheepdog:///: missing file path in URI&&&&    $ qemu-system-x86_64 --drive driver=sheepdog,filename=sheepgod:///vdi&&&&    qemu-system-x86_64: --drive driver=sheepdog,filename=sheepgod:///vdi: URI scheme must be 'sheepdog', 'sheepdog+tcp', or 'sheepdog+unix'&&&&    $ qemu-system-x86_64 --drive driver=sheepdog,filename=sheepdog+unix:///vdi?socke=sheepdog.sock&&&&    qemu-system-x86_64: --drive driver=sheepdog,filename=sheepdog+unix:///vdi?socke=sheepdog.sock: unexpected query parameters&&&&&&&&The code to translate legacy syntax to URI fails to escape URI&&&&meta-characters.  The new error messages are misleading then.  Replace&&&&them by the old ""Can't parse filename"" message.  ""Internal error""&&&&would be more honest.  Anyway, no worse than before.  Also add a FIXME&&&&comment.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," tests: fix leaks in test-io-channel-command No need for strdup, fix leaks when socat is missing.&&&&&&&&Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1, 9pfs: local: rename: use renameat The local_rename() callback is vulnerable to symlink attacks because it&&&&uses rename() which follows symbolic links in all path elements but the&&&&rightmost one.&&&&&&&&This patch simply transforms local_rename() into a wrapper around&&&&local_renameat() which is symlink-attack safe.&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," 9pfs: local: remove: don't follow symlinks The local_remove() callback is vulnerable to symlink attacks because it&&&&calls:&&&&&&&&(1) lstat() which follows symbolic links in all path elements but the&&&&    rightmost one&&&&(2) remove() which follows symbolic links in all path elements but the&&&&    rightmost one&&&&&&&&This patch converts local_remove() to rely on opendir_nofollow(),&&&&fstatat(AT_SYMLINK_NOFOLLOW) to fix (1) and unlinkat() to fix (2).&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," util/cutils: Rewrite documentation of qemu_strtol() & friends Fixes the following documentation bugs:&&&&&&&&* Fails to document that null @nptr is safe.&&&&&&&&* Fails to document that we return -EINVAL when no conversion could be&&&&  performed (commit 47d4be1).&&&&&&&&* Confuses long long with int64_t, and unsigned long long with&&&&  uint64_t.&&&&&&&&* Claims the unsigned conversions can underflow.  They can't.&&&&&&&&While there, mark problematic assumptions that int64_t is long long,&&&&and uint64_t is unsigned long long with FIXME comments.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <1487708048-2131-6-git-send-email-armbru@redhat.com>&&&& "
1," vvfat: Use opened node as backing file We should not try to assign a not yet opened node as the backing file,&&&&because as soon as the permission system is added it will fail.  The&&&&just added bdrv_new_open_driver() function is the right tool to open a&&&&file with an internal driver, use it.&&&&&&&&In case anyone wonders whether that magic fake backing file to trigger a&&&&special action on 'commit' actually works today: No, not for me. One&&&&reason is that we've been adding a raw format driver on top for several&&&&years now and raw doesn't support commit. Other reasons include that the&&&&backing file isn't writable and the driver doesn't support reopen, and&&&&it's also size 0 and the driver doesn't support bdrv_truncate. All of&&&&these are easily fixable, but then 'commit' ended up in an infinite loop&&&&deep in the vvfat code for me, so I thought I'd best leave it alone. I'm&&&&not really sure what it was supposed to do anyway.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
1," vnc: do not disconnect on EAGAIN When qemu vnc server is trying to send large update to clients,&&&&there might be a situation when system responds with something&&&&like EAGAIN, indicating that there's no system memory to send&&&&that much data (depending on the network speed, client and server&&&&and what is happening).  In this case, something like this happens&&&&on qemu side (from strace):&&&&&&&&sendmsg(16, {msg_name(0)=NULL,&&&&        msg_iov(1)=[{""\244\""..., 729186}],&&&&        msg_controllen=0, msg_flags=0}, 0) = 103950&&&&sendmsg(16, {msg_name(0)=NULL,&&&&        msg_iov(1)=[{""lz\346""..., 1559618}],&&&&        msg_controllen=0, msg_flags=0}, 0) = -1 EAGAIN&&&&sendmsg(-1, {msg_name(0)=NULL,&&&&        msg_iov(1)=[{""lz\346""..., 1559618}],&&&&        msg_controllen=0, msg_flags=0}, 0) = -1 EBADF&&&&&&&&qemu closes the socket before the retry, and obviously it gets EBADF&&&&when trying to send to -1.&&&&&&&&This is because there WAS a special handling for EAGAIN, but now it doesn't&&&&work anymore, after commit 04d2529da27db512dcbd5e99d0e26d333f16efcc, because&&&&now in all error-like cases we initiate vnc disconnect.&&&&&&&&This change were introduced in qemu 2.6, and caused numerous grief for many&&&&people, resulting in their vnc clients reporting sporadic random disconnects&&&&from vnc server.&&&&&&&&Fix that by doing the disconnect only when necessary, i.e. omitting this&&&&very case of EAGAIN.&&&&&&&&Hopefully the existing condition (comparing with QIO_CHANNEL_ERR_BLOCK)&&&&is sufficient, as the original code (before the above commit) were&&&&checking for other errno values too.&&&&&&&&Apparently there's another (semi?)bug exist somewhere here, since the&&&&code tries to write to fd# -1, it probably should check if the connection&&&&is open before. But this isn't important.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1486115549-9398-1-git-send-email-mjt@msgid.tls.msk.ru&&&&Fixes: 04d2529da27db512dcbd5e99d0e26d333f16efcc&&&&Cc: Daniel P. Berrange <berrange@redhat.com>&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," io: stop incrementing reference in qio_task_get_source Incrementing the reference in qio_task_get_source is&&&&not necessary, since we're not running concurrently&&&&with any other code touching the QIOTask. This&&&&minimizes chances of further memory leaks.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1, serial: fix memory leak in serial exit The serial_exit_core function doesn't free some resources.&&&&This can lead memory leak when hotplug and unplug. This&&&&patch avoid this.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Message-Id: <586cb5ab.f31d9d0a.38ac3.acf2@mx.google.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," tests: fix linking test-char on win32 test.char.exe fails to link:&&&&qemu-char.o: In function `win_chr_free':&&&&/home/elmarco/src/qemu/qemu-char.c:2149: undefined reference to `qemu_del_polling_cb'&&&&/home/elmarco/src/qemu/qemu-char.c:2151: undefined reference to `qemu_del_polling_cb'&&&&qemu-char.o: In function `win_stdio_thread':&&&&/home/elmarco/src/qemu/qemu-char.c:2568: undefined reference to `qemu_del_wait_object'&&&&qemu-char.o: In function `qemu_chr_open_stdio':&&&&/home/elmarco/src/qemu/qemu-char.c:2661: undefined reference to `qemu_add_wait_object'&&&&/home/elmarco/src/qemu/qemu-char.c:2646: undefined reference to&&&&`qemu_add_wait_object'&&&&...&&&&&&&&It needs main-loop.o symbols, among others. Linking with&&&&$(test-block-obj-y) brings what's necessary. We could try to eventually&&&&strip to the minimum if needed.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," virtio-gpu: Fix memory leak in virtio_gpu_load() Coverity points out that if we fail in the ""creating resources""&&&&loop in virtio_gpu_load() we will leak various resources (CID 1356431).&&&&Failing a VM load is going to leave the simulation in a complete mess,&&&&but we can tidy up to the point that a full system reset should&&&&get us back to sanity.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1483969123-14839-3-git-send-email-peter.maydell@linaro.org&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, virtio-gpu-3d: fix memory leak in resource attach backing If the virgl_renderer_resource_attach_iov function fails the&&&&'res_iovs' will be leaked. Add check of the return value to&&&&free the 'res_iovs' when failing.&&&&&&&&Signed-off-by: Li Qiang <liq3ea@gmail.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1482999086-59795-1-git-send-email-liq3ea@gmail.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," virtio-gpu: call cleanup mapping function in resource destroy If the guest destroy the resource before detach banking, the 'iov'&&&&and 'addrs' field in resource is not freed thus leading memory&&&&leak issue. This patch avoid this.&&&&&&&&Signed-off-by: Li Qiang <liq3ea@gmail.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1480386565-10077-1-git-send-email-liq3ea@gmail.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," migration: fix compiler warning on uninitialized variable Some older GCC versions (e.g. 4.4.7) report a warning on an&&&&uninitialized variable for 'request', even though all possible code&&&&paths that reference 'request' will be initialized.   To appease&&&&these versions, initialize the variable to 0.&&&&&&&&Reported-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Message-id: 259818682e41b95ae60f1423b87954a3fe377639.1477950393.git.jcody@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," s390x/pci: Check memory region dispatching callbacks The instructions PCI STORE, PCI LOAD and PCI STORE BLOCK&&&&use calls to memory_region_dispatch_write() and&&&&memory_region_dispatch_read() but do not test the return value.&&&&&&&&Furthermore, the instruction PCI STORE BLOCK sets up a PGM_ADDRESSING&&&&exception when the operand 3 is not within the designated PCI address&&&&space instead of a PGM_OPERAND exception.&&&&&&&&Let's setup a PGM_OPERAND exception in all of these failure cases.&&&&&&&&Signed-off-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1, colo-proxy: fix memory leak Fix memory leak in colo-compare.c and filter-rewriter.c&&&&Report by Coverity and add some comments.&&&&&&&&Signed-off-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&Reviewed-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& 
1," qapi: fix memory leak in bdrv_image_info_specific_dump The 'obj' result of the visitor was not properly freed, like done in&&&&other places doing a similar job.&&&&&&&&Signed-off-by: Pino Toscano <ptoscano@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," char: introduce CharBackend This new structure is meant to keep the details associated with a char&&&&driver usage. On initialization, it gets a tag from the mux backend.&&&&It can change its handlers thanks to qemu_chr_fe_set_handlers().&&&&&&&&This structure is introduced so that all frontend will be moved to hold&&&&and use a CharBackend. This will allow to better track char usage and&&&&allocation, and help prevent some memory leaks or corruption.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20161022095318.17775-10-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," trace: remove the TraceEventID and TraceEventVCPUID enums The TraceEventID and TraceEventVCPUID enums constants are&&&&no longer actually used for anything critical.&&&&&&&&The TRACE_EVENT_COUNT limit is used to determine the size&&&&of the TraceEvents array, and can be removed if we just&&&&NULL terminate the array instead.&&&&&&&&The TRACE_VCPU_EVENT_COUNT limit is used as a magic value&&&&for marking non-vCPU events, and also for declaring the&&&&size of the trace dstate mask in the CPUState struct.&&&&The former usage can be replaced by a dedicated constant&&&&TRACE_EVENT_VCPU_NONE, defined as (uint32_t)-1. For the&&&&latter usage, we can simply define a constant for the&&&&number of VCPUs, avoiding the need for the full enum.&&&&&&&&The only other usages of the enum values can be replaced&&&&by accesing the id/vcpu_id fields via the named TraceEvent&&&&structs.&&&&&&&&Reviewed-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1475588159-30598-11-git-send-email-berrange@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," trace: give each trace event a named TraceEvent struct Currently we only expose a TraceEvent array, which must&&&&be indexed via the TraceEventID enum constants. This&&&&changes the generator to expose a named TraceEvent&&&&instance for each event, with an _EVENT suffix.&&&&&&&&Reviewed-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1475588159-30598-10-git-send-email-berrange@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," char: use a fixed idx for child muxed chr mux_chr_update_read_handler() is adding a new mux_cnt each time&&&&mux_chr_update_read_handler() is called, it's not possible to actually&&&&update the ""child"" chr callbacks that were set previously. This may lead&&&&to crashes if the ""child"" chr is destroyed:&&&&&&&&valgrind x86_64-softmmu/qemu-system-x86_64 -chardev&&&&stdio,mux=on,id=char0 -mon chardev=char0,mode=control,default&&&&&&&&when quitting:&&&&&&&&==4306== Invalid read of size 8&&&&==4306==    at 0x8061D3: json_lexer_destroy (json-lexer.c:385)&&&&==4306==    by 0x7E39F8: json_message_parser_destroy (json-streamer.c:134)&&&&==4306==    by 0x3447F6: monitor_qmp_event (monitor.c:3908)&&&&==4306==    by 0x480153: mux_chr_send_event (qemu-char.c:630)&&&&==4306==    by 0x480694: mux_chr_event (qemu-char.c:734)&&&&==4306==    by 0x47F1E9: qemu_chr_be_event (qemu-char.c:205)&&&&==4306==    by 0x481207: fd_chr_close (qemu-char.c:1114)&&&&==4306==    by 0x481659: qemu_chr_close_stdio (qemu-char.c:1221)&&&&==4306==    by 0x486F07: qemu_chr_free (qemu-char.c:4146)&&&&==4306==    by 0x486F97: qemu_chr_delete (qemu-char.c:4154)&&&&==4306==    by 0x487E66: qemu_chr_cleanup (qemu-char.c:4678)&&&&==4306==    by 0x495A98: main (vl.c:4675)&&&&==4306==  Address 0x28439e90 is 112 bytes inside a block of size 240 free'd&&&&==4306==    at 0x4C2CD5A: free (vg_replace_malloc.c:530)&&&&==4306==    by 0x1E4CBF2D: g_free (in /usr/lib64/libglib-2.0.so.0.4800.2)&&&&==4306==    by 0x344DE9: monitor_cleanup (monitor.c:4058)&&&&==4306==    by 0x495A93: main (vl.c:4674)&&&&==4306==  Block was alloc'd at&&&&==4306==    at 0x4C2BBAD: malloc (vg_replace_malloc.c:299)&&&&==4306==    by 0x1E4CBE18: g_malloc (in /usr/lib64/libglib-2.0.so.0.4800.2)&&&&==4306==    by 0x344BF8: monitor_init (monitor.c:4021)&&&&==4306==    by 0x49063C: mon_init_func (vl.c:2417)&&&&==4306==    by 0x7FC6DE: qemu_opts_foreach (qemu-option.c:1116)&&&&==4306==    by 0x4954E0: main (vl.c:4473)&&&&&&&&Instead, keep the ""child"" chr associated with a particular idx so its&&&&handlers can be updated and removed to avoid the crash.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20161003094704.18087-3-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qcow2: avoid memcpy(dst, NULL, len) Section ""7.1.4 Use of library functions"" in the C99 standard says:&&&&&&&&  If an argument to a function has an invalid value (such as [...]&&&&  a null pointer [...]) [...] the behavior is undefined.&&&&&&&&Additionally the ""searching and sorting"" functions are specified as&&&&requiring valid pointer values as described in 7.1.4.&&&&&&&&This patch fixes the following sanitizer errors:&&&&&&&&  block/qcow2.c:1807:41: runtime error: null pointer passed as argument 2, which is declared to never be null&&&&  block/qcow2-cluster.c:86:26: runtime error: null pointer passed as argument 2, which is declared to never be null&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Message-id: 1473758138-19260-1-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, tests: fix test-cutils leaks Spotted thanks to ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1, tests: fix test-qga leaks Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1, ppc: Speed up dcbz Use tlb_vaddr_to_host to do a fast path single translate for&&&&the whole cache line. Also make the reservation check match&&&&the entire range.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1, virtio-input: free config list Clear the list when finalizing. The list is created during realize with&&&&virtio_input_idstr_config() and later by further calls to&&&&virtio_input_init_config() and virtio_input_add_config().&&&&&&&&This leak can be reproduced with device-introspect-test -p&&&&/x86_64/device/introspect/concrete.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," char: free the tcp connection data when closing Make sure the connection data got freed when closing the chardev, to&&&&avoid leaks. Introduce tcp_chr_free_connection() to clean all connection&&&&related data, and move some tcp_chr_close() clean-ups there.&&&&&&&&(while at it, set write_msgfds_num to 0 when clearing array in&&&&tcp_set_msgfds())&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," spapr: Correctly set query_hotpluggable_cpus hook based on machine version Prior to c8721d3 ""spapr: Error out when CPU hotplug is attempted on older&&&&pseries machines"", attempting to use query-hotpluggable-cpus on pseries-2.6&&&&and earlier machine types would SEGV.&&&&&&&&That change fixed that, but due to some unexpected interactions in init&&&&order and a brown-paper-bag worthy failure to test, it accidentally&&&&disabled query-hotpluggable-cpus for all pseries machine types, including&&&&the current one which should allow it.&&&&&&&&In fact, query_hotpluggable_cpus needs to be non-NULL when and only when&&&&the dr_cpu_enabled flag in sPAPRMachineClass is set, which makes&&&&dr_cpu_enabled itself redundant.&&&&&&&&This patch removes dr_cpu_enabled, instead directly setting&&&&query_hotpluggable_cpus from the machine class_init functions, and using&&&&that to determine the availability of CPU hotplug when necessary.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," io: remove mistaken call to object_ref on QTask The QTask struct is just a standalone struct, not a QOM Object,&&&&so calling object_ref() on it is not appropriate. This results&&&&in mangling the 'destroy' field in the QTask struct, causing&&&&the later call to qtask_free() to try to call the function&&&&at address 0x1, with predictably segfault happy results.&&&&&&&&There is in fact no need for ref counting with QTask, as the&&&&call to qtask_abort() or qtask_complete() will automatically&&&&free associated memory.&&&&&&&&This fixes the crash shown in&&&&&&&&  https://bugs.launchpad.net/qemu/+bug/1589923&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," i2c: fix migration regression introduced by broadcast support QEMU fails migration with following error:&&&&&&&&qemu-system-x86_64: Missing section footer for i2c_bus&&&&qemu-system-x86_64: load of migration failed: Invalid argument&&&&&&&&when migrating from:&&&&  qemu-system-x86_64-v2.6.0 -m 256M rhel72.img -M pc-i440fx-2.6&&&&to&&&&  qemu-system-x86_64-v2.7.0-rc0 -m 256M rhel72.img -M pc-i440fx-2.6&&&&&&&&Regression is added by commit 2293c27f (i2c: implement broadcast write)&&&&&&&&Fix it by dropping 'broadcast' VMState introduced by 2293c27f and&&&&reuse broadcast 0x00 address as broadcast flag in bus->saved_address.&&&&Then if there were ongoing broadcast at migration time, set&&&&bus->saved_address to it and at i2c_slave_post_load() time check&&&&for it instead of transfering and using 'broadcast' VMState.&&&&&&&&As result of reusing existing saved_address VMState, no compat&&&&glue will be needed to keep forward/backward compatiblity. which&&&&makes fix much less intrusive.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Message-Id: <1469623198-177227-1-git-send-email-imammedo@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," Revert e5dfc5e8e(""Move README to markdown"") checkpatch.pl and other scripts fail without README. Revert&&&&the rename for now; we may add README.md as a symlink later.&&&&&&&&This reverts commit e5dfc5e8e715c572aea44ac4d96c43941d4741c7.&&&&&&&&Signed-off-by: Pranith Kumar <bobby.prani@gmail.com>&&&&Reviewed-by: Stefan Weil <sw@weilnetz.de>&&&&Message-id: 20160720203131.30229-2-bobby.prani@gmail.com&&&&[PMM: tweaked commit message a little]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," spapr: fix core unplug crash If the host has 8 threads/core and the guest is started with:&&&&&&&&-smp cores=1,threads=4,maxcpus=12&&&&&&&&It is possible to crash QEMU by doing:&&&&&&&&(qemu) device_add host-spapr-cpu-core,core-id=16,id=foo&&&&(qemu) device_del foo&&&&Segmentation fault&&&&&&&&This happens because spapr_core_unplug() assumes cpu_dt_id == core_id.&&&&As long as cpu_dt_id is derived from the non-table cpu_index, this is&&&&only true when you plug cores with contiguous ids.&&&&&&&&It is safer to be consistent: the DR connector was created with an&&&&index that is immediately written to cc->core_id, and spapr_core_plug()&&&&also relies on cc->core_id.&&&&&&&&Let's use it also in spapr_core_unplug().&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," block/qdev: Allow node name for drive properties If a node name instead of a BlockBackend name is specified as the driver&&&&for a guest device, an anonymous BlockBackend is created now.&&&&&&&&The order of operations in release_drive() must be reversed in order to&&&&avoid a use-after-free bug because now blk_detach_dev() frees the last&&&&reference if an anonymous BlockBackend is used.&&&&&&&&usb-storage uses a hack where it forwards its BlockBackend as a property&&&&to another device that it internally creates. This hack must be updated&&&&so that it doesn't drop its original BB before it can be passed to the&&&&other device. This used to work because we always had the monitor&&&&reference around, but with node-names the device reference is the only&&&&one now.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
1," qemu-img: Don't leak errors when outputting JSON If our JSON output ever encounters an error, we would just silently&&&&leak the error object.  Instead, assert that our usage won't fail.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1465490926-28625-3-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," qapi: Fix memleak in string visitors on int lists Commit 7f8f9ef1 introduced the ability to store a list of&&&&integers as a sorted list of ranges, but when merging ranges,&&&&it leaks one or more ranges.  It was also using range_get_last()&&&&incorrectly within range_compare() (a range is a start/end pair,&&&&but range_get_last() is for start/len pairs), and will also&&&&mishandle a range ending in UINT64_MAX (remember, we document&&&&that no range covers 2**64 bytes, but that ranges that end on&&&&UINT64_MAX have end < begin).&&&&&&&&The whole merge algorithm was rather complex, and included&&&&unnecessary passes over data within glib functions, and enough&&&&indirection to make it hard to easily plug the data leaks.&&&&Since we are already hard-coding things to a list of ranges,&&&&just rewrite the thing to open-code the traversal and&&&&comparisons, by making the range_compare() helper function give&&&&us an answer that is easier to use, at which point we avoid the&&&&need to pass any callbacks to g_list_*(). Then by reusing&&&&range_extend() instead of duplicating effort with range_merge(),&&&&we cover the corner cases correctly.&&&&&&&&Drop the now-unused range_merge() and ranges_can_merge().&&&&&&&&Doing this lets test-string-{input,output}-visitor pass under&&&&valgrind without leaks.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1464712890-14262-4-git-send-email-eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&[Comment hoisted out of loop]&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1, ppc: Fix POWER7 and POWER8 exception definitions We were initializing unused ones and missing some&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&[clg: fixed checkpatch.pl errors ]&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1," ppc: Add P7/P8 Power Management instructions This adds the ISA 2.06 and later power management instructions&&&&(doze, nap, sleep and rvwinkle) and associated wakeup cause testing&&&&in LPCR&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&[clg: fixed checkpatch.pl errors ]&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1, block: use safe iteration over AioContext notifiers It's possible that an AioContext notifier user was close to finishing&&&&when .detach_aio_context() or .attached_aio_context() is called.  In&&&&that case they may call bdrv_remove_aio_context_notifier() during the&&&&callback.&&&&&&&&Use safe iteration to avoid crashing when the notifier list is modified&&&&during iteration.  We must not only handle the case where the current&&&&aio notifier is removed during a callback but also the one where any&&&&other aio notifier is removed.&&&&&&&&The next patch adds an AioContext notifier for block jobs and they&&&&really could be terminating just as .detach_aio_context() is invoked.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1466096189-6477-6-git-send-email-stefanha@redhat.com&&&& 
1, nbd: Detect servers that send unexpected error values Add some debugging to flag servers that are not compliant to&&&&the NBD protocol.  This would have flagged the server bug&&&&fixed in commit c0301fcc.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Alex Bligh <alex@alex.org.uk>&&&&&&&&Message-Id: <1463006384-7734-11-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," qemu-img bench: Fix uninitialised writethrough mode If no -t option is specified, bool writethrough stayed uninitialised.&&&&Initialise it as false, which makes cache=writeback the default cache&&&&mode.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," linux-user: pause() should not pause if signal pending Fix races between signal handling and the pause syscall by&&&&reimplementing it using block_signals() and sigsuspend().&&&&(Using safe_syscall(pause) would also work, except that the&&&&pause syscall doesn't exist on all architectures.)&&&&&&&&Signed-off-by: Timothy Edward Baldwin <T.E.Baldwin99@members.leeds.ac.uk>&&&&Message-id: 1441497448-32489-28-git-send-email-T.E.Baldwin99@members.leeds.ac.uk&&&&[PMM: tweaked commit message]&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," xen/blkif: avoid double access to any shared ring request fields Commit f9e98e5d7a (""xen/blkif: Avoid double access to&&&&src->nr_segments"") didn't go far enough: src->operation is also being&&&&used twice. And nothing was done to prevent the compiler from using the&&&&source side of the copy done by blk_get_request() (granted that's very&&&&unlikely).&&&&&&&&Move the barrier()s up, and add another one to blk_get_request().&&&&&&&&Note that for completing XSA-155, the barrier() getting added to&&&&blk_get_request() would suffice, and hence the changes to xen_blkif.h&&&&are more like just cleanup. And since, as said, the unpatched code&&&&getting compiled to something vulnerable is very unlikely (and not&&&&observed in practice), this isn't being viewed as a new security issue.&&&&&&&&Signed-off-by: Jan Beulich <jbeulich@suse.com>&&&&Reviewed-by: Stefano Stabellini <sstabellini@kernel.org>&&&&Signed-off-by: Stefano Stabellini <sstabellini@kernel.org>&&&& "
1," vga: fix banked access bounds checking (CVE-2016-3710) vga allows banked access to video memory using the window at 0xa00000&&&&and it supports a different access modes with different address&&&&calculations.&&&&&&&&The VBE bochs extentions support banked access too, using the&&&&VBE_DISPI_INDEX_BANK register.  The code tries to take the different&&&&address calculations into account and applies different limits to&&&&VBE_DISPI_INDEX_BANK depending on the current access mode.&&&&&&&&Which is probably effective in stopping misprogramming by accident.&&&&But from a security point of view completely useless as an attacker&&&&can easily change access modes after setting the bank register.&&&&&&&&Drop the bogus check, add range checks to vga_mem_{readb,writeb}&&&&instead.&&&&&&&&Fixes: CVE-2016-3710&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," cuda: fix off-by-one error in SET_TIME command With the new framework the cuda_cmd_set_time command directly receive&&&&the data, without the command byte. Therefore the time is stored at&&&&in_data[0], not at in_data[1].&&&&&&&&This fixes the ""hwclock --systohc"" command in a guest.&&&&&&&&Cc: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Cc: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&[this fixes a regression introduced by e647317 ""cuda: port SET_TIME&&&& command to new framework""]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1, replay: fix error message This patch fixes error message in saving loop of the asynchronous events queue.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <pavel.dovgaluk@ispras.ru>&&&&[ kwolf: Fixed format string to use PRId64 instead of %d ]&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," qemu-iotests: iotests: fail hard if not run via ""check"" Running an iotests-based Python test directly might appear to work,&&&&but may fail in subtle ways and is insecure:&&&&&&&&- It creates files with predictable file names in a world-writable&&&&  location (/var/tmp).&&&&&&&&- Tests expect the environment to be set up by check. E.g. 041 and 055&&&&  may take the wrong code paths if QEMU_DEFAULT_MACHINE is not&&&&  set. This can lead to false negatives.&&&&&&&&Instead fail hard and tell the user we want to be run via ""check"".&&&&&&&&The actual environment expected by the tests is currently only defined&&&&by the implementation of ""check"". We use two of the environment&&&&variables set by ""check"" as indication of whether we're being run via&&&&""check"". Anyone writing their own test runner (replacing ""check"") will&&&&need to replicate the full environment (in a broader sense, not just&&&&environment variables) provided by ""check"" anyway, including setting&&&&the two environment variables we check. Whereas a regular developer&&&&just trying to invoke the tests usually won't have both of these&&&&defined in their environment so we can catch their mistake and give&&&&out useful advice.&&&&&&&&Signed-off-by: Sascha Silbe <silbe@linux.vnet.ibm.com>&&&&Reviewed-by: Bo Tu <tubo@linux.vnet.ibm.com>&&&&Message-id: 1461094442-16014-1-git-send-email-silbe@linux.vnet.ibm.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," trace: separate MMIO tracepoints from TB-access tracepoints Memory accesses to code which has previously been translated into a TB show up&&&&in the MMIO path, so that they may invalidate the TB. It's extremely confusing&&&&to mix those in with device MMIOs, so split them into their own tracepoint.&&&&&&&&Signed-off-by: Hollis Blanchard <hollis_blanchard@mentor.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1456949575-1633-2-git-send-email-hollis_blanchard@mentor.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," vhost-user: verify that number of queues is less than MAX_QUEUE_NUM Fix QEMU crash when -netdev vhost-user,queues=n is passed with number&&&&of queues greater than MAX_QUEUE_NUM.&&&&&&&&Signed-off-by: Ilya Maximets <i.maximets@samsung.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Acked-by: Jason Wang <jasowang@redhat.com>&&&& "
1," xics: report errors with the QEMU Error API Using the return value to report errors is error prone:&&&&- xics_alloc() returns -1 on error but spapr_vio_busdev_realize() errors&&&&  on 0&&&&- xics_alloc_block() returns the unclear value of ics->offset - 1 on error&&&&  but both rtas_ibm_change_msi() and spapr_phb_realize() error on 0&&&&&&&&This patch adds an errp argument to xics_alloc() and xics_alloc_block() to&&&&report errors. The return value of these functions is a valid IRQ number&&&&if errp is NULL. It is undefined otherwise.&&&&&&&&The corresponding error traces get promotted to error messages. Note that&&&&the ""can't allocate IRQ"" error message in spapr_vio_busdev_realize() also&&&&moves to xics_alloc(). Similar error message consolidation isn't really&&&&applicable to xics_alloc_block() because callers have extra context (device&&&&config address, MSI or MSIX).&&&&&&&&This fixes the issues mentioned above.&&&&&&&&Based on previous work from Brian W. Hart.&&&&&&&&Signed-off-by: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," ohci: allocate timer only once. Allocate timer once, at init time, instead of allocating/freeing&&&&it all the time when starting/stopping the bus.  Simplifies the&&&&code, also fixes bugs (memory leak) due to missing checks whenever&&&&the time is already allocated or not.&&&&&&&&Cc: Prasad J Pandit <pjp@fedoraproject.org>&&&&Reported-by: Zuozhi Fzz <zuozhi.fzz@alibaba-inc.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," linux-user: correct timerfd_create syscall numbers x86, m68k, ppc, sh4 and sparc failed to enable timerfd, because they&&&&didn't have timerfd_create system call defined. Instead QEMU&&&&defined timerfd syscall. Checking with kernel sources, it appears&&&&kernel developers reused timerfd syscall number with timerfd_create,&&&&presumably since no userspace called the old syscall number.&&&&&&&&Reported-by: Laurent Vivier <laurent@vivier.eu>&&&&Reviewed-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1, net/filter: fix nf->netdev_id leak Cc: Jason Wang <jasowang@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& 
1," net: pcnet: add check to validate receive data size(CVE-2015-7504) In loopback mode, pcnet_receive routine appends CRC code to the&&&&receive buffer. If the data size given is same as the buffer size,&&&&the appended CRC code overwrites 4 bytes after s->buffer. Added a&&&&check to avoid that.&&&&&&&&Reported by: Qinghao Tang <luodalongde@gmail.com>&&&&Cc: qemu-stable@nongnu.org&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," xlnx-ep108: Fix minimum RAM check The minimum RAM check logic for the Xiilnx EP108 was off by one,&&&&which caused a false positive. Correct the logic to only print&&&&warnings when the RAM is below 0x8000000.&&&&&&&&Signed-off-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: fba8112ca7b01efd72553332b8045ecf107b7662.1448021100.git.alistair.francis@xilinx.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," configure: use appropriate code fragment for -fstack-protector checks The check for stack-protector support consisted in compiling and linking&&&&the test program below (output by function write_c_skeleton()) with the&&&&compiler flag -fstack-protector-strong first and then with&&&&-fstack-protector-all if the first one failed to work:&&&&&&&&  int main(void) { return 0; }&&&&&&&&This caused false positives when using certain toolchains in which the&&&&compiler accepted -fstack-protector-strong but no support was provided&&&&by the C library, since for this stack-protector variant the compiler&&&&emits canary code only for functions that meet specific conditions&&&&(local arrays, memory references to local variables, etc.) and the code&&&&fragment under test included none of them (hence no stack protection&&&&code generated, no link failure).&&&&&&&&This fix changes the test program used for -fstack-protector checks to&&&&include a function that meets conditions which cause the compiler to&&&&generate canary code in all variants.&&&&&&&&Signed-off-by: Rodrigo Rebello <rprebello@gmail.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," qapi: Plug leaks in test-qmp-* Make valgrind happy with the current state of the tests, so that&&&&it is easier to see if future patches introduce new memory problems&&&&without being drowned in noise.  Many of the leaks were due to&&&&calling a second init without tearing down the data from an earlier&&&&visit.  But since teardown is already idempotent, and we already&&&&register teardown as part of input_visitor_test_add(), it is nicer&&&&to just make init() safe to call multiple times than it is to have&&&&to make all tests call teardown.&&&&&&&&Another common leak was forgetting to clean up an error object,&&&&after testing that an error was raised.&&&&&&&&Another leak was in test_visitor_in_struct_nested(), failing to&&&&clean the base member of UserDefTwo.  Cleaning that up left&&&&check_and_free_str() as dead code (since using the qapi_free_*&&&&takes care of recursion, and we don't want double frees).&&&&&&&&A final leak was in test_visitor_out_any(), which was reassigning&&&&the qobj local variable to a subset of the overall structure&&&&needing freeing; it did not result in a use-after-free, but&&&&was not cleaning up all the qdict.&&&&&&&&test-qmp-event and test-qmp-commands were already clean.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1446791754-23823-6-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," ehci: clear suspend bit on detach When a device is detached, clear the suspend bit (PORTSC_SUSPEND)&&&&in the port status register.&&&&&&&&The specs are not *that* clear what is supposed to happen in case&&&&a suspended device is unplugged.  But the enable bit (PORTSC_PED)&&&&is cleared, and the specs mention setting suspend with enable being&&&&unset is undefined behavior.  So clearing them both looks reasonable,&&&&and it actually fixes the reported bug.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1268879&&&&&&&&Cc: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Hans de Goede <hdegoede@redhat.com>&&&&Message-id: 1445413462-18004-1-git-send-email-kraxel@redhat.com&&&& "
1," xen-platform: Ensure xen is enabled when initializing The xen-platform code crashes on reset if the xen backend is not&&&&initialized, because it calls xc_hvm_set_mem_type(). Ensure xen-platform&&&&won't be created without initializing the xen backend.&&&&&&&&The assert can't be triggered by the user because the device is not&&&&hotpluggable, and the only code creating it (at pc_xen_hvm_init())&&&&already checks xen_enabled().&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&& "
1," qmp: Fix device-list-properties not to crash for abstract device Broken in commit f4eb32b ""qmp: show QOM properties in&&&&device-list-properties"", v2.1.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Message-Id: <1443689999-12182-9-git-send-email-armbru@redhat.com>&&&& "
1," virtio-net: correctly drop truncated packets When packet is truncated during receiving, we drop the packets but&&&&neither discard the descriptor nor add and signal used&&&&descriptor. This will lead several issues:&&&&&&&&- sg mappings are leaked&&&&- rx will be stalled if a lots of packets were truncated&&&&&&&&In order to be consistent with vhost, fix by discarding the descriptor&&&&in this case.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
1," qapi-visit: Convert to QAPISchemaVisitor, fixing bugs Fixes flat unions to visit the base's base members (the previous&&&&commit merely added them to the struct).  Same test case.&&&&&&&&Patch's effect on visit_type_UserDefFlatUnion():&&&&&&&&     static void visit_type_UserDefFlatUnion_fields(Visitor *m, UserDefFlatUnion **obj, Error **errp)&&&&     {&&&&         Error *err = NULL;&&&&&&&&    +    visit_type_int(m, &(*obj)->integer, ""integer"", &err);&&&&    +    if (err) {&&&&    +        goto out;&&&&    +    }&&&&         visit_type_str(m, &(*obj)->string, ""string"", &err);&&&&         if (err) {&&&&             goto out;&&&&&&&&Test cases updated for the bug fix.&&&&&&&&Fixes alternates to generate a visitor for their implicit enumeration&&&&type.  None of them are currently used, obviously.  Example:&&&&block-core.json's BlockdevRef now generates&&&&visit_type_BlockdevRefKind().&&&&&&&&Code is generated in a different order now, and therefore has got a&&&&few new forward declarations.  Doesn't matter.&&&&&&&&The guard QAPI_VISIT_BUILTIN_VISITOR_DECL is renamed to&&&&QAPI_VISIT_BUILTIN.&&&&&&&&The previous commit's two ugly special cases exist here, too.  Mark&&&&both TODO.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," rtl8139: Fix receive buffer overflow check rtl8139_do_receive() tries to check for the overflow condition&&&&by making sure that packet_size + 8 does not exceed the&&&&available buffer space.  The issue here is that RxBuffAddr,&&&&used to calculate available buffer space, is aligned to a&&&&a 4 byte boundry after every update.  So it is possible that&&&&every packet ends up being slightly padded when written&&&&to the receive buffer.  This padding is not taken into&&&&account when checking for overflow and we may end up missing&&&&the overflow condition can causing buffer overwrite.&&&&&&&&This patch takes alignment into consideration when&&&&checking for overflow condition.&&&&&&&&Signed-off-by: Vladislav Yasevich <vyasevic@redhat.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Message-id: 1441121206-6997-2-git-send-email-vyasevic@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block/mirror: limit qiov to IOV_MAX elements If mirror has more free buffers than IOV_MAX, preadv(2)/pwritev(2)&&&&EINVAL failures may be encountered.&&&&&&&&It is possible to trigger this by setting granularity to a low value&&&&like 8192.&&&&&&&&This patch stops appending chunks once IOV_MAX is reached.&&&&&&&&The spurious EINVAL failure can be reproduced with a qcow2 image file&&&&and the following QMP invocation:&&&&&&&&  qmp.command('drive-mirror', device='virtio0', target='/tmp/r7.s1',&&&&              granularity=8192, sync='full', mode='absolute-paths',&&&&              format='raw')&&&&&&&&While the guest is running dd if=/dev/zero of=/var/tmp/foo oflag=direct&&&&bs=4k.&&&&&&&&Cc: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1435761950-26714-1-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
1, qxl: Fix new function name for spice-server library The new spice-server function to limit the number of monitors (0.12.6)&&&&changed while development from spice_qxl_set_monitors_config_limit to&&&&spice_qxl_max_monitors (accepted upstream).&&&&By mistake I post patch with former name.&&&&This patch fix the function name.&&&&&&&&Signed-off-by: Frediano Ziglio <fziglio@redhat.com>&&&&Acked-by: Christophe Fergeau <cfergeau@redhat.com>&&&&Acked-by: Martin Kletzander <mkletzan@redhat.com>&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&& 
1," virtio-blk-dataplane: delete bottom half before the AioContext is freed Other uses of aio_bh_new are safe as long as all scheduled bottom&&&&halves are run before an iothread is destroyed, which bdrv_drain will&&&&ensure:&&&&&&&&- archipelago_finish_aiocb: BH deletes itself&&&&&&&&- inject_error: BH deletes itself&&&&&&&&- blkverify_aio_bh: BH deletes itself&&&&&&&&- abort_aio_request: BH deletes itself&&&&&&&&- curl_aio_readv: BH deletes itself&&&&&&&&- gluster_finish_aiocb: BH deletes itself&&&&&&&&- bdrv_aio_rw_vector: BH deletes itself&&&&&&&&- bdrv_co_maybe_schedule_bh: BH deletes itself&&&&&&&&- iscsi_schedule_bh, iscsi_co_generic_cb: BH deletes itself&&&&&&&&- laio_attach_aio_context: deleted in laio_detach_aio_context,&&&&called through bdrv_detach_aio_context before deleting the iothread&&&&&&&&- nfs_co_generic_cb: BH deletes itself&&&&&&&&- null_aio_common: BH deletes itself&&&&&&&&- qed_aio_complete: BH deletes itself&&&&&&&&- rbd_finish_aiocb: BH deletes itself&&&&&&&&- dma_blk_cb: BH deletes itself&&&&&&&&- virtio_blk_dma_restart_cb: BH deletes itself&&&&&&&&- qemu_bh_new: main loop AioContext is never destroyed&&&&&&&&- test-aio.c: bh_delete_cb deletes itself, otherwise deleted in&&&&the same function that calls aio_bh_new&&&&&&&&Reported-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1438101249-25166-2-git-send-email-pbonzini@redhat.com&&&&Message-Id: <1438086628-13000-1-git-send-email-pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," hw/core: rebase sysbus_get_fw_dev_path() to g_strdup_printf() This is done mainly for improving readability, and in preparation for the&&&&next patch, but Markus pointed out another bonus for the string being&&&&returned:&&&&&&&&""No arbitrary length limit. Before the patch, it's 39 characters, and the&&&&code breaks catastrophically when qdev_fw_name() is longer: the second&&&&snprintf() is called with its first argument pointing beyond path[], and&&&&its second argument underflowing to a huge size.""&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Tested-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," raw-posix: Fix .bdrv_co_get_block_status() for unaligned image size Image files with an unaligned image size have a final hole that starts&&&&at EOF, i.e. in the middle of a sector. Currently, *pnum == 0 is&&&&returned when checking the status of this sector. In qemu-img, this&&&&triggers an assertion failure.&&&&&&&&In order to fix this, one type for the sector that contains EOF must be&&&&found. Treating a hole as data is safe, so this patch rounds the&&&&calculated number of data sectors up, so that a partial sector at EOF is&&&&treated as a full data sector.&&&&&&&&This fixes https://bugzilla.redhat.com/show_bug.cgi?id=1229394&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Message-id: 1433840108-9996-1-git-send-email-kwolf@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," fw_cfg: fix FW_CFG_BOOT_DEVICE update on ppc and sparc On ppc, sparc, and sparc64, the value of the FW_CFG_BOOT_DEVICE 16bit&&&&fw_cfg entry is repeatedly modified from a series of callbacks, which&&&&currently results in the previous value's dynamically allocated memory&&&&being leaked.&&&&&&&&This patch switches updating to the new fw_cfg_modify_i16() call, which&&&&does not cause memory leaks.&&&&&&&&Signed-off-by: Gabriel Somlo <somlo@cmu.edu>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, hw/ppc/e500.c: Fix memory leak Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," vl: fix memory leak spotted by valgrind valgrind complains about:&&&&==9276== 13 bytes in 1 blocks are definitely lost in loss record 1,046 of 3,673&&&&==9276==    at 0x4C2845D: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)&&&&==9276==    by 0x2EAFBB: malloc_and_trace (vl.c:2556)&&&&==9276==    by 0x64C770E: g_malloc (in /usr/lib64/libglib-2.0.so.0.3600.3)&&&&==9276==    by 0x4A28BD: addr_to_string (vnc.c:123)&&&&==9276==    by 0x4A29AD: vnc_socket_local_addr (vnc.c:139)&&&&==9276==    by 0x4A9AFE: vnc_display_local_addr (vnc.c:3240)&&&&==9276==    by 0x2EF4FE: main (vl.c:4321)&&&&&&&&Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," fdc: Fix MSR.RQM flag The RQM bit in MSR should be set whenever the guest is supposed to&&&&access the FIFO, and it should be cleared in all other cases. This is&&&&important so the guest can't continue writing/reading the FIFO beyond&&&&the length that it's suppossed to access (see CVE-2015-3456).&&&&&&&&Commit e9077462 fixed the CVE by adding code that avoids the buffer&&&&overflow; however it doesn't correct the wrong behaviour of the floppy&&&&controller which should already have cleared RQM.&&&&&&&&Currently, RQM stays set all the time and during all phases while a&&&&command is being processed. This is error-prone because the command has&&&&to explicitly clear the flag if it doesn't need data (and indeed, the&&&&two buggy commands that are the culprits for the CVE just forgot to do&&&&that).&&&&&&&&This patch clears RQM immediately as soon as all bytes that are expected&&&&have been received. If the the FIFO is used in the next phase, the flag&&&&has to be set explicitly there.&&&&&&&&It also clear RQM after receiving all bytes even if the phase transition&&&&immediately sets it again. While it's technically not necessary at the&&&&moment because the state between clearing and setting RQM is not&&&&observable by the guest, this is more explicit and matches how real&&&&hardware works. It will actually become necessary in qemu once&&&&asynchronous code paths are introduced.&&&&&&&&This alone should have been enough to fix the CVE, but now we have two&&&&lines of defense - even better.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Message-id: 1432214378-31891-8-git-send-email-kwolf@redhat.com&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&& "
1," tap-solaris: Convert tap_open() to Error Fixes inappropriate use of syslog().&&&&&&&&Not fixed: leaks on error paths, suspicious non-fatal errors.  FIXMEs&&&&added instead.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1431691143-1015-14-git-send-email-armbru@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block: Detect multiplication overflow in bdrv_getlength Bogus image may have a large total_sectors that will overflow the&&&&multiplication. For cleanness, fix the return code so the error message&&&&will be meaningful.&&&&&&&&Reported-by: Richard W.M. Jones <rjones@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," ui: remove check for failure of qemu_acl_init() The qemu_acl_init() function has long since stopped being able&&&&to return NULL, since g_malloc will abort on OOM. As such the&&&&checks for NULL were unreachable code.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," qapi: Turn generators' mandatory option -i into an argument Mandatory option is silly, and the error handling is missing: the&&&&programs crash when -i isn't supplied.  Make it an argument, and check&&&&it properly.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," dma-helpers: Fix race condition of continue_after_map_failure and dma_aio_cancel If DMA's owning thread cancels the IO while the bounce buffer's owning thread&&&&is notifying the ""cpu client list"", a use-after-free happens:&&&&&&&&     continue_after_map_failure               dma_aio_cancel&&&&     ------------------------------------------------------------------&&&&     aio_bh_new&&&&                                              qemu_bh_delete&&&&     qemu_bh_schedule (use after free)&&&&&&&&Also, the old code doesn't run the bh in the right AioContext.&&&&&&&&Fix both problems by passing a QEMUBH to cpu_register_map_client.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-Id: <1426496617-10702-6-git-send-email-famz@redhat.com>&&&&[Remove unnecessary forward declaration. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qapi: Better error messages for bad enums The previous commit demonstrated that the generator had several&&&&flaws with less-than-perfect enums:&&&&- an enum that listed the same string twice (or two variant&&&&strings that map to the same C enumerator) ended up generating&&&&an invalid C enum&&&&- because the generator adds a _MAX terminator to each enum,&&&&the use of an enum member 'max' can also cause this clash&&&&- if an enum omits 'data', the generator left a python stack&&&&trace rather than a graceful message&&&&- an enum that used a non-array 'data' was silently accepted by&&&&the parser&&&&- an enum that used non-string members in the 'data' member&&&&was silently accepted by the parser&&&&&&&&Add check_enum to cover these situations, and update testcases&&&&to match.  While valid .json files won't trigger any of these&&&&cases, we might as well be nicer to developers that make a typo&&&&while trying to add new QAPI code.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," virtio-net: validate backend queue numbers against bus limitation We don't validate the backend queue numbers against bus limitation,&&&&this will easily crash qemu if it exceeds the limitation which will&&&&hit the abort() in virtio_del_queue(). An example is trying to&&&&starting a virtio-net device with 256 queues. E.g:&&&&&&&&./qemu-system-x86_64 -netdev tap,id=hn0,queues=256 -device&&&&virtio-net-pci,netdev=hn0&&&&&&&&Fixing this by doing the validation and fail early.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Cc: qemu-stable <qemu-stable@nongnu.org>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," numa: Fix off-by-one error at MAX_CPUMASK_BITS check Fix the CPU index check to ensure we don't go beyond the size of the&&&&node_cpu bitmap.&&&&&&&&CPU index is always less than MAX_CPUMASK_BITS, as documented at&&&&sysemu.h:&&&&&&&&> The following shall be true for all CPUs:&&&&>   cpu->cpu_index < max_cpus <= MAX_CPUMASK_BITS&&&&&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," util/uri: Add overflow check to rfc3986_parse_port And while at it, replace tabs by eight spaces in this function.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Message-Id: <1424887718-10800-2-git-send-email-mreitz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, memory: keep the owner of the AddressSpace alive until do_address_space_destroy This fixes a use-after-free if do_address_space_destroy is executed&&&&too late.&&&&&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Tested-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, target-arm: A64: Avoid left shifting negative integers in disas_pc_rel_addr Shifting a negative integer left is undefined behaviour in C.&&&&Avoid it by assembling and shifting the offset fields as&&&&unsigned values and then sign extending as the final action.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1423233250-15853-4-git-send-email-peter.maydell@linaro.org&&&& 
1," hmp: Compile hmp_info_spice() only with CONFIG_SPICE It's dead code when CONFIG_SPICE is off.  If it wasn't, it would crash&&&&dereferencing the null pointer returned by the qmp_query_spice()&&&&dummy in qmp.c.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," target-mips: Correct the handling of register #72 on writes Fix an off-by-one error in `mips_cpu_gdb_write_register' for register&&&&matching how `mips_cpu_gdb_read_register' handles it.  This register&&&&slot is a fake anyway, there's nothing in hardware that corresponds to&&&&it.&&&&&&&&Signed-off-by: Maciej W. Rozycki <macro@codesourcery.com>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1," update ipxe from 69313ed to 35c5379 Anton D. Kachalov (1):&&&&      [intel] Add 8086:1557 card (Intel 82599 10G ethernet mezz)&&&&&&&&Christian Hesse (1):&&&&      [build] Merge util/geniso and util/genliso&&&&&&&&Curtis Larsen (3):&&&&      [efi] Use EFI_CONSOLE_CONTROL_PROTOCOL to set text mode if available&&&&      [efi] Report errors from attempting to disconnect existing drivers&&&&      [efi] Try various possible SNP receive filters&&&&&&&&Dale Hamel (1):&&&&      [smbios] Expose board serial number as ${board-serial}&&&&&&&&Florian Schmaus (1):&&&&      [build] Set GITVERSION only if there is a git repository&&&&&&&&Hannes Reinecke (3):&&&&      [ethernet] Provide eth_random_addr() to generate random Ethernet addresses&&&&      [igbvf] Assign random MAC address if none is set&&&&      [igbvf] Allow changing of MAC address&&&&&&&&Jan Kiszka (1):&&&&      [intel] Add I217-LM PCI ID&&&&&&&&Marin Hannache (4):&&&&      [nfs] Fix an invalid free() when loading a symlink&&&&      [nfs] Fix an invalid free() when loading a regular (non-symlink) file&&&&      [nfs] Rewrite NFS URI handling&&&&      [readline] Add CTRL-W shortcut to remove a word&&&&&&&&Michael Brown (144):&&&&      [profile] Allow interrupts to be excluded from profiling results&&&&      [intel] Exclude time spent in hypervisor from profiling&&&&      [build] Fix version.o dependency upon git index&&&&      [tcp] Defer sending ACKs until all received packets have been processed&&&&      [lkrnprefix] Function as a bzImage kernel&&&&      [build] Avoid errors when build directory is mounted via NFS&&&&      [undi] Apply quota only to number of complete received packets&&&&      [lkrnprefix] Make real-mode setup code relocatable&&&&      [intel] Increase receive ring fill level&&&&      [syslog] Strip invalid characters from hostname&&&&      [test] Add self-tests for strdup()&&&&      [libc] Prevent strndup() from reading beyond the end of the string&&&&      [efi] Allow for optional protocols&&&&      [efi] Make EFI_DEVICE_PATH_TO_TEXT_PROTOCOL optional&&&&      [efi] Make EFI_HII_DATABASE_PROTOCOL optional&&&&      [efi] Do not try to fetch loaded image device path protocol&&&&      [ipv6] Fix definition of IN6_IS_ADDR_LINKLOCAL()&&&&      [dhcpv6] Do not set sin6_scope_id on the unspecified client socket address&&&&      [ipv6] Do not set sin6_scope_id on source address&&&&      [ipv6] Include network device when transcribing multicast addresses&&&&      [ipv6] Avoid potentially copying from a NULL pointer in ipv6_tx()&&&&      [librm] Allow for the PIC interrupt vector offset to be changed&&&&      [ifmgmt] Do not sleep CPU while configuring network devices&&&&      [scsi] Improve sense code parsing&&&&      [iscsi] Read IPv4 settings only from the relevant network device&&&&      [iscsi] Include IP address origin in iBFT&&&&      [debug] Allow debug message colours to be customised via DBGCOL=...&&&&      [build] Expose build timestamp, build name, and product names&&&&      [efi] Allow device paths to be easily included in debug messages&&&&      [efi] Provide a meaningful EFI SNP device name&&&&      [efi] Restructure EFI driver model&&&&      [build] Fix erroneous object name in version object&&&&      [build] Add yet another potential location for isolinux.bin&&&&      [efi] Allow network devices to be created on top of arbitrary SNP devices&&&&      [autoboot] Allow autoboot device to be identified by link-layer address&&&&      [efi] Identify autoboot device by MAC address when chainloading&&&&      [efi] Attempt to start only drivers claiming support for a device&&&&      [efi] Rewrite SNP NIC driver&&&&      [efi] Include SNP NIC driver within the all-drivers target&&&&      [crypto] Add support for iPAddress subject alternative names&&&&      [crypto] Fix debug message&&&&      [netdevice] Reset network device index when last device is unregistered&&&&      [efi] Update EDK2 headers&&&&      [efi] Install our own disk I/O protocol and claim exclusive use of it&&&&      [efi] Allow for interception of boot services calls by loaded image&&&&      [efi] Print well-known GUIDs by name in debug messages&&&&      [efi] Include EFI_CONSOLE_CONTROL_PROTOCOL header&&&&      [ioapi] Fail ioremap() when attempting to map a zero bus address&&&&      [intel] Check for ioremap() failures&&&&      [realtek] Check for ioremap() failures&&&&      [vmxnet3] Check for ioremap() failures&&&&      [skel] Check for ioremap() failures&&&&      [myson] Check for ioremap() failures&&&&      [natsemi] Check for ioremap() failures&&&&      [i386] Add functions to read and write model-specific registers&&&&      [x86_64] Add functions to read and write model-specific registers&&&&      [efi] Show more diagnostic information when building with DEBUG=efi_wrap&&&&      [ioapi] Centralise notion of PAGE_SIZE&&&&      [lotest] Discard packets arriving on the incorrect network device&&&&      [xen] Import selected public headers&&&&      [xen] Add basic support for PV-HVM domains&&&&      [xen] Add support for Xen netfront virtual NICs&&&&      [efi] Default to releasing network devices for use via SNP&&&&      [efi] Unload started images only on failure&&&&      [efi] Fill in loaded image's DeviceHandle if firmware fails to do so&&&&      [efi] Fix incorrect debug message level when device has no device path&&&&      [efi] Report exact failure when unable to open the device path&&&&      [netdevice] Avoid registering duplicate network devices&&&&      [efi] Ignore failures when attempting to install SNP HII protocol&&&&      [efi] Expand the range of well-known EFI GUIDs in debug messages&&&&      [efi] Provide efi_handle_name() for debugging&&&&      [efi] Add ability to dump all openers of a given protocol on a handle&&&&      [efi] Use efi_handle_name() instead of efi_handle_devpath_text()&&&&      [efi] Use efi_handle_name() instead of efi_devpath_text() where applicable&&&&      [efi] Allow compiler to perform type checks on EFI_HANDLE&&&&      [efi] Avoid unnecessarily passing pointers to EFI_HANDLEs&&&&      [efi] Dump existing openers when we are unable to open a protocol&&&&      [efi] Dump handle information around connect/disconnect attempts&&&&      [efi] Improve debugging of the debugging facilities&&&&      [efi] Add excessive sanity checks into efi_debug functions&&&&      [efi] Also try original ComponentName protocol for retrieving driver names&&&&      [efi] Print raw device path when we have no DevicePathToTextProtocol&&&&      [efi] Add ability to dump SNP device mode information&&&&      [efi] Reset multicast filter list when setting SNP receive filters&&&&      [efi] Provide centralised definitions of commonly-used GUIDs&&&&      [efi] Open device path protocol only at point of use&&&&      [efi] Move abstract device path and handle functions to efi_utils.c&&&&      [efi] Generalise snpnet_pci_info() to efi_locate_device()&&&&      [bios] Support displaying and hiding cursor&&&&      [efi] Support displaying and hiding cursor&&&&      [readline] Ensure cursor is visible when prompting for input&&&&      [xen] Accept alternative Xen platform PCI device ID 5853:0002&&&&      [xen] Use version 1 grant tables by default&&&&      [xen] Cope with unexpected initial backend states&&&&      [smc9000] Avoid using CONFIG as a preprocessor macro&&&&      [build] Allow for named configurations at build time&&&&      [intel] Display PBS value when applying ICH errata workaround&&&&      [intel] Display before and after values for both PBS and PBA&&&&      [intel] Apply PBS/PBA errata workaround only to ICH8 PCI device IDs&&&&      [efi] Add definitions of GUIDs observed during Windows boot&&&&      [efi] Dump details of any calls to our dummy block and disk I/O protocols&&&&      [romprefix] Do not preserve unused register %di&&&&      [build] Remove obsolete references to .zrom build targets&&&&      [build] Allow ISA ROMs to be built&&&&      [build] Avoid deleting config header files if build is interrupted&&&&      [prefix] Halt system without burning CPU if we cannot access the payload&&&&      [prefix] Report both %esi and %ecx when opening payload fails&&&&      [util] Use P"
1," ide: Check validity of logical block size Our IDE emulation can't handle logical block sizes other than 512. Check&&&&for it.&&&&&&&&The original assumption was that other values would silently be ignored&&&&(which is bad enough), but it's not quite true: The physical block size&&&&is exposed in IDENTIFY DEVICE as a multiple of the logical block size.&&&&Setting a logical block size therefore also corrupts the physical block&&&&size (4096/4096 doesn't silently downgrade to 4096/512, but 512/512).&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&& "
1," ide: Correct handling of malformed/short PRDTs This impacts both BMDMA and AHCI HBA interfaces for IDE.&&&&Currently, we confuse the difference between a PRDT having&&&&""0 bytes"" and a PRDT having ""0 complete sectors.""&&&&&&&&When we receive an incomplete sector, inconsistent error checking&&&&leads to an infinite loop wherein the call succeeds, but it&&&&didn't give us enough bytes -- leading us to re-call the&&&&DMA chain over and over again. This leads to, in the BMDMA case,&&&&leaked memory for short PRDTs, and infinite loops and resource&&&&usage in the AHCI case.&&&&&&&&The .prepare_buf() callback is reworked to return the number of&&&&bytes that it successfully prepared. 0 is a valid, non-error&&&&answer that means the table was empty and described no bytes.&&&&-1 indicates an error.&&&&&&&&Our current implementation uses the io_buffer in IDEState to&&&&ultimately describe the size of a prepared scatter-gather list.&&&&Even though the AHCI PRDT/SGList can be as large as 256GiB, the&&&&AHCI command header limits transactions to just 4GiB. ATA8-ACS3,&&&&however, defines the largest transaction to be an LBA48 command&&&&that transfers 65,536 sectors. With a 512 byte sector size, this&&&&is just 32MiB.&&&&&&&&Since our current state structures use the int type to describe&&&&the size of the buffer, and this state is migrated as int32, we&&&&are limited to describing 2GiB buffer sizes unless we change the&&&&migration protocol.&&&&&&&&For this reason, this patch begins to unify the assertions in the&&&&IDE pathways that the scatter-gather list provided by either the&&&&AHCI PRDT or the PCI BMDMA PRDs can only describe, at a maximum,&&&&2GiB. This should be resilient enough unless we need a sector&&&&size that exceeds 32KiB.&&&&&&&&Further, the likelihood of any guest operating system actually&&&&attempting to transfer this much data in a single operation is&&&&very slim.&&&&&&&&To this end, the IDEState variables have been updated to more&&&&explicitly clarify our maximum supported size. Callers to the&&&&prepare_buf callback have been reworked to understand the new&&&&return code, and all versions of the prepare_buf callback have&&&&been adjusted accordingly.&&&&&&&&Lastly, the ahci_populate_sglist helper, relied upon by the&&&&AHCI implementation of .prepare_buf() as well as the PCI&&&&implementation of the callback have had overflow assertions&&&&added to help make clear the reasonings behind the various&&&&type changes.&&&&&&&&[Added %d -> %""PRId64"" fix John sent because off_pos changed from int to&&&&int64_t.&&&&--Stefan]&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1414785819-26209-4-git-send-email-jsnow@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," acpi: accurate overflow check Compare clock in ns, because acpi_pm_tmr_update uses rounded&&&&to ns value instead of ticks.&&&&&&&&Signed-off-by: Pavel Dovgalyuk <Pavel.Dovgaluk@ispras.ru>&&&&[This lets Windows boot in icount mode. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, esp-pci: fixup deadlock with linux A linux guest will be issuing messages:&&&&&&&&[   32.124042] DC390: Deadlock in DataIn_0: DMA aborted unfinished: 000000 bytes remain!!&&&&[   32.126348] DC390: DataIn_0: DMA State: 0&&&&&&&&and the HBA will fail to work properly.&&&&Reason is the emulation is not setting the 'DMA transfer done'&&&&status correctly.&&&&&&&&Signed-off-by: Hannes Reinecke <hare@suse.de>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," virtio-scsi: dataplane: fail setup gracefully The dataplane code is currently doing a hard exit on various setup&&&&failures. In practice, this may mean that a guest suddenly dies after&&&&a dataplane device failed to come up (e.g., when a file descriptor&&&&limit is hit for the nth device).&&&&&&&&Let's just try to unwind the setup instead and return.&&&&&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qemu-img: Print error if check failed Currently, if bdrv_check() fails either by returning -errno or having&&&&check_errors set, qemu-img check just exits with 1 after having told the&&&&user that there were no errors on the image. This is bad.&&&&&&&&Instead of printing the check result if there were internal errors which&&&&were so bad that bdrv_check() could not even complete with 0 as a return&&&&value, qemu-img check should inform the user about the error.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," raw-posix: The SEEK_HOLE code is flawed, rewrite it On systems where SEEK_HOLE in a trailing hole seeks to EOF (Solaris,&&&&but not Linux), try_seek_hole() reports trailing data instead.&&&&&&&&Additionally, unlikely lseek() failures are treated badly:&&&&&&&&* When SEEK_HOLE fails, try_seek_hole() reports trailing data.  For&&&&  -ENXIO, there's in fact a trailing hole.  Can happen only when&&&&  something truncated the file since we opened it.&&&&&&&&* When SEEK_HOLE succeeds, SEEK_DATA fails, and SEEK_END succeeds,&&&&  then try_seek_hole() reports a trailing hole.  This is okay only&&&&  when SEEK_DATA failed with -ENXIO (which means the non-trailing hole&&&&  found by SEEK_HOLE has since become trailing somehow).  For other&&&&  failures (unlikely), it's wrong.&&&&&&&&* When SEEK_HOLE succeeds, SEEK_DATA fails, SEEK_END fails (unlikely),&&&&  then try_seek_hole() reports bogus data [-1,start), which its caller&&&&  raw_co_get_block_status() turns into zero sectors of data.  Could&&&&  theoretically lead to infinite loops in code that attempts to scan&&&&  data vs. hole forward.&&&&&&&&Rewrite from scratch, with very careful comments.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," spapr: fix possible memory leak get_boot_devices_list() will malloc memory, spapr_finalize_fdt&&&&doesn't free it.&&&&&&&&Signed-off-by: Chenliang <chenliang88@huawei.com>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," linux-aio: Convert laio_aiocb_info.cancel to .cancel_async Just call io_cancel (2), if it fails, it means the request is not&&&&canceled, so the event loop will eventually call&&&&qemu_laio_process_completion.&&&&&&&&In qemu_laio_process_completion, change to call the cb unconditionally.&&&&It is required by bdrv_aio_cancel_async.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, usb-ohci: Fix memory leak for ohci timer Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1, image-fuzzer: Public API for image-fuzzer/runner/runner.py __init__.py provides the public API required by the test runner&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Maria Kustova <maria.k@catit.be>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," vmstate_xhci_event: fix unterminated field list ""vmstate_xhci_event"" was introduced in commit 37352df3 (""xhci: add live&&&&migration support""), and first released in v1.6.0. The field list in this&&&&VMSD is not terminated with the VMSTATE_END_OF_LIST() macro.&&&&&&&&During normal use (ie. migration), the issue is practically invisible,&&&&because the ""vmstate_xhci_event"" object (with the unterminated field list)&&&&is only ever referenced -- via ""vmstate_xhci_intr"" -- if xhci_er_full()&&&&returns true, for the ""ev_buffer"" test. Since that field_exists() check&&&&(apparently) almost always returns false, we almost never traverse&&&&""vmstate_xhci_event"" during migration, which hides the bug.&&&&&&&&However, Amit's vmstate checker forces recursion into this VMSD as well,&&&&and the lack of VMSTATE_END_OF_LIST() breaks the field list terminator&&&&check (field->name != NULL) in dump_vmstate_vmsd(). The result is&&&&undefined behavior, which in my case translates to infinite recursion&&&&(because the loop happens to overflow into ""vmstate_xhci_intr"", which then&&&&links back to ""vmstate_xhci_event"").&&&&&&&&Add the missing terminator.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Amit Shah <amit.shah@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," serial: change retry logic to avoid concurrency Whenever serial_xmit fails to transmit a byte it adds a watch that would&&&&call it again when the ""line"" becomes ready. This results in a retry&&&&chain:&&&&  serial_xmit -> add_watch -> serial_xmit&&&&Each chain is able to transmit one character, and for every character&&&&passed to serial by the guest driver a new chain is spawned.&&&&&&&&The problem lays with the fact that a new chain is spawned even when&&&&there is one already waiting on the watch. So there can be several retry&&&&chains waiting concurrently on one ""line"". Every chain tries to transmit&&&&current character, so character order is not messed up. But also every&&&&chain increases retry counter (tsr_retry). If there are enough&&&&concurrent chains this counter will hit MAX_XMIT_RETRY value and&&&&the character will be dropped.&&&&&&&&To reproduce this bug you need to feed serial output to some program&&&&consuming it slowly enough. A python script from bug #1335444&&&&description is an example of such program.&&&&&&&&This commit changes retry logic in the following way to avoid&&&&concurrency: instead of spawning a new chain for each character being&&&&transmitted spawn only one and make it transmit characters until FIFO is&&&&empty.&&&&&&&&The change consists of two parts:&&&& - add a do {} while () loop in serial_xmit (diff is a bit erratic&&&&   for this part, diff -w will show actual change),&&&& - do not call serial_xmit from serial_ioport_write if there is one&&&&   waiting on the watch already.&&&&&&&&This should fix another issue causing bug #1335444.&&&&&&&&Signed-off-by: Kirill Batuzov <batuzovk@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qed: Make qiov match request size until backing file EOF If a QED image has a shorter backing file and a read request to&&&&unallocated clusters goes across EOF of the backing file, the backing&&&&file sees a shortened request and the rest is filled with zeros.&&&&However, the original too long qiov was used with the shortened request.&&&&&&&&This patch makes the qiov size match the request size, avoiding a&&&&potential buffer overflow in raw-posix.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," virtio-pci: fix MSI memory region use after free After memory region QOMification QEMU is stricter in detecting&&&&wrong usage of the memory region API.  Here it detected a&&&&memory_region_destroy done before the corresponding&&&&memory_region_del_subregion; the memory_region_destroy is&&&&done by msix_uninit_exclusive_bar, the memory_region_del_subregion&&&&is done by the PCI core's pci_unregister_io_regions before&&&&pc->exit is called.&&&&&&&&The problem was introduced by&&&&commit 06a1307379fcd6c551185ad87679cd7ed896b9ea&&&&    virtio-pci: add device_unplugged callback&&&&As noted in that commit log, virtio device kick callbacks need to be&&&&stopped before generic virtio is cleaned up. This is because these are&&&&notifications from pci proxy to the generic virtio device so they need&&&&to be stopped in the unplug call before the virtio device is unrealized.&&&&However interrupts are notifications from the virtio device to&&&&the pci proxy so they need to stay around while the device&&&&is realized.&&&&&&&&The memory API misuse caused an assertion when hot-unplugging virtio&&&&devices.  Using the API correctly fixes the assertion.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qdev: Fix crash when using non-device class name on -global This fixes the following crash:&&&&&&&&    $ qemu-system-x86_64 -global container.xxx=y&&&&    hw/core/qdev-properties-system.c:399:qdev_add_one_global: Object 0x7f7eff234100 is not an instance of type device&&&&    Aborted (core dumped)&&&&&&&&New behavior will be to just warn, just like when non-existing clas&&&&names are used:&&&&&&&&    $ qemu-system-x86_64 -global container.xxx=y&&&&    qemu-system-x86_64: Warning: ""-global container.xxx=y"" not used&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Tested-by: Don Slutz <dslutz@verizon.com>&&&& "
1," signal/all/setup_frame remove __put_user checks Remove ""if(__put_user"" checks and their related error paths&&&&for all architecture's setup_frame, setup_rt_frame and similar.&&&&&&&&Remove the unlock_user_struct when the only way to end up there is&&&&from failed lock_user_struct.&&&&&&&&Remove err variable if there are no users for it in the function&&&&anymore.&&&&&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," target-ppc: Introduce Decoder Macros for DFP Add decoder macros for the various Decimal Floating Point&&&&instruction forms.  Illegal instruction masks are used to not only&&&&guard against reserved instruction field use, but also to catch&&&&illegal quad word forms that use odd-numbered floating point registers.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," target-arm: Fix errors in writes to generic timer control registers The code for handling writes to the generic timer control registers&&&&had several bugs:&&&& * ISTATUS (bit 2) is read-only but we forced it to zero on any write&&&& * the check for ""was IMASK (bit 1) toggled?"" incorrectly used '&' where&&&&   it should be '^'&&&& * the handling of IMASK was inverted: we should set the IRQ if&&&&   ISTATUS is set and IMASK is clear, not if both are set&&&&&&&&The combination of these bugs meant that when running a Linux guest&&&&that uses the generic timers we would fairly quickly end up either&&&&forgetting that the timer output should be asserted, or failing to&&&&set the IRQ when the timer was unmasked. The result is that the guest&&&&never gets any more timer interrupts.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1401803208-1281-1-git-send-email-peter.maydell@linaro.org&&&&Cc: qemu-stable@nongnu.org&&&& "
1, blockdev: acquire AioContext in block_set_io_throttle The block_set_io_throttle QMP and HMP commands modify I/O throttling&&&&limits for block devices.&&&&&&&&Acquire the BlockDriverState's AioContext to protect against race&&&&conditions with an IOThread that is running I/O for this device.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&& 
1," block/linux-aio: fix memory and fd leak Hot unplugging -drive aio=native,file=test.img,format=raw images leaves&&&&the Linux AIO event notifier and struct qemu_laio_state allocated.&&&&Luckily nothing will use the event notifier after the BlockDriverState&&&&has been closed so the handler function is never called.&&&&&&&&It's still worth fixing this resource leak.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block: acquire AioContext in bdrv_*_all() bdrv_close_all(), bdrv_commit_all(), bdrv_flush_all(),&&&&bdrv_invalidate_cache_all(), and bdrv_clear_incoming_migration_all() are&&&&called by main loop code and touch all BlockDriverState instances.&&&&&&&&Some BlockDriverState instances may be running in another AioContext.&&&&Make sure to acquire the AioContext before closing the BlockDriverState.&&&&&&&&This will protect against race conditions once virtio-blk data-plane is&&&&using the BlockDriverState from another AioContext event loop.&&&&&&&&Note that this patch does not convert bdrv_drain_all() yet since that&&&&conversion is non-trivial.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," blockdev: Plug memory leak in drive_init() bs_opts is leaked on all paths from its qdev_new() that don't got&&&&through blockdev_init().  Add the missing QDECREF(), and zap bs_opts&&&&after blockdev_init(), so the new QDECREF() does nothing when we go&&&&through blockdev_init().&&&&&&&&Leak introduced in commit f298d07.  Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," aio: Fix use-after-free in cancellation path The current flow of canceling a thread from THREAD_ACTIVE state is:&&&&&&&&  1) Caller wants to cancel a request, so it calls thread_pool_cancel.&&&&&&&&  2) thread_pool_cancel waits on the conditional variable&&&&     elem->check_cancel.&&&&&&&&  3) The worker thread changes state to THREAD_DONE once the task is&&&&     done, and notifies elem->check_cancel to allow thread_pool_cancel&&&&     to continue execution, and signals the notifier (pool->notifier) to&&&&     allow callback function to be called later. But because of the&&&&     global mutex, the notifier won't get processed until step 4) and 5)&&&&     are done.&&&&&&&&  4) thread_pool_cancel continues, leaving the notifier signaled, it&&&&     just returns to caller.&&&&&&&&  5) Caller thinks the request is already canceled successfully, so it&&&&     releases any related data, such as freeing elem->common.opaque.&&&&&&&&  6) In the next main loop iteration, the notifier handler,&&&&     event_notifier_ready, is called. It finds the canceled thread in&&&&     THREAD_DONE state, so calls elem->common.cb, with an (likely)&&&&     dangling opaque pointer. This is a use-after-free.&&&&&&&&Fix it by calling event_notifier_ready before leaving&&&&thread_pool_cancel.&&&&&&&&Test case update: This change will let cancel complete earlier than&&&&test-thread-pool.c expects, so update the code to check this case: if&&&&it's already done, done_cb sets .aiocb to NULL, skip calling&&&&bdrv_aio_cancel on them.&&&&&&&&Reported-by: Ulrich Obergfell <uobergfe@redhat.com>&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," microblaze: boot: Don't hack the elf entry point There was some modulo logic to ensure that Microblaze always booted into&&&&physical RAM regardless of the elf entry. Removed it, as QEMU should fail&&&&gracefully when given a bad elf, rather than attempt to run it.&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&& "
1," char: Use return values instead of error_is_set(errp) Using error_is_set(errp) to check whether a function call failed is&&&&fragile: it breaks when errp is null.  Check perfectly suitable return&&&&values instead when possible.  As far as I can tell, errp can't be&&&&null there, but this is more robust and more obviously correct&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," Count used RAMBlock pages for migration_dirty_pages This is a fix for a bug* triggered by a migration after hot unplugging&&&&a few virtio-net NICs, that caused migration never to converge, because&&&&'migration_dirty_pages' is incorrectly initialised.&&&&&&&&'migration_dirty_pages' is used as a tally of the number of outstanding&&&&dirty pages, to give the migration code an idea of how much more data&&&&will need to be transferred, and thus whether it can end the iterative&&&&phase.&&&&&&&&It was initialised to the total size of the RAMBlock address space,&&&&however hotunplug can leave this space sparse, and hence&&&&migration_dirty_pages ended up too large.&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&&&&&(* https://bugzilla.redhat.com/show_bug.cgi?id=1074913 )&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," virtio: validate config_len on load Malformed input can have config_len in migration stream&&&&exceed the array size allocated on destination, the&&&&result will be heap overflow.&&&&&&&&To fix, that config_len matches on both sides.&&&&&&&&CVE-2014-0182&&&&&&&&Reported-by: ""Dr. David Alan Gilbert"" <dgilbert@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&&&&&--&&&&&&&&v2: use %ix and %zx to print config_len values&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," tsc210x: fix buffer overrun on invalid state load CVE-2013-4539&&&&&&&&s->precision, nextprecision, function and nextfunction&&&&come from wire and are used&&&&as idx into resolution[] in TSC_CUT_RESOLUTION.&&&&&&&&Validate after load to avoid buffer overrun.&&&&&&&&Cc: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," xbzrle.c: Avoid undefined behaviour with signed arithmetic Use unsigned types for doing bitwise arithmetic in the xzbrle&&&&calculations, to avoid undefined behaviour:&&&&&&&& xbzrle.c:99:49: runtime error: left shift of 72340172838076673&&&& by 7 places cannot be represented in type 'long'&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, trace: add workaround for SystemTap PR13296 SystemTap sdt.h sometimes results in compiled probes without sufficient&&&&information to extract arguments.  This can be solved in a slightly&&&&hacky way by encouraging the compiler to place arguments into registers.&&&&&&&&This patch fixes the apic_reset_irq_delivered() trace event on Fedora 20&&&&with gcc-4.8.2-7.fc20 and systemtap-sdt-devel-2.4-2.fc20 on x86_64.&&&&&&&&Signed-off-by: Frank Ch. Eigler <fche@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, parallels: Sanity check for s->tracks (CVE-2014-0142) This avoids a possible division by zero.&&&&&&&&Convert s->tracks to unsigned as well because it feels better than&&&&surviving just because the results of calculations with s->tracks are&&&&converted to unsigned anyway.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, qcow2: Validate active L1 table offset and size (CVE-2014-0144) This avoids an unbounded allocation.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, qcow2: Validate snapshot table offset/size (CVE-2014-0144) This avoid unbounded memory allocation and fixes a potential buffer&&&&overflow on 32 bit hosts.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," qom: Make QOM link property unref optional Some object_property_add_link() callers expect property deletion to&&&&unref the link property object.  Other callers expect to manage the&&&&refcount themselves.  The former are currently broken and therefore leak&&&&the link property object.&&&&&&&&This patch adds a flags argument to object_property_add_link() so the&&&&caller can specify which refcount behavior they require.  The new&&&&OBJ_PROP_LINK_UNREF_ON_RELEASE flag causes the link pointer to be&&&&unreferenced when the property is deleted.&&&&&&&&This fixes refcount leaks in qdev.c, xilinx_axidma.c, xilinx_axienet.c,&&&&s390-virtio-bus.c, virtio-pci.c, virtio-rng.c, and ui/console.c.&&&&&&&&Rationale for refcount behavior:&&&&&&&& * hw/core/qdev.c&&&&   - bus children are explicitly unreferenced, don't interfere&&&&   - parent_bus is essentially a read-only property that doesn't hold a&&&&     refcount, don't unref&&&&   - hotplug_handler is leaked, do unref&&&&&&&& * hw/dma/xilinx_axidma.c&&&&   - rx stream ""dma"" links are set using set_link, therefore they&&&&     need unref&&&&   - tx streams are set using set_link, therefore they need unref&&&&&&&& * hw/net/xilinx_axienet.c&&&&   - same reasoning as hw/dma/xilinx_axidma.c&&&&&&&& * hw/pcmcia/pxa2xx.c&&&&   - pxa2xx bypasses set_link and therefore does not use refcounts&&&&&&&& * hw/s390x/s390-virtio-bus.c&&&& * hw/virtio/virtio-pci.c&&&& * hw/virtio/virtio-rng.c&&&& * ui/console.c&&&&   - set_link is used and there is no explicit unref, do unref&&&&&&&&Cc: Peter Crosthwaite <peter.crosthwaite@petalogix.com>&&&&Cc: Alexander Graf <agraf@suse.de>&&&&Cc: Anthony Liguori <aliguori@amazon.com>&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," pc: Refuse CPU hotplug if the resulting APIC ID is too large The ACPI CPU hotplug code requires APIC IDs to be smaller than&&&&ACPI_CPU_HOTPLUG_ID_LIMIT, so enforce the limit before trying to hotplug&&&&a new vCPU, returning an error instead of crashing.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, hw/intc/slavio_intctl: Avoid shifting left into sign bit Add 'U' suffix to avoid undefined behaviour.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," s390x/sclpconsole: Fix and simplify interrupt injection valgrind complains about a memory leak in irq setup of sclpconsole:&&&&&&&&==42117== 8 bytes in 1 blocks are definitely lost in loss record 89 of 833&&&&==42117==    at 0x4031AFE: malloc (vg_replace_malloc.c:292)&&&&==42117==    by 0x8022F855: malloc_and_trace (vl.c:2715)&&&&==42117==    by 0x4145569: g_malloc (in /usr/lib64/libglib-2.0.so.0.3400.2)&&&&==42117==    by 0x800F696D: qemu_extend_irqs (irq.c:51)&&&&==42117==    by 0x800F6AF7: qemu_allocate_irqs (irq.c:68)&&&&==42117==    by 0x800F5685: console_init (sclpconsole.c:235)&&&&==42117==    by 0x80297C79: event_realize (event-facility.c:386)&&&&==42117==    by 0x80105071: device_set_realized (qdev.c:693)&&&&==42117==    by 0x801CDC4B: property_set_bool (object.c:1337)&&&&==42117==    by 0x801CBD7F: object_property_set (object.c:819)&&&&[...]&&&&&&&&Turns out that we actually dont need the indirection, so trigger the&&&&sclp interrupt directly.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Acked-by: Heinz Graalfs <graalfs@linux.vnet.ibm.com>&&&& "
1," qemu-nbd: Fix coverity issues There are two issues in qemu-nbd: a missing return value check after&&&&calling accept(), and file descriptor leaks in nbd_client_thread.&&&&&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-m68k: Remove custom qemu_assert() function Remove the custom qemu_assert() function defined by target-m68k/translate.c&&&&in favour of either using glib g_assert_not_reached() (for the genuinely&&&&can't-happen cases) or cpu_abort() (for the ""this isn't implemented"",&&&&in line with other unimplemented cases in the target).&&&&&&&&This has the benefit of silencing some clang warnings about&&&&variables used while uninitialized (which are emitted because&&&&clang can't figure out that qemu_assert(0, something) never&&&&returns.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," hw/timer/arm_timer: Avoid array overrun for bad addresses The integrator's timer read/write functions log an error for&&&&bad addresses in guest accesses, but were falling through and&&&&using an out of bounds array index rather than returning early.&&&&Fix this.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Message-id: 1392647854-8067-4-git-send-email-peter.maydell@linaro.org&&&&Cc: qemu-stable@nongnu.org&&&& "
1," target-ppc: Load Quadword This patch adds the Book I (user space) Load Quadword (lq) instruction.&&&&This instruction was introduced into Book I in Power ISA V2.07.  Previous&&&&versions of the architecture supported this as a privileged instruction.&&&&Previous versions of the architecture also did not support Little Endian&&&&mode.&&&&&&&&Note that this patch also adds the PPC_64BX flag to the Power8 model,&&&&which enables the lq instruction.&&&&&&&&Signed-off-by: Tom Musta <tommusta@gmail.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," Fix two XBZRLE corruption issues Push zero'd pages into the XBZRLE cache&&&&    A page that was cached by XBZRLE, zero'd and then XBZRLE'd again&&&&    was being compared against a stale cache value&&&&&&&&Don't use 'qemu_put_buffer_async' to put pages from the XBZRLE cache&&&&    Since the cache might change before the data hits the wire&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1, virtio_rng: replace custom backend API with UserCreatable.complete() callback in addition fix default backend leak by releasing it if its&&&&initialization failed.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
1," qtest: Fix the bug about disable vnc causes ""make check"" fail When we disable vnc from ""./configure"", QEMU can't use the vnc option.&&&&So qtest can't use the ""vnc -none "", otherwise ""make check"" fails.&&&&If QEMU uses ""-display none"", ""-vnc none"" is excrescent, So we just need to drop it.&&&&&&&&Signed-off-by: Kewei Yu <keweihk@gmail.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, block/vmdk: add basic .bdrv_check support this adds a basic vmdk corruption check. it should detect severe&&&&table corruptions and file truncation.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, qom: fix leak for objects created with -object The object must be unref-ed when its variable goes out of scope.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Tested-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
1," virtio-scsi: Prevent assertion on missed events In some cases, an unplug can cause events to be dropped, which&&&&leads to an assertion failure when preparing to notify the guest&&&&kernel.&&&&&&&&Signed-off-by: Eric Farman <farman@linux.vnet.ibm.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," sheepdog: fix dynamic grow for running qcow2 format When running qcow2 over sheepdog, we might meet following problem&&&&&&&&  qemu-system-x86_64: shrinking is not supported&&&&&&&&And cause IO errors to Guest. This is because we abuse bs->total_sectors, which&&&&is manipulated by generic block layer and race with sheepdog code.&&&&&&&&We should directly check if offset > vdi_size to dynamically enlarge the volume&&&&instead of 'offset > bs->total_sectors', which will cause problem when following&&&&case happens:&&&&&&&&   vdi_size > offset > bs->total_sectors&&&&&&&&   # then trigger sd_truncate() to shrink the volume wrongly.&&&&&&&&Cc: qemu-devel@nongnu.org&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reported-by: Hadrien KOHL <hadrien.kohl@gmail.com>&&&&Signed-off-by: Liu Yuan <namei.unix@gmail.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, vfio-pci: Add debug config options to disable MSI/X KVM support It's sometimes useful to be able to verify interrupts are passing&&&&through correctly.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& 
1, target-i386: Fix build by providing stub kvm_arch_get_supported_cpuid() Fix build failures with clang when KVM is not enabled by&&&&providing a stub version of kvm_arch_get_supported_cpuid().&&&&We retain the compile time check that this function isn't&&&&called when CONFIG_KVM is not set by guarding the stub with&&&&ifndef __OPTIMIZE__ (we assume that an optimizing build will&&&&do sufficient constant folding and dead code elimination to&&&&remove the calls before linking).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," qtest: Use -display none by default This avoids each test needing to add it to suppress windows popping up.&&&&&&&&[Commit 7ceeedd016facf8d58e14a0d1417fa7225d71072 (""blockdev-test: add&&&&test case for drive_add duplicate IDs"") and commit&&&&43cd209803d6cffb1e1a028c9ff2fd0ff4fce954 (""qdev-monitor-test: add&&&&device_add leak test cases"") added qtest tests without specifying&&&&-display none.&&&&&&&&As a result, ""make check"" now tries to use graphics (GTK or SDL).  Since&&&&graphics are not used by the test and inappropriate for headless ""make&&&&check"" runs, add the missing -display none.&&&&&&&&This fixes ""make check"" in the QEMU buildbot.&&&&-- Stefan]&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," Revert ""hw/pci: partially handle pci master abort"" This reverts commit a53ae8e934cd54686875b5bcfc2f434244ee55d6.&&&&&&&&The patch being reverted introduced a low-priority memory region&&&&covering all 64 bit pci address space.  This exposed the following bugs&&&&elsewhere in the code:&&&& 1. Some memory regions have INT64_MAX size, where the&&&&    intent was all 64 bit address space.&&&&    This results in a sub-page region, should be UINT64_MAX.&&&& 2. page table rendering in exec.c ignores physical address bits&&&&    above TARGET_PHYS_ADDR_SPACE_BITS.&&&&    Access outside this range (e.g. from device DMA, or gdb stub)&&&&    ends up with a wrong region.  Registering a region outside this&&&&    range leads to page table corruption.&&&& 3. Some regions overlap PCI hole and have same priority.&&&&    This only works as long as no device uses the overlapping address.&&&&&&&&It doesn't look like we can resolve all issues in time for 1.7.&&&&Let's fix the bugs first and apply afterwards for 1.8.&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel.a@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," loader: drop return value for rom_add_blob_fixed rom_add_blob never fails, and neither does rom_add_blob_fixed,&&&&so there's no need to return value from it.&&&&&&&&In fact, rom_add_blob_fixed was erroneously returning -1 unconditionally&&&&which made the only system that checked the return value -M bamboo fail&&&&to start.&&&&&&&&Drop the return value and drop checks from ppc440_bamboo to&&&&fix this failure.&&&&&&&&Reported-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, ide-test: Check what happens with bus mastering disabled The main goal is that qemu doesn't crash.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, qemu-iotests: Discard preallocated zero clusters Add a new test case for discarding preallocated zero clusters; doing&&&&this should not result in any leaks.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, vfio: Fix debug output for int128 values Memory regions can easily be 2^64 byte long and therefore overflow&&&&for just a bit but that is enough for int128_get64() to assert.&&&&&&&&This takes care of debug printing of huge section sizes.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&& 
1, rdma: clean up of qemu_rdma_cleanup() - It can't be determined by RDMAContext::cm_id != NULL if the connection&&&&  is established or not.&&&&- RDMAContext::cm_id is leaked and not destroyed because it is set to NULL&&&&  too early.&&&&- RDMAContext::qp is created by rdma_create_qp() so that it should be destroyed&&&&  by rdma_destroy_qp(). not ibv_destroy_qp()&&&&&&&&Cc: Michael R. Hines <mrhines@us.ibm.com>&&&&Signed-off-by: Isaku Yamahata <yamahata@private.email.ne.jp>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
1," qemu-iotests: Snapshotting zero clusters This test creates an image with unallocated zero clusters, then creates&&&&a snapshot. Afterwards, there should be neither any errors nor leaks.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, qcow2: Add corrupt bit This adds an incompatible bit indicating corruption to qcow2. Any image&&&&with this bit set may not be written to unless for repairing (and&&&&subsequently clearing the bit if the repair has been successful).&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," block: better error message for read only format name When user tries to use read-only whitelist format in the command line&&&&option, failure message was ""'foo' invalid format"". It might be invalid&&&&only for writable, but valid for read-only, so it is confusing. Give the&&&&user easier to understand information.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," tests: adjust test-thread-pool to new aio_poll() semantics aio_poll(ctx, true) will soon block when fd handlers have been set.&&&&Previously aio_poll() would return early if all .io_flush() returned&&&&false.  This means we need to check the equivalent of the .io_flush()&&&&condition *before* calling aio_poll(ctx, true) to avoid deadlock.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," xhci: fix segfault Guest trying to reset a endpoint of a disconnected device resulted in&&&&xhci trying to dereference uport while being NULL, thereby crashing&&&&qemu.  Fix that by adding a check.  Drop unused dev variable while&&&&touching that code bit.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," hw/openrisc: Avoid undefined shift in openrisc_pic_cpu_handler() In C99 signed shift (1 << 31) is undefined behavior, since the result&&&&exceeds INT_MAX.  Use 1U instead and move the shift after the check.&&&&&&&&Signed-off-by: Xi Wang <xi.wang@gmail.com>&&&&Acked-by: Jia Liu <proljc@gmail.com>&&&& "
1," target-mips: fix branch in likely delay slot tcg assert When a branch delay slot contains another branch instruction, the code&&&&generated raises an exception, however since is_branch==1,&&&&handle_delay_slot() doesn't get called immediately. This means&&&&ctx->bstate isn't set to BS_BRANCH, and the decoder continues decoding&&&&until a non-branch instruction is found.&&&&&&&&If the first branch was a branch likely instruction then each&&&&instruction after it generates code for the unlikely case, to go to the&&&&next tb starting after the delay slot. This results in multiple goto_tb&&&&tcg ops being generated with the same exit number. When debug is enabled&&&&this hits:&&&&&&&&tcg-op.h:2589: tcg_gen_goto_tb: Assertion `(tcg_ctx.goto_tb_issue_mask & (1 << idx)) == 0' failed.&&&&&&&&This is fixed by removing is_branch entirely, and calling&&&&handle_delay_slot() if (ctx.hflags & MIPS_HFLAG_BMASK) was set prior to&&&&the current instruction being decoded. This still prevents&&&&handle_delay_slot() being called immediately after a branch but allows&&&&it to still be called after a branch within a delay slot.&&&&&&&&Signed-off-by: James Hogan <james.hogan@imgtec.com>&&&&Signed-off-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," Fix iSCSI crash on SG_IO with an iovector Don't assume that SG_IO is always invoked with a simple buffer,&&&&check the iovec_count and if it is >= 1 then we need to pass an array&&&&of iovectors to libiscsi instead of just a plain buffer.&&&&&&&&Signed-off-by: Ronnie Sahlberg <ronniesahlberg@gmail.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, qemu-char: don't leak opts on error Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," block/nand: Formatting sweep Make this code closer to passing checkpatch. Mostly missing braces, but&&&&a few rogue tabs in there as well.&&&&&&&&Cc: qemu-trivial@nongnu.org&&&&&&&&Signed-off-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, configure: Add signed*signed check to [u]int128_t test clang 3.3 with -fsanitize=undefined will fail to link code containing an&&&&int128_t * int128_t multiply (http://llvm.org/bugs/show_bug.cgi?id=16404)&&&&so add this to our configure test for whether [u]int128_t are usable.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," xhci: fix address device Zero-initialize the set-address dummy USBPacket,&&&&also add buffer to avoid sanity checks triggering.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=929019&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," acpi_table_add(): extract and reimplement internals The new function acpi_table_install() installs any blob the caller passes&&&&in. In the next patches this function will be promoted from helper role to&&&&extern.&&&&&&&&Reimplementing the logic should make it easier to understand. It also&&&&removes a buffer overflow when&&&&&&&&    has_header &&&&&&    cumulative_file_size < ACPI_TABLE_HDR_SIZE - ACPI_TABLE_PFX_SIZE&&&&&&&&(In that case the g_realloc() call in the read() loop used to shrink the&&&&""acpi_tables"" array, causing an out-of-bounds read access when copying the&&&&header out of ""acpi_tables"".)&&&&&&&&The new code isn't more daring alignment-wise than its predecessor:&&&&""acpi_table_header"" is packed, and the uint32_t fields are at offsets 6,&&&&26, and 34.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Message-id: 1363821803-3380-7-git-send-email-lersek@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," ehci_free_packet: Discard finished packets when the queue is halted With pipelining it is possible to encounter a finished packet when cleaning&&&&the queue due to a halt. This happens when a non stall error happens while&&&&talking to a real device. In this case the queue on the usb-host side will&&&&continue processing packets, and we can have completed packets waiting in&&&&the queue after an error condition packet causing a halt.&&&&&&&&There are 2 reasons to discard the completed packets at this point, rather&&&&then trying to writing them back to the guest:&&&&&&&&1) The guest expect to be able to cancel and/or change packets after the&&&&packet with the error without doing an unlink, so writing them back may&&&&confuse the guest.&&&&&&&&2) Since the queue does not advance when halted, the writing back of these&&&&packets will fail anyways since p->qtdaddr != q->qtdaddr, so the&&&&ehci_verify_qtd call in ehci_writeback_async_complete_packet will fail.&&&&&&&&Note that 2) means that then only functional change this patch introduces&&&&is the printing of a warning when this scenario happens.&&&&&&&&Note that discarding these packets means that the guest driver and the device&&&&will get out of sync! This is unfortunate, but should not be a problem since&&&&with a non stall error (iow an io-error) the 2 are out of sync already anyways.&&&&Still this patch adds a warning to signal this happening.&&&&&&&&Note that sofar this has only been seen with a DVB-T receiver, which gives&&&&of a MPEG-2 stream, which allows for recovering from lost packets, see:&&&&https://bugzilla.redhat.com/show_bug.cgi?id=890320&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, target-ppc: Fix add and subf carry generation in narrow mode The set of computations used in b5a73f8d8a57e940f9bbeb399a9e47897522ee9a&&&&are only valid if the current word size == target_long size.  This failed&&&&to take ppc64 in 32-bit (narrow) mode into account.&&&&&&&&Add a NARROW_MODE macro to avoid conditional compilation.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
1," rtc-test: Fix test failures with recent glib As of glib 2.35.4, glib changed its logic for ordering test cases:&&&&&&&&https://bugzilla.gnome.org/show_bug.cgi?id=694487&&&&&&&&This was causing failures in rtc-test. Group the reordered test&&&&cases into their own suite, which maintains the original ordering.&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," net: fix unbounded NetQueue In the current implementation of qemu, running without a network&&&&backend will cause the queue to grow unbounded when the guest is&&&&transmitting traffic.&&&&&&&&This patch fixes the problem by implementing bounded size NetQueue,&&&&used with an arbitrary limit of 10000 packets, and dropping packets&&&&when the queue is full _and_ the sender does not pass a callback.&&&&&&&&The second condition makes sure that we never drop packets that&&&&contains a callback (which would be tricky, because the producer&&&&expects the callback to be run when all previous packets have been&&&&consumed; so we cannot run it when the packet is dropped).&&&&&&&&If documentation is correct, producers that submit a callback should&&&&stop sending when their packet is queued, so there is no real risk&&&&that the queue exceeds the max size by large values.&&&&&&&&Signed-off-by: Luigi Rizzo <rizzo@iet.unipi.it>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," vpc: Fix bdrv_open() error handling Return -errno instead of -1 on errors. While touching the&&&&code, fix a memory leak.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," iscsi: do not leak acb->buf when commands are aborted acb->buf is freed in the WRITE(16) callback, but this may not&&&&get called at all when commands are aborted.  Add another&&&&free in the ABORT TASK callback, which requires setting acb->buf&&&&to NULL everywhere.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," openpic: fix debug prints Fix various format errors when debug prints are enabled.  Also&&&&cause error checking to happen even when debug prints are not&&&&enabled, and consistently use 0x for hex output.&&&&&&&&Signed-off-by: Scott Wood <scottwood@freescale.com>&&&&[agraf: adjust for more recent code base, prettify DPRINTF macro]&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," qom: make object_delete usable for statically-allocated objects Store in the object the freeing function that will be used at deletion&&&&time.  This makes it possible to use object_delete on statically-allocated&&&&(embedded) objects.  Dually, it makes it possible to use object_unparent&&&&and object_unref without leaking memory, when the lifetime of object&&&&might extend until after the call to object_delete.&&&&&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," fbdev: fix pixman compile on old pixman My QEMU compile failed with the following error:&&&&&&&&qemu-pixman.c: In function 鈥榪emu_pixman_get_type鈥?&&&&qemu-pixman.c:24: error: 鈥楶IXMAN_TYPE_BGRA鈥?undeclared (first use in this function)&&&&qemu-pixman.c:24: error: (Each undeclared identifier is reported only once&&&&qemu-pixman.c:24: error: for each function it appears in.)&&&&&&&&Guard the PIXMAN_TYPE_BGRA branch like in the case right above the failing&&&&case, so that compilation is fixed. Functionality on such old pixman is a&&&&different question ;-).&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," usb: Add packet combining functions Currently we only do pipelining for output endpoints, since to properly&&&&support short-not-ok semantics we can only have one outstanding input&&&&packet. Since the ehci and uhci controllers have a limited per td packet&&&&size guests will split large input transfers to into multiple packets,&&&&and since we don't pipeline these, this comes with a serious performance&&&&penalty.&&&&&&&&This patch adds helper functions to (re-)combine packets which belong to 1&&&&transfer at the guest device-driver level into 1 large transger. This can be&&&&used by (redirection) usb-devices to enable pipelining for input endpoints.&&&&&&&&This patch will combine packets together until a transfer terminating packet&&&&is encountered. A terminating packet is a packet which meets one or more of&&&&the following conditions:&&&&1) The packet size is *not* a multiple of the endpoint max packet size&&&&2) The packet does *not* have its short-not-ok flag set&&&&3) The packet has its interrupt-on-complete flag set&&&&&&&&The short-not-ok flag of the combined packet is that of the terminating packet.&&&&Multiple combined packets may be submitted to the device, if the combined&&&&packets do not have their short-not-ok flag set, enabling true pipelining.&&&&&&&&If a combined packet does have its short-not-ok flag set the queue will&&&&wait with submitting further packets to the device until that packet has&&&&completed.&&&&&&&&Once enabled in the usb-redir and ehci code, this improves the speed (MB/s)&&&&of a Linux guest reading from a USB mass storage device by a factor of&&&&1.2 - 1.5.&&&&&&&&And the main reason why I started working on this, when reading from a pl2303&&&&USB<->serial converter, it combines the previous 4 packets submitted per&&&&device-driver level read into 1 big read, reducing the number of packets / sec&&&&by a factor 4, and it allows to have multiple reads outstanding. This allows&&&&for much better latency tolerance without the pl2303's internal buffer&&&&overflowing (which was happening at 115200 bps, without serial flow control).&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," migration: handle EAGAIN while reading QEMUFile This will never happen right now (the assertion would fail).  The&&&&next patch will set the socket or pipe in non-blocking mode, thus&&&&enabling this part of the code.&&&&&&&&Coroutines can just stop whenever they want with qemu_coroutine_yield.&&&&As soon as select tells the main loop that the migration stream is&&&&readable, the coroutine is re-entered directly in qemu_get_buffer,&&&&where it will read more data and pass it to the loading routines.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, tcg-sparc: Dump illegal opode contents Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," ppc: Make kvm_arch_put_registers() put *all* the registers At least when invoked with high enough 'level' arguments,&&&&kvm_arch_put_registers() is supposed to copy essentially all the cpu state&&&&as encoded in qemu's internal structures into the kvm state.  Currently&&&&the ppc version does not do this - it never calls KVM_SET_SREGS, for&&&&example, and therefore never sets the SDR1 and various other important&&&&though rarely changed registers.&&&&&&&&Instead, the code paths which need to set these registers need to&&&&explicitly make (conditional) kvm calls which transfer the changes to kvm.&&&&This breaks the usual model of handling state updates in qemu, where code&&&&just changes the internal model and has it flushed out to kvm automatically&&&&at some later point.&&&&&&&&This patch fixes this for Book S ppc CPUs by adding a suitable call to&&&&KVM_SET_SREGS and als to KVM_SET_ONE_REG to set the HIOR (the only register&&&&that is set with that call so far).  This lets us remove the hacks to&&&&explicitly set these registers from the kvmppc_set_papr() function.&&&&&&&&The problem still exists for Book E CPUs (which use a different version of&&&&the kvm_sregs structure).  But fixing that has some complications of its&&&&own so can be left to another day.&&&&&&&&Lkewise, there is still some ugly code for setting the PVR through special&&&&calls to SET_SREGS which is left in for now.  The PVR needs to be set&&&&especially early because it can affect what other features are available&&&&on the CPU, so I need to do more thinking to see if it can be integrated&&&&into the normal paths or not.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," cpu_physical_memory_write_rom() needs to do TB invalidates cpu_physical_memory_write_rom(), despite the name, can also be used to&&&&write images into RAM - and will often be used that way if the machine&&&&uses load_image_targphys() into RAM addresses.&&&&&&&&However, cpu_physical_memory_write_rom(), unlike cpu_physical_memory_rw()&&&&doesn't invalidate any cached TBs which might be affected by the region&&&&written.&&&&&&&&This was breaking reset (under full emu) on the pseries machine - we loaded&&&&our firmware image into RAM, and while executing it rewrite the code at&&&&the entry point (correctly causing a TB invalidate/refresh).  When we&&&&reset the firmware image was reloaded, but the TB from the rewrite was&&&&still active and caused us to get an illegal instruction trap.&&&&&&&&This patch fixes the bug by duplicating the tb invalidate code from&&&&cpu_physical_memory_rw() in cpu_physical_memory_write_rom().&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," ehci: Schedule async-bh when IAAD bit gets set After the ""ehci: Print a warning when a queue unexpectedly contains packets&&&&on cancel"" commit. Under certain reproducable conditions I was getting the&&&&following message: ""EHCI: Warning queue not empty on queue reset"".&&&&&&&&After aprox. 8 hours of debugging I've finally found the cause. The Linux EHCI&&&&driver has an IAAD watchdog, to work around certain EHCI hardware sometimes&&&&not acknowledging the doorbell at all. This watchdog has a timeout of 10 ms,&&&&which is less then the time between 2 runs through the async schedule when&&&&async_stepdown is at its highest value.&&&&&&&&Thus the watchdog can trigger, after which Linux clears the IAAD bit and&&&&re-uses the QH. IOW we were not properly detecting the unlink of the qh, due&&&&to us missing (ignoring for more then 10 ms) the IAAD command, which triggered&&&&the warning.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&& "
1," Adding qemu-seccomp.[ch] (v8) Signed-off-by: Eduardo Otubo <otubo@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&---&&&&v1:&&&& - I added a syscall struct using priority levels as described in the&&&&   libseccomp man page. The priority numbers are based to the frequency&&&&   they appear in a sample strace from a regular qemu guest run under&&&&   libvirt.&&&&&&&&   Libseccomp generates linear BPF code to filter system calls, those rules&&&&   are read one after another. The priority system places the most common&&&&   rules first in order to reduce the overhead when processing them.&&&&&&&&v1 -> v2:&&&& - Fixed some style issues&&&& - Removed code from vl.c and created qemu-seccomp.[ch]&&&& - Now using ARRAY_SIZE macro&&&& - Added more syscalls without priority/frequency set yet&&&&&&&&v2 -> v3:&&&& - Adding copyright and license information&&&& - Replacing seccomp_whitelist_count just by ARRAY_SIZE&&&& - Adding header protection to qemu-seccomp.h&&&& - Moving QemuSeccompSyscall definition to qemu-seccomp.c&&&& - Negative return from seccomp_start is fatal now.&&&& - Adding open() and execve() to the whitelis&&&&&&&&v3 -> v4:&&&& - Tests revealed a bigger set of syscalls.&&&& - seccomp_start() now has an argument to set the mode according to the&&&&   configure option trap or kill.&&&&&&&&v4 -> v5:&&&& - Tests on x86_64 required a new specific set of system calls.&&&& - libseccomp release 1.0.0: part of the API have changed in this last&&&&   release, had to adapt to the new function signatures.&&&& "
1," exec.c: fix dirty bitmap reallocation For each newly created RAM block, dirty bitmap is reallocated with g_realloc, which doesn't&&&&make any promises on initial content of new extra data in returned buffer. In theory,&&&&we initialize this new data with cpu_physical_memory_set_dirty_range() call. The&&&&problem is, cpu_physical_memory_set_dirty_range() has a side effect of incrementing&&&&ram_list.dirty_pages variable, but only for pages which are not already dirty. And&&&&page ""cleanliness"" is determined using the same not yet uninitialized dirty bitmap&&&&we've just reallocated. This results in inconsistency between real dirty page number&&&&and value in ram_list.dirty_pages variable, which in turn could (and will) result&&&&in errors during VM migration.&&&&Zero initialize new dirty bitmap bytes to fix this problem.&&&&&&&&Signed-off-by: Igor Mitsyanko <i.mitsyanko@samsung.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," SCSI: Update the sense code for PREVENT REMOVAL errors Change the sense codes for failures to eject a device that is locked&&&&by PREVENT_ALLOW_MEDIUM_REMOVAL from&&&&the generic MEDIA_LOAD_OR_EJECT_FAILED to the more specific&&&&MEDIUM_REMOVAL_PREVENTED.&&&&&&&&The second sense code is more accurate, and is also listed in MMC annex F&&&&for the recommended sense codes for MMC devices while the first sense code is not.&&&&&&&&Signed-off-by: Ronnie Sahlberg <ronniesahlberg@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," esp: add AMD PCscsi emulation (PCI SCSI adapter) The PCI version is supported in lots of Operating Systems,&&&&and has been successfully tested on:&&&&- MS DOS 6.22 (using DC390 driver)&&&&- MS Windows 3.11 (using DC390 driver)&&&&- MS Windows 98 SE (using default driver)&&&&- MS Windows NT 3.1 (using DC390 driver)&&&&- MS Windows NT 4.0 (using default driver)&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," configure: Don't run configure tests with -Werror enabled Don't run configure tests with -Werror in the compiler flags. The idea&&&&of -Werror is that it makes problems very obvious to developers, so&&&&they get fixed quickly. However, when running configure tests, failures&&&&due to -Werror are far from obvious -- they simply result in the test&&&&quietly failing when it should have passed. Not using -Werror is in&&&&line with recommended practice in the Autoconf world.&&&&&&&&This commit is essentially backing out the changes in commit 417c9d72.&&&&Instead we fix the problem that commit was trying to address in a&&&&different way: we add -Werror only for the test of the nss headers,&&&&with a comment that this is specifically intended to detect a bug&&&&in some releases of nss.&&&&&&&&We also have to clean up a bug in the smartcard test where it was&&&&trying to include smartcard_cflags in the test compile flags: this&&&&would always result in a failure with -Werror, because they include&&&&an escaped ""$(SRC_PATH)"" which is only valid when used in the final&&&&makefile.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," virtio-scsi: do not crash on adding buffers to the event queue The event queue is not supported yet and the handler does not&&&&have to do much anyway when buffers are added.  However, the&&&&handler is called unconditionally by the virtio layer, and this&&&&results in a crash as soon as buffers are added to the event&&&&queue because we pass NULL.&&&&&&&&Reported-by: Bryan Venteicher <bryanv@daemoninthecloset.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-arm: Implement privileged-execute-never (PXN) Implement the privileged-execute-never (PXN) translation table bit.&&&&It is implementation-defined whether this is implemented, so we give&&&&it its own ARM_FEATURE_ flag. LPAE requires PXN, so add also an&&&&LPAE feature flag and the implication logic, as a placeholder&&&&for actually implementing LPAE at a later date.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," do not include <libutil.h> needlessly or if it doesn't exist <libutil.h> and <util.h> on *BSD (some have one, some another)&&&&were #included just for openpty() declaration.  The only file&&&&where this function is actually used is qemu-char.c.&&&&&&&&In vl.c and net/tap-bsd.c, none of functions declared in libutil.h&&&&(login logout logwtmp timdomain openpty forkpty uu_lock realhostname&&&&fparseln and a few others depending on version) are used.&&&&&&&&Initially the code which is currently in qemu-char.c was in vl.c,&&&&it has been removed into separate file in commit 0e82f34d077dc2542&&&&Fri Oct 31 18:44:40 2008, but the #includes were left in vl.c.&&&&So with vl.c, we just remove includes - libutil.h, util.h and&&&&pty.h (which declares only openpty() and forkpty()) from there.&&&&&&&&The code in net/tap-bsd.c, which come from net/tap.c, had this&&&&&&&&commit 5281d757efa6e40d74ce124be048b08d43887555&&&&Author: Mark McLoughlin <markmc@redhat.com>&&&&Date:   Thu Oct 22 17:49:07 2009 +0100&&&&&&&&    net: split all the tap code out into net/tap.c&&&&&&&&Note this commit not only moved stuff out of net.c to net/tap.c,&&&&but also rewrote large portions of the tap code, and added these&&&&completely unnecessary #includes -- as usual, I question why such&&&&a misleading commit messages are allowed.&&&&&&&&Again, no functions defined in libutil.h or util.h on *BSD are&&&&used by neither net/tap.c nor net/tap-bsd.c.  Removing them.&&&&&&&&And finally, the only real user for these #includes, qemu-char.c,&&&&which actually uses openpty().  There, the #ifdef logic is wrong.&&&&A GLIBC-based system has <pty.h>, even if it is a variant of *BSD.&&&&So __GLIBC__ should be checked first, and instead of trying to&&&&include <libutil.h> or <util.h>, we include <pty.h>.  If it is not&&&&GLIBC-based, we check for variations between <*util.h> as before.&&&&&&&&This patch fixes build of qemu 1.1 on Debian/kFreebsd (well, one&&&&of the two problems): it is a distribution with a FreeBSD kernel,&&&&so it #defines at least __FreeBSD_kernel__, but since it is based&&&&on GLIBC, it has <pty.h>, but current version does not have neither&&&&<util.h> nor <libutil.h>, which the code tries to include 3 times&&&&but uses only once.&&&&&&&&Signed-off-By: Michael Tokarev <mjt@tls.msk.ru>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," rtl8139: honor RxOverflow flag in can_receive method Some drivers (Linux' 8139too among them) rely on the NIC&&&&injecting an interrupt in the event of a receive buffer overflow&&&&and, accordingly, set the RxOverflow bit in the interrupt&&&&mask. Unfortunately rtl8139's can_receive method ignores the&&&&RxOverflow flag, which may lead to a situation where rtl8139&&&&stops receiving packets (can_receive returns 0) when the receive&&&&buffer becomes full.&&&&&&&&If the driver eventually read from the receive buffer or reset&&&&the card the emulator could recover from this situation. However&&&&some implementations only do this upon receiving an interrupt&&&&with either RxOK or RxOverflow set in the ISR; interrupt that&&&&will never come because QEMU's flow control mechanisms would&&&&prevent rtl8139 from receiving any packet.&&&&&&&&Letting packets go through when the overflow interrupt is enabled&&&&makes the QEMU emulator compliant to the spec and solves the&&&&problem.&&&&&&&&This patch should fix a relatively common (in our experience)&&&&network stall observed when running enterprise distros with&&&&rtl8139 as the NIC; in some cases the 8139too device driver gets&&&&loaded and when under heavy load the network eventually stops&&&&working.&&&&&&&&Reported-by: Hayato Kakuta <kakuta.hayato@oss.ntt.co.jp>&&&&Tested-by: Hayato Kakuta <kakuta.hayato@oss.ntt.co.jp>&&&&Acked-by: Igor Kovalenko <igor.v.kovalenko@gmail.com>&&&&Signed-off-by: Fernando Luis Vazquez Cao <fernando@oss.ntt.co.jp>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," block: prevent snapshot mode $TMPDIR symlink attack In snapshot mode, bdrv_open creates an empty temporary file without&&&&checking for mkstemp or close failure, and ignoring the possibility&&&&of a buffer overrun given a surprisingly long $TMPDIR.&&&&Change the get_tmp_filename function to return int (not void),&&&&so that it can inform its two callers of those failures.&&&&Also avoid the risk of buffer overrun and do not ignore mkstemp&&&&or close failure.&&&&Update both callers (in block.c and vvfat.c) to propagate&&&&temp-file-creation failure to their callers.&&&&&&&&get_tmp_filename creates and closes an empty file, while its&&&&callers later open that presumed-existing file with O_CREAT.&&&&The problem was that a malicious user could provoke mkstemp failure&&&&and race to create a symlink with the selected temporary file name,&&&&thus causing the qemu process (usually root owned) to open through&&&&the symlink, overwriting an attacker-chosen file.&&&&&&&&This addresses CVE-2012-2652.&&&&http://bugzilla.redhat.com/CVE-2012-2652&&&&&&&&Signed-off-by: Jim Meyering <meyering@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, virtio: check virtio_load return code Otherwise we crash on error.&&&&&&&&Signed-off-by: Ulrich Obergfell <uobergfe@redhat.com>&&&&Signed-off-by: Orit Wassermann <owasserm@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, ISCSI: Add support for thin-provisioning via discard/UNMAP and bigger LUNs Update the configure test for libiscsi support to detect version 1.3&&&&or later.  Version 1.3 of libiscsi provides both READCAPACITY16 as well&&&&as UNMAP commands.&&&&&&&&Update the iscsi block layer to use READCAPACITY16 to detect the size of&&&&the LUN instead of READCAPACITY10. This allows support for LUNs larger&&&&than 2TB.&&&&&&&&Update to implement bdrv_aio_discard() using the UNMAP command.&&&&This allows us to use thin-provisioned LUNs from TGTD and other iSCSI&&&&targets that support thin-provisioning.&&&&&&&&Signed-off-by: Ronnie Sahlberg <ronniesahlberg@gmail.com>&&&&[squashed in subsequent patch from Ronnie to fix off-by-one in LBA count]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," slirp: don't use ""smb ports = 0"" option The ""smb ports = 0"" option causes recent samba versions to crash. It was&&&&introduced in commit 157777ef3e with log message ""Samba 3 support"".&&&&However, a value of 0 has never been officially supported by smb and is&&&&also not necessary: if stdin is a socket, smb does not try to listen on&&&&any ports and uses just stdin. This is necessary to support inetd based&&&&operation (otherwise smbd would always fail when called from inetd,&&&&because inetd already listens on the SMB port). Since samba has&&&&supported inetd operation since pre-3.x, it should be safe to rely on&&&&this feature. I have tested it with Samba 3.6.4 -- communication works&&&&fine, and smbd is not listening on any ports.&&&&&&&&I suspect the ""smb ports = 0"" hack may have been introduced when someone&&&&tested the qemu generated samba config from the command line with ""smbd&&&&-i"" and found it to fail (because then stdin isn't a socket).&&&&&&&&Signed-off-by: Nikolaus Rath <Nikolaus@rath.org>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
1," qcow2: Fix refcount block allocation during qcow2_alloc_cluster_at() Refcount block allocation and refcount table growth rely on&&&&s->free_cluster_index pointing to somewhere after the current&&&&allocation. Change qcow2_alloc_cluster_at() to fulfill this&&&&assumption.&&&&&&&&Without this change it could happen that a newly allocated refcount&&&&block and the allocated data block point to the same area in the image&&&&file, causing data corruption in the long run.&&&&&&&&This fixes a bug that became first visible after commit 250196f1.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, nbd: avoid out of bounds access to recv_coroutine array This can happen with a buggy or malicious server.&&&&&&&&Reported-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, softfloat: float*_to_int32_round_to_zero: don't assume int32 is 32 bits Code in the float64_to_int32_round_to_zero() function was assuming&&&&that int32 would not be wider than 32 bits; this meant it might&&&&not correctly detect the overflow case. We take the simple approach&&&&of using int32_t. Also fix equivalent issues in the functions&&&&for other float sizes.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1, virtio-scsi: call unregister_savevm properly This fixes a use-after-free when migrating after hot-unplug.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, pci: fix double free of romfile property The qdev property release function frees any string properties.  This was&&&&resulting in a double free during hot unplug.&&&&&&&&It manifests in network devices because block devices have a NULL romfile&&&&property by default.&&&&&&&&Cc: Michael Tsirkin <mst@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," virtio-blk: refuse SG_IO requests with scsi=off QEMU does have a ""scsi"" option (to be used like -device&&&&virtio-blk-pci,drive=foo,scsi=off).  However, it only&&&&masks the feature bit, and does not reject the command&&&&if a malicious guest disregards the feature bits and&&&&issues a request.&&&&&&&&Without this patch, using scsi=off does not protect you&&&&from CVE-2011-4127.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," kvm: x86: Add user space part for in-kernel i8259 Introduce the alternative 'kvm-i8259' device model that exploits KVM&&&&in-kernel acceleration.&&&&&&&&The PIIX3 initialization code is furthermore extended by KVM specific&&&&IRQ route setup. GSI injection differs in KVM mode from the user space&&&&model. As we can dispatch ISA-range IRQs to both IOAPIC and PIC inside&&&&the kernel, we do not need to inject them separately. This is reflected&&&&by a KVM-specific GSI handler.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
1," qemu-thread: implement joinable threads for Win32 Rewrite the handshaking between qemu_thread_create and the&&&&win32_start_routine, so that the thread can be joined without races.&&&&Similar handshaking is done now between qemu_thread_exit and&&&&qemu_thread_join.&&&&&&&&This also simplifies how QemuThreads are initialized.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qcow2: Fix order of refcount updates in qcow2_snapshot_goto The refcount updates must be moved so that in the worst case we can get&&&&cluster leaks, but refcounts may never be too low.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," qcow2: Rework qcow2_snapshot_create error handling Increase refcounts only after allocating a new L1 table has succeeded in&&&&order to make leaks less likely. If writing the snapshot table fails,&&&&revert in-memory state to be consistent with that on disk.&&&&&&&&While at it, make it return the real error codes instead of -1.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," msix: Prevent bogus mask updates on MMIO accesses >From: Jan Kiszka <jan.kiszka@siemens.com>&&&&&&&&Only accesses to the MSI-X table must trigger a call to&&&&msix_handle_mask_update, otherwise the vector&&&&value might be out of range.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," virtio-blk: pass full status to the guest When SCSI passthrough is being used by the guest with virtio-blk, the&&&&guest is not able to detect disk failures.  This is because the status&&&&field is expected by the guest driver to include also the msg_status,&&&&host_status and driver_status fields, but the device is only passing&&&&down the SCSI status.&&&&&&&&The patch fixes this, and also makes sure that the guest always sees a&&&&CHECK_CONDITION status when there is valid sense data.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qemu-queue: Introduce QLIST_INSERT_HEAD_RCU and dummy RCU wrappers. SynthFS needs a QLIST_INSERT_HEAD_RCU to make sure list instructions are not&&&&re-ordered and therefore avoiding a crash. There may be parallel readers which&&&&should be allowed for lock-free access and this variant allows us to get rid&&&&of rwlocks used by readers.&&&&&&&&SynthFS is a special case where we dont really need full RCU capabilities as&&&&it doesnt allow list entry deletion but concurrent readers/writers and&&&&instruction re-ordering should not result in a crash.&&&&&&&&Also, once the real rcu is available, dummy rcu macro definitions will go away&&&&and the code will still work as expected.&&&&&&&&This patchwork is based on inputs from Paolo Bonzini.&&&&&&&&Signed-off-by: Harsh Prateek Bora <harsh@linux.vnet.ibm.com>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& "
1, target-xtensa: implement exceptions - mark privileged opcodes with ring check;&&&&- make debug exception on exception handler entry.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," usb: fix use after free The ->complete() callback might have released the USBPacket (uhci&&&&actually does), so we must not touch it after the callback returns.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," target-xtensa: add gdb support Specific xtensa processor overlay for GDB contains register map in&&&&the gdb/xtensa-config.c. This description is used by the GDB to e.g.&&&&parse 'g' response packets and it may be reused in the qemu's gdbstub&&&&(only XTREG definitions for non-pseudoregisters are needed).&&&&&&&&Currently mainline GDB does not support operations with privileged SRs&&&&(see http://sourceware.org/ml/gdb/2011-07/msg00075.html). This support&&&&may be enabled, see NUM_CORE_REGS comment in the gdbstub.c&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," trace: avoid conditional code compilation during option parsing A default implementation for backend-specific routines is provided in&&&&""trace/default.c"", which backends can override by setting ""trace_default=no"" in&&&&""configure"".&&&&&&&&Signed-off-by: Llu铆s Vilanova <vilanova@ac.upc.edu>&&&& "
1, vga: Silence bogus gcc warning about uninitialized variables Some gcc versions do not properly detect that all possible cases are&&&&covered and base and size are always initialized. Please gcc by defining&&&&a pseudo default case.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," block: add cache=directsync parameter to -drive This patch adds -drive cache=directsync for O_DIRECT | O_SYNC host file&&&&I/O with no disk write cache presented to the guest.&&&&&&&&This mode is useful when guests may not be sending flushes when&&&&appropriate and therefore leave data at risk in case of power failure.&&&&When cache=directsync is used, write operations are only completed to&&&&the guest when data is safely on disk.&&&&&&&&This new mode is like cache=writethrough but it bypasses the host page&&&&cache.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Check fread() results to avoid gcc 4.6 warnings When compiling with gcc 4.6, some code in fw_cfg.c complains that fop_ret&&&&is assigned but not used (which is true).  However, it looks like the&&&&meaningless assignments to fop_ret were done to suppress other gcc warnings&&&&due to the fact that fread() is labelled as warn_unused_result in glibc.&&&&&&&&This patch avoids both errors, by actually checking the fread() result code&&&&and dropping out with an error message if it fails.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Tested-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," block/vpc.c: Detect too-large vpc file VHD files technically can be up to 2Tb, but virtual pc is limited&&&&to 127G.  Currently qemu-img refused to create vpc files > 127G,&&&&but it is failing to return error when converting from a non-vpc&&&&VHD file which is >127G.  It returns success, but creates a truncated&&&&converted image.  Also, qemu-img info claims the vpc file is 127G&&&&(and clean).&&&&&&&&This patch detects a too-large vpc file and returns -EFBIG.  Without&&&&this patch,&&&&&&&&=============================================================&&&&root@ip-10-38-123-242:~/qemu-fixed# qemu-img info /mnt/140g-dynamic.vhd&&&&image: /mnt/140g-dynamic.vhd&&&&file format: vpc&&&&virtual size: 127G (136899993600 bytes)&&&&disk size: 284K&&&&root@ip-10-38-123-242:~/qemu-fixed# qemu-img convert -f vpc -O raw /mnt/140g-dynamic.vhd /mnt/y&&&&root@ip-10-38-123-242:~/qemu-fixed# echo $?&&&&0&&&&root@ip-10-38-123-242:~/qemu-fixed# qemu-img info /mnt/y&&&&image: /mnt/y&&&&file format: raw&&&&virtual size: 127G (136899993600 bytes)&&&&disk size: 0&&&&=============================================================&&&&&&&&(The 140G image was truncated with no warning or error.)&&&&&&&&With the patch, I get:&&&&&&&&=============================================================&&&&root@ip-10-38-123-242:~/qemu-fixed# ./qemu-img info /mnt/140g-dynamic.vhd&&&&qemu-img: Could not open '/mnt/140g-dynamic.vhd': File too large&&&&root@ip-10-38-123-242:~/qemu-fixed# ./qemu-img convert -f vpc -O raw /mnt/140g-dynamic.vhd /mnt/y&&&&qemu-img: Could not open '/mnt/140g-dynamic.vhd': File too large&&&&qemu-img: Could not open '/mnt/140g-dynamic.vhd'&&&&=============================================================&&&&&&&&See https://bugs.launchpad.net/qemu/+bug/814222 for details.&&&&&&&&Signed-off-by: Serge Hallyn <serge.hallyn@canonical.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Don't translate pointer when in restore_sigcontext Fixes crash in i386 when user emulation base address is non-zero.&&&&&&&&21797 rt_sigreturn(8,1082124603,1,0,1082126048,1082126248)Exit reason and status: signal 11&&&&&&&&Signed-off-by: Mike McCormack <mj.mccormack@samsung.com>&&&&Signed-off-by: Riku Voipio <riku.voipio@iki.fi>&&&& "
1, qed: Fix consistency check on 32-bit hosts The qed_bytes_to_clusters() function is normally used with size_t&&&&lengths.  Consistency check used it with file size length and therefore&&&&failed on 32-bit hosts when the image file is 4 GB or more.&&&&&&&&Make qed_bytes_to_clusters() explicitly 64-bit and update consistency&&&&check to keep 64-bit cluster counts.&&&&&&&&Reported-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," hw/xen_disk: ioreq not finished on error Bug fix: routines 'ioreq_runio_qemu_sync' and 'ioreq_runio_qemu_aio'&&&&won't call 'ioreq_unmap' or 'ioreq_finish' on errors, leaving ioreq in&&&&the blkdev->inflight list and a leak.&&&&&&&&Signed-off-by: Feiran Zheng <famcool@gmail.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," spice: add SASL support Turn on SASL support by appending ""sasl"" to the spice arguments, which&&&&requires that the client use SASL to authenticate with the spice.  The&&&&exact choice of authentication method used is controlled from the&&&&system / user's SASL configuration file for the 'qemu' service. This&&&&is typically found in /etc/sasl2/qemu.conf. If running QEMU as an&&&&unprivileged user, an environment variable SASL_CONF_PATH can be used&&&&to make it search alternate locations for the service config.  While&&&&some SASL auth methods can also provide data encryption (eg GSSAPI),&&&&it is recommended that SASL always be combined with the 'tls' and&&&&'x509' settings to enable use of SSL and server certificates. This&&&&ensures a data encryption preventing compromise of authentication&&&&credentials.&&&&&&&&It requires support from spice 0.8.1.&&&&&&&&[ kraxel: moved spell fix to separate commit ]&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," hw/fmopl: Fix buffer access out-of-bounds errors Index 75 is one too large for AR_TABLE[75], DR_TABLE[75].&&&&This error was reported by cppcheck.&&&&&&&&hw/fmopl.c:600: error: Buffer access out-of-bounds: OPL.AR_TABLE&&&&hw/fmopl.c:601: error: Buffer access out-of-bounds: OPL.DR_TABLE&&&&&&&&Fix this by limiting the access to the allowed range.&&&&MultiArcadeMachineEmulator has newer versions of fmopl,&&&&but using these requires more efforts.&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Reviewed-by: malc <av1474@comtv.ru>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1, hw/slavio_intctl.c: fix gcc warning about array bounds overrun The Ubuntu 10.10 gcc for ARM complains that we might be overrunning&&&&the cpu_irqs[][] array: silence this by correcting the bounds on the&&&&loop. (In fact we would not have overrun the array because bit&&&&MAX_PILS in pil_pending and irl_out will always be 0.)&&&&&&&&Also add a comment about why the loop's lower bound is OK.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," kvm: x86: Fix DPL write back of segment registers The DPL is stored in the flags and not in the selector. In fact, the RPL&&&&may differ from the DPL at some point in time, and so we were corrupting&&&&the guest state so far.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," user: speed up init_paths a bit The current init_paths code will attempt to opendir() every single file it&&&&finds.  This can obviously generated a huge number of syscalls with even a&&&&moderately small sysroot that will fail.  Since the readdir() call provides&&&&the file type in the struct itself, use it.  On my system, this prevents&&&&over 1000 syscalls from being made at every invocation of a target binary,&&&&and I only have a C library installed.&&&&&&&&Signed-off-by: Mike Frysinger <vapier@gentoo.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@nokia.com>&&&& "
1," target-sh4: fix fpu disabled/illegal exception Illegal instructions in a slot delay should generate a slot illegal&&&&instruction exception instead of an illegal instruction exception.&&&&&&&&The current PC should be saved before generating such an exception,&&&&but should not be corrected if in a delay slot, given it's already&&&&done in the exception handler do_interrupt().&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," virtio-net: stop/start bh when appropriate Avoid sending out packets, and modifying&&&&memory, when VM is stopped.&&&&Add assert statements to verify this does not happen.&&&&&&&&Avoid scheduling bh when vhost-net is started.&&&&&&&&Stop bh when driver disabled bus mastering&&&&(we must not access memory after this).&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Tested-by: Jason Wang <jasowang@redhat.com>&&&& "
1," vvfat: Fix double free for opening the image rw Allocation and deallocation of bs->opaque is not in the control of a&&&&block driver. Therefore it should not set bs->opaque to a data structure&&&&used by another bs, or closing the image will lead to a double free.&&&&&&&&Signed-off-by: Kevin Wolf <mail@kevin-wolf.de>&&&& "
1," qemu-img convert: Use cache=unsafe for output image If qemu-img crashes during the conversion, the user will throw away the broken&&&&output file anyway and start over. So no need to be too cautious.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, usb-serial: Fail instead of crash when chardev is missing Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," ide: Improve error messages Use error_report(), because it points to the error location.&&&&&&&&Reword ""tried to assign twice"" messages to make it clear that we're&&&&complaining about the unit property.&&&&&&&&Report invalid unit property instead of failing silently.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, Avoid crash on '-usbdevice <device>' without parameters Many usbdevice_init implementors assume params is non-NULL.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@web.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," sparc32 don't mark page dirty when failing if the access check fails, the page can not be modified&&&&and shouldn't be marked dirty.&&&&The patch fixes the ""hsfs_putpage: dirty HSFS page""&&&&error in Solaris guests.&&&&&&&&Signed-off-by: Artyom Tarasenko <atar4qemu@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," qdev: fix thinko leading to guest crashes Without this fix, guest crashes with drive=virtio.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, raw-posix: Detect CDROM via ioctl on linux Current CDROM detection is hardcoded based on source file name.&&&&Make this smarter on linux by attempting a CDROM specific ioctl.&&&&&&&&This makes '-cdrom /dev/sr0' succeed with no media present.&&&&&&&&v2:&&&&    Give ioctl check higher priority than filename check.&&&&&&&&v3:&&&&    Actually initialize 'prio' variable.&&&&    Check for ioctl success rather than absence of specific failure.&&&&&&&&v4:&&&&    Explicitly mention that change is linux specific.&&&&&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, Don't leak file descriptors We're leaking file descriptors to child processes. Set FD_CLOEXEC on file&&&&descriptors that don't need to be passed to children to stop this misbehaviour.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," Send a RARP packet after migration. Currently, after a migration qemu sends a broadcast packet to update&&&&switches' MAC->port mappings.&&&&&&&&Unfortunately, it picks a random (constant) ethertype and crosses its&&&&fingers that no one else is using it.&&&&&&&&This patch causes it to send a RARP packet instead.  RARP was chosen for&&&&2 reasons.  One, it is always harmless, and will continue to be so even&&&&as new ethertypes are allocated.  Two, it is what VMware ESX sends, so&&&&people who write filtering rules for switches already know about it.&&&&&&&&I also changed the code to send SELF_ANNOUNCE_ROUNDS packets, instead of&&&&SELF_ANNOUNCE_ROUNDS + 1, and added a simple backoff scheme.&&&&&&&&Signed-off-by: Nolan Leake <nolan <at> sigbus.net>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Warn if value of qdev_init() isn't checked After qdev_init() fails, the device is gone.  Failure to check runs a&&&&high risk of use-after-free.&&&&&&&&Patchworks-ID: 35166&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," vnc: fix copyrect screen corruption When sending a copyrect command to the vnc client, we must also update&&&&the local server surface.  Otherwise the server's and the client's idea&&&&of the screen content run out of sync and screen updates don't work&&&&correctly.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Handle BH's queued by AIO completions in qemu_aio_flush() Without this, the call to qemu_aio_flush during migration doesn't&&&&actually flush all in-flight SCSI IOs.&&&&&&&&Signed-off-by: Nolan Leake <nolan <at> sigbus.net>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, xen_disk: move sanity check to the correct place Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," Add documentation for Multiboot The documentation shows how to use -kernel and friends for booting Linux,&&&&but obviously knows nothing about multiboot yet.&&&&&&&&Let's include some documentation for multiboot, so people know how to fully&&&&exploit this cool new feature.&&&&&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, net: Fix and improved ordered packet delivery Fix a race in qemu_send_packet when delivering deferred packets and&&&&add proper deferring also to qemu_sendv_packet.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&& 
1," qcow2 corruption: Fix alloc_cluster_link_l2 (Kevin Wolf) This patch fixes a qcow2 corruption bug introduced in SVN Rev 5861. L2 tables&&&&are big endian, so entries must be converted before being passed to functions.&&&&&&&&This bug is easy to trigger. The following script will create and destroy a&&&&qcow2 image (the header is gone after three loop iterations):&&&&&&&&    #!/bin/bash&&&&    qemu-img create -f qcow2 test.qcow 1M&&&&    for i in $(seq 1 10); do&&&&    qemu-system-x86_64 -hda test.qcow -monitor stdio > /dev/null 2>&1 <<EOF&&&&    savevm test-$i&&&&    quit&&&&    EOF&&&&    done&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7165 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Fix display breakage when resizing the screen (v2) (Avi Kivity) When the vga resolution changes, a new display surface is not allocated&&&&immediately; instead that is deferred until the next update.  However,&&&&if we're running without a display client attached, that won't happen&&&&and the next bitblt is likely to cause a segfault by overflowing the&&&&display surface.&&&&&&&&Fix by reallocating the display immediately when the resolution changes.&&&&&&&&Tested with (Windows|Linux) x (cirrus|std) x (curses|sdl).&&&&&&&&Changes from v1:&&&& - fix segfault when switching virtual consoles with curses&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6989 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Fix uninitialized variable warning r6322 introduced a warning pointed out by Jan Kiszka.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6342 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Make sure ACPI structures are byte-aligned Apparently, guests are very tolerant of corrupt ACPI tables because our &&&&tables have been badly corrupted for some time now.  A version of &&&&Knoppix using a 2.6.11 kernel refused to boot and it turned out it was &&&&due to the interrupt override table introduced by the recent HPET &&&&commit.&&&&&&&&This patch updates the BIOS and introduces a patch to pack the ACPI &&&&tables.  If you have a guest that used to work and is broken by the this &&&&commit, let me know.  We have some weird hacks in the tables that I &&&&suspect are work arounds for this bug.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6108 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Correctly initialize msr list in KVM I believe this was spotted by Gerd Hoffman but I can't find his patch &&&&now.  This will cause very subtle corruption on the heap because we &&&&don't allocate the appropriately sized buffer.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6017 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, uImage: don't leak file data or file descriptor (Hollis Blanchard) Signed-off-by: Hollis Blanchard <hollisb@us.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5761 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Make bottom halves more robust Bottom halves are supposed to not complete until the next iteration of the main&&&&loop.  This is very important to ensure that guests can not cause stack&&&&overflows in the block driver code.  Right now, if you attempt to schedule a&&&&bottom half within a bottom half callback, you will enter an infinite loop.&&&&&&&&This patch uses the same logic that we use for the IOHandler loop to make the&&&&bottom half processing robust in list manipulation while in a callback.&&&&&&&&This patch also introduces idle scheduling for bottom halves.  qemu_bh_poll()&&&&returns an indication of whether any bottom halves were successfully executed.&&&&qemu_aio_wait() uses this to immediately return if a bottom half was executed&&&&instead of waiting for a completion notification.&&&&&&&&qemu_bh_schedule_idle() works around this by not reporting the callback has&&&&run in the qemu_bh_poll loop.  qemu_aio_wait() probably needs some refactoring&&&&but that would require a larger code audit.  idle scheduling seems like a good&&&&compromise.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5572 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," ETRAX-FS: Add support for DMA channel resets, needed for recent linux kernels. * Correct numeric value for the RST state.&&&&* Add emulation for reseting a DMA channel.&&&&* Add a few sanity checks.&&&&* Make it compile with debug enabled.&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5147 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Revert ""fix power management timer overflow handling"" (Avi Kivity). The fix is bogus, causing sci to be deferred for longer and longer.&&&&&&&&Noticed by Alex Williamson.&&&&&&&&Signed-off-by: Avi Kivity <avi@qumranet.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4904 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Avoid decremented overflow. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4862 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Refactor and fix do_sendkey (Jan Kiszka). Looking at the sendkey implementation, planning to enhance it with a&&&&hold time argument, I found some potential out-of-bound access and not&&&&very readable code. Here is a fix for the former and a (subjective)&&&&improvement of the latter.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@web.de>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4657 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Revert fix for CVE-2008-0928. Will be fixed in a different way later. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@4041 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Add missing definition for number of input pins for the PowerPC 970 bus. Use proper INPUT_NB definitions to allocate PowerPC input pins structure,   fixing a buffer overflow in the 6xx bus case. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3659 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," by Aurelien Jarno. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2510 c046a42c-6fe2-441c-8c8c-71466251a162&&&& """
1, buffer overflow fix git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@932 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," hw/pci-bridge: fix QEMU crash because of pcie-root-port If we try to use more pcie_root_ports then available slots&&&&and an IO hint is passed to the port, QEMU crashes because&&&&we try to init the ""IO hint"" capability even if the device&&&&is not created.&&&&Fix it by checking for error before adding the capability,&&&&so QEMU can fail gracefully.&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," s390x/tcg: fixup TEST PROTECTION CC == 2 can only happen due to a protection exception, not if memory is&&&&not available (PGM_ADDRESSING). So all PGM_ADDRESSING exceptions have to&&&&be forwarded to the guest.&&&&&&&&Since the initial definition of TEST PROTECTION, we now read globals&&&&(e.g. PSW mask), so we have to correctly mark the instruction&&&&(otherwise, e.g. booting fedora 27 fails).&&&&&&&&Also, the architecture explicitly specifies which exceptions are&&&&forwarded to the guest, this makes the code a little nicer.&&&&&&&&Signed-off-by: David Hildenbrand <david@redhat.com>&&&&Message-Id: <20180112125452.8569-1-david@redhat.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
1, trace: Simplify find_debugfs() The return vale of find_debugfs() is 1 if it could find a mount point of&&&&debugfs.  It can be saved in the while loop instead of checking it again.&&&&&&&&Signed-off-by: Namhyung Kim <namhyung@gmail.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, xilinx_spips: Don't set TX FIFO UNDERFLOW at cmd done Don't set TX FIFO UNDERFLOW interrupt after transmitting the commands.&&&&Also update interrupts after reading out the interrupt status.&&&&&&&&Signed-off-by: Francisco Iglesias <frasse.iglesias@gmail.com>&&&&Acked-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Tested-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Message-id: 20171126231634.9531-12-frasse.iglesias@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," migration/ram.c: do not set 'postcopy_running' in POSTCOPY_INCOMING_END When migrating a VM with 'migrate_set_capability postcopy-ram on'&&&&a postcopy_state is set during the process, ending up with the&&&&state POSTCOPY_INCOMING_END when the migration is over. This&&&&postcopy_state is taken into account inside ram_load to check&&&&how it will load the memory pages. This same ram_load is called when&&&&in a loadvm command.&&&&&&&&Inside ram_load, the logic to see if we're at postcopy_running state&&&&is:&&&&&&&&postcopy_running = postcopy_state_get() >= POSTCOPY_INCOMING_LISTENING&&&&&&&&postcopy_state_get() returns this enum type:&&&&&&&&typedef enum {&&&&    POSTCOPY_INCOMING_NONE = 0,&&&&    POSTCOPY_INCOMING_ADVISE,&&&&    POSTCOPY_INCOMING_DISCARD,&&&&    POSTCOPY_INCOMING_LISTENING,&&&&    POSTCOPY_INCOMING_RUNNING,&&&&    POSTCOPY_INCOMING_END&&&&} PostcopyState;&&&&&&&&In the case where ram_load is executed and postcopy_state is&&&&POSTCOPY_INCOMING_END, postcopy_running will be set to 'true' and&&&&ram_load will behave like a postcopy is in progress. This scenario isn't&&&&achievable in a migration but it is reproducible when executing&&&&savevm/loadvm after migrating with 'postcopy-ram on', causing loadvm&&&&to fail with Error -22:&&&&&&&&Source:&&&&&&&&(qemu) migrate_set_capability postcopy-ram on&&&&(qemu) migrate tcp:127.0.0.1:4444&&&&&&&&Dest:&&&&&&&&(qemu) migrate_set_capability postcopy-ram on&&&&(qemu)&&&&ubuntu1704-intel login:&&&&Ubuntu 17.04 ubuntu1704-intel ttyS0&&&&&&&&ubuntu1704-intel login: (qemu)&&&&(qemu) savevm test1&&&&(qemu) loadvm test1&&&&Unknown combination of migration flags: 0x4 (postcopy mode)&&&&error while loading state for instance 0x0 of device 'ram'&&&&Error -22 while loading VM state&&&&(qemu)&&&&&&&&This patch fixes this problem by changing the existing logic for&&&&postcopy_advised and postcopy_running in ram_load, making them&&&&'false' if we're at POSTCOPY_INCOMING_END state.&&&&&&&&Signed-off-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>&&&&CC: Juan Quintela <quintela@redhat.com>&&&&CC: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Peter Xu <peterx@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Reported-by: Balamuruhan S <bala24@linux.vnet.ibm.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1, qemu-iotest: add test for blockjob coroutine race condition Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," nbd: Don't crash when server reports NBD_CMD_READ failure If a server fails a read, for example with EIO, but the connection&&&&is still live, then we would crash trying to print a non-existent&&&&error message in nbd_client_co_preadv().  For consistency, also&&&&change the error printout in nbd_read_reply_entry(), although that&&&&instance does not crash.  Bug introduced in commit f140e300.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171112013936.5942-1-eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&& "
1," block: Make bdrv_next() keep strong references On one hand, it is a good idea for bdrv_next() to return a strong&&&&reference because ideally nearly every pointer should be refcounted.&&&&This fixes intermittent failure of iotest 194.&&&&&&&&On the other, it is absolutely necessary for bdrv_next() itself to keep&&&&a strong reference to both the BB (in its first phase) and the BDS (at&&&&least in the second phase) because when called the next time, it will&&&&dereference those objects to get a link to the next one.  Therefore, it&&&&needs these objects to stay around until then.  Just storing the pointer&&&&to the next in the iterator is not really viable because that pointer&&&&might become invalid as well.&&&&&&&&Both arguments taken together means we should probably just invoke&&&&bdrv_ref() and blk_ref() in bdrv_next().  This means we have to assert&&&&that bdrv_next() is always called from the main loop, but that was&&&&probably necessary already before this patch and judging from the&&&&callers, it also looks to actually be the case.&&&&&&&&Keeping these strong references means however that callers need to give&&&&them up if they decide to abort the iteration early.  They can do so&&&&through the new bdrv_next_cleanup() function.&&&&&&&&Suggested-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 20171110172545.32609-1-mreitz@redhat.com&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," s390x/css: unrestrict cssids The default css 0xfe is currently restricted to virtual subchannel&&&&devices. The hope when the decision was made was, that non-virtual&&&&subchannel devices will come around when guest can exploit multiple&&&&channel subsystems. Since the guests generally don't do, the pain&&&&of the partitioned (cssid) namespace outweighs the gain.&&&&&&&&Let us remove the corresponding restrictions (virtual devices&&&&can be put only in 0xfe and non-virtual devices in any css except&&&&the 0xfe -- while s390-squash-mcss then remaps everything to cssid 0).&&&&&&&&At the same time, change our schema for generating css bus ids to put&&&&both virtual and non-virtual devices into the default css (spilling over&&&&into other css images, if needed). The intention is to deprecate&&&&s390-squash-mcss. With this change devices without a specified devno&&&&won't end up hidden to guests not supporting multiple channel subsystems,&&&&unless this can not be avoided (default css full).&&&&&&&&Let us also advertise the changes to the management software (so it can&&&&tell are cssids unrestricted or restricted).&&&&&&&&The adverse effect of getting rid of the restriction on migration should&&&&not be too severe.  Vfio-ccw devices are not live-migratable yet, and for&&&&virtual devices using the extra freedom would only make sense with the&&&&aforementioned guest support in place.&&&&&&&&The auto-generated bus ids are affected by both changes. We hope to not&&&&encounter any auto-generated bus ids in production as Libvirt is always&&&&explicit about the bus id.  Since 8ed179c937 (""s390x/css: catch section&&&&mismatch on load"", 2017-05-18) the worst that can happen because the same&&&&device ended up having a different bus id is a cleanly failed migration.&&&&I find it hard to reason about the impact of changed auto-generated bus&&&&ids on migration for command line users as I don't know which rules is&&&&such an user supposed to follow.&&&&&&&&Another pain-point is down- or upgrade of QEMU for command line users.&&&&The old way and the new way of doing vfio-ccw are mutually incompatible.&&&&Libvirt is only going to support the new way, so for libvirt users, the&&&&possible problems at QEMU downgrade are the following. If a domain&&&&contains virtual devices placed into a css different than 0xfe the domain&&&&will refuse to start with a QEMU not having this patch. Putting devices&&&&into a css different that 0xfe however won't make much sense in the near&&&&future (guest support). Libvirt will refuse to do vfio-ccw with a QEMU&&&&not having this patch. This is business as usual.&&&&&&&&Signed-off-by: Halil Pasic <pasic@linux.vnet.ibm.com>&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Reviewed-by: Dong Jia Shi <bjsdjshi@linux.vnet.ibm.com>&&&&Message-Id: <20171206144438.28908-2-pasic@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cohuck@redhat.com>&&&& "
1, tests: Run the luks tests in test-crypto-block only if encryption is available The test-crypto-block currently fails if encryption has not been&&&&compiled into QEMU:&&&&&&&&TEST: tests/test-crypto-block... (pid=22231)&&&&  /crypto/block/qcow:                                                  OK&&&&  /crypto/block/luks/default:&&&&  Unexpected error in qcrypto_pbkdf2() at qemu/crypto/pbkdf-stub.c:41:&&&&FAIL&&&&GTester: last random seed: R02Sbbb5b6f299c6727f41bb50ba4aa6ef5c&&&&(pid=22237)&&&&  /crypto/block/luks/aes-256-cbc-plain64:&&&&  Unexpected error in qcrypto_pbkdf2() at qemu/crypto/pbkdf-stub.c:41:&&&&FAIL&&&&GTester: last random seed: R02S3e27992a5ab4cc95e141c4ed3c7f0d2e&&&&(pid=22239)&&&&  /crypto/block/luks/aes-256-cbc-essiv:&&&&  Unexpected error in qcrypto_pbkdf2() at qemu/crypto/pbkdf-stub.c:41:&&&&FAIL&&&&GTester: last random seed: R02S51b52bb02a66c42d8b331fd305384f53&&&&(pid=22241)&&&&FAIL: tests/test-crypto-block&&&&&&&&So run the luks test only if the required encryption support is available.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
1," sockets: avoid leak of listen file descriptor If we iterate over the full port range without successfully binding+listening&&&&on the socket, we'll try the next address, whereupon we overwrite the slisten&&&&file descriptor variable without closing it.&&&&&&&&Rather than having two places where we open + close socket FDs on different&&&&iterations of nested for loops, re-arrange the code to always open+close&&&&within the same loop iteration.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," Revert ""qdev: Free QemuOpts when the QOM path goes away"" This reverts commit abed886ec60cf239a03515cf0b30fb11fa964c44.&&&&&&&&This patch originally addressed an issue where a DEVICE_DELETED&&&&event could be emitted (in device_unparent()) before a Device's&&&&QemuOpts were cleaned up (in device_finalize()), leading to a&&&&""duplicate ID"" error if management attempted to immediately add&&&&a device with the same ID in response to the DEVICE_DELETED event.&&&&&&&&An alternative will be implemented in a subsequent patch where we&&&&defer the DEVICE_DELETED event until device_finalize(), which would&&&&also prevent the race, so we revert the original fix in preparation.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Tested-by: Eric Auger <eric.auger@redhat.com>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&Message-Id: <20171016222315.407-3-mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," hw/ppc/spapr.c: abort unplug_request if previous unplug isn't done LMB removal is completed only when the spapr_lmb_release callback&&&&is called after all DRCs of the dimm are detached. During this&&&&time, it is possible that a unplug request for the same dimm&&&&arrives, trying to detach DRCs that were detached by the guest&&&&in the first unplug_request.&&&&&&&&BQL doesn't help in this case - the lock will prevent any concurrent&&&&removal from happening until the end of spapr_memory_unplug_request&&&&only. What happens is that the second unplug_request ends up calling&&&&spapr_drc_detach in a DRC that were detached already, causing an&&&&assert error in spapr_drc_detach (e.g&&&&https://bugs.launchpad.net/qemu/+bug/1718118).&&&&&&&&spapr_lmb_release uses a structure called sPAPRDIMMState, stored in the&&&&spapr->pending_dimm_unplugs QTAIL, to track how many LMB DRCs are left&&&&to be detached by the guest. When there are no more DRCs left, this&&&&structure is deleted and the pc-dimm unplug handler is called to&&&&finish the process.&&&&&&&&This patch reuses the sPAPRDIMMState to allow unplug_request to know&&&&if there is an ongoing unplug process for a given dimm, aborting the&&&&unplug request in this case, by doing the following changes:&&&&&&&&- in spapr_lmb_release callback, move the dimm state removal to the&&&&end, after pc-dimm unplug handler. With this change we can check for&&&&the existence of the dimm state to see if the unplug process is&&&&done.&&&&&&&&- use spapr_pending_dimm_unplugs_find in spapr_memory_unplug_request&&&&to check if the dimm state exists. If positive, there is an unplug&&&&operation already in progress for this dimm, meaning that we should&&&&abort it and warn the user about it.&&&&&&&&Fixes: https://bugs.launchpad.net/qemu/+bug/1718118&&&&Signed-off-by: Daniel Henrique Barboza <danielhb@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," filter-mirror: segfault when specifying non existent device When using filter-mirror like the example below where the interface&&&&'ndev0' does not exist on the host, QEMU crashes into segmentation&&&&fault.&&&&&&&& $ qemu-system-x86_64 -S -machine pc -netdev user,id=ndev0 -object filter-mirror,id=test-object,netdev=ndev0&&&&&&&&This happens because the function filter_mirror_setup() does not check&&&&if the device actually exists and still keep on processing calling&&&&qemu_chr_find(). This patch fixes this issue.&&&&&&&&Signed-off-by: Eduardo Otubo <otubo@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, io: fix mem leak in websock error path Coverity pointed out the 'date' is not free()d in the error&&&&path&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& 
1," hw/arm: Mark the ""fsl,imx6"" device with user_creatable = false This device causes QEMU to abort if the user tries to instantiate it:&&&&&&&&$ qemu-system-aarch64 -M sabrelite -smp 1,maxcpus=2 -device fsl,,imx6&&&&Unexpected error in qemu_chr_fe_init() at chardev/char-fe.c:222:&&&&qemu-system-aarch64: -device fsl,,imx6: Device 'serial0' is in use&&&&Aborted (core dumped)&&&&&&&&The device uses serial_hds[] directly in its realize function, so it&&&&can not be instantiated again by the user.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-id: 1509519537-6964-2-git-send-email-thuth@redhat.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," hw/pci-bridge/pcie_pci_bridge: properly handle MSI unavailability case QEMU with the pcie-pci-bridge device crashes if the guest board doesn't support MSI,&&&&e.g. 'qemu-system-ppc64 -M prep -device pcie-pci-bridge'.&&&&This is caused by wrong pcie-pci-bridge instantiation error handling. This patch fixes this issue&&&&by falling back to legacy INTx if MSI is not available.&&&&Also set the bridge's 'msi' property default value to 'auto' in order to trigger errors&&&&only when user explicitly set msi=on.&&&&&&&&Reported-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Aleksandr Bezzubikov <zuban32s@gmail.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Tested-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," docker: don't rely on submodules existing in the main checkout When building the tarball to pass into the docker/vm test image,&&&&the code relies on the git submodules being checked out in the&&&&main checkout.&&&&&&&&ie if the developer has not run 'git submodule update --init dtc'&&&&many of the docker tests will fail due to the libfdt package not&&&&being present in the test images. Patchew manually checks out the&&&&dtc submodule in the main git checkout, but this is a bad idea.&&&&&&&&When running tests we want to have a predictable set of submodules&&&&included in the source that's tested. The build environment is&&&&completely independent of the developers host OS, so the submodules&&&&the developer has checked out should not be considered relevant for&&&&the tests.&&&&&&&&This changes the archive-source.sh script so that it clones the&&&&current git checkout into a temporary directory, checks out a&&&&fixed set of submodules, builds the tarball and finally removes&&&&the temporary git clone.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170929101201.21039-3-berrange@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," chardev/baum: fix baum that releases brlapi twice Error process of baum_chr_open needs to set brlapi null, so it won't&&&&get released twice in char_braille_finalize, which will cause&&&&""/usr/bin/qemu-system-x86_64: double free or corruption (!prev)""&&&&&&&&Signed-off-by: Liang Yan <lyan@suse.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," osdep: Fix ROUND_UP(64-bit, 32-bit) When using bit-wise operations that exploit the power-of-two&&&&nature of the second argument of ROUND_UP(), we still need to&&&&ensure that the mask is as wide as the first argument (done&&&&by using a ternary to force proper arithmetic promotion).&&&&Unpatched, ROUND_UP(2ULL*1024*1024*1024*1024, 512U) produces 0,&&&&instead of the intended 2TiB, because negation of an unsigned&&&&32-bit quantity followed by widening to 64-bits does not&&&&sign-extend the mask.&&&&&&&&Broken since its introduction in commit 292c8e50 (v1.5.0).&&&&Callers that passed the same width type to both macro parameters,&&&&or that had other code to ensure the first parameter's maximum&&&&runtime value did not exceed the second parameter's width, are&&&&unaffected, but I did not audit to see which (if any) existing&&&&clients of the macro could trigger incorrect behavior (I found&&&&the bug while adding a new use of the macro).&&&&&&&&While preparing the patch, checkpatch complained about poor&&&&spacing, so I also fixed that here and in the nearby DIV_ROUND_UP.&&&&&&&&CC: qemu-trivial@nongnu.org&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, replay: assert time only goes forward If we find ourselves trying to add an event to the log where time has&&&&gone backwards it is because a vCPU event has occurred and the&&&&main-loop is not yet aware of time moving forward. This should not&&&&happen and if it does its better to fail early than generate a log&&&&that will have weird behaviour.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&& 
1," unicore32: abort when entering ""x 0"" on the monitor Starting Qemu with ""qemu-system-unicore32 -M puv3,accel=qtest -S -nographic""&&&&and entering ""x 0 "" at the monitor prompt leads to abort():&&&&&&&&  $ ./unicore32-softmmu/qemu-system-unicore32 -M puv3,accel=qtest -S -nographic&&&&  QEMU 2.9.90 monitor - type 'help' for more information&&&&  (qemu) x 0&&&&  qemu: fatal: uc32_cpu_get_phys_page_debug not supported yet&&&&&&&&  R00=00000000 R01=00000000 R02=00000000 R03=00000000&&&&  R04=00000000 R05=00000000 R06=00000000 R07=00000000&&&&  R08=00000000 R09=00000000 R10=00000000 R11=00000000&&&&  R12=00000000 R13=00000000 R14=00000000 R15=00000000&&&&  R16=00000000 R17=00000000 R18=00000000 R19=00000000&&&&  R20=00000000 R21=00000000 R22=00000000 R23=00000000&&&&  R24=00000000 R25=00000000 R26=00000000 R27=00000000&&&&  R28=00000000 R29=00000000 R30=00000000 R31=03000000&&&&  PSR=40000013 -Z-- PRIV&&&&  Aborted (core dumped)&&&&&&&&This happens because uc32_cpu_get_phys_page_debug() is not implemented&&&&yet, this is a temporary workaround to avoid the crash.&&&&&&&&Signed-off-by: Eduardo Otubo <otubo@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, tests: check-qom-proplist: fix leak user_creatable_add_opts() returns a reference (the other reference is&&&&for the root parent/child link).&&&&&&&&Leak introduced in commit a1af255f065cc.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," tests/qmp-test: Add generic, basic test of query commands A command is a query if it has no side effect and yields a result.&&&&Such commands are typically named query-FOO, but there are exceptions.&&&&&&&&The basic idea is to find candidates with query-qmp-schema, filter out&&&&the ones that aren't queries with an explicit blacklist, and test the&&&&remaining ones against a QEMU with no special arguments.&&&&&&&&The current blacklist is just add-fd.&&&&&&&&The test can't do queries with arguments, because it knows nothing&&&&about the arguments.  No coverage for query-cpu-model-baseline,&&&&query-cpu-model-comparison, query-cpu-model-expansion, query-rocker,&&&&query-rocker-ports, query-rocker-of-dpa-flows, and&&&&query-rocker-of-dpa-groups.&&&&&&&&Most tested commands are expected to succeed.  The test does not check&&&&the return value then.&&&&&&&&query-balloon and query-vm-generation-id are expected to fail because&&&&they need a virtio-balloon / vmgenid device to succeed, and this test&&&&is too dumb to set one up.  Could be addressed later.&&&&&&&&query-acpi-ospm-status and query-hotpluggable-cpus are expected to&&&&fail because they require features provided only by special machine&&&&types, and this test is too dumb to set that up.  Could also be&&&&addressed later.&&&&&&&&Several commands may either be functional or stubs that always fail,&&&&depending on build configuration.  Ideally, the stubs shouldn't be in&&&&query-qmp-schema, but that requires QAPI schema compile-time&&&&configuration, which we don't have, yet.  Until we do, we need to&&&&figure out whether a command is a stub.  When we have a suitable&&&&CONFIG_FOO preprocessor symbol is available, use that.  Else,&&&&simply blacklist the command for now.&&&&&&&&We get basic test coverage for the following commands, except as&&&&noted:&&&&&&&&    qom-list-types&&&&    query-acpi-ospm-status      (expected to fail)&&&&    query-balloon               (expected to fail)&&&&    query-block&&&&    query-block-jobs&&&&    query-blockstats&&&&    query-chardev&&&&    query-chardev-backends&&&&    query-command-line-options&&&&    query-commands&&&&    query-cpu-definitions       (blacklisted for now)&&&&    query-cpus&&&&    query-dump&&&&    query-dump-guest-memory-capability&&&&    query-events&&&&    query-fdsets&&&&    query-gic-capabilities      (blacklisted for now)&&&&    query-hotpluggable-cpus     (expected to fail)&&&&    query-iothreads&&&&    query-kvm&&&&    query-machines&&&&    query-memdev&&&&    query-memory-devices&&&&    query-mice&&&&    query-migrate&&&&    query-migrate-cache-size&&&&    query-migrate-capabilities&&&&    query-migrate-parameters&&&&    query-name&&&&    query-named-block-nodes&&&&    query-pci                   (blacklisted for now)&&&&    query-qmp-schema&&&&    query-rx-filter&&&&    query-spice&&&&    query-status&&&&    query-target&&&&    query-tpm&&&&    query-tpm-models&&&&    query-tpm-types&&&&    query-uuid&&&&    query-version&&&&    query-vm-generation-id      (expected to fail)&&&&    query-vnc&&&&    query-vnc-servers&&&&    query-xen-replication-status&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1502461148-10154-1-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&[Typos in code under #ifndef and in the commit message fixed]&&&& "
1," block/vpc: fix uninitialised variable compiler warning Since commit cfc87e00 ""block/vpc.c: Handle write failures in&&&&get_image_offset()"" older versions of gcc (in this case 4.7) incorrectly&&&&warn that ""ret"" can be used uninitialised in vpc_co_pwritev().&&&&&&&&Setting ret to 0 at the start of vpc_co_pwritev() prevents the warning&&&&in gcc 4.7 and enables compilation with -Werror to succeed.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1500625265-23844-1-git-send-email-mark.cave-ayland@ilande.co.uk&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," block/vvfat: Fix compiler warning with gcc 7 gcc 7 complains that the sprintf() might write a null byte beyond the&&&&end of the tail buffer.  That is wrong, but we can silence it by making&&&&i unsigned (it can never be negative anyway, see the if condition right&&&&before).  For some reason, this allows gcc to suddenly accurately&&&&calculate the range of i so we can give the tail[] array the exact size&&&&it needs to have (which is 8 bytes) without gcc complaining.&&&&&&&&In addition, let us convert the sprintf() to snprintf(), because that is&&&&always nicer, and add an assertion about the range of the return value&&&&afterwards so we can see that ""8 - len"" will never be negative and thus&&&&""entry->name + MIN(j, 8 - len)"" will never be out of bounds.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qga-win: fix installation on localized windows Bug: https://bugzilla.redhat.com/show_bug.cgi?id=1357789&&&&Replace hardcoded user and group names (""Administrators"", ""SYSTEM"") with the ones acquired from system. Windows uses localized strings for these names and it may cause the installation to fail.&&&&Windows has Well-known SIDs for ""Administrators"" group and ""SYSTEM"" user so they were used to identify required users and groups.&&&&Well-known SIDs: https://support.microsoft.com/en-us/help/243330/well-known-security-identifiers-in-windows-operating-systems&&&&&&&&Signed-off-by: Daniel Rempel <daniel@daynix.com>&&&&Signed-off-by: Sameeh Jubran <sjubran@redhat.com>&&&&Reviewed-by: Sameeh Jubran <sameeh@daynix.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," target/mips: Check memory permissions with mem_idx When performing virtual to physical address translation, check the&&&&required privilege level based on the mem_idx rather than the mode in&&&&the hflags. This will allow EVA loads & stores to operate safely only on&&&&user memory from kernel mode.&&&&&&&&For the cases where the mmu_idx doesn't need to be overridden&&&&(mips_cpu_get_phys_page_debug() and cpu_mips_translate_address()), we&&&&calculate the required mmu_idx using cpu_mmu_index(). Note that this&&&&only tests the MIPS_HFLAG_KSU bits rather than MIPS_HFLAG_MODE, so we&&&&don't test the debug mode hflag MIPS_HFLAG_DM any longer. This should be&&&&fine as get_physical_address() only compares against MIPS_HFLAG_UM and&&&&MIPS_HFLAG_SM, neither of which should get set by compute_hflags() when&&&&MIPS_HFLAG_DM is set.&&&&&&&&Signed-off-by: James Hogan <james.hogan@imgtec.com>&&&&Reviewed-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Yongbok Kim <yongbok.kim@imgtec.com>&&&& "
1, test-uuid: fix leak ASAN spotted:&&&&SUMMARY: AddressSanitizer: 74 byte(s) leaked in 2 allocation(s).&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <20161109110210.25925-1-marcandre.lureau@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&& 
1, iotests: skip 048 with qcow which doesn't support resize Test 048 is designed to verify data preservation during an&&&&image resize. The qcow (v1) format impl has never supported&&&&resize so always fails.&&&&&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170623162419.26068-7-berrange@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& 
1," ppc/kvm: have the ""family"" CPU alias to point to TYPE_HOST_POWERPC_CPU When running KVM on POWER, we allow the user to pass ""-cpu POWERx"" instead&&&&of ""-cpu host"". This is achieved by patching the ppc_cpu_aliases[] array&&&&so that ""POWERx"" points to the CPU class with the same PVR as the host CPU.&&&&This causes CPUs to be instantiated from this CPU class instead of the&&&&TYPE_HOST_POWERPC_CPU class which is used with ""-cpu host"". These CPUs thus&&&&miss all the KVM specific tuning from kvmppc_host_cpu_class_init().&&&&&&&&This currently causes QEMU with ""-cpu POWER9"" to fail when running KVM on a&&&&POWER9 DD1 host:&&&&&&&&qemu-system-ppc64: Register sync failed... If you're using kvm-hv.ko, only&&&& ""-cpu host"" is possible&&&&kvm_init_vcpu failed: Invalid argument&&&&&&&&Let's have the ""POWERx"" alias to point to TYPE_HOST_POWERPC_CPU directly,&&&&so that ""-cpu POWERx"" instantiates CPUs from the same class as ""-cpu host"".&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Tested-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Laurent Vivier <lvivier@redhat.com>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," shippable: use C locale to simplify console output remove this noise:&&&&&&&&perl: warning: Setting locale failed.&&&&perl: warning: Please check that your locale settings:&&&&    LANGUAGE = (unset),&&&&    LC_ALL = ""en_US.UTF-8"",&&&&    LC_CTYPE = ""en_US.UTF-8"",&&&&    LANG = ""en_US.UTF-8""&&&&    are supported and installed on your system.&&&&&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&& "
1," spapr: fix memory leak in spapr_memory_pre_plug() The string returned by object_property_get_str() is dynamically allocated.&&&&&&&&(Spotted by Coverity, CID 1375942)&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," virtio-serial-bus: Unset hotplug handler when unrealize Virtio serial device controls the lifetime of virtio-serial-bus and&&&&virtio-serial-bus links back to the device via its hotplug-handler&&&&property. This extra ref-count prevents the device from getting&&&&finalized, leaving the VirtIODevice memory listener registered and&&&&leading to use-after-free later on.&&&&&&&&This patch addresses the same issue as Fam Zheng's&&&&""virtio-scsi: Unset hotplug handler when unrealize""&&&&only for a different virtio device.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Ladi Prosek <lprosek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&& "
1," colo-compare: Fix old packet check bug. If colo-compare find one old packet,we can notify colo-frame&&&&do checkpoint, no need continue find more old packet here.&&&&&&&&Signed-off-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," vga: make display updates thread safe. The vga code clears the dirty bits *after* reading the framebuffer&&&&memory.  So if the guest framebuffer updates hits the race window&&&&between vga reading the framebuffer and vga clearing the dirty bits&&&&vga will miss that update&&&&&&&&Fix it by using the new memory_region_copy_and_clear_dirty()&&&&memory_region_copy_get_dirty() functions.  That way we clear the&&&&dirty bitmap before reading the framebuffer.  Any guest display&&&&updates happening in parallel will be properly tracked in the&&&&dirty bitmap then and the next display refresh will pick them up.&&&&&&&&Problem triggers with mttcg only.  Before mttcg was merged tcg&&&&never ran in parallel to vga emulation.  Using kvm will hide the&&&&problem too, due to qemu operating on a userspace copy of the&&&&kernel's dirty bitmap.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Message-id: 20170421091632.30900-5-kraxel@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," sheepdog: Fix crash in co_read_response() This fixes a regression introduced in commit 9d456654.&&&&&&&&aio_co_wake() can only be used to reenter a coroutine that was already&&&&previously entered, otherwise co->ctx is uninitialised and we access&&&&garbage. Using it immediately after qemu_coroutine_create() like in&&&&co_read_response() is wrong and causes segfaults.&&&&&&&&Replace the call with aio_co_enter(), which gets an explicit AioContext&&&&parameter and works even for new coroutines.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Tested-by: Kashyap Chamarthy <kchamart@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 1491919733-21065-1-git-send-email-kwolf@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," throttle: Remove block from group on hot-unplug When a block device that is part of a throttle group is hot-unplugged,&&&&we forgot to remove it from the throttle group. This leaves stale&&&&memory around, and causes an easily reproducible crash:&&&&&&&&$ ./x86_64-softmmu/qemu-system-x86_64 -nodefaults -nographic -qmp stdio \&&&&-device virtio-scsi-pci,bus=pci.0 -drive \&&&&id=drive_image2,if=none,format=raw,file=file2,bps=512000,iops=100,group=foo \&&&&-device scsi-hd,id=image2,drive=drive_image2 -drive \&&&&id=drive_image3,if=none,format=raw,file=file3,bps=512000,iops=100,group=foo \&&&&-device scsi-hd,id=image3,drive=drive_image3&&&&{'execute':'qmp_capabilities'}&&&&{'execute':'device_del','arguments':{'id':'image3'}}&&&&{'execute':'system_reset'}&&&&&&&&Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1428810&&&&&&&&Suggested-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170406190847.29347-1-eblake@redhat.com&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," block: Don't check permissions for copy on read The assertion is currently failing. We can't require callers to have&&&&write permissions when all they are doing is a read, so comment it out.&&&&Add a FIXME comment in the code so that the check is re-enabled when&&&&copy on read is refactored into its own filter driver.&&&&&&&&Reported-by: Richard W.M. Jones <rjones@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Richard W.M. Jones <rjones@redhat.com>&&&& "
1," spapr: fix memory hot-unplugging If, once the kernel has booted, we try to remove a memory&&&&hotplugged while the kernel was not started, QEMU crashes on&&&&an assert:&&&&&&&&    qemu-system-ppc64: hw/virtio/vhost.c:651:&&&&                       vhost_commit: Assertion `r >= 0' failed.&&&&    ...&&&&    #4  in vhost_commit&&&&    #5  in memory_region_transaction_commit&&&&    #6  in pc_dimm_memory_unplug&&&&    #7  in spapr_memory_unplug&&&&    #8  spapr_machine_device_unplug&&&&    #9  in hotplug_handler_unplug&&&&    #10 in spapr_lmb_release&&&&    #11 in detach&&&&    #12 in set_allocation_state&&&&    #13 in rtas_set_indicator&&&&    ...&&&&&&&&If we take a closer look to the guest kernel log, we can see when&&&&we try to unplug the memory:&&&&&&&&    pseries-hotplug-mem: Attempting to hot-add 4 LMB(s)&&&&&&&&What happens:&&&&&&&&    1- The kernel has ignored the memory hotplug event because&&&&       it was not started when it was generated.&&&&&&&&    2- When we hot-unplug the memory,&&&&       QEMU starts to remove the memory,&&&&            generates an hot-unplug event,&&&&        and signals the kernel of the incoming new event&&&&&&&&    3- as the kernel is started, on the QEMU signal, it reads&&&&       the event list, decodes the hotplug event and tries to&&&&       finish the hotplugging.&&&&&&&&    4- QEMU receive the the hotplug notification while it&&&&       is trying to hot-unplug the memory. This moves the memory&&&&       DRC to an invalid state&&&&&&&&This patch prevents this by not allowing to set the allocation&&&&state to USABLE while the DRC is awaiting release.&&&&&&&&RHBZ: https://bugzilla.redhat.com/show_bug.cgi?id=1432382&&&&&&&&Signed-off-by: Laurent Vivier <lvivier@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," trace: Fix backwards mirror_yield parameters block/trace-events lists the parameters for mirror_yield&&&&consistently with other mirror events (cnt just after s, like in&&&&mirror_before_sleep; in_flight last, like in mirror_yield_in_flight).&&&&But the callers were passing parameters in the wrong order, leading&&&&to poor trace messages, including type truncation when there are&&&&more than 4G dirty sectors involved.  Broken since its introduction&&&&in commit bd48bde.&&&&&&&&While touching this, ensure that all callers use the same type&&&&(uint64_t) for cnt, as a later patch will enable the compiler to do&&&&stricter type-checking.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, vnc: fix a qio-channel leak Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-id: 20170317092802.17973-1-marcandre.lureau@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," Bugfix: Handle error if VM Generation ID device not present This was crashing due to NULL-pointer dereference&&&&&&&&QMP Test case:&&&&==============&&&&&&&&(QEMU) query-vm-generation-id&&&&{""error"": {""class"": ""GenericError"", ""desc"": ""VM Generation ID device not&&&&found""}}&&&&&&&&HMP Test case:&&&&==============&&&&virsh # qemu-monitor-command --hmp 3 info vm-generation-id&&&&VM Generation ID device not found&&&&&&&&Signed-off-by: Ben Warren <ben@skyportsystems.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," block: Don't use error_abort in blk_new_open We have an errp and bdrv_root_attach_child can fail permission check,&&&&error_abort is not the best choice here.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, hppa: avoid anonymous unions in designated initializers. These cause compilation failures on CentOS 6 or other operating&&&&systems with older GCCs.&&&&&&&&Cc: Richard Henderson <rth@twiddle.net>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Message-id: 1488558530-21016-1-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," tests: fix e1000e leaks Spotted by ASAN.&&&&&&&&This hunk adds an assertion. It checks that we're finding no more than&&&&one e1000e device: each hit allocates, but there is only one g_free().&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1, tests: fix tco-test leaks Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1," hw/arm/exynos: Fix Linux kernel division by zero for PLLs Without any clock controller, the Linux kernel was hitting division by&&&&zero during boot or with clk_summary:&&&&[    0.000000] [<c031054c>] (unwind_backtrace) from [<c030ba6c>] (show_stack+0x10/0x14)&&&&[    0.000000] [<c030ba6c>] (show_stack) from [<c05b2660>] (dump_stack+0x88/0x9c)&&&&[    0.000000] [<c05b2660>] (dump_stack) from [<c05b11a4>] (Ldiv0+0x8/0x10)&&&&[    0.000000] [<c05b11a4>] (Ldiv0) from [<c06ad1e0>] (samsung_pll45xx_recalc_rate+0x58/0x74)&&&&[    0.000000] [<c06ad1e0>] (samsung_pll45xx_recalc_rate) from [<c0692ec0>] (clk_register+0x39c/0x63c)&&&&[    0.000000] [<c0692ec0>] (clk_register) from [<c125d360>] (samsung_clk_register_pll+0x2e0/0x3d4)&&&&[    0.000000] [<c125d360>] (samsung_clk_register_pll) from [<c125d7e8>] (exynos4_clk_init+0x1b0/0x5e4)&&&&[    0.000000] [<c125d7e8>] (exynos4_clk_init) from [<c12335f4>] (of_clk_init+0x17c/0x210)&&&&[    0.000000] [<c12335f4>] (of_clk_init) from [<c1204700>] (time_init+0x24/0x2c)&&&&[    0.000000] [<c1204700>] (time_init) from [<c1200b2c>] (start_kernel+0x24c/0x38c)&&&&[    0.000000] [<c1200b2c>] (start_kernel) from [<4020807c>] (0x4020807c)&&&&&&&&Provide stub for clock controller returning reset values for PLLs.&&&&&&&&Signed-off-by: Krzysztof Kozlowski <krzk@kernel.org>&&&&Message-id: 20170226200142.31169-1-krzk@kernel.org&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," 9pfs: local: link: don't follow symlinks The local_link() callback is vulnerable to symlink attacks because it calls:&&&&&&&&(1) link() which follows symbolic links for all path elements but the&&&&    rightmost one&&&&(2) local_create_mapped_attr_dir()->mkdir() which follows symbolic links&&&&    for all path elements but the rightmost one&&&&&&&&This patch converts local_link() to rely on opendir_nofollow() and linkat()&&&&to fix (1), mkdirat() to fix (2).&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," lm32: milkymist-tmu2: fix a third integer overflow Don't truncate the multiplication and do a 64 bit one instead&&&&because the result is stored in a 64 bit variable.&&&&&&&&This fixes a similar coverity warning to commits 237a8650d640 and&&&&4382fa655498, in a similar way, and is the final third of the fix for&&&&coverity CID 1167561 (hopefully!).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Acked-by: Michael Walle <michael@walle.cc>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," usb-ccid: add check message size checks Check message size too when figuring whenever we should expect more data.&&&&Fix debug message to show useful data, p->iov.size is fixed anyway if we&&&&land there, print how much we got meanwhile instead.&&&&&&&&Also check announced message size against actual message size.  That&&&&is a more general fix for CVE-2017-5898 than commit ""c7dfbf3 usb: ccid:&&&&check ccid apdu length"".&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1487250819-23764-4-git-send-email-kraxel@redhat.com&&&& "
1, i386/cpu: add crash-information QOM property Windows reports BSOD parameters through Hyper-V crash MSRs. This&&&&information is very useful for initial crash analysis and thus&&&&it would be nice to have a way to fetch it.&&&&&&&&Signed-off-by: Anton Nefedov <anton.nefedov@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Message-Id: <1487053524-18674-2-git-send-email-den@openvz.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," usb-ccid: move header size check Move up header size check, so we can use header fields in sanity checks&&&&(in followup patches).  Also reword the debug message.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 1487250819-23764-3-git-send-email-kraxel@redhat.com&&&& "
1," migrate: Introduce zero RAM checks to skip RAM migration Migration of a ""none"" machine with no RAM crashes abruptly as&&&&bitmap_new() fails and thus aborts. Instead place zero RAM checks at&&&&appropriate places to skip migration of RAM in this case and complete&&&&migration successfully for devices only.&&&&&&&&Signed-off-by: Ashijeet Acharya <ashijeetacharya@gmail.com>&&&&Message-Id: <1486564125-31366-1-git-send-email-ashijeetacharya@gmail.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&& "
1," tcg/POWER9: NOOP the cp_abort instruction The cp_abort instruction is used to remove the state of an in progress&&&&copy paste sequence. POWER9 compilers add this in various places, such&&&&as context switches which causes illegal instruction signals since we&&&&don't yet implement this instruction.&&&&&&&&Given there is no implementation of the copy paste facility and that we&&&&don't claim to support it, we can just noop this instruction.&&&&&&&&Signed-off-by: Suraj Jitindar Singh <sjitindarsingh@gmail.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," scsi-disk: add 'fall through' comment to switch VERIFY cases Commit 166dbda7e131 added some extra cases to a switch() such&&&&that the existing code is intended to fall through the new&&&&case statements. It's clear from the commit that this is&&&&intentional, but less clear to subsequent readers of the&&&&code, and not clear at all to static analysis tools like&&&&Coverity. Add a /* fall through */ comment to indicate the&&&&intent. (Fixes CID 1368287.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," display: cirrus: ignore source pitch value as needed in blit_is_unsafe Commit 4299b90 added a check which is too broad, given that the source&&&&pitch value is not required to be initialized for solid fill operations.&&&&This patch refines the blit_is_unsafe() check to ignore source pitch in&&&&that case. After applying the above commit as a security patch, we&&&&noticed the SLES 11 SP4 guest gui failed to initialize properly.&&&&&&&&Signed-off-by: Bruce Rogers <brogers@suse.com>&&&&Message-id: 20170109203520.5619-1-brogers@suse.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," virtio-crypto: fix possible integer and heap overflow Because the 'size_t' type is 4 bytes in 32-bit platform, which&&&&is the same with 'int'. It's easy to make 'max_len' to zero when&&&&integer overflow and then cause heap overflow if 'max_len' is zero.&&&&&&&&Using uint_64 instead of size_t to avoid the integer overflow.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Reported-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Tested-by: Li Qiang <liqiang6-s@360.cn>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, target-m68k: Inline shifts Also manage word and byte operands and fix the computation of&&&&overflow in the case of M68000 arithmetic shifts.&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Message-Id: <1478699171-10637-4-git-send-email-rth@twiddle.net>&&&& 
1," virtio: set ISR on dataplane notifications Dataplane has been omitting forever the step of setting ISR when&&&&an interrupt is raised.  This caused little breakage, because the&&&&specification actually says that ISR may not be updated in MSI mode.&&&&&&&&Some versions of the Windows drivers however didn't clear MSI mode&&&&correctly, and proceeded using polling mode (using ISR, not the used&&&&ring index!) for crashdump and hibernation.  If it were just crashdump&&&&and hibernation it would not be a big deal, but recent releases of&&&&Windows do not really shut down, but rather log out and hibernate to&&&&make the next startup faster.  Hence, this manifested as a more serious&&&&hang during shutdown with e.g. Windows 8.1 and virtio-win 1.8.0 RPMs.&&&&Newer versions fixed this, while older versions do not use MSI at all.&&&&&&&&The failure has always been there for virtio dataplane, but it became&&&&visible after commits 9ffe337 (""virtio-blk: always use dataplane path&&&&if ioeventfd is active"", 2016-10-30) and ad07cd6 (""virtio-scsi: always&&&&use dataplane path if ioeventfd is active"", 2016-10-30) made virtio-blk&&&&and virtio-scsi always use the dataplane code under KVM.  The good news&&&&therefore is that it was not a bug in the patches---they were doing&&&&exactly what they were meant for, i.e. shake out remaining dataplane bugs.&&&&&&&&The fix is not hard, so it's worth arranging for the broken drivers.&&&&The virtio_should_notify+event_notifier_set pair that is common to&&&&virtio-blk and virtio-scsi dataplane is replaced with a new public&&&&function virtio_notify_irqfd that also sets ISR.  The irqfd emulation&&&&code now need not set ISR anymore, so virtio_irq is removed.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Tested-by: Farhan Ali <alifm@linux.vnet.ibm.com>&&&&Tested-by: Alex Williamson <alex.williamson@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," ipxe: update to 20161108 snapshot git shortlog 04186319..b991c67c&&&&===============================&&&&&&&&Laszlo Ersek (3):&&&&      [efi] Install the HII config access protocol on a child of the SNP handle&&&&      [librm] Conditionalize the workaround for the Tivoli VMM's SSE garbling&&&&      [build] Disable TIVOLI_VMM_WORKAROUND in the qemu configuration&&&&&&&&Lukas Grossar (1):&&&&      [intel] Add PCI device ID for I219-V/LM&&&&&&&&Michael Brown (57):&&&&      [efi] Fix uninitialised data in HII IFR structures&&&&      [bios] Do not enable interrupts when printing to the console&&&&      [pxe] Disable interrupts on the PIC before starting NBP&&&&      [dhcp] Allow for variable encapsulation of architecture-specific options&&&&      [dhcpv6] Include RFC5970 client architecture options in DHCPv6 requests&&&&      [dhcpv6] Include vendor class identifier option in DHCPv6 requests&&&&      [dhcp] Automatically generate vendor class identifier string&&&&      [xfer] Send intf_close() if redirection fails&&&&      [downloader] Treat redirection failures as fatal&&&&      [iscsi] Treat redirection failures as fatal&&&&      [debug] Allow per-object runtime enabling/disabling of debug messages&&&&      [debug] Allow debug messages to be initially disabled at runtime&&&&      [libc] Allow assertions to be globally enabled or disabled&&&&      [profile] Allow profiling to be globally enabled or disabled&&&&      [rng] Check for functioning RTC interrupt&&&&      [acpi] Add support for ACPI power off&&&&      [acpi] Allow time for ACPI power off to take effect&&&&      [ipv4] Send gratuitous ARPs whenever a new IPv4 address is applied&&&&      [intel] Strip spurious VLAN tags received by virtual function NICs&&&&      [intel] Remove duplicate intelvf_mbox_queues() function&&&&      [ipv6] Perform SLAAC only during autoconfiguration&&&&      [settings] Create space for IPv6 in settings display order&&&&      [ipv6] Rename ipv6_scope to dhcpv6_scope&&&&      [settings] Correctly mortalise autovivified child settings blocks&&&&      [ipv6] Allow settings to comprise arbitrary subsets of NDP options&&&&      [ipv6] Expose IPv6 settings acquired through NDP&&&&      [dhcpv6] Expose IPv6 address setting acquired through DHCPv6&&&&      [ipv6] Expose IPv6 link-local address settings&&&&      [settings] Allow settings blocks to specify a sibling ordering&&&&      [ipv6] Match user expectations for IPv6 settings priorities&&&&      [ipv6] Create routing table based on IPv6 settings&&&&      [ipv6] Rename ipv6_scope to ipv6_settings_scope&&&&      [test] Update IPv6 tests to use okx()&&&&      [ipv6] Allow for multiple routers&&&&      [hyperv] Use instance UUID in device name&&&&      [crypto] Remove obsolete extern declaration for asn1_invalidate_cursor()&&&&      [crypto] Allow for parsing of partial ASN.1 cursors&&&&      [image] Add image_asn1() to extract ASN.1 objects from image&&&&      [crypto] Add DER image format&&&&      [crypto] Add PEM image format&&&&      [image] Use image_asn1() to extract data from CMS signature images&&&&      [build] Remove obsolete explicit object requirements&&&&      [crypto] Enable both DER and PEM formats by default&&&&      [build] Remove more obsolete explicit object requirements&&&&      [pixbuf] Enable PNG format by default&&&&      [crypto] Add image_x509() to extract X.509 certificates from image&&&&      [crypto] Generalise X.509 ""valid"" field to a ""flags"" field&&&&      [list] Add list_next_entry() and list_prev_entry()&&&&      [crypto] Expose certstore_del() to explicitly remove stored certificates&&&&      [crypto] Allow certificates to be marked as having been added explicitly&&&&      [crypto] Add certstat() to display basic certificate information&&&&      [cmdline] Add certificate management commands&&&&      [crypto] Mark permanent certificates as permanent&&&&      [efi] Mark AppleNetBoot.h as a native iPXE header&&&&      [efi] Update to current EDK2 headers&&&&      [efi] Add EFI_BLOCK_IO2_PROTOCOL header and GUID definition&&&&      [bzimage] Fix page alignment of initrd images&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," loader: fix undefined behavior in rom_order_compare() According to ISO C99 / N1256 (referenced in HACKING):&&&&&&&&> 6.5.8 Relational operators&&&&>&&&&> 4 For the purposes of these operators, a pointer to an object that is&&&&>   not an element of an array behaves the same as a pointer to the first&&&&>   element of an array of length one with the type of the object as its&&&&>   element type.&&&&>&&&&> 5 When two pointers are compared, the result depends on the relative&&&&>   locations in the address space of the objects pointed to. If two&&&&>   pointers to object or incomplete types both point to the same object,&&&&>   or both point one past the last element of the same array object, they&&&&>   compare equal. If the objects pointed to are members of the same&&&&>   aggregate object, pointers to structure members declared later compare&&&&>   greater than pointers to members declared earlier in the structure,&&&&>   and pointers to array elements with larger subscript values compare&&&&>   greater than pointers to elements of the same array with lower&&&&>   subscript values. All pointers to members of the same union object&&&&>   compare equal. If the expression /P/ points to an element of an array&&&&>   object and the expression /Q/ points to the last element of the same&&&&>   array object, the pointer expression /Q+1/ compares greater than /P/.&&&&>   In all other cases, the behavior is undefined.&&&&&&&&Our AddressSpace objects are allocated generally individually, and kept in&&&&the ""address_spaces"" linked list, so we mustn't compare their addresses&&&&with relops.&&&&&&&&Convert the pointers subjected to the relop in rom_order_compare() to&&&&""uintptr_t"":&&&&&&&&> 7.18.1.4 Integer types capable of holding object pointers&&&&>&&&&> 1 [...]&&&&>&&&&>   The following type designates an unsigned integer type with the&&&&>   property that any valid pointer to void can be converted to this type,&&&&>   then converted back to pointer to void, and the result will compare&&&&>   equal to the original pointer:&&&&>&&&&>   /uintptr_t/&&&&>&&&&>   These types are optional.&&&&&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Alistair Francis <alistair.francis@xilinx.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: qemu-devel@nongnu.org&&&&Fixes: 3e76099aacb4dae0d37ebf95305369e03d1491e6&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," linux-user: Fix socketcall() syscall support Since not all Linux host platforms support socketcall() (most notably&&&&Intel), do_socketcall() function in Qemu's syscalls.c is implemented to&&&&mirror the corespondant implementation of socketcall() in Linux kernel,&&&&and to utilise individual socket operations that are supported on all&&&&Linux platforms. (see kernel source file net/socket.c, definition of&&&&socketcall).&&&&&&&&However, error codes produced by Qemu implementation are wrong for the&&&&cases of invalid values of the first argument. Also, naming of constants&&&&is not consistent with kernel one, and not consistant with Qemu convention&&&&of prefixing such constants with ""TARGET_"". This patch in that light&&&&brings do_socketcall() closer to its kernel counterpart, and in that way&&&&fixes the errors and yields more consisrtent Qemu code.&&&&&&&&There were also three missing cases (among 20) for strace support for&&&&socketcall(). The array that contains pointers for appropriate printing&&&&functions is updated with 3 elements, however pointers to functions are&&&&left NULL, and its implementation is left for future.&&&&&&&&Also, this patch fixes failure of LTP test socketcall02, if executed on some&&&&Qemu emulated sywstems (uer mode).&&&&&&&&Signed-off-by: Aleksandar Markovic <aleksandar.markovic@imgtec.com>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," tests: Don't assume structure of PCI IO base in ahci-test In a couple of places ahci-test makes assumptions about how the tokens&&&&returned from qpci_iomap() are formatted in ways it probably shouldn't.&&&&&&&&First in verify_state() it uses a non-NULL token to indicate that the AHCI&&&&device has been enabled (part of enabling is to iomap()).  This changes it&&&&to use an explicit 'enabled' flag instead.&&&&&&&&Second, it uses the fact that the token contains a PCI address, stored when&&&&the BAR is mapped during initialization to check that the BAR has the same&&&&value after a migration.  This changes it to explicitly read the BAR&&&&register before and after the migration and compare.&&&&&&&&Together, these changes will  make the test more robust against changes to&&&&the internals of the libqos PCI layer.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&& "
1," ppc: Fix catching some segfaults in user mode The usermode ""translate"" code generates an error code value that&&&&has the ""is_write"" bit set, which causes our switch/case to miss&&&&and display ""Invalid segfault errno"" and a spurrious second state&&&&dump. Fix it.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," linux-user: SIGSEGV from sigreturn need not be fatal If the sigreturn syscall fails to read memory then this causes a&&&&SIGSEGV, but this is not necessarily a fatal signal -- the guest&&&&process can catch it.&&&&&&&&We don't implement this correctly because the behaviour of QEMU's&&&&force_sig() function has drifted away from the kernel function of the&&&&same name -- ours now does ""always do a guest core dump and abort&&&&execution"", whereas the kernel version simply forces the guest to&&&&take a signal, which may or may not eventually cause a core dump.&&&&&&&&Rename our force_sig() to dump_core_and_abort(), and provide a&&&&force_sig() which acts more like the kernel version as the sigreturn&&&&implementations expect it to.  Since force_sig() now returns, we must&&&&update all the callsites to return -TARGET_QEMU_ESIGRETURN so that&&&&the main loop doesn't change the guest registers before the signal&&&&handler is invoked.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," checkpatch: default to success if only warnings CHK-level checks have been removed from checkpatch or bumped to&&&&errors, so there is no effect anymore for --strict/--subjective.&&&&Furthermore, even most WARNs have been bumped to errors, with&&&&WARN only reserved to things that patchew probably ought not&&&&to complain about (and that maintainers probably will notice&&&&anyway during review if they are extreme).&&&&&&&&Default to exiting with success even if there are WARN-level&&&&failures, and cause --strict to fail for warnings.  Maintainers&&&&that want to have a strict 80-character limit for their subsystem&&&&can add it to a commit hook for example.&&&&&&&&The --subjective synonym is removed.&&&&&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," usb: free leaking path qdev_get_dev_path() returns an allocated string, free it when no longer&&&&needed.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," spapr: Error out when CPU hotplug is attempted on older pseries machines CPU hotplug and coldplug aren't supported prior to pseries-2.7.  Further,&&&&earlier machine types don't use CPU core objects at all.  These mean that&&&&query-hotpluggable-cpus and coldplug on older pseries machines will crash&&&&QEMU.  It also means that hotpluggable_cpus flag in query-machines will&&&&be incorrectly set to true for pseries < 2.7, since it is based on the&&&&presence of the query_hotpluggable_cpus hook.&&&&&&&&- Don't assign the query_hotpluggable_cpus hook for pseries < 2.7&&&&- query_hotpluggable_cpus should therefore never be called on pseries <&&&&  2.7, so add an assert&&&&- spapr_core_pre_plug() should fail hot/cold plug attempts for pseries <&&&&  2.7, since core objects are never used there&&&&- spapr_core_plug() should therefore never be called for pseries < 2.7, so&&&&  add an assert.&&&&&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&[dwg: Change from query_hotpluggable_cpus returning NULL for pseries < 2.7&&&& to not being called at all, reword commit message for accuracy]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," ehci: faster frame index calculation for skipped frames ehci_update_frindex takes time linearly proportional to a number&&&&of uframes to calculate new frame index and raise FLR interrupts,&&&&which is a problem for large amounts of uframes.&&&&&&&&If we experience large delays between echi timer callbacks (i.e. because&&&&other periodic handlers have taken a lot of time to complete) we&&&&get a lot of skipped frames which then delay ehci timer callback more&&&&and this leads to deadlocking the system when ehci schedules next&&&&callback to be too soon.&&&&&&&&Observable behaviour is qemu consuming 100% host CPU time while guest&&&&is unresponsive. This misbehavior could happen for a while and QEMU does&&&&not get out from this state automatically without the patch.&&&&&&&&This change makes ehci_update_frindex execute in constant time.&&&&&&&&Signed-off-by: Evgeny Yakovlev <eyakovlev@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Message-id: 1469638520-32706-1-git-send-email-den@openvz.org&&&&CC: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," spapr: Fix undefined behaviour in spapr_tce_reset() When a TCE table (sPAPR IOMMU context) is in disabled state (which is true&&&&by default for the 64-bit window), it has tcet->nb_table == 0 and&&&&tcet->table == NULL.  However, on system reset, spapr_tce_reset() executes,&&&&which unconditionally calls&&&&        memset(tcet->table, 0, table_size);&&&&&&&&We get away with this in practice, because it's a zero length memset(),&&&&but memset() on a NULL pointer is undefined behaviour, so we should not&&&&call it in this case.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," linux-user: Correct type for BLKSSZGET The BLKSSZGET ioctl takes an argument which is a pointer to an int.&&&&We were incorrectly declaring it to take a pointer to a long, which&&&&meant that we would incorrectly write to memory which we should not&&&&if the guest is a 64-bit architecture.&&&&&&&&In particular, kpartx uses this ioctl to write to an int on the&&&&stack, which tends to result in it crashing immediately.&&&&&&&&Reported-by: Chanho Park <chanho61.park@samsung.com>&&&&Reviewed-by: Laurent Vivier <laurent@vivier.eu>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," disas: Fix ATTRIBUTE_UNUSED define clash with ALSA headers disas/bfd.h defines ATTRIBUTE_UNUSED, but unfortunately the&&&&ALSA system headers also define this macro, which means that&&&&you can get a compilation failure if building with ALSA and&&&&any files happen to include the alsa headers before bfd.h&&&&rather than the other way around.&&&&&&&&This is unfortunate namespace pollution by the ALSA headers but&&&&we can work around it. Add an #ifndef guard to bfd.h and remove&&&&the unnecessary extra definition in disas/arm.c to fix this.&&&&&&&&Reported-by: BALATON Zoltan <balaton@eik.bme.hu>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1468937076-21503-1-git-send-email-peter.maydell@linaro.org&&&& "
1, clang: Fix warning reg. expansion to 'defined' Clang produces the following warning. The warning is detailed here:&&&&https://reviews.llvm.org/D15866. Fix the warning.&&&&&&&&/home/pranith/devops/code/qemu/hw/display/qxl.c:507:5: warning: macro expansion producing 'defined' has undefined behavior [-Wexpansion-to-defined]&&&&    ^&&&&/home/pranith/devops/code/qemu/include/ui/qemu-spice.h:46:5: note: expanded from macro 'SPICE_NEEDS_SET_MM_TIME'&&&&  (!defined(SPICE_SERVER_VERSION) || (SPICE_SERVER_VERSION < 0xc06))&&&&    ^&&&&/home/pranith/devops/code/qemu/hw/display/qxl.c:1074:5: warning: macro expansion producing 'defined' has undefined behavior [-Wexpansion-to-defined]&&&&    ^&&&&/home/pranith/devops/code/qemu/include/ui/qemu-spice.h:46:5: note: expanded from macro 'SPICE_NEEDS_SET_MM_TIME'&&&&  (!defined(SPICE_SERVER_VERSION) || (SPICE_SERVER_VERSION < 0xc06))&&&&&&&&Suggested-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Pranith Kumar <bobby.prani@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," Improve block job rate limiting for small bandwidth values ratelimit_calculate_delay() previously reset the accounting every time&&&&slice, no matter how much data had been processed before. This had (at&&&&least) two consequences:&&&&&&&&1. The minimum speed is rather large, e.g. 5 MiB/s for commit and stream.&&&&&&&&   Not sure if there are real-world use cases where this would be a&&&&   problem. Mirroring and backup over a slow link (e.g. DSL) would&&&&   come to mind, though.&&&&&&&&2. Tests for block job operations (e.g. cancel) were rather racy&&&&&&&&   All block jobs currently use a time slice of 100ms. That's a&&&&   reasonable value to get smooth output during regular&&&&   operation. However this also meant that the state of block jobs&&&&   changed every 100ms, no matter how low the configured limit was. On&&&&   busy hosts, qemu often transferred additional chunks until the test&&&&   case had a chance to cancel the job.&&&&&&&&Fix the block job rate limit code to delay for more than one time&&&&slice to address the above issues. To make it easier to handle&&&&oversized chunks we switch the semantics from returning a delay&&&&_before_ the current request to a delay _after_ the current&&&&request. If necessary, this delay consists of multiple time slice&&&&units.&&&&&&&&Since the mirror job sends multiple chunks in one go even if the rate&&&&limit was exceeded in between, we need to keep track of the start of&&&&the current time slice so we can correctly re-compute the delay for&&&&the updated amount of data.&&&&&&&&The minimum bandwidth now is 1 data unit per time slice. The block&&&&jobs are currently passing the amount of data transferred in sectors&&&&and using 100ms time slices, so this translates to 5120&&&&bytes/second. With chunk sizes usually being O(512KiB), tests have&&&&plenty of time (O(100s)) to operate on block jobs. The chance of a&&&&race condition now is fairly remote, except possibly on insanely&&&&loaded systems.&&&&&&&&Signed-off-by: Sascha Silbe <silbe@linux.vnet.ibm.com>&&&&Message-id: 1467127721-9564-2-git-send-email-silbe@linux.vnet.ibm.com&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," s390x/pci: replace fid with idx in msg data of msix Present code uses fid as the part of message data of msix for looking&&&&up the specific zpci device. However it limits the usable range of fid,&&&&and the code looking up the zpci device may fail due to truncation of&&&&the fid.&&&&&&&&In addition, fh is composed of enabled bit, FH_VIRT and the array index.&&&&So we can use the array index as the identifier to store in msg data.&&&&&&&&Signed-off-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1," block: Fix harmless off-by-one in bdrv_aligned_preadv() If the amount of data to read ends exactly on the total size&&&&of the bs, then we were wasting time creating a local qiov&&&&to read the data in preparation for what would normally be&&&&appending zeroes beyond the end, even though this corner case&&&&has nothing further to do.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," target-ppc: Simplify HPTE matching ppc_hash64_pteg_search() explicitly checks each HPTE's VALID and&&&&SECONDARY bits, then uses the HPTE64_V_COMPARE() macro to check the B field&&&&and AVPN.  However, a small tweak to HPTE64_V_COMPARE() means we can check&&&&all of these bits at once with a suitable ptem value.  So, consolidate all&&&&the comparisons for simplicity.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&& "
1," qdev: Use GList for global properties If the same GlobalProperty struct is registered twice, the list&&&&entry gets corrupted, making tqe_next points to itself, and&&&&qdev_prop_set_globals() gets stuck in a loop. The bug can be&&&&easily reproduced by running:&&&&&&&&  $ qemu-system-x86_64 -rtc-td-hack -rtc-td-hack&&&&&&&&Change global_props to use GList instead of queue.h, making the&&&&code simpler and able to deal with properties being registered&&&&twice.&&&&&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1, hw/arm/virt: Add PMU node for virt machine Add a virtual PMU device for virt machine while use PPI 7 for PMU&&&&overflow interrupt number.&&&&&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Reviewed-by: Andrew Jones <drjones@redhat.com>&&&&Message-id: 1465267577-1808-3-git-send-email-zhaoshenglong@huawei.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," usb/ohci: Fix crash with when specifying too many num-ports QEMU currently crashes when an OHCI controller is instantiated with&&&&too many ports, e.g. ""-device pci-ohci,num-ports=100,masterbus=1"".&&&&Thus add a proper check in usb_ohci_init() to make sure that we&&&&do not use more than OHCI_MAX_PORTS = 15 ports here.&&&&&&&&Ticket: https://bugs.launchpad.net/qemu/+bug/1581308&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Message-id: 1463995387-11710-1-git-send-email-thuth@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," hw/intc/arm_gic: add tracepoints These are obviously critical to understanding interrupt delivery:&&&&gic_enable_irq&&&&gic_disable_irq&&&&gic_set_irq (inbound irq from device models)&&&&gic_update_set_irq (outbound irq to CPU)&&&&gic_acknowledge_irq&&&&&&&&The only one that I think might raise eyebrows is gic_update_bestirq, but I've&&&&(sadly) debugged problems that ended up being caused by unexpected priorities.&&&&Knowing that the GIC has an irq ready, but doesn't deliver to the CPU due to&&&&priority, has also proven important.&&&&&&&&Signed-off-by: Hollis Blanchard <hollis_blanchard@mentor.com>&&&&Message-id: 1461252281-22399-1-git-send-email-hollis_blanchard@mentor.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," spapr_drc: Expose 'null' in qom-get when there is no fdt Now that the QMP output visitor supports an explicit null&&&&output, we should utilize it to make it easier to diagnose&&&&the difference between a missing fdt ('null') vs. a&&&&present-but-empty one ('{}').&&&&&&&&(Note that this reverts the behavior of commit ab8bf1d, taking&&&&us back to the behavior of commit 6c2f9a1 [which in turn&&&&stemmed from a crash fix in 1d10b44]; but that this time,&&&&the change is intentional and not an accidental side-effect.)&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Acked-by: David Gibson <david@gibson.dropbear.id.au>&&&&Message-Id: <1461879932-9020-17-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," block: enable testing of LUKS driver with block I/O tests This adds support for testing the LUKS driver with the block&&&&I/O test framework.&&&&&&&&   cd tests/qemu-io-tests&&&&   ./check -luks&&&&&&&&A handful of test cases are modified to work with luks&&&&&&&& - 004 - whitelist luks format&&&& - 012 - use TEST_IMG_FILE instead of TEST_IMG for file ops&&&& - 048 - use TEST_IMG_FILE instead of TEST_IMG for file ops.&&&&         don't assume extended image contents is all zeros,&&&&         explicitly initialize with zeros&&&&         Make file size smaller to avoid having to decrypt&&&&         1 GB of data.&&&& - 052 - don't assume initial image contents is all zeros,&&&&         explicitly initialize with zeros&&&& - 100 - don't assume initial image contents is all zeros,&&&&         explicitly initialize with zeros&&&&&&&&With this patch applied, the results are as follows:&&&&&&&&  Passed: 001 002 003 004 005 008 009 010 011 012 021 032 043&&&&          047 048 049 052 087 100 134 143&&&&  Failed: 033 120 140 145&&&& Skipped: 007 013 014 015 017 018 019 020 022 023 024 025 026&&&&          027 028 029 030 031 034 035 036 037 038 039 040 041&&&&          042 043 044 045 046 047 049 050 051 053 054 055 056&&&&          057 058 059 060 061 062 063 064 065 066 067 068 069&&&&          070 071 072 073 074 075 076 077 078 079 080 081 082&&&&          083 084 085 086 087 088 089 090 091 092 093 094 095&&&&          096 097 098 099 101 102 103 104 105 107 108 109 110&&&&          111 112 113 114 115 116 117 118 119 121 122 123 124&&&&          128 129 130 131 132 133 134 135 136 137 138 139 141&&&&          142 144 146 148 150 152&&&&&&&&The reasons for the failed tests are:&&&&&&&& - 033 - needs adapting to use image opts syntax with blkdebug&&&&         and test image in order to correctly set align property&&&& - 120 - needs adapting to use correct -drive syntax for luks&&&& - 140 - needs adapting to use correct -drive syntax for luks&&&& - 145 - needs adapting to use correct -drive syntax for luks&&&&&&&&The vast majority of skipped tests are exercising code that is&&&&qcow2 specific, though a couple could probably be usefully&&&&enabled for luks too.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1462896689-18450-4-git-send-email-berrange@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," qom: Wrap prop visit in visit_start_struct The qmp-input visitor was allowing callers to play rather fast&&&&and loose: when visiting a QDict, you could grab members of the&&&&root dictionary without first pushing into the dict; the final&&&&such culprit was the QOM code for converting to and from object&&&&properties.  But we are about to tighten the input visitor, at&&&&which point user_creatable_add_type() as called with a QMP input&&&&visitor via qmp_object_add() MUST follow the same paradigms as&&&&everyone else, of pushing into the struct before grabbing its&&&&keys.&&&&&&&&The use of 'err ? NULL : &err' is temporary; a later patch will&&&&clean that up when it splits visit_end_struct().&&&&&&&&Furthermore, note that both callers always pass qdict, so we can&&&&convert the conditional into an assert and reduce indentation.&&&&&&&&The change has no impact to the testsuite now, but is required to&&&&avoid a failure in tests/test-netfilter once qmp-input is made&&&&stricter to detect inconsistent 'name' arguments on the root visit.&&&&&&&&Since user_creatable_add_type() is also called with OptsVisitor&&&&through user_creatable_add_opts(), we must also check that there&&&&is no negative impact there; both pre- and post-patch, we see:&&&&&&&&$ ./x86_64-softmmu/qemu-system-x86_64 -nographic -nodefaults -qmp stdio -object secret,id=sec0,data=letmein,format=raw,foo=bar&&&&qemu-system-x86_64: -object secret,id=sec0,data=letmein,format=raw,foo=bar: Property '.foo' not found&&&&&&&&That is, the only new checking that the new visit_end_struct() can&&&&perform is for excess input, but we already catch excess input&&&&earlier in object_property_set().&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1461879932-9020-10-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," ui: sdl2: Release grab before opening console window sdl 2.0.4 currently has a bug which causes our UI shortcuts to fire&&&&rapidly in succession:&&&&&&&&  https://bugzilla.libsdl.org/show_bug.cgi?id=3287&&&&&&&&It's a toss up whether ctrl+alt+f or ctrl+alt+2 will fire an&&&&odd or even number of times, thus determining whether the action&&&&succeeds or fails.&&&&&&&&Opening monitor/serial windows is doubly broken, since it will often&&&&lock the UI trying to grab the pointer:&&&&&&&&  0x00007fffef3720a5 in SDL_Delay_REAL () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef3688ba in X11_SetWindowGrab () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef2f2da7 in SDL_SendWindowEvent () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef2f080b in SDL_SetKeyboardFocus () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef35d784 in X11_DispatchFocusIn.isra.8 () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef35dbce in X11_DispatchEvent () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef35ee4a in X11_PumpEvents () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef2eea6a in SDL_PumpEvents_REAL () at /lib64/libSDL2-2.0.so.0&&&&  0x00007fffef2eeab5 in SDL_WaitEventTimeout_REAL () at /lib64/libSDL2-2.0.so.0&&&&  0x000055555597eed0 in sdl2_poll_events (scon=0x55555876f928) at ui/sdl2.c:593&&&&&&&&We can work around that hang by ungrabbing the pointer before launching&&&&a new window. This roughly matches what our sdl1 code does&&&&&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Message-id: 31c9ab6540b031f7a614c59edcecea9877685612.1462557436.git.crobinso@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, hw/mips_itu: fix off-by-one reported by Coverity Fix off-by-one error in ITC Tag read.&&&&&&&&Remove the switch as we just want to check if index is in valid range&&&&rather than test against list of values.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& 
1," target-mips: Fix RDHWR exception host PC Commit b00c72180c36 (""target-mips: add PC, XNP reg numbers to RDHWR"")&&&&changed the rdhwr helpers to use check_hwrena() to check the register&&&&being accessed is enabled in CP0_HWREna when used from user mode. If&&&&that check fails an EXCP_RI exception is raised at the host PC&&&&calculated with GETPC().&&&&&&&&However check_hwrena() may not be fully inlined as the&&&&do_raise_exception() part of it is common regardless of the arguments.&&&&This causes GETPC() to calculate the address in the call in the helper&&&&instead of the generated code calling the helper. No TB will be found&&&&and the EPC reported with the resulting guest RI exception points to the&&&&beginning of the TB instead of the RDHWR instruction.&&&&&&&&We can't reliably force check_hwrena() to be inlined, and converting it&&&&to a macro would be ugly, so instead pass the host PC in as an argument,&&&&with each rdhwr helper passing GETPC(). This should avoid any dependence&&&&on compiler behaviour, and in practice seems to ensure the full inlining&&&&of check_hwrena() on x86_64.&&&&&&&&This issue causes failures when running a MIPS KVM (trap & emulate)&&&&guest in a MIPS QEMU TCG guest, as the inner guest kernel will do a&&&&RDHWR of counter, which is disabled in the outer guest's CP0_HWREna by&&&&KVM so it can emulate the inner guest's counter. The emulation fails and&&&&the RI exception is passed to the inner guest.&&&&&&&&Fixes: b00c72180c36 (""target-mips: add PC, XNP reg numbers to RDHWR"")&&&&Signed-off-by: James Hogan <james.hogan@imgtec.com>&&&&Cc: Leon Alrae <leon.alrae@imgtec.com>&&&&Cc: Yongbok Kim <yongbok.kim@imgtec.com>&&&&Cc: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1, hostmem-file: fix memory leak Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Message-Id: <1456998223-12356-5-git-send-email-arei.gonglei@huawei.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," qemu-iotests: 148: properly skip test if quorum support is missing qemu-iotests test case 148 already had some code for skipping the test&&&&if quorum support is missing, but it didn't work in all&&&&cases. TestQuorumEvents.setUp() gets run before the actual test class&&&&(which contains the skipping code) and tries to start qemu with a drive&&&&using the quorum driver. For some reason this works fine when using&&&&qcow2, but fails for raw.&&&&&&&&As the entire test case requires quorum, just check for availability&&&&before even starting the test suite. Introduce a verify_quorum()&&&&function in iotests.py for this purpose so future test cases can make&&&&use of it.&&&&&&&&Signed-off-by: Sascha Silbe <silbe@linux.vnet.ibm.com>&&&&Reviewed-by: Bo Tu <tubo@linux.vnet.ibm.com>&&&&Message-id: 1459848109-29756-5-git-send-email-silbe@linux.vnet.ibm.com&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," hw/mips_malta: remove redundant irq and clock init Global smp_cpus is never zero (even if user provides -smp 0), thus clocks&&&&and irqs are always initialized for each created CPU in the loop at the&&&&beginning of mips_malta_init.&&&&&&&&These two lines cause a leak of already allocated timer and irqs for the&&&&first CPU - remove them.&&&&&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1," block: never cancel a streaming job without running stream_complete() We need to call stream_complete() in order to do all the necessary&&&&clean-ups, even if there's an early failure. At the moment it's only&&&&useful to make sure that s->backing_file_str is not leaked, but it&&&&will become more important if we introduce support for streaming to&&&&any intermediate node.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 2abedf2debc65c250560237f31a8e6756883c8fc.1458566441.git.berto@igalia.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
1, target-i386: Dump unknown opcodes with -d unimp We discriminate here between opcodes that are illegal in the current&&&&cpu mode or with illegal arguments (such as modrm.mod == 3) and&&&&encodings that are unknown (such as an unimplemented isa extension).&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
1," qemu-img: eliminate memory leak Not particularly important since qemu-img exits immediately after&&&&calling img_rebase, but easily fixed.  Coverity says thanks.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," quorum: modify vote rules for flush operation Keep flush interface the same logic as quorum read/write, Otherwise in&&&&following scenario, we'll encounter unexpected errors.&&&&&&&&Quorum has two children(A, B). A do flush sucessfully, but B flush failed.&&&&This cause the filesystem of guest become read-only with following errors:&&&&&&&&end_request: I/O error, dev vda, sector 11159960&&&&Aborting journal on device vda3-8&&&&EXT4-fs error (device vda3): ext4_journal_start_sb:327: Detected abort journal&&&&EXT4-fs (vda3): Remounting filesystem read-only&&&&&&&&Cc: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Cc: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Changlong Xie <xiecl.fnst@cn.fujitsu.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," target-arm: Make Monitor->NS PL1 mode changes illegal if HCR.TGE is 1 If HCR.TGE is 1 then mode changes via CPS and MSR from Monitor to&&&&NonSecure PL1 modes are illegal mode changes. Implement this check&&&&in bad_mode_switch().&&&&&&&&(We don't currently implement HCR.TGE, but this is the only missing&&&&check from the v8 ARM ARM G1.9.3 and so it's worth adding now; the&&&&rest of the HCR.TGE checks can be added later as necessary.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Sergey Fedorov <serge.fdrv@gmail.com>&&&&Message-id: 1455556977-3644-12-git-send-email-peter.maydell@linaro.org&&&& "
1," ipmi: sensor number should not exceed MAX_SENSORS Fix a number of off-by-ones, one of them spotted by Coverity.&&&&&&&&Signed-off-by: C茅dric Le Goater <clg@fr.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, ivshmem-test: leak fixes Add a cleanup_vm() function to free QPCIDevice & QPCIBus when cleaning&&&&up the IVState.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& 
1, qemu-char: avoid leak in qemu_chr_open_pp_fd drv leaks if qemu_chr_alloc returns an error.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, misc: zynq-xadc: Fix off-by-one This bounds check was off-by-one. Fix.&&&&&&&&Reported-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Peter Crosthwaite <crosthwaite.peter@gmail.com>&&&&Message-id: 1453101737-11255-1-git-send-email-crosthwaite.peter@gmail.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," scsi: initialise info object with appropriate size While processing controller 'CTRL_GET_INFO' command, the routine&&&&'megasas_ctrl_get_info' overflows the '&info' object size. Use its&&&&appropriate size to null initialise it.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-Id: <alpine.LFD.2.20.1512211501420.22471@wniryva>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: P J P <ppandit@redhat.com>&&&& "
1," dump: allow target to set the physical base crash assumes the physical base in the kdump subheader of&&&&makedumpfile formatted dumps is correct. Zero is not correct&&&&for all architectures, so allow it to be changed.&&&&&&&&(No functional change.)&&&&&&&&Signed-off-by: Andrew Jones <drjones@redhat.com>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1452542185-10914-5-git-send-email-drjones@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," target-sparc: implement NPT timer bit If the NPT bit is set in the timer register, all non-supervisor read accesses&&&&to the register should fail with a privilege exception.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Reviewed-By: Artyom Tarasenko <atar4qemu@gmail.com>&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&& "
1," coverity: Model g_memdup() We model all the non-deprecated memory allocation functions from&&&&https://developer.gnome.org/glib/stable/glib-Memory-Allocation.html&&&&except for g_memdup(), g_clear_pointer(), g_steal_pointer().  We don't&&&&use the latter two.  Model the former.&&&&&&&&Coverity now reports an OVERRUN&&&&vl.c:2317: alloc_strlen: Allocating insufficient memory for the terminating null of the string.&&&&Correct, but we omit the terminating null intentionally there.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1448901152-11716-1-git-send-email-armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," vhost-user-test: fix chardriver race vhost-user-tests uses a helper thread to dispatch the vhost-user servers&&&&sources. However the CharDriverState is not thread-safe. Therefore, when&&&&it's given to the thread, it shouldn't be manipulated concurrently.&&&&&&&&We dispatch cleaning the server in an idle source. By the end of the&&&&test, we ensure not to leave anything behind by joining the thread and&&&&finishing the sources dispatch.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, atapi: Account for failed and invalid operations in cd_read_sector() Commit 5f81724d made PIO read requests async but didn't add the&&&&relevant block_acct_failed() and block_acct_invalid() calls.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Message-id: 9b87e09d61019c128139b6c999ed0c07f0674170.1448367341.git.berto@igalia.com&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&& 
1, ppc: Let kvmppc_reset_htab() return 0 for !CONFIG_KVM The !CONFIG_KVM implementation of kvmppc_reset_htab() returns -1&&&&by default. Change this to return 0 so that we fall back to user space&&&&HTAB allocation for emulated guests.&&&&&&&&This fixes the make check failures for ppc64 emulated target.&&&&&&&&Signed-off-by: Bharata B Rao <bharata@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1," qemu-sockets: do not test path with access() before unlinking Using access() is a time-of-check/time-of-use race condition.  It is&&&&okay to use them to provide better error messages, but that is pretty&&&&much it.&&&&&&&&This is not one such case; on the other hand, access() *will* skip&&&&unlink() for a non-existent path, so ignore ENOENT return values from&&&&the unlink() system call.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," qlist: Make conversion from QObject * accept null qobject_to_qlist() crashes on null, which is a trap for the unwary.&&&&Return null instead.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1444918537-18107-6-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," Revert ""pc: memhp: force gaps between DIMM's GPA"" This reverts commit aa8580cddf011e8cedcf87f7a0fdea7549fc4704.&&&&&&&&As described in&&&&http://article.gmane.org/gmane.comp.emulators.qemu/371432&&&&that commit causes linux guests to crash on memory hot-unplug.&&&&&&&&The original problem it's trying to solve has now&&&&been addressed within virtio.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," contrib: remove unnecessary strdup() getopt() optarg points to argv memory, no need to dup those values,&&&&fixes small leaks detected by clang-analyzer.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&& "
1, qga: fix uninitialized value warning for win32 Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& 
1," qapi: Share gen_visit_fields() Consolidate the code between visit, command marshalling, and&&&&event generation that iterates over the members of a struct.&&&&It reduces code duplication in the generator, so that a future&&&&patch can reduce the size of generated code while touching only&&&&one instead of three locations.&&&&&&&&There are no changes to the generated marshal code.&&&&&&&&The visitor code becomes slightly more verbose, but remains&&&&semantically equivalent, and is actually easier to read as&&&&it follows a more common idiom:&&&&&&&&|     visit_optional(v, &(*obj)->has_device, ""device"", &err);&&&&|-    if (!err && (*obj)->has_device) {&&&&|-        visit_type_str(v, &(*obj)->device, ""device"", &err);&&&&|-    }&&&&|     if (err) {&&&&|         goto out;&&&&|     }&&&&|+    if ((*obj)->has_device) {&&&&|+        visit_type_str(v, &(*obj)->device, ""device"", &err);&&&&|+        if (err) {&&&&|+            goto out;&&&&|+        }&&&&|+    }&&&&&&&&The event code becomes slightly more verbose, but this is&&&&arguably a bug fix: although the visitors are not well&&&&documented, use of an optional member should not be attempted&&&&unless guarded by a prior call to visit_optional().  Works only&&&&because the output qmp visitor has a no-op visit_optional():&&&&&&&&|+    visit_optional(v, &has_offset, ""offset"", &err);&&&&|+    if (err) {&&&&|+        goto out;&&&&|+    }&&&&|     if (has_offset) {&&&&|         visit_type_int(v, &offset, ""offset"", &err);&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1443565276-4535-17-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," device-introspect-test: New, covering device introspection The test doesn't check that the output makes any sense, only that QEMU&&&&survives.  Useful since we've had an astounding number of crash bugs&&&&around there.&&&&&&&&In fact, we have a bunch of them right now: a few devices crash or&&&&hang, and some leave dangling pointers behind.  The test skips testing&&&&the broken parts.  The next commits will fix them up, and drop the&&&&skipping.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1443689999-12182-8-git-send-email-armbru@redhat.com>&&&& "
1," linux-user: Use g_new() & friends where that makes obvious sense g_new(T, n) is neater than g_malloc(sizeof(T) * n).  It's also safer,&&&&for two reasons.  One, it catches multiplication overflowing size_t.&&&&Two, it returns T * rather than void *, which lets the compiler catch&&&&more type errors.&&&&&&&&This commit only touches allocations with size arguments of the form&&&&sizeof(T).  Same Coccinelle semantic patch as in commit b45c03f.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," qapi: Add tests for empty unions The documentation claims that alternates are useful for&&&&allowing two or more types, although nothing enforces this.&&&&Meanwhile, it is silent on whether empty unions are allowed.&&&&In practice, the generated code will compile, in part because&&&&we have a 'void *data' branch; but attempting to visit such a&&&&type will cause an abort().  While there's no technical reason&&&&that a degenerate union could not be made to work, it's harder&&&&to justify the time spent in chasing known (the current&&&&abort() during visit) and unknown corner cases, than it would&&&&be to just outlaw them.  A future patch will probably take the&&&&approach of forbidding them; in the meantime, we can at least&&&&add testsuite coverage to make it obvious where things stand.&&&&&&&&In addition to adding tests to expose the problems, we also&&&&need to adjust existing tests that are meant to test something&&&&else, but which could fail for the wrong reason if we reject&&&&degenerate alternates/unions.&&&&&&&&Note that empty structs are explicitly supported (for example,&&&&right now they are the only way to specify that one branch of a&&&&flat union adds no additional members), and empty enums are&&&&covered by the testsuite as working (even if they do not seem&&&&to have much use).&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1443565276-4535-8-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," hmp: added local apic dump state Added the hmp command to query local apic registers state, may be&&&&usefull after guest crashes to understand IRQ routing in guest.&&&&&&&&(qemu) info lapic&&&&dumping local APIC state for CPU 0&&&&&&&&LVT0    0x00010700 active-hi edge  masked                      ExtINT (vec 0)&&&&LVT1    0x00000400 active-hi edge                              NMI&&&&LVTPC   0x00010000 active-hi edge  masked                      Fixed  (vec 0)&&&&LVTERR  0x000000fe active-hi edge                              Fixed  (vec 254)&&&&LVTTHMR 0x00010000 active-hi edge  masked                      Fixed  (vec 0)&&&&LVTT    0x000000ef active-hi edge                 one-shot     Fixed  (vec 239)&&&&Timer   DCR=0x3 (divide by 16) initial_count = 61360&&&&SPIV    0x000001ff APIC enabled, focus=off, spurious vec 255&&&&ICR     0x000000fd physical edge de-assert no-shorthand&&&&ICR2    0x00000001 cpu 1 (X2APIC ID)&&&&ESR     0x00000000&&&&ISR     (none)&&&&IRR     239&&&&&&&&APR 0x00 TPR 0x00 DFR 0x0f LDR 0x00 PPR 0x00&&&&&&&&Signed-off-by: Pavel Butsykin <pbutsykin@virtuozzo.com>&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Andreas F脙陇rber <afaerber@suse.de>&&&&Message-Id: <1442927901-1084-7-git-send-email-den@openvz.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," block: mirror - fix full sync mode when target does not support zero init During mirror, if the target device does not support zero init, a&&&&mirror may result in a corrupted image for sync=""full"" mode.&&&&&&&&This is due to how the initial dirty bitmap is set up prior to copying&&&&data - we did not mark sectors as dirty that are unallocated.  This&&&&means those unallocated sectors are skipped over on the target, and for&&&&a device without zero init, invalid data may reside in those holes.&&&&&&&&If both of the following conditions are true, then we will explicitly&&&&mark all sectors as dirty:&&&&&&&&    1.) sync = ""full""&&&&    2.) bdrv_has_zero_init(target) == false&&&&&&&&If the target does support zero init, but a target image is passed in&&&&with data already present (i.e. an ""existing"" image), it is assumed the&&&&data present in the existing image is valid data for those sectors.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 91ed4bc5bda7e2b09eb508b07c83f4071fe0b3c9.1443705220.git.jcody@redhat.com&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& "
1," quorum: validate vote threshold against num_children even if read-pattern is fifo We need to use threshold to check if too many write operation fails.&&&&If threshold is larger than num children, we always get write error&&&&event even if all write operations success.&&&&&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Message-id: 55962F72.3060003@cn.fujitsu.com&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," s390/sclp: temporarily fix unassignment/reassignment of memory subregions Commit 374f2981d1f1 (""memory: protect current_map by RCU"") broke&&&&unassignment of standby memory on s390x. Looks like that the new&&&&parallelism allows races with our (semi broken) memory hotplug code. The&&&&flatview_unref() can now be executed after our unparenting. Therefore&&&&memory_region_unref() tries to unreference the MemoryRegion itself instead&&&&of the parent.&&&&&&&&In theory, MemoryRegions are now bound to separate devices that control&&&&their lifetime. We don't have this yet, so we really want to control their&&&&lifetime manually.&&&&&&&&This patch fixes it temporarily, until we have a proper rework. The only&&&&drawback is that they won't pop up in ""info qom-tree"", but that's better&&&&than qemu crashes.&&&&&&&&We have to release the reference to a memory region after a&&&&memory_region_find, as it automatically takes a reference. As we're now&&&&able to reassign memory, the MemoryRegion is in fact deleted (otherwise&&&&vmstate_register_ram() would complain).&&&&&&&&Reviewed-by: Matthew Rosato <mjrosato@linux.vnet.ibm.com>&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1, vhost/scsi: call vhost_dev_cleanup() at unrealize() time vhost-scsi calls vhost_dev_init() at realize() time&&&&but forgets to call it's counterpart vhost_dev_cleanup()&&&&at unrealize() time.&&&&&&&&Calling it should fix leaking of memory table and&&&&mem_sections table in vhost device. And also unregister&&&&vhost's memory listerner to prevent access from&&&&memory core to freed memory.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Message-Id: <1438262999-287627-1-git-send-email-imammedo@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," aio-win32: reorganize polling loop Preparatory bugfixes and tweaks to the loop before the next patch:&&&&&&&&- disable dispatch optimization during aio_prepare.  This fixes a bug.&&&&&&&&- do not modify ""blocking"" until after the first WaitForMultipleObjects&&&&call.  This is needed in the next patch.&&&&&&&&- change the loop to do...while.  This makes it obvious that the loop&&&&is always entered at least once.  In the next patch this is important&&&&because the first iteration undoes the ctx->notify_me increment that&&&&happened before entering the loop.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Tested-by: Richard W.M. Jones <rjones@redhat.com>&&&&Message-id: 1437487673-23740-4-git-send-email-pbonzini@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," ossaudio: fix memory leak Variable ""conf"" going out of scope leaks the storage&&&&it points to in line 856.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Message-Id: <1435021270-7768-1-git-send-email-arei.gonglei@huawei.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," block/raw-posix: Don't think /dev/fd/<NN> is a floppy drive. In libguestfs we use /dev/fd/<NN> to pass pre-opened file descriptors&&&&to qemu-img.  Lately I've discovered that although this works, qemu&&&&believes that these are floppy disk images.  That in itself isn't much&&&&of a problem, but now qemu prints a warning about host floppy&&&&pass-thru being deprecated.&&&&&&&&Extend the existing test so that it ignores /dev/fd/ as well as&&&&/dev/fdset/&&&&&&&&A simple test of this, if you are using the bash shell, is:&&&&&&&&  qemu-img info <( cat /dev/null )&&&&&&&&without this patch:&&&&&&&&  $ qemu-img info <( cat /dev/null )&&&&  qemu-img: Host floppy pass-through is deprecated&&&&  Support for it will be removed in a future release.&&&&  qemu-img: Could not open '/dev/fd/63': Could not refresh total sector count: Illegal seek&&&&&&&&with this patch:&&&&&&&&  $ qemu-img info <( cat /dev/null )&&&&  qemu-img: Could not open '/dev/fd/63': Could not refresh total sector count: Illegal seek&&&&&&&&Signed-off-by: Richard W.M. Jones <rjones@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1435761614-31358-1-git-send-email-rjones@redhat.com&&&&Fixes: https://bugs.launchpad.net/qemu/+bug/1470536&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," Fix migration in case of scsi-generic During migration, QEMU uses fsync()/fdatasync() on the open file&&&&descriptor for read-write block devices to flush data just before&&&&stopping the VM.&&&&&&&&However, fsync() on a scsi-generic device returns -EINVAL which&&&&causes the migration to fail. This patch skips flushing data in case&&&&of an SG device, since submitting SCSI commands directly via an SG&&&&character device (e.g. /dev/sg0) bypasses the page cache completely,&&&&anyway.&&&&&&&&Note that fsync() not only flushes the page cache but also the disk&&&&cache. The scsi-generic device never sends flushes, and for&&&&migration it assumes that the same SCSI device is used by the&&&&destination host, so it does not issue any SCSI SYNCHRONIZE CACHE&&&&(10) command.&&&&&&&&Finally, remove the bdrv_is_sg() test from iscsi_co_flush() since&&&&this is now redundant (we flush the underlying protocol at the end&&&&of bdrv_co_flush() which, with this patch, we never reach).&&&&&&&&Signed-off-by: Dimitris Aragiorgis <dimara@arrikto.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1435056300-14924-3-git-send-email-dimara@arrikto.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," bios-tables-test: handle false-positive smbios signature matches It has been reported that sometimes the .rodata section of SeaBIOS,&&&&containing the constant string against which the SMBIOS signature&&&&ends up being compared, also falls within the guest f-segment. In&&&&that case, the test obviously fails, unless we continue searching&&&&for the *real* SMBIOS entry point.&&&&&&&&Rather than stopping at the first match for the SMBIOS signature&&&&(""_SM_"") in the f-segment (0xF0000-0xFFFFF), continue scanning&&&&until either a valid entry point table is found, or the f-segment&&&&has been exhausted.&&&&&&&&Reported-by: Bruce Rogers <brogers@suse.com>&&&&Signed-off-by: Gabriel Somlo <somlo@cmu.edu>&&&&Tested-by: Bruce Rogers <brogers@suse.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, target-s390x: fix CC computation for EX instruction Commit 7a6c7067f optimized CC computation by only saving cc_op before&&&&calling helpers as they either don't touch the CC or generate a new&&&&static value. This however doesn't work for the EX instruction as the&&&&helper changes or not the CC value depending on the actual executed&&&&instruction (e.g. MVC vs CLC).&&&&&&&&This patches force a CC computation before calling the helper. This&&&&fixes random memory corruption occuring in guests.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&[agraf: remove set_cc_static in op_ex as suggested by rth]&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
1," hw/ide/pci: Fix memory leak valgrind complains about:&&&&==16447== 16 bytes in 2 blocks are definitely lost in loss record 1,304 of 3,310&&&&==16447==    at 0x4C2845D: malloc (in /usr/lib64/valgrind/vgpreload_memcheck-amd64-linux.so)&&&&==16447==    by 0x2E4FD7: malloc_and_trace (vl.c:2546)&&&&==16447==    by 0x64C770E: g_malloc (in /usr/lib64/libglib-2.0.so.0.3600.3)&&&&==16447==    by 0x36FB47: qemu_extend_irqs (irq.c:55)&&&&==16447==    by 0x36FBD3: qemu_allocate_irqs (irq.c:64)&&&&==16447==    by 0x3B4B44: bmdma_init (pci.c:464)&&&&==16447==    by 0x3B547B: pci_piix_init_ports (piix.c:144)&&&&==16447==    by 0x3B55D2: pci_piix_ide_realize (piix.c:164)&&&&==16447==    by 0x3EAEC6: pci_qdev_realize (pci.c:1790)&&&&==16447==    by 0x36C685: device_set_realized (qdev.c:1058)&&&&==16447==    by 0x47179E: property_set_bool (object.c:1514)&&&&==16447==    by 0x470098: object_property_set (object.c:837)&&&&&&&&Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Reviewed-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," target-tricore: fix msub32_q producing the wrong overflow bit The inversion of the overflow bit as a special case, which was needed for the&&&&madd32_q instructions, does not apply for msub32_q instructions. So remove it.&&&&&&&&Signed-off-by: Bastian Koppelmann <kbastian@mail.uni-paderborn.de>&&&&Message-Id: <1432289758-6250-3-git-send-email-kbastian@mail.uni-paderborn.de>&&&& "
1," target-s390x: fix MVC instruction when areas overlap The MVC instruction and the memmove C funtion do not have the same&&&&semantic when memory areas overlap:&&&&&&&&MVC: When the operands overlap, the result is obtained as if the&&&&operands were processed one byte at a time and each result byte were&&&&stored immediately after fetching the necessary operand byte.&&&&&&&&memmove: Copying takes place as though the bytes in src are first copied&&&&into a temporary array that does not overlap src or dest, and the bytes&&&&are then copied from the temporary array to dest.&&&&&&&&The behaviour is therefore the same when the destination is at a lower&&&&address than the source, but not in the other case. This is actually a&&&&trick for propagating a value to an area. While the current code detects&&&&that and call memset in that case, it only does for 1-byte value. This&&&&trick can and is used for propagating two or more bytes to an area.&&&&&&&&In the softmmu case, the call to mvc_fast_memmove is correct as the&&&&above tests verify that source and destination are each within a page,&&&&and both in a different page. The part doing the move 8 bytes by 8 bytes&&&&is wrong and we need to check that if the source and destination&&&&overlap, they do with a distance of minimum 8 bytes before copying 8&&&&bytes at a time.&&&&&&&&In the user code, we should check check that the destination is at a&&&&lower address than source or than the end of the source is at a lower&&&&address than the destination before calling memmove. In the opposite&&&&case we fallback to the same code as the softmmu one. Note that l&&&&represents (length - 1).&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," vmdk: Widen before shifting 32 bit header field Coverity spotted this.&&&&&&&&The field is 32 bits, but if it's possible to overflow in 32 bit&&&&left shift.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Revert ""hmp: fix crash in 'info block -n -v'"" This reverts commit 638b8366200130cc7cf7a026630bc6bfb63b0c4c.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," vhost: fix log base address VHOST_SET_LOG_BASE got an incorrect address, causing&&&&migration errors and potentially even memory corruption.&&&&&&&&Reported-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Amos Kong <akong@redhat.com>&&&&Message-id: 1429283565-32265-1-git-send-email-mst@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," balloon: improve error msg when adding second device A VM supports only one balloon device, but due to several changes&&&&in infrastructure the error message got messed up when trying&&&&to add a second device. Fix it.&&&&&&&&Before this fix&&&&&&&&Command-line:&&&&&&&&qemu-qmp: -device virtio-balloon-pci,id=balloon0: Another balloon device already registered&&&&qemu-qmp: -device virtio-balloon-pci,id=balloon0: Adding balloon handler failed&&&&qemu-qmp: -device virtio-balloon-pci,id=balloon0: Device 'virtio-balloon-pci' could not be initialized&&&&&&&&HMP:&&&&&&&&Another balloon device already registered&&&&Adding balloon handler failed&&&&Device 'virtio-balloon-pci' could not be initialized&&&&&&&&QMP:&&&&&&&&{ ""execute"": ""device_add"", ""arguments"": { ""driver"": ""virtio-balloon-pci"", ""id"": ""balloon0"" } }&&&&{&&&&	""error"": {&&&&		""class"": ""GenericError"",&&&&		""desc"": ""Adding balloon handler failed""&&&&	}&&&&}&&&&&&&&After this fix&&&&&&&&Command-line:&&&&&&&&qemu-qmp: -device virtio-balloon-pci,id=balloon0: Only one balloon device is supported&&&&qemu-qmp: -device virtio-balloon-pci,id=balloon0: Device 'virtio-balloon-pci' could not be initialized&&&&&&&&HMP:&&&&&&&&(qemu) device_add virtio-balloon-pci,id=balloon0&&&&Only one balloon device is supported&&&&Device 'virtio-balloon-pci' could not be initialized&&&&(qemu)&&&&&&&&QMP:&&&&&&&&{ ""execute"": ""device_add"",&&&&          ""arguments"": { ""driver"": ""virtio-balloon-pci"", ""id"": ""balloon0"" } }&&&&{&&&&    ""error"": {&&&&        ""class"": ""GenericError"",&&&&        ""desc"": ""Only one balloon device is supported""&&&&    }&&&&}&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1, virtfs-proxy: Fix possible overflow It's detected by coverity. The socket name specified&&&&should fit in the sockadd_un.sun_path. If not abort.&&&&&&&&Signed-off-by: Shannon Zhao <zhaoshenglong@huawei.com>&&&&Signed-off-by: Shannon Zhao <shannon.zhao@linaro.org>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& 
1," vnc: avoid possible file handler leak vs->lsock may equal to 0, modify the check condition,&&&&avoid possible vs->lsock leak.&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, Fix crash when connecting to VNC through websocket Connecting to VNC through websocket crashes in vnc_flush() when trying&&&&to acquire a mutex that hasn't been initialized (vnc_init_state(vs)&&&&hasn't been called at this point).&&&&&&&&Signed-off-by: Jorge Acereda Macia <jacereda@gmail.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," qcow2: Add refcount_bits to format-specific info Add the bit width of every refcount entry to the format-specific&&&&information.&&&&&&&&In contrast to lazy_refcounts and the corrupt flag, this should be&&&&always emitted, even for compat=0.10 although it does not support any&&&&refcount width other than 16 bits. This is because if a boolean is&&&&optional, one normally assumes it to be false when omitted; but if an&&&&integer is not specified, it is rather difficult to guess its value.&&&&&&&&This new field breaks some test outputs, fix them.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," block: fix off-by-one error in qcow and qcow2 This fixes an off-by-one error introduced in 9a29e18.  Both qcow and&&&&qcow2 need to make sure to leave room for string terminator '\0' for&&&&the backing file, so the max length of the non-terminated string is&&&&either 1023 or PATH_MAX - 1.&&&&&&&&Reported-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," rcu: handle forks safely After forking, only the calling thread is duplicated in the child process.&&&&The call_rcu thread has to be recreated in the child.  Exploit the fact&&&&that only one thread exists (same as when constructors run), and just redo&&&&the entire initialization to ensure the threads are in the proper state.&&&&&&&&The only additional things to do are emptying the list of threads&&&&registered with RCU, and unlocking the lock that was taken in the prepare&&&&callback (implementations are allowed to fail pthread_mutex_init()&&&&if the mutex is still locked).&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," target-tricore: split up suov32 into suov32_pos and suov32_neg suov checks unsigned for an overflow and an underflow, after some arithmetic&&&&operations and saturates the result to either max_uint32 or 0. So far we&&&&handled this by expanding to the next bigger data type and compare whether&&&&the result is > max_uint32 or < 0.&&&&&&&&However this approach can fail for an 32 bit multiplication, if both operands of&&&&the multiplication are 0x80000000. This sets the sign bit of the 64 bit integer&&&&and would result in a false saturation to 0.&&&&&&&&Since unsigned operations, e.g add, sub, mul always result in either a positive&&&&or negative overflow, we split the functions for suov32 up into two functions&&&&(suov32_pos, suov32_neg) for each case.&&&&&&&&Signed-off-by: Bastian Koppelmann <kbastian@mail.uni-paderborn.de>&&&& "
1," pc: memory: Validate alignment of maxram_size to page size If the maxram_size is not aligned and dimm devices were added on the&&&&command line qemu would terminate with a rather unhelpful message:&&&&&&&&ERROR:hw/mem/pc-dimm.c:150:pc_dimm_get_free_addr: assertion failed:&&&&(QEMU_ALIGN_UP(address_space_size, align) == address_space_size)&&&&&&&&In case no dimm device was originally added on the commandline qemu&&&&exits on the assertion failure.&&&&&&&&Signed-off-by: Peter Krempa <pkrempa@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Peter Krempa <pkrempa@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&&&&&&&&& "
1," ide: Implement VPD response for ATAPI SCSI devices have multiple kinds of queries they need to respond&&&&to, as defined in the ""cmd inquiry"" section in MMC-6 and SPC-3.&&&&&&&&Relevent sections:&&&&MMC-6 revision 2g:&&&&      Non-VPD response data and pointer to SPC-3;&&&&      Section 6.8 ""Inquiry Command""&&&&SPC-3 revision 23:&&&&      Inquiry command and error handling:&&&&      Section 6.4 ""INQUIRY command""&&&&      VPD data pages format:&&&&      Section 7.6 ""Vital product data parameters""&&&&&&&&We implement these Vital Product Data queries for SCSI, but not for&&&&ATAPI through IDE. The result is that if you are looking for the WWN&&&&identifier via tools such as sg3_utils, you will be unable to query&&&&our CD/DVD rom device to obtain it.&&&&&&&&This patch adds the minimum number of mandatory responses as defined&&&&by SPC-3, which include the ""supported pages"" response (page 0x00)&&&&and the ""Device Identification"" response (page 0x83). It also correctly&&&&responds when it receives a request for an illegal page to improve&&&&error output from related tools.&&&&&&&&The Device ID page contains an arbitrary list of identification&&&&strings of various formats; the ID strings included in this patch&&&&were chosen to mimic those provided by the libata driver when&&&&emulating this SCSI query (model, serial, and wwn when present.)&&&&&&&&Example:&&&&&&&&# libata emulated response&&&&[root@localhost ~]# sg_inq --id /dev/sda&&&&VPD INQUIRY: Device Identification page&&&&  Designation descriptor number 1, descriptor length: 24&&&&    designator_type: vendor specific [0x0],  code_set: ASCII&&&&    associated with the addressed logical unit&&&&      vendor specific: QM00001&&&&  Designation descriptor number 2, descriptor length: 72&&&&    designator_type: T10 vendor identification,  code_set: ASCII&&&&    associated with the addressed logical unit&&&&      vendor id: ATA&&&&      vendor specific: QEMU HARDDISK                           QM00001&&&&&&&&# QEMU generated ATAPI response, with WWN&&&&[root@localhost ~]# sg_inq --id /dev/sr0&&&&VPD INQUIRY: Device Identification page&&&&  Designation descriptor number 1, descriptor length: 24&&&&    designator_type: vendor specific [0x0],  code_set: ASCII&&&&    associated with the addressed logical unit&&&&      vendor specific: QM00005&&&&  Designation descriptor number 2, descriptor length: 72&&&&    designator_type: T10 vendor identification,  code_set: ASCII&&&&    associated with the addressed logical unit&&&&      vendor id: ATA&&&&      vendor specific: QEMU DVD-ROM                            QM00005&&&&  Designation descriptor number 3, descriptor length: 12&&&&    designator_type: NAA,  code_set: Binary&&&&    associated with the addressed logical unit&&&&      NAA 5, IEEE Company_id: 0xc50&&&&      Vendor Specific Identifier: 0x15ea71bb&&&&      [0x5000c50015ea71bb]&&&&&&&&See also: hw/scsi/scsi-disk.c, scsi_disk_emulate_inquiry()&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," hw/arm/realview.c: Fix memory leak in realview_init() Variable 'ram_lo' is allocated unconditionally, but used only in some cases.&&&&When it is unused pointer will be lost at function exit, resulting in a&&&&memory leak. Allocate memory for 'ram_lo' only if it is needed.&&&&&&&&Valgrind output:&&&&==16879== 240 bytes in 1 blocks are definitely lost in loss record 6,033 of 7,018&&&&==16879==    at 0x4C2AB80: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)&&&&==16879==    by 0x33D2CE: malloc_and_trace (vl.c:2804)&&&&==16879==    by 0x509E610: g_malloc (in /lib/x86_64-linux-gnu/libglib-2.0.so.0.4000.0)&&&&==16879==    by 0x288836: realview_init (realview.c:55)&&&&==16879==    by 0x28988C: realview_pb_a8_init (realview.c:375)&&&&==16879==    by 0x341426: main (vl.c:4413)&&&&&&&&Signed-off-by: Nikita Belov <zodiac@ispras.ru>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," vt82c686: fix coverity warning about out-of-bounds write Refactor superio_ioport_writeb to fix the out of bounds write warning.&&&&&&&&In addition, fix two typos: s/chage/change/&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, block migration: fix return value Modify block_save_iterate() to return positive/zero/negative&&&&(success/not done/failure) return status. The computation of&&&&the blocks transferred (an int64_t) exceeds the size of an&&&&int return value.&&&&&&&&Signed-off-by: Gary R Hook <gary.hook@nimboxx.com>&&&&Reviewed-by: ChenLiang <chenliang88@huawei.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Message-id: 1416958202-15913-1-git-send-email-gary.hook@nimboxx.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," virtio-9p-proxy: Fix sockfd leak If connect() in connect_namedsocket() return false, the sockfd will leak.&&&&Plug it.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&& "
1," ivshmem: Fix potential OOB r/w access Fix OOB access via malformed incoming_posn parameters&&&&and check that requested memory is actually alloc'ed.&&&&&&&&Signed-off-by: Sebastian Krahmer <krahmer@suse.de>&&&&[AF: Rebased, cleanups, avoid fd leak]&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," vmware-vga: add vmsvga_verify_rect Add verification function for rectangles, returning&&&&true if verification passes and false otherwise.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Don Koch <dkoch@verizon.com>&&&& "
1," qcow2: Split fail code in L1 and L2 checks Instead of printing out an error message, incrementing check_errors and&&&&returning a fixed -errno, just do cleanups and return -ret, with ret set&&&&by the code which threw the exception (jumped to the fail label).&&&&&&&&Also, increment check_errors on error in check_refcounts_l2().&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," libqos: improve event_index test with timeout The virtio event_index feature lets the device driver tell the device&&&&how many requests to process before raising the next interrupt.&&&&virtio-blk-test.c tries to verify that the device does not raise an&&&&interrupt unnecessarily.&&&&&&&&Unfortunately the test has a race condition.  It spins checking for an&&&&interrupt up to 100 times and then assumes the request has finished.  On&&&&a slow host the I/O request could still be in flight and the test would&&&&fail.&&&&&&&&This patch waits for the request to complete, or until a 30-second&&&&timeout is reached.  If an interrupt is raised while waiting the test&&&&fails since the device was not supposed to raise interrupts.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," qcow2: Fix leak of QemuOpts in qcow2_open() Currently, the QemuOpts object opts is leaked if anything fails from its&&&&creation up to and including the image repair block. Fix this by freeing&&&&that object in the fail path.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Beno卯t Canet <benoit.canet@nodalink.com>&&&&Message-id: 1408557576-14574-2-git-send-email-mreitz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, MAINTAINERS: add the image fuzzer to the block layer More work for the block device maintainers!&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, query-memdev: fix potential memory leaks Signed-off-by: Chen Fan <chen.fan.fnst@cn.fujitsu.com>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Reviewed-by: Hu Tao <hutao@cn.fujitsu.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," virtio-scsi: Report error if num_queues is 0 or too large No cmd vq surprises guest (Linux panics in virtscsi_probe), too many&&&&queues abort qemu (in the following virtio_add_queue).&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," block: Use g_new() & friends to avoid multiplying sizes g_new(T, n) is safer than g_malloc(sizeof(*v) * n) for two reasons.&&&&One, it catches multiplication overflowing size_t.  Two, it returns&&&&T * rather than void *, which lets the compiler catch more type&&&&errors.&&&&&&&&Perhaps a conversion to g_malloc_n() would be neater in places, but&&&&that's merely four years old, and we can't use such newfangled stuff.&&&&&&&&This commit only touches allocations with size arguments of the form&&&&sizeof(T), plus two that use 4 instead of sizeof(uint32_t).  We can&&&&make the others safe by converting to g_malloc_n() when it becomes&&&&available to us in a couple of years.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," vmdk: Handle failure for potentially large allocations Some code in the block layer makes potentially huge allocations. Failure&&&&is not completely unexpected there, so avoid aborting qemu and handle&&&&out-of-memory situations gracefully.&&&&&&&&This patch addresses the allocations in the vmdk block driver.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&& "
1," rbd: Handle failure for potentially large allocations Some code in the block layer makes potentially huge allocations. Failure&&&&is not completely unexpected there, so avoid aborting qemu and handle&&&&out-of-memory situations gracefully.&&&&&&&&This patch addresses the allocations in the rbd block driver.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," iscsi: Handle failure for potentially large allocations Some code in the block layer makes potentially huge allocations. Failure&&&&is not completely unexpected there, so avoid aborting qemu and handle&&&&out-of-memory situations gracefully.&&&&&&&&This patch addresses the allocations in the iscsi block driver.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," dmg: Handle failure for potentially large allocations Some code in the block layer makes potentially huge allocations. Failure&&&&is not completely unexpected there, so avoid aborting qemu and handle&&&&out-of-memory situations gracefully.&&&&&&&&This patch addresses the allocations in the dmg block driver.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&& "
1," qcow2: Fix error path for unknown incompatible features qcow2's report_unsupported_feature() had two bugs: A 32 bit truncation&&&&would prevent feature table entries for bits 32-63 from being used, and&&&&it could assign errp multiple times if there was more than one unknown&&&&feature, resulting in an error_set() assertion failure.&&&&&&&&Fix the truncation, make sure to set the error exactly once and add a&&&&qemu-iotests case for it.&&&&&&&&This fixes https://bugs.launchpad.net/qemu/+bug/1342704/&&&&&&&&Reported-by: Maria Kustova <maria.k@catit.be>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," block: Extract the block accounting code The plan is to add new accounting metrics (latency, invalid requests, failed&&&&requests, queue depth) and block.c is overpopulated so it will be better to work&&&&in a separate module.&&&&&&&&Moreover the long term plan is to have statistics in each of the BDS of the graph&&&&for metrology purpose; this means that the device model statistics must move from&&&&the topmost BDS to the device model.&&&&&&&&So we need to decouple the statistic code from BlockDriverState.&&&&&&&&This is another argument for the extraction of the code in a separate module.&&&&&&&&CC: Kevin Wolf <kwolf@redhat.com>&&&&CC: Stefan Hajnoczi <stefanha@redhat.com>&&&&CC: Max Reitz <mreitz@redhat.com>&&&&CC: Eric Blake <eblake@redhat.com>&&&&CC: Benoit Canet <benoit@irqsave.net>&&&&CC: Fam Zheng <famz@redhat.com>&&&&CC: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&&&&&Signed-off-by: Beno卯t Canet <benoit.canet@nodalink.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, ahci.c: mask unused flags when reading size PRDT DBC The data byte count(DBC) read from the description information is defined for&&&&bits 21:00. Bits 30:22 are reserved and bit 31 is the Interrupt on Completion&&&&(I) flag.&&&&&&&&Completion interrupts are triggered after every transaction instead of on&&&&I-flag in QEMU. tbl_entry_size is a signed integer and improperly reading the&&&&DBC leads to a negative offset that causes sglist allocation to fail.&&&&&&&&Signed-off-by: Reza Jelveh <reza.jelveh@tuhh.de>&&&&Reviewed-by: Alexander Graf <agraf@suse.de>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: John Snow <jsnow@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," qemu-char: initialize chr_write_lock Otherwise, Windows fails with a deadlock.&&&&&&&&Reported-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Message-id: 1403679897-11480-1-git-send-email-pbonzini@redhat.com&&&&Tested-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," qemu-char: avoid leaking unused fds in tcp_get_msgfds() Commit c76bf6bb8fbbb233a7d3641e09229d23747d5ee3 (""Add chardev API&&&&qemu_chr_fe_get_msgfds"") extended the get_msgfds API from one to&&&&multiple file descriptors.  It forgot to close unused file descriptors&&&&before freeing the file descriptor array.&&&&&&&&This patch prevents a file descriptor leak if the tcp_get_msgfds()&&&&callers requests fewer file descriptors than are available.&&&&&&&&Cc: Nikolay Nikolaev <n.nikolaev@virtualopensystems.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
1, vhost: fix resource leak in error handling vhost_verify_ring_mappings leaks mappings on error.&&&&Fix this up.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&&&&&&&&&& 
1," virtio-scsi: define dummy handle_output for vhost-scsi vqs vhost userspace needn't to handle vq's notification from guest,&&&&so define dummy handle_output callback for all vqs of vhost-scsi.&&&&&&&&In some corner cases(such as when handling vq's reset from VM), virtio-pci&&&&still trys to handle pending virtio-scsi events, then object check failure&&&&inside virtio_scsi_handle_event() for vhost-scsi can be triggered.&&&&&&&&The issue can be reproduced by 'rmmod virtio-scsi', 'system sleep' or reboot&&&&inside VM.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Cc: Anthony Liguori <aliguori@amazon.com>&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Ming Lei <ming.lei@canonical.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, rbd: Fix leaks in rbd_start_aio() error path Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Reviewed-by: Josh Durgin <josh.durgin@inktank.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, block/qapi: Plug memory leak in dump_qobject() case QTYPE_QERROR Introduced in commit a8d8ecb.  Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," Disallow outward migration while awaiting incoming migration QEMU will assert if you attempt to start an outgoing migration on&&&&a QEMU that's sitting waiting for an incoming migration (started&&&&with -incoming), so disallow it with a proper error.&&&&&&&&(This is a fix for https://bugzilla.redhat.com/show_bug.cgi?id=1086987 )&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," usb: sanity check setup_index+setup_len in post_load CVE-2013-4541&&&&&&&&s->setup_len and s->setup_index are fed into usb_packet_copy as&&&&size/offset into s->data_buf, it's possible for invalid state to exploit&&&&this to load arbitrary data.&&&&&&&&setup_len and setup_index should be checked to make sure&&&&they are not negative.&&&&&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1, vmstate: fix buffer overflow in target-arm/machine.c CVE-2013-4531&&&&&&&&cpreg_vmstate_indexes is a VARRAY_INT32. A negative value for&&&&cpreg_vmstate_array_len will cause a buffer overflow.&&&&&&&&VMSTATE_INT32_LE was supposed to protect against this&&&&but doesn't because it doesn't validate that input is&&&&non-negative.&&&&&&&&Fix this macro to valide the value appropriately.&&&&&&&&The only other user of VMSTATE_INT32_LE doesn't&&&&ever use negative numbers so it doesn't care.&&&&&&&&Reported-by: Anthony Liguori <anthony@codemonkey.ws>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
1," target-arm: Implement XScale cache lockdown operations as NOPs XScale defines some implementation-specific coprocessor registers&&&&for doing cache lockdown operations. Since QEMU doesn't model a&&&&cache no proper implementation is possible, but NOP out the&&&&registers so that guest code like u-boot that tries to use them&&&&doesn't crash.&&&&&&&&Reported-by: <prqek@centrum.cz>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," target-alpha: Remove cpu_unique, cpu_sysval, cpu_usp Technically, these variables could have been referenced both via&&&&offsets from env and as TCG registers, which would be illegal.&&&&Of course, that could only be done from PALcode, and ours doesn't&&&&do that.&&&&&&&&But honestly, these are used infrequently enough that they don't&&&&really need to be TCG registers.  We wind up with exactly the same&&&&code if we follow the letter of the law and issue explicit ld/st.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
1, vmxnet3: validate queues configuration read on migration CVE-2013-4544&&&&&&&&Signed-off-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Reported-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Message-id: 1396604722-11902-5-git-send-email-dmitry@daynix.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," dmg: prevent out-of-bounds array access on terminator When a terminator is reached the base for offsets and sectors is stored.&&&&The following records that are processed will use this base value.&&&&&&&&If the first record we encounter is a terminator, then calculating the&&&&base values would result in out-of-bounds array accesses.  Don't do&&&&that.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, block/cloop: refuse images with bogus offsets (CVE-2014-0144) The offsets[] array allows efficient seeking and tells us the maximum&&&&compressed data size.  If the offsets are bogus the maximum compressed&&&&data size will be unrealistic.&&&&&&&&This could cause g_malloc() to abort and bogus offsets mean the image is&&&&broken anyway.  Therefore we should refuse such images.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1, block/cloop: validate block_size header field (CVE-2014-0144) Avoid unbounded s->uncompressed_block memory allocation by checking that&&&&the block_size header field has a reasonable value.  Also enforce the&&&&assumption that the value is a non-zero multiple of 512.&&&&&&&&These constraints conform to cloop 2.639's code so we accept existing&&&&image files.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," osdep: initialize glib threads in all QEMU tools glib versions prior to 2.31.0 require an explicit g_thread_init() call&&&&to enable multi-threading.&&&&&&&&Failure to initialize threading causes glib to take single-threaded code&&&&paths without synchronization.  For example, the g_slice allocator will&&&&crash due to race conditions.&&&&&&&&Fix this for all QEMU tool programs (qemu-nbd, qemu-io, qemu-img) by&&&&moving the g_thread_init() call from vl.c:main() into a new&&&&osdep.c:thread_init() constructor function.&&&&&&&&thread_init() has __attribute__((constructor)) and is automatically&&&&invoked by the runtime during startup.&&&&&&&&We can now drop the ""simple"" trace backend's g_thread_init() call since&&&&thread_init() already called it.&&&&&&&&Note that we must keep coroutine-gthread.c's g_thread_init() call which&&&&is located in a constructor function.  There is no guarantee for&&&&constructor function ordering so thread_init() may only be called later.&&&&&&&&Reported-by: Mario de Chenno <mario.dechenno@unina2.it>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, virtio-rng: Avoid default_backend refcount leak QOM child properties take a reference to the object and release it when&&&&the property is deleted.  Therefore we should unref the default_backend&&&&after we have added it as a child property.&&&&&&&&Cc: KONRAD Frederic <fred.konrad@greensocs.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
1, linux-user/signal.c: Correct error path for AArch64 do_rt_sigreturn The error path in AArch64 do_rt_sigreturn() which fails before&&&&attempting lock_user_struct() was doing an unlock_user_struct()&&&&on an uninitialized variable. Initialize frame to NULL so we&&&&can use the same error-exit path in all cases (unlock of NULL&&&&is permitted and does nothing).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
1," target-mips: Avoid shifting left into sign bit Add U suffix to various places where we shift a 1 left by 31,&&&&to avoid undefined behaviour.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, acpi-build: don't access unaligned addresses casting an unaligned address to e.g.&&&&uint32_t can trigger undefined behaviour in C.&&&&Replace cast + assignment with memcpy.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1," qapi: Clean up null checking in generated visitors Visitors get passed a pointer to the visited object.  The generated&&&&visitors try to cope with this pointer being null in some places, for&&&&instance like this:&&&&&&&&    visit_start_optional(m, obj ? &(*obj)->has_name : NULL, ""name"", &err);&&&&&&&&visit_start_optional() passes its second argument to Visitor method&&&&start_optional.  Three out of three methods dereference it&&&&unconditionally.&&&&&&&&I fail to see how this pointer could legitimately be null.&&&&&&&&All this useless null checking is highly redundant, which Coverity&&&&duly reports.  About 200 times.&&&&&&&&Remove the useless null checks.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," s390x/sclp: Add missing checks to SCLP handler If the 51 most significant bits of the SCCB address are zero or equal to&&&&the prefix, we should throw an specification exception, too.&&&&Also moved the check for privileged mode to sclp_service_call() to have&&&&all program checks in one place now.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
1," ACPI: Remove commented-out code from HPET._CRS IRQNoFlags on HPET._CRS crashes WinXP because it causes the HPET&&&&to conflict with the system timer and/or the RTC. It only occurs&&&&on Apple hardware, and even there it is exposed fully only when&&&&OS X is detected (via _OSI). Recent OS X versions work on QEMU&&&&without this statement, so at this time there is no need to find&&&&a better way to conditionally include the statement. This patch&&&&removes the commented out (and wrong, should have been {0, 8})&&&&statement from HPET._CRS.&&&&&&&&Signed-off-by: Gabriel Somlo <somlo@cmu.edu>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-By: Igor Mammedov <imammedo@redhat.com>&&&& "
1," qemu_opts_parse(): always check return value qemu_opts_parse() can always return NULL, even if the QemuOptsList.desc in&&&&question would be trivial to satisfy (eg. because it's empty). For&&&&example:&&&&&&&&qemu_opts_parse()&&&&  opts_parse()&&&&    qemu_opts_create()&&&&      id_wellformed()&&&&&&&&In practice:&&&&&&&&  $ .../qemu-system-x86_64 -acpitable id=3&&&&  qemu-system-x86_64: -acpitable id=3: Parameter 'id' expects an identifier&&&&  **&&&&  ERROR:vl.c:3491:main: assertion failed: (opts != NULL)&&&&  Aborted (core dumped)&&&&&&&&  $ .../qemu-system-x86_64 -smbios id=3&&&&  qemu-system-x86_64: -smbios id=3: Parameter 'id' expects an identifier&&&&  Segmentation fault (core dumped)&&&&&&&&I checked all qemu_opts_parse() invocations (and all drive_def()&&&&invocations too, because it blindly forwards the former's retval). Only&&&&the two above examples look problematic.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1385658779-7529-1-git-send-email-lersek@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@amazon.com>&&&& "
1," Don't crash on keyboard input with no handler Prevent a call to put_kbd if null.&&&&&&&&On shutdown of some OSes, the keyboard handler goes away before the&&&&system is down. If a key is typed during this window, qemu crashes.&&&&&&&&Signed-off-by: Don Koch <dkoch@verizon.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," qxl: add vgamem_size_mb and vgamem_size In preperation for supporting a larger framebuffer for multiple monitors&&&&on a single card, add a property to qxl vgamem_size_mb, and corresponding&&&&byte sized vgamem_size, and use instead of VGA_RAM_SIZE.&&&&&&&&[ kraxel: simplify property handling, add sanity checks ]&&&&[ kraxel: fix mode copying ]&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, qom: Fix memory leak in object_property_set_link() Save the result of the call to object_get_canonical_path()&&&&so we can free it.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Vlad Yasevich <vyasevic@redhat.com>&&&&Reviewed-by: Amos Kong <akong@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
1, qdev-monitor-test: add device_add leak test cases Ensure that the device_add error code path deletes device objects.&&&&Failure to do so not only leaks the objects but can also keep other&&&&objects (like drive or netdev) alive due to qdev properties holding&&&&references.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1, exec: fix breakpoint_invalidate when pc may not be translated This fixes qemu abort with the following message:&&&&&&&&    include/qemu/int128.h:22: int128_get64: Assertion `!a.hi' failed.&&&&&&&&which happens due to attempt to invalidate breakpoint by virtual address&&&&for which get_phys_page_debug couldn't find mapping.&&&&&&&&For more details see&&&&http://lists.nongnu.org/archive/html/qemu-devel/2013-09/msg04582.html&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," PPC: Fix L2CR write accesses Commit 2345f1c01 was supposed to render L2CR writes into noops. Instead,&&&&it made them illegal instruction traps which apparently didn't confuse&&&&XNU, but can easily confuse other OSs.&&&&&&&&Fix it up by actually doing nothing when we write to L2CR.&&&&&&&&Reported-by: Julio Guerra <guerr@julio.in>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&&Tested-by: Julio Guerra <guerr@julio.in>&&&& "
1," hw/9pfs: Fix errno value for xattr functions If there is no operation driver for the xattr type the&&&&functions return '-1' and set errno to '-EOPNOTSUPP'.&&&&When the calling code sets 'ret = -errno' this turns&&&&into a large positive number.&&&&&&&&In Linux 3.11, the kernel has switched to using 9p&&&&version 9p2000.L, instead of 9p2000.u, which enables&&&&support for xattr operations. This on its own is harmless,&&&&but for another change which makes it request the xattr&&&&with a name 'security.capability'.&&&&&&&&The result is that the guest sees a succesful return&&&&of 95 bytes of data, instead of a failure with errno&&&&set to 95. Since the kernel expects a maximum of 20&&&&bytes for an xattr return this gets translated to the&&&&unexpected errno ERANGE.&&&&&&&&This all means that when running a binary off a 9p fs&&&&in 3.11 kernels you get a fun result of:&&&&&&&&  # ./date&&&&  sh: ./date: Numerical result out of range&&&&&&&&The only workaround is to pass 'version=9p2000.u' when&&&&mounting the 9p fs in the guest, to disable all use of&&&&xattrs.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," target-i386: Set model=6 on qemu64 & qemu32 CPU models There's no Intel CPU with family=6,model=2, and Linux and Windows guests&&&&disable SEP when seeing that combination due to Pentium Pro erratum #82.&&&&&&&&In addition to just having SEP ignored by guests, Skype (and maybe other&&&&applications) runs sysenter directly without passing through ntdll on&&&&Windows, and crashes because Windows ignored the SEP CPUID bit.&&&&&&&&So, having model > 2 is a better default on qemu64 and qemu32 for two&&&&reasons: making SEP really available for guests, and avoiding crashing&&&&applications that work on bare metal.&&&&&&&&model=3 would fix the problem, but it causes CPU enumeration problems&&&&for Windows guests[1]. So let's set model=6, that matches ""Athlon&&&&(PM core)"" on AMD and ""P2 with on-die L2 cache"" on Intel and it allows&&&&Windows to use all CPUs as well as fixing sysenter.&&&&&&&&[1] https://bugzilla.redhat.com/show_bug.cgi?id=508623&&&&&&&&Cc: Andrea Arcangeli <aarcange@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, rbd: avoid qemu_rbd_snap_list() memory leaks When there are no snapshots qemu_rbd_snap_list() returns 0 and the&&&&snapshot table pointer is NULL.  Don't forget to free the snaps buffer&&&&we allocated for librbd rbd_snap_list().&&&&&&&&When the function succeeds don't forget to free the snaps buffer after&&&&calling rbd_snap_list_end().&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," qcow2: Unset zero_beyond_eof in save_vmstate Saving the VM state is done using bdrv_pwrite. This function may perform&&&&a read-modify-write, which in this case results in data being read from&&&&beyond the end of the virtual disk. Since we are actually trying to&&&&access an area which is not a part of the virtual disk, zero_beyond_eof&&&&has to be set to false before performing the partial write, otherwise&&&&the VM state may become corrupted.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, pc_sysfw: Fix ISA BIOS init for ridiculously big flash pc_isa_bios_init() suffers integer overflow for flash larger than&&&&INT_MAX.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Acked-by: Laszlo Ersek <lersek@redhat.com>&&&&Acked-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Acked-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Message-id: 1375276272-15988-9-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <anthony@codemonkey.ws>&&&& 
1," QMP/qemu-ga-client: Make timeout longer for guest-fsfreeze-freeze command guest-fsfreeze-freeze command can take longer than 3 seconds when heavy&&&&disk I/O is running. To avoid unexpected timeout, this changes the timeout&&&&to 60 seconds (timeout of pre-commit phase of VSS).&&&&&&&&Signed-off-by: Tomoki Sekiyama <tomoki.sekiyama@hds.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," iscsi: use bdrv_new() instead of stack structure BlockDriverState structure needs bdrv_new() to initialize refcnt, don't&&&&allocate a local structure variable and memset to 0, becasue with coming&&&&refcnt implementation, bdrv_unref will crash if bs->refcnt not&&&&initialized to 1.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," loader: store FW CFG ROM files in RAM ROM files that are put in FW CFG are copied to guest ram, by BIOS, but&&&&they are not backed by RAM so they don't get migrated.&&&&&&&&Each time we change two bytes in such a ROM this breaks cross-version&&&&migration: since we can migrate after BIOS has read the first byte but&&&&before it has read the second one, getting an inconsistent state.&&&&&&&&Future-proof this by creating, for each such ROM,&&&&an MR serving as the backing store.&&&&This MR is never mapped into guest memory, but it's registered&&&&as RAM so it's migrated with the guest.&&&&&&&&Naturally, this only helps for -M 1.7 and up, older machine types&&&&will still have the cross-version migration bug.&&&&Luckily the race window for the problem to trigger is very small,&&&&which is also likely why we didn't notice the cross-version&&&&migration bug in testing yet.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&& "
1, qemu-iotests: add poke_file utility function The new poke_file function sets bytes at an offset in a file given a&&&&printf-style format string.  It can be used to corrupt an image file for&&&&test coverage of error paths.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," semaphore: fix a hangup problem under load on NetBSD hosts. Fix following bugs in ""fallback implementation of counting semaphores&&&&with mutex+condvar"" added in c166cb72f1676855816340666c3b618beef4b976:&&&& - waiting threads are not restarted properly if more than one threads&&&&   are waiting unblock signals in qemu_sem_timedwait()&&&& - possible missing pthread_cond_signal(3) calls when waiting threads&&&&   are returned by ETIMEDOUT&&&& - fix an uninitialized variable&&&&The problem is analyzed by and fix is provided by Noriyuki Soda.&&&&&&&&Also put additional cleanup suggested by Laszlo Ersek:&&&& - make QemuSemaphore.count unsigned (it won't be negative)&&&& - check a return value of in pthread_cond_wait() in qemu_sem_wait()&&&&&&&&Signed-off-by: Izumi Tsutsui <tsutsui@ceres.dti.ne.jp>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Message-id: 1372841894-10634-1-git-send-email-tsutsui@ceres.dti.ne.jp&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, qapi.py: Fix diagnosing non-objects at a schema's top-level Report syntax error instead of crashing.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1374939721-7876-8-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, qapi.py: Fix schema parser to check syntax systematically Fixes at least the following parser bugs:&&&&&&&&* accepts any token in place of a colon&&&&&&&&* treats comma as optional&&&&&&&&* crashes when closing braces or brackets are missing&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1374939721-7876-7-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, libqtest: Plug fd and memory leaks in qtest_quit() Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&&Message-id: 1371711329-9144-2-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," gdbstub: Change GDBState::query_cpu to CPUState Since first_cpu/next_cpu are CPUState, CPUArchState is no longer needed.&&&&&&&&This resolves a NULL pointer dereference of query_cpu, introduced&&&&with commit 182735efaf956ccab50b6d74a4fed163e0f35660 and reported by&&&&TeLeMan and Max Filippov.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, fsdev: Fix potential memory leak This leak was reported by cppcheck.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: M. Mohan Kumar <mohan@in.ibm.com>&&&&Message-id: 1371376960-18192-1-git-send-email-sw@weilnetz.de&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," acl: acl_add can't insert before last list element, fix Watch this:&&&&&&&&    $ upstream-qemu -nodefaults -S -vnc :0,acl,sasl -monitor stdio&&&&    QEMU 1.5.50 monitor - type 'help' for more information&&&&    (qemu) acl_add vnc.username drei allow&&&&    acl: added rule at position 1&&&&    (qemu) acl_show vnc.username&&&&    policy: deny&&&&    1: allow drei&&&&    (qemu) acl_add vnc.username zwei allow 1&&&&    acl: added rule at position 2&&&&    (qemu) acl_show vnc.username&&&&    policy: deny&&&&    1: allow drei&&&&    2: allow zwei&&&&    (qemu) acl_add vnc.username eins allow 1&&&&    acl: added rule at position 1&&&&    (qemu) acl_show vnc.username&&&&    policy: deny&&&&    1: allow eins&&&&    2: allow drei&&&&    3: allow zwei&&&&&&&&The second acl_add inserts at position 2 instead of 1.&&&&&&&&Root cause is an off-by-one in qemu_acl_insert(): when index ==&&&&acl->nentries, it appends instead of inserting before the last list&&&&element.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," Unbreak -no-quit for GTK, validate SDL options Certain options (-no-frame, -alt-grab, -ctrl-grab) only make sense with SDL.&&&&When compiling without SDL, these options (and -no-quit) print an error message&&&&and exit qemu.&&&&&&&&In case QEMU is compiled with SDL support, the three aforementioned options&&&&still do not make sense with other display types. This patch addresses that&&&&issue by printing a warning. I have chosen not to exit QEMU afterwards because&&&&having the option is not harmful and before this patch it would be ignored&&&&anyway.&&&&&&&&By delaying the sanity check from compile-time with some ifdefs to run-time,&&&&-no-quit is now also properly supported when compiling without SDL.&&&&&&&&Signed-off-by: Peter Wu <lekensteyn@gmail.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, exec: do not use error_mem_read We will soon reach this case when doing (unaligned) accesses that&&&&span partly past the end of memory.  We do not want to crash in&&&&that case.&&&&&&&&unassigned_mem_ops and rom_mem_ops are now the same.&&&&&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, acpi: add dummy write function for acpi timer Otherwise the guest can crash qemu (NULL pointer dereference).&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=947691&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Message-id: 1368534544-11826-1-git-send-email-kraxel@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," virtio-net: properly check the vhost status during status set Commit 32993698 (vhost: disable on tap link down) tries to disable the vhost&&&&also when the peer's link is down. But the check was not done properly, the&&&&vhost were only started when:&&&&&&&&1) peer's link is not down&&&&2) virtio-net has already been started.&&&&&&&&Since == have a higher precedence than &&, place a brace to make sure both the&&&&conditions were met then does the check. This fixes the crash when doing a savem&&&&after set the link off which let qemu crash and complains:&&&&&&&&virtio_net_save: Assertion `!n->vhost_started' failed.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Message-id: 1366972060-21606-1-git-send-email-jasowang@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, console: add dummy surface for guests without graphic card So users get a notification instead of a crash.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," pseries: Fix some small errors in XICS logic Under certain circumstances the emulation for the pseries ""XICS"" interrupt&&&&controller was clearing a pending interrupt from the XISR register, without&&&&also clearing the corresponding priority variable.  This will cause&&&&problems later when can trigger sanity checks in the under-development&&&&in-kernel XICS implementation.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," block: Fix build with tracing enabled filename was still uninitialised when it's used as a parameter to a&&&&tracing function, so let's move the initialisation. Also, commit c2ad1b0c&&&&forgot to add a NULL check, which this patch adds while we're at it.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Tested-by: Andreas F盲rber <afaerber@suse.de>&&&&Message-id: 1366645720-11384-1-git-send-email-kwolf@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Allow xen guests to plug disks of 1 TiB or more The current xen backend driver implementation uses int64_t variables&&&&to store the size of the corresponding backend disk/file. It also uses&&&&an int64_t variable to store the block size of that image. When writing&&&&the number of sectors (file_size/block_size) to xenstore, however, it&&&&passes these values as 32 bit signed integers. This will cause an&&&&overflow for any disk of 1 TiB or more.&&&&&&&&This patch changes the xen backend driver to use a 64 bit integer write&&&&xenstore function.&&&&&&&&Signed-off-by: Felipe Franciosi <felipe@paradoxo.org>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&&&&& "
1," xhci: fix numintrs sanity checks Make sure numintrs is a power of two, msi requires this.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=918035&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," trace: rebuild generated-events.o when configuration changes Make sure to rebuild generated-events.o when ./configure options change.&&&&This prevents linker errors when a stale generated-events.o gets linked&&&&with code compiled against fresh headers.  For example, try building&&&&with ./configure --enable-trace-backend=stderr followed by ./configure&&&&--enable-trace-backend=dtrace.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," qemu-char: Call fe_claim / fe_release when not using qdev chr properties chardev-frontends need to explictly check, increase and decrement the&&&&avail_connections ""property"" of the chardev when they are not using a&&&&qdev-chardev-property for the chardev.&&&&&&&&This fixes things like:&&&&qemu-kvm -chardev stdio,id=foo -device isa-serial,chardev=foo \&&&&  -mon chardev=foo&&&&&&&&Working, where they should fail. Most of the changes here are due to&&&&old hardware emulation code which is using serial_hds directly rather then&&&&a qdev-chardev-property.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Message-id: 1364412581-3672-3-git-send-email-hdegoede@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qcow2: Gather clusters in a looping loop Instead of just checking once in exactly this order if there are&&&&dependendies, non-COW clusters and new allocation, this starts looping&&&&around these. This way we can, for example, gather non-COW clusters after&&&&new allocations as long as the host cluster offsets stay contiguous.&&&&&&&&Once handle_dependencies() is extended so that COW areas of in-flight&&&&allocations can be overwritten, this allows to continue with gathering&&&&other clusters (we wouldn't be able to do that without this change&&&&because we would have missed a possible second dependency in one of the&&&&next clusters).&&&&&&&&This means that in the typical sequential write case, we can combine the&&&&COW overwrite of one cluster with the allocation of the next cluster as&&&&soon as something like Delayed COW gets actually implemented. It is only&&&&by avoiding splitting requests this way that Delayed COW actually starts&&&&improving performance noticably.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," qmp: Fix design bug and read beyond buffer in memchar-write Command memchar-write takes data and size parameter.  Begs the&&&&question what happens when data doesn't match size.&&&&&&&&With format base64, qmp_memchar_write() copies the full data argument,&&&&regardless of size argument.&&&&&&&&With format utf8, qmp_memchar_write() copies size bytes from data,&&&&happily reading beyond data.  Copies crap from the heap or even&&&&crashes.&&&&&&&&Drop the size parameter, and always copy the full data argument.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," vl.c: numa_add(): Validate nodeid before using it Without this check, QEMU will corrupt memory if a too-large nodeid is&&&&provided in the command-line. e.g.:&&&&&&&&  -numa node,mem=...,cpus=...,nodeid=65&&&&&&&&This changes nodenr to unsigned long long, to avoid integer conversion&&&&issues when converting the strtoull() result to int.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, block: Adds mirroring tests for resized images This test verifies two mirroring issues are fixed with resized images:&&&&&&&& * sync='top' creates an image that is the proper size&&&& * sync='full' doesn't cause an assertion failure and crash qemu&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," vl: correct error message when fail to init kvm command:&&&&qemu-system-x86_64 -hda disk.img -smp 32 --enable-kvm&&&&error:&&&&Number of SMP cpus requested (32) exceeds max cpus supported by KVM (16)&&&&failed to initialize KVM: Invalid argument&&&&No accelerator found!&&&&&&&&well, it did find kvm, but failed to init,&&&&so message ""No accelerator found!"" is confusing,&&&&this commit remove the confusing error message.&&&&&&&&Signed-off-by: liguang <lig.fnst@cn.fujitsu.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," usb-host: Initialize dev->port the obviously safe way Coverity worries the strcpy() could overrun the destination.  It&&&&can't, because the source always points to usb_host_scan()'s auto&&&&port[], which has the same size.  Use pstrcpy() anyway, to hush the&&&&checker.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, qemu-ga: Plug fd leak on ga_channel_listen_accept() error path Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& 
1," qemu-ga: ga_open_pidfile(): use qemu_open() This ensures that O_CLOEXEC is passed to open(), this way the&&&&pid file fd is not leaked to executed processes.&&&&&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Acked-by: Amos Kong <akong@redhat.com>&&&&Tested-by: Amos Kong <akong@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1, pseries: set no default boot order This patch removes the default boot order for pseries machine. This allows&&&&the machine to handle a NULL boot order in case no -boot option is provided.&&&&Thus it helps SLOF firmware to verify if boot order is specified in command&&&&line or not. If no boot order is provided SLOF tries to boot from the&&&&device set in the nvram.&&&&&&&&Reviewed-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Acked-by: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Avik Sil <aviksil@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," target-i386: CPUID: return highest basic leaf if eax > cpuid_xlevel This fixes a subtle bug. A bug that probably won't cause trouble for any&&&&existing OS, but a bug anyway:&&&&&&&&Intel SDM Volume 2, CPUID Instruction states:&&&&&&&&> Two types of information are returned: basic and extended function&&&&> information. If a value entered for CPUID.EAX is higher than the maximum&&&&> input value for basic or extended function for that processor then the&&&&> data for the highest basic information leaf is returned. For example,&&&&> using the Intel Core i7 processor, the following is true:&&&&>&&&&>   CPUID.EAX = 05H (* Returns MONITOR/MWAIT leaf. *)&&&&>   CPUID.EAX = 0AH (* Returns Architectural Performance Monitoring leaf. *)&&&&>   CPUID.EAX = 0BH (* Returns Extended Topology Enumeration leaf. *)&&&&>   CPUID.EAX = 0CH (* INVALID: Returns the same information as CPUID.EAX = 0BH. *)&&&&>   CPUID.EAX = 80000008H (* Returns linear/physical address size data. *)&&&&>   CPUID.EAX = 8000000AH (* INVALID: Returns same information as CPUID.EAX = 0BH. *)&&&&&&&&AMD's CPUID Specification, on the other hand, is less specific:&&&&&&&&> The CPUID instruction supports two sets or ranges of functions,&&&&> standard and extended.&&&&>&&&&> 鈥?The smallest function number of the standard function range is&&&&>   Fn0000_0000. The largest function num- ber of the standard function&&&&>   range, for a particular implementation, is returned in CPUID&&&&>   Fn0000_0000_EAX.&&&&>&&&&> 鈥?The smallest function number of the extended function range is&&&&>   Fn8000_0000. The largest function num- ber of the extended function&&&&>   range, for a particular implementation, is returned in CPUID&&&&>   Fn8000_0000_EAX.&&&&>&&&&> Functions that are neither standard nor extended are undefined and&&&&> should not be relied upon.&&&&&&&&QEMU's behavior matched Intel's specification before, but this was&&&&changed by commit b3baa152aaef1905876670590275c2dd0bbb088c. This patch&&&&restores the behavior documented by Intel when cpuid_xlevel2 is 0.&&&&&&&&The existing behavior when cpuid_xlevel2 is set (falling back to&&&&level=cpuid_xlevel) is being kept, as I couldn't find any public&&&&documentation on the CPUID 0xC0000000 function range on Centaur CPUs.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, iscsi: fix deadlock during login If the connection is interrupted before the first login is successfully&&&&completed qemu-kvm is waiting forever in qemu_aio_wait().&&&&&&&&This is fixed by performing an sync login to the target. If the&&&&connection breaks after the first successful login errors are&&&&handled internally by libiscsi.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," usbredir: Verify we have 32 bits bulk length cap when redirecting to xhci The xhci-hcd may submit bulk transfers > 65535 bytes even when not using&&&&bulk-in pipeling, so usbredir can only be used in combination with an xhci&&&&hcd if the client has the 32 bits bulk length capability.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," slirp: Don't crash on packets from 0.0.0.0/8. LWIP can generate packets with a source of 0.0.0.0, which triggers an&&&&assertion failure in arp_table_add().  Instead of crashing, simply return&&&&to avoid adding an invalid ARP table entry.&&&&&&&&Signed-off-by: Nickolai Zeldovich <nickolai@csail.mit.edu>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&& "
1," usb-redir: Don't handle interrupt output packets async Instead report them as successfully completed directly on submission, this&&&&has 2 advantages:&&&&&&&&1) This matches the timing of interrupt output packets on real hardware,&&&&with the previous async handling, if an ep has an interval of say 500 ms,&&&&then there would be 500+ ms between the submission and the guest seeing the&&&&completion, as we wont do the write back until the qh gets polled again. And&&&&in the mean time the guest may very well have timed out, as the guest can&&&&reasonable expect a much quicker completion.&&&&&&&&2) This fixes interrupt output packets potentially getting send twice&&&&surrounding a migration. As we delay the writeback to guest memory until&&&&the qh gets polled again, there is a window between completion and writeback&&&&where migration can happen, in this case the destination will not know&&&&about the completion, and it will execute the packet *again*&&&&&&&&But it does also come with a disadvantage:&&&&&&&&1) If the actual interrupt out to the real usb device fails, there is no&&&&way to report this back to the guest.&&&&&&&&This patch assumes however that interrupt outs in practice never fail, as&&&&they are only used by specialized drivers, which are unlikely to issue illegal&&&&requests (unlike general class drivers which often issue requests which some&&&&devices don't implement). And that thus the advantages outway the disadvantage.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, microblaze: Update PC before simulating syscall Fixes a clone() emulation bug were the new thread starts&&&&at the point of the syscall and thus clones in a loop.&&&&&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& 
1," i440fx: avoid destroying memory regions within a transaction Calling memory_region_destroy() within a transaction is illegal, since&&&&the memory API is allowed to continue to dispatch to a region until the&&&&transaction commits.  440fx does that however when managing PAM registers.&&&&&&&&This bug is benign, since the regions are all aliases (which the memory&&&&core tends to throw anyway), and since we don't do concurrent dispatch yet,&&&&but instead of relying on that, tighten ship ahead of the coming concurrency&&&&storm.&&&&&&&&Fix by having a predefined set of regions, of which one will be enabled at&&&&any time.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," bt: replace fragile snprintf use and unwarranted strncpy In bt_hci_name_req a failed snprintf could return len larger than&&&&sizeof(params.name), which means the following memset call would&&&&have a ""length"" value of (size_t)-1, -2, etc...  Sounds scary.&&&&But currently, one can deduce that there is no problem:&&&&strlen(slave->lmp_name) is guaranteed to be smaller than&&&&CHANGE_LOCAL_NAME_CP_SIZE, which is the same as sizeof(params.name),&&&&so this cannot happen.  Regardless, there is no justification for&&&&using snprintf+memset.  Use pstrcpy instead.&&&&&&&&Also, in bt_hci_event_complete_read_local_name, use pstrcpy in place&&&&of unwarranted strncpy.&&&&&&&&Signed-off-by: Jim Meyering <meyering@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, tcg: Sanity check goto_tb input Checking that we don't try for idx != [01] is trivial.  Checking&&&&that we don't issue more than one of any index requires a tad&&&&more data and some ifdefs protecting that new variable.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Cc: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," nbd: do not leak nbd_trip coroutines when a connection is torn down Because nbd_client_close removes the I/O handlers for the client&&&&socket, there is no way that any suspended coroutines are restarted.&&&&This will be a problem with the QEMU embedded NBD server, because&&&&we will have a QMP command to forcibly close all connections with&&&&the clients.&&&&&&&&Instead, we can exploit the reference counting of NBDClients; shutdown the&&&&client socket, which will make it readable and writeable.  Also call the&&&&close callback, which will release the user's reference.  The coroutines&&&&then will fail and exit cleanly, and release all remaining references,&&&&until the last refcount finally triggers the closure of the client.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qemu-char: BUGFIX, don't call FD_ISSET with negative fd tcp_chr_connect(), unlike for example udp_chr_update_read_handler() does&&&&not check if the fd it is using is valid (>= 0) before passing it to&&&&qemu_set_fd_handler2().  If using e.g. a TCP serial port, which is not&&&&initially connected, this can result in -1 being passed to FD_ISSET, which&&&&has undefined behaviour.  On x86 it seems to harmlessly return 0, but on&&&&PowerPC, it causes a fortify buffer overflow error to be thrown.&&&&&&&&This patch fixes this by putting an extra test in tcp_chr_connect(), and&&&&also adds an assert qemu_set_fd_handler2() to catch other such errors on&&&&all platforms, rather than just some.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, target-xtensa: return ENOSYS for unimplemented simcalls This prevents guest from proceeding with uninitialised garbage returned&&&&from unimplemented simcalls.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," kvmvapic: Disable if there is insufficient memory We need at least 1M of RAM to map the option ROM. Otherwise, we will&&&&corrupt host memory or even crash:&&&&&&&&    $ qemu-system-x86_64 -nodefaults --enable-kvm -vnc :0 -m 640k&&&&    Segmentation fault (core dumped)&&&&&&&&Reported-and-tested-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
1, pcie_aer: clear cmask for Advanced Error Interrupt Message Number The Advanced Error Interrupt Message Number (bits 31:27 of the Root&&&&Error Status Register) is updated when the number of msi messages assigned to a&&&&device changes. Migration of windows 7 on q35 chipset failed because the check&&&&in get_pci_config_device() fails due to cmask being set on these bits. Its valid&&&&to update these bits and we must restore this state across migration.&&&&&&&&Signed-off-by: Jason Baron <jbaron@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& 
1," sparc: fix expression with uninitialized initial value err was uninitialized, it's not OK to use |=. Spotted by Clang&&&&compiler.&&&&&&&&Fix by implementing the earlier statement which initializes the variable.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," esp: add Tekram DC-390 emulation (PC SCSI adapter) Difference with AMD PCscsi is that DC-390 contains a EEPROM,&&&&and that a romfile is available to add INT13 support.&&&&&&&&This has been successfully tested on:&&&&- MS DOS 6.22 (using DC390 ASPI driver)&&&&- MS Windows 98 SE (using DC390 driver)&&&&- MS Windows NT 3.1 (using DC390 driver)&&&&- MS Windows NT 4.0 (using DC390 driver)&&&&- hard disk and cdrom boot&&&&&&&&Signed-off-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," iscsi: do not leak initiator_name The argument of iscsi_create_context is never freed by libiscsi,&&&&which in fact calls strdup on it.  Avoid a leak.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," Support 'help' as a synonym for '?' in command line options For command line options which permit '?' meaning 'please list the&&&&permitted values', add support for 'help' as a synonym, by abstracting&&&&the check out into a helper function.&&&&&&&&This change means that in some cases where we were being lazy in&&&&our string parsing, ""?junk"" will now be rejected as an invalid option&&&&rather than being (undocumentedly) treated the same way as ""?"".&&&&&&&&Update the documentation to use 'help' rather than '?', since '?'&&&&is a shell metacharacter and thus prone to fail confusingly if there&&&&is a single character filename in the current working directory and&&&&the '?' has not been escaped. It's therefore better to steer users&&&&towards 'help', though '?' is retained for backwards compatibility.&&&&&&&&We do not, however, update the output of the system emulator's -help&&&&(or any documentation autogenerated from the qemu-options.hx which&&&&is the source of the -help text) because libvirt parses our -help&&&&output and will break. At a later date when QEMU provides a better&&&&interface so libvirt can avoid having to do this, we can update the&&&&-help text too.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," usb-host: rewrite usb_linux_update_endp_table This patch carries a complete rewrite of the usb descriptor parser.&&&&Changes / improvements:&&&&&&&& * We are using the USBDescriptor struct instead of hard-coded offsets&&&&   now to access descriptor data.&&&& * (debug) printfs are all gone, tracepoints have been added instead.&&&& * We don't try (and fail) to skip over unneeded descriptors.  We parse&&&&   them all one by one.  We keep track of which configuration, interface&&&&   and altsetting we are looking at and use this information to figure&&&&   which desciptors are in use and which we can ignore.&&&& * On parse errors we clear all endpoint information, which will&&&&   disallow any communication with the device, except control endpoint&&&&   messages.  This makes sure we don't end up with a silly device state&&&&   where half of the endpoints got enabled and the other half was left&&&&   disabled.&&&& * Some sanity checks have been added.&&&&&&&&The new parser is more robust and also leaves complete device&&&&information in the trace log if you enable the ush_host_parse_*&&&&tracepoints.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," block: fix streaming/closing race Streaming can issue I/O while qcow2_close is running.  This causes the&&&&L2 caches to become very confused or, alternatively, could cause a&&&&segfault when the streaming coroutine is reentered after closing its&&&&block device.  The fix is to cancel streaming jobs when closing their&&&&underlying device.&&&&&&&&The cancellation must be synchronous, on the other hand qemu_aio_wait&&&&will not restart a coroutine that is sleeping in co_sleep.  So add&&&&a flag saying whether streaming has in-flight I/O.  If the busy flag&&&&is false, the coroutine is quiescent and, when cancelled, will not&&&&issue any new I/O.&&&&&&&&This protects streaming against closing, but not against deleting.&&&&We have a reference count protecting us against concurrent deletion,&&&&but I still added an assertion to ensure nothing bad happens.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," PPC: KVM: Synchronize regs on CPU dump When we dump the CPU registers, there's a certain chance they haven't been&&&&synchronized with KVM yet, so we have to manually trigger that.&&&&&&&&This aligns the code with x86 and fixes a bug where the register state was&&&&bogus on invalid/unknown kvm exit reasons.&&&&&&&&Reported-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," vnc: don't mess up with iohandlers in the vnc thread The threaded VNC servers messed up with QEMU fd handlers without&&&&any kind of locking, and that can cause some nasty race conditions.&&&&&&&&Using qemu_mutex_lock_iothread() won't work because vnc_dpy_cpy(),&&&&which will wait for the current job queue to finish, can be called with&&&&the iothread lock held.&&&&&&&&Instead, we now store the data in a temporary buffer, and use a bottom&&&&half to notify the main thread that new data is available.&&&&&&&&vnc_[un]lock_ouput() is still needed to access VncState members like&&&&abort, csock or jobs_buffer.&&&&&&&&Signed-off-by: Corentin Chary <corentin.chary@gmail.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," tracetool: Omit useless QEMU_*_ENABLED() check SystemTap provides a ""semaphore"" that can optionally be tested before&&&&executing a trace event.  The purpose of this mechanism is to skip&&&&expensive tracing code when the trace event is disabled.&&&&&&&&For example, some applications may have trace events that format or&&&&convert strings for trace events.  This expensive processing should only&&&&be done in the case where the trace event is enabled.&&&&&&&&Since QEMU's generated trace events never have such special-purpose&&&&code, there is no reason to add the semaphore check.&&&&&&&&Reviewed-by: Masami Hiramatsu <masami.hiramatsu.pt@hitachi.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1, qemu-iotests: add read/write from smaller backing image test Some image formats support backing images that are smaller than the&&&&image file.  This patch adds a test that verifies that reads and writes&&&&beyond the end of backing image work.&&&&&&&&Unallocated reads beyond the end of the backing file should produce&&&&zeroes.&&&&&&&&Writes beyond the end of the backing file should copy-on-write using&&&&zeroes.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&& 
1," usb: USBPacket: add status, rename owner -> ep Add enum to track the status of USBPackets, use that instead of the&&&&owner pointer to figure whenever a usb packet is currently in flight&&&&or not.  Add some more packet status sanity checks.  Also rename the&&&&USBEndpoint pointer from ""owner"" to ""ep"".&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," linux-user: Allow NULL value pointer in setxattr and getxattr It's valid to pass a NULL value pointer to setxattr, so don't&&&&fail this case EFAULT.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," keep the PID file locked for the lifetime of the process The lockf() call in qemu_create_pidfile() aims at ensuring mutual&&&&exclusion. We shouldn't close the pidfile on success (as introduced by&&&&commit 1bbd1592), because that drops the lock as well [1]:&&&&&&&&    ""File locks shall be released on first close by the locking process&&&&    of any file descriptor for the file.""&&&&&&&&Coverity may complain again about the leaked file descriptor; let's&&&&worry about that later.&&&&&&&&v1->v2:&&&&- add reference to 1bbd1592&&&&- explain the intentional fd leak in the source&&&&&&&&[1] http://pubs.opengroup.org/onlinepubs/9699919799/functions/lockf.html&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, e1000: bounds packet size against buffer size Otherwise we can write beyond the buffer and corrupt memory.  This is tracked&&&&as CVE-2012-0029.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," Fix dirty logging with 32-bit qemu & 64-bit guests The kvm_get_dirty_pages_log_range() function uses two address&&&&variables to step through the monitored memory region to update the&&&&dirty log.  However, these variables have type unsigned long, which&&&&can overflow if running a 64-bit guest with a 32-bit qemu binary.&&&&&&&&This patch changes these to target_phys_addr_t which will have the&&&&correct size.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," qxl: Slot sanity check in qxl_phys2virt() is off by one, fix Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," Fix qapi code generation wrt parallel build Make's multiple output syntax&&&&&&&&  x.c x.h: x.template&&&&       gen < x.template&&&&&&&&actually invokes the command once for x.c and once for x.h (with differing $@&&&&in each invocation).  During a parallel build, the two commands may be invoked&&&&in parallel; this opens up a race, where the second invocation trashes a file&&&&supposedly produced during the first, and now in use by a dependent command.&&&&&&&&The various qapi code generators are susceptible to this; fix by making them&&&&generate just one file per invocation.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, net/socket.c : fix memory leak Signed-off-by: Li Zhi Hui <zhihuili@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
1," configure: Fix test for supported host CPU type The test for whether the host CPU is supported had several problems:&&&& * the attempt to fall back to TCI was done as a duplicate&&&&   test, very late (so ""--cpu foo"" would fail early but ""--cpu unicore32""&&&&   would fail late, differently, and after configure had already&&&&   printed a lot of output)&&&& * a number of CPUs only supported as guests were included in the&&&&   list of CPUs we would accept as valid hosts, which would result&&&&   in a late compile failure on those systems rather than a&&&&   configure failure or fallback to TCI&&&& * bailing out for an unsupported CPU happened before the main&&&&   option parsing, so ""configure --help"" wouldn't work&&&&&&&&Fix these by folding the setting of ARCH into the first test for&&&&supported host CPU, removing spurious guest-only CPU names from it,&&&&and moving the ""fall back to TCI"" code earlier.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," vhost: convert to MemoryListener API Drop the use of cpu_register_phys_memory_client() in favour of the new&&&&MemoryListener API.  The new API simplifies the caller, since there is no&&&&need to deal with splitting and merging slots; however this is not exploited&&&&in this patch.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," x86/cpuid: Plug memory leak in cpudef_setfield() To reproduce the leak, put two name options into the same [cpudef]&&&&section of target-x86_64.conf.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," pc: Re-order pc_init1 to initialize the ISA bus before ISA devices In particular, the i8259 was being initialized before the ISA bus,&&&&leading to a crash.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&& "
1," pci-devfn: check that device/slot number is within range Need to check that guest slot/device number is not > 31 or walk off&&&&the devfn table when checking if a devfn is available or not in a guest.&&&&&&&&before this fix, passing in an addr=abc  or addr=34,&&&&can crash qemu, sometimes fail gracefully if data past end&&&&of devfn table fails the availability test.&&&&&&&&with this fix, get clean error:&&&&Property 'pci-assign.addr' doesn't take value '34'&&&&&&&&also tested when no addr= param passed for guest (pcicfg) address,&&&&and that worked as well.&&&&&&&&Signed-off-by: Don Dutile <ddutile@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, virtio-9p: Fix syntax error in debug code This error was reported by cppcheck:&&&&&&&&qemu/hw/9pfs/virtio-9p-debug.c:342:&&&&error: Invalid number of character ({) when these macros are defined:&&&&'DEBUG_DATA'.&&&&&&&&Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
1," Fix include statements for qemu-common.h * qemu-common.h is not a system include file, so it should be included&&&&  with """" instead of <>. Otherwise incremental builds might fail&&&&  because only local include files are checked for changes.&&&&&&&&* linux-user/syscall.c included the file twice.&&&&&&&&Cc: Riku Voipio <riku.voipio@iki.fi>&&&&Cc: Jan Kiszka <jan.kiszka@siemens.com>&&&&Acked-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," qcow2: Fix L1 table size after bdrv_snapshot_goto When loading an internal snapshot whose L1 table is smaller than the current L1&&&&table, the size of the current L1 would be shrunk to the snapshot's L1 size in&&&&memory, but not on disk. This lead to incorrect refcount updates and eventuelly&&&&to image corruption.&&&&&&&&Instead of writing the new L1 size to disk, this simply retains the bigger L1&&&&size that is currently in use and makes sure that the unused part is zeroed.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Tested-by: Philipp Hahn <hahn@univention.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," vnc: Fix compilation with --enable-vnc-png Commit f26e428da505709ec03b2ed2c9eb3db82b30bd7b fixed compilation&&&&with --enable-vnc-png, but broke it with --enable-vnc-png.&&&&&&&&The breakage is caused by pngconfig.h which checks whether&&&&setjmp.h was already included and fails because qemu-common.h&&&&includes setjmp.h.&&&&&&&&The check is disabled by defining PNG_SKIP_SETJMP_CHECK.&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, pci: Use of qemu_put_ram_ptr in pci_add_option_rom. Prevent a deadlock caused by leaving a map cache bucket locked by the&&&&preceding qemu_get_ram_ptr() call.&&&&&&&&Signed-off-By: John Baboval <john.baboval@virtualcomputer.com>&&&&Signed-off-by: Anthony PERARD <anthony.perard@citrix.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& 
1," darwin-user: Remove unneeded null pointer check cppcheck reports this error:&&&&&&&&commpage.c:223: error: Possible null pointer dereference:&&&&value - otherwise it is redundant to check if value is null at line 214&&&&&&&&The null pointer check in line 214 is indeed not needed.&&&&If value were null, the code would crash in line 223.&&&&See do_compare_and_swap64 were for a reference.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, target-arm: Don't overflow when calculating value for signed VABAL In the VABAL instruction we take the absolute difference of two&&&&values of size x and store it in a result of size 2x. This means&&&&we have to be careful to calculate the absolute difference using&&&&a wide enough type that we don't accidentally overflow.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," tests/cris: Fix some errors and potential crashes These errors were reported by cppcheck:&&&&&&&&tests/cris/check_openpf1.c:30: error:&&&&Mismatching allocation and deallocation: f&&&&&&&&tests/cris/check_openpf2.c:13: error:&&&&Mismatching allocation and deallocation: f&&&&&&&&tests/cris/check_stat3.c:16: error:&&&&Buffer overrun possible for long cmd-line args&&&&&&&&tests/cris/check_stat4.c:18: error:&&&&Buffer overrun possible for long cmd-line args&&&&&&&&The first two are obvious coding errors (fopen needs fclose, not close).&&&&&&&&The last two may seem less important (nobody will start test code&&&&with an argument of more than 1022 characters which raises a buffer&&&&overrun). Fixing them nevertheless helps with static code checks&&&&like those done by cppcheck.&&&&&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& "
1," virtio-serial: don't crash on invalid input Fix crash on invalid input in virtio-serial.&&&&Discovered by code review, untested.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," s390: Detect invalid invocations of qemu_ram_free/remap This both detects invalid invocations of qemu_ram_free and&&&&qemu_ram_remap when mem_path is non-NULL and fixes a build error on&&&&s390 (""'area' may be used uninitialized in this function"").&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&CC: Alexander Graf <agraf@suse.de>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
1," softfloat: Fix single-to-half precision float conversions Fix various bugs in the single-to-half-precision conversion code:&&&& * input NaNs not correctly converted in IEEE mode&&&&   (fixed by defining and using a commonNaNToFloat16())&&&& * wrong values returned when converting NaN/Inf into non-IEEE&&&&   half precision value&&&& * wrong values returned for conversion of values which are&&&&   on the boundary between denormal and zero for the half&&&&   precision format&&&& * zeroes not correctly identified&&&& * excessively large results in non-IEEE mode should&&&&   generate InvalidOp, not Overflow&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," e1000: verify we have buffers, upfront The spec says: Any descriptor with a non-zero status byte has been&&&&processed by the hardware, and is ready to be handled by the software.&&&&&&&&Thus, once we change a descriptor status to non-zero we should&&&&never move the head backwards and try to reuse this&&&&descriptor from hardware.&&&&&&&&This actually happened with a multibuffer packet&&&&that arrives when we don't have enough buffers.&&&&&&&&Fix by checking that we have enough buffers upfront&&&&so we never need to discard the packet midway through.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Acked-by: Alex Williamson <alex.williamson@redhat.com>&&&&Acked-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," Implement assorted pSeries hcalls and RTAS methods This patch adds several small utility hypercalls and RTAS methods to&&&&the pSeries platform emulation.  Specifically:&&&&&&&&* 'display-character' rtas call&&&&&&&&This just prints a character to the console, it's occasionally used&&&&for early debug of the OS.  The support includes a hack to make this&&&&RTAS call respond on the normal token value present on real hardware,&&&&since some early debugging tools just assume this value without&&&&checking the device tree.&&&&&&&&* 'get-time-of-day' rtas call&&&&&&&&This one just takes the host real time, converts to the PAPR described&&&&format and returns it to the guest.&&&&&&&&* 'power-off' rtas call&&&&&&&&This one shuts down the emulated system.&&&&&&&&* H_DABR hypercall&&&&&&&&On pSeries, the DABR debug register is usually a hypervisor resource&&&&and virtualized through this hypercall.  If the hypercall is not&&&&present, Linux will under some circumstances attempt to manipulate the&&&&DABR directly which will fail on this emulated machine.&&&&&&&&This stub implementation is enough to stop that behaviour, although it&&&&doesn't actually implement the requested DABR operations as yet.&&&&&&&&Signed-off-by: Paul Mackerras <paulus@samba.org>&&&&Signed-off-by: David Gibson <dwg@au1.ibm.com>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, linux-user: avoid gcc array overrun warning for sparc Suppress a gcc array bounds overrun warning when filling in the SPARC&&&&signal frame by adjusting our definition of the structure so that the&&&&fp and callers_pc membes are part of the ins[] array rather than&&&&separate fields; since qemu has no need to access the fields individually&&&&there is no need to follow the kernel's structure field naming exactly.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," vpc: fix a file descriptor leak Fix a file descriptor leak, reported by cppcheck:&&&&[/src/qemu/block/vpc.c:524]: (error) Resource leak: fd&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," optionrom: fix bugs in signrom.sh signrom.sh has multiple bugs:&&&&&&&&- the last byte is considered when calculating the existing checksum, but not&&&&  when computing the correction&&&&- apprently the 'expr' expression overflows and produces incorrect results with&&&&  larger roms&&&&- if the checksum happened to be zero, we calculated the correction byte to be&&&&  256&&&&&&&&Instead of rewriting this in half a line of python, this patch fixes the bugs.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Fix block migration when the device size is not a multiple of 1 MB b02bea3a85cc939f09aa674a3f1e4f36d418c007 added a check on the return&&&&value of bdrv_write and aborts migration when it fails. However, if the&&&&size of the block device to migrate is not a multiple of BLOCK_SIZE&&&&(currently 1 MB), the last bdrv_write will fail with -EIO.&&&&&&&&Fixed by calling bdrv_write with the correct size of the last block.&&&&&&&&Signed-off-by: Pierre Riteau <Pierre.Riteau@irisa.fr>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," eepro100: Add support for multiple individual addresses (multiple IA) I reviewed the latest sources of Linux, FreeBSD and NetBSD.&&&&They all reset the multiple IA bit (multi_ia in BSD) to zero,&&&&but I did not find code which sets this bit to one&&&&(like it is done by some routers).&&&&&&&&Running Windows guests also did not set this bit.&&&&&&&&Intel's Open Source Software Developer Manual does not&&&&give much information on the semantics related to this bit,&&&&so I had to guess how it works. The guess was good enough&&&&to make the router emulation work.&&&&&&&&Related changes in this patch:&&&&* Update naming and documentation of the internal hash register.&&&&  It is not limited to multicast, but also used for multiple IA.&&&&* Dump complete configuration register when debug traces are enabled.&&&&* Debug output when multiple IA bit is set during CmdConfigure.&&&&* Debug output when frames are received because multiple IA bit is set,&&&&  or when they are ignored although it is set.&&&&&&&&Cc: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," pulse-audio: fix bug on updating rpos Fix a rpos coordination bug between qpa_run_out() and qpa_thread_out(),&&&&which shows up as playback noises.&&&&&&&&	qpa_run_out()&&&&			qpa_thread_out loop N critical section 1&&&&	qpa_run_out()   qpa_thread_out loop N doing pa_simple_write()&&&&	qpa_run_out()	qpa_thread_out loop N doing pa_simple_write()&&&&			qpa_thread_out loop N critical section 2&&&&			qpa_thread_out loop N+1 critical section 1&&&&	qpa_run_out()	qpa_thread_out loop N+1 doing pa_simple_write()&&&&&&&&In the above scheme, ""qpa_thread_out loop N+1 critical section 1"" will&&&&get the same rpos as the one used by ""qpa_thread_out loop N critical&&&&section 1"". So it will be reading dead samples from the old rpos.&&&&&&&&The rpos can only be updated back to qpa_thread_out when there is a&&&&qpa_run_out() run between two qpa_thread_out loops.&&&&&&&&normal sequence:&&&&	qpa_thread_out:&&&&			hw->rpos (X0) => local rpos => pa->rpos (X1)&&&&	qpa_run_out:&&&&			pa->rpos (X1) => hw->rpos (X1)&&&&	qpa_thread_out:&&&&			hw->rpos (X1) => local rpos => pa->rpos (X2)&&&&&&&&buggy sequence:&&&&	qpa_thread_out:&&&&			hw->rpos (X0) => local rpos => pa->rpos (X1)&&&&	qpa_thread_out:&&&&			hw->rpos (X0) => local rpos => pa->rpos (X1')&&&&&&&&Obviously qpa_run_out() shall be called at least once between any two&&&&qpa_thread_out loops (after pa->rpos is set), in order for the new&&&&qpa_thread_out loop to see the updated rpos.&&&&&&&&Setting pa->live to 0 does the trick. The next loop will have to wait&&&&for one qpa_run_out() invocation in order to get a non-zero pa->live&&&&and proceed.&&&&&&&&Signed-off-by: malc <av1474@comtv.ru>&&&&Signed-off-by: Wu Fengguang <fengguang.wu@intel.com>&&&& "
1, block-verify: fix 32-bit build Reported-by: Peter Lemenkov <lemenkov@gmail.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," MCE: Relay UCR MCE to guest Port qemu-kvm's&&&&&&&&commit 4b62fff1101a7ad77553147717a8bd3bf79df7ef&&&&Author: Huang Ying <ying.huang@intel.com>&&&&Date:   Mon Sep 21 10:43:25 2009 +0800&&&&&&&&    MCE: Relay UCR MCE to guest&&&&&&&&    UCR (uncorrected recovery) MCE is supported in recent Intel CPUs,&&&&    where some hardware error such as some memory error can be reported&&&&    without PCC (processor context corrupted). To recover from such MCE,&&&&    the corresponding memory will be unmapped, and all processes accessing&&&&    the memory will be killed via SIGBUS.&&&&&&&&    For KVM, if QEMU/KVM is killed, all guest processes will be killed&&&&    too. So we relay SIGBUS from host OS to guest system via a UCR MCE&&&&    injection. Then guest OS can isolate corresponding memory and kill&&&&    necessary guest processes only. SIGBUS sent to main thread (not VCPU&&&&    threads) will be broadcast to all VCPU threads as UCR MCE.&&&&&&&&aliguori: fix build&&&&&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, blkverify: Add block driver for verifying I/O The blkverify block driver makes investigating image format data&&&&corruption much easier.  A raw image initialized with the same contents&&&&as the test image (e.g. qcow2 file) must be provided.  The raw image&&&&mirrors read/write operations and is used to verify that data read from&&&&the test image is correct.&&&&&&&&See docs/blkverify.txt for more information.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," block migration: propagate return value when bdrv_write() returns < 0 Currently block_load() doesn't check return value of bdrv_write(), and&&&&even the destination weren't prepared to execute block migration, it&&&&proceeds and guest boots on the target.  This patch fix this issue.&&&&&&&&Signed-off-by: Yoshiaki Tamura <tamura.yoshiaki@lab.ntt.co.jp>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," virtio-pci: fix bus master bug setting on load The comment suggests we're checking for the driver in the ready&&&&state and bus master disabled, but the code is checking that it's&&&&not in the ready state.&&&&&&&&Signed-off-by: Alex Williamson <alex.williamson@redhat.com>&&&&Found-by: Amit Shah <amit.shah@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, vmdk: Use bdrv_(p)write_sync for metadata writes Use bdrv_(p)write_sync to ensure metadata integrity in case of a crash.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," hpet: Coding style cleanups and some refactorings This moves the private HPET structures into the C module, simplifies&&&&some helper functions and fixes most coding style issues (biggest chunk&&&&was improper switch-case indention). No functional changes.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1, hpet: Catch out-of-bounds timer access Also prevent out-of-bounds write access to the timers but don't spam the&&&&host console if it triggers.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1, vvfat: Fix compilation with DEBUG defined gcc does not like passing a NULL where an int value is expected:&&&&&&&&block/vvfat.c: In function 鈥榗heckpoint鈥?&&&&block/vvfat.c:2868: error: passing argument 2 of 鈥榬emove_mapping鈥?makes&&&&  integer from pointer without a cast&&&&&&&&Signed-off-by: Riccardo Magliocchetti <riccardo.magliocchetti@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," qemu-img rebase: Fix output image corruption qemu-img rebase must always give clusters in the COW file priority over those&&&&in the backing file. As it failed to use number of non-allocated clusters but&&&&assumed the maximum, it was possible that allocated clusters were taken from&&&&the backing file instead, leading to a corrupted output image.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," balloon: Fix overflow when reporting actual memory size Beginning with its introduction, the virtio balloon has had an overflow error&&&&that causes 'info balloon' to misreport the actual memory size when the balloon&&&&itself becomes larger than 4G.  Use a cast when converting dev->actual from&&&&pages to kB to prevent overflows.&&&&&&&&Before:&&&&(qemu) info balloon&&&&balloon: actual=5120&&&&(qemu) balloon 1025&&&&(qemu) info balloon&&&&balloon: actual=1025&&&&(qemu) balloon 1024&&&&(qemu) info balloon&&&&balloon: actual=5120&&&&&&&&After:&&&&(qemu) info balloon&&&&balloon: actual=5120&&&&(qemu) balloon 1025&&&&(qemu) info balloon&&&&balloon: actual=1025&&&&(qemu) balloon 1024&&&&(qemu) info balloon&&&&balloon: actual=1024&&&&&&&&Signed-off-by: Adam Litke <agl@us.ibm.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," Revert ""usb-linux: remove unreachable default in switch statement"" This reverts commit 3c9c706c3b66d838942aba53c0d3fdcdf06c7423.&&&&&&&&This breaks build (gcc 4.3.2):&&&&    CC    usb-linux.o&&&& cc1: warnings being treated as errors&&&& /src/qemu/usb-linux.c: In function 'usb_linux_update_endp_table':&&&& /src/qemu/usb-linux.c:759: error: 'type' may be used uninitialized in&&&& this function&&&&&&&&Reported-by: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," savevm: Really verify if a drive supports snapshots Both bdrv_can_snapshot() and bdrv_has_snapshot() does not work as advertized.&&&&&&&&First issue: Their names implies different porpouses, but they do the same thing&&&&and have exactly the same code. Maybe copied and pasted and forgotten?&&&&bdrv_has_snapshot() is called in various places for actually checking if there&&&&is snapshots or not.&&&&&&&&Second issue: the way bdrv_can_snapshot() verifies if a block driver supports or&&&&not snapshots does not catch all cases. E.g.: a raw image.&&&&&&&&So when do_savevm() is called, first thing it does is to set a global&&&&BlockDriverState to save the VM memory state calling get_bs_snapshots().&&&&&&&&static BlockDriverState *get_bs_snapshots(void)&&&&{&&&&    BlockDriverState *bs;&&&&    DriveInfo *dinfo;&&&&&&&&    if (bs_snapshots)&&&&        return bs_snapshots;&&&&    QTAILQ_FOREACH(dinfo, &drives, next) {&&&&        bs = dinfo->bdrv;&&&&        if (bdrv_can_snapshot(bs))&&&&            goto ok;&&&&    }&&&&    return NULL;&&&& ok:&&&&    bs_snapshots = bs;&&&&    return bs;&&&&}&&&&&&&&bdrv_can_snapshot() may return a BlockDriverState that does not support&&&&snapshots and do_savevm() goes on.&&&&&&&&Later on in do_savevm(), we find:&&&&&&&&    QTAILQ_FOREACH(dinfo, &drives, next) {&&&&        bs1 = dinfo->bdrv;&&&&        if (bdrv_has_snapshot(bs1)) {&&&&            /* Write VM state size only to the image that contains the state */&&&&            sn->vm_state_size = (bs == bs1 ? vm_state_size : 0);&&&&            ret = bdrv_snapshot_create(bs1, sn);&&&&            if (ret < 0) {&&&&                monitor_printf(mon, ""Error while creating snapshot on '%s'\n"",&&&&                               bdrv_get_device_name(bs1));&&&&            }&&&&        }&&&&    }&&&&&&&&bdrv_has_snapshot(bs1) is not checking if the device does support or has&&&&snapshots as explained above. Only in bdrv_snapshot_create() the device is&&&&actually checked for snapshot support.&&&&&&&&So, in cases where the first device supports snapshots, and the second does not,&&&&the snapshot on the first will happen anyways. I believe this is not a good&&&&behavior. It should be an all or nothing process.&&&&&&&&This patch addresses these issues by making bdrv_can_snapshot() actually do&&&&what it must do and enforces better tests to avoid errors in the middle of&&&&do_savevm(). bdrv_has_snapshot() is removed and replaced by bdrv_can_snapshot()&&&&where appropriate.&&&&&&&&bdrv_can_snapshot() was moved from savevm.c to block.c. It makes more sense to me.&&&&&&&&The loadvm_state() function was updated too to enforce that when loading a VM at&&&&least all writable devices must support snapshots too.&&&&&&&&Signed-off-by: Miguel Di Ciurcio Filho <miguel.filho@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Fix SIGFPE for vnc display of width/height = 1 During boot, the screen gets resized to height 1 and a mouse click at this&&&&point will cause a division by zero when calculating the absolute pointer&&&&position from the pixel (x, y). Return a click in the middle of the screen&&&&instead in this case.&&&&&&&&Signed-off-by: Chris Webb <chris@arachsys.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Fix lost serial TX interrupts. Report receive overruns. o Implement receive overrun status.  The FreeBSD uart driver&&&&   relies on this status in it's probe routine to determine the size&&&&   of the FIFO supported.&&&& o As per the 16550 spec, do not overwrite the RX FIFO on an RX overrun.&&&& o Do not allow TX or RX FIFO overruns to increment the data valid count&&&&   beyond the size of the FIFO.&&&& o For reads of the IIR register, only clear the ""TX holding register&&&&   emtpy interrupt"" if the read reports this interrupt.  This is required&&&&   by the specification and avoids losing TX interrupts when other,&&&&   higher priority interrupts (usually RX) are reported first.&&&&&&&&Signed-off-by: Justin T. Gibbs <gibbs@FreeBSD.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, Check rom_load_all() return value. Check rom_load_all() return value.&&&&Also don't make option rom loading failure fatal.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," qemu-img rebase This adds a rebase subcommand to qemu-img which allows to change the backing&&&&file of an image.&&&&&&&&In default mode, both the current and the new backing file need to exist, and&&&&after the rebase, the COW image is guaranteed to have the same guest visible&&&&content as before. To achieve this, old and new backing file are compared and,&&&&if necessary, data is copied from the old backing file into the COW image.&&&&&&&&With -u an unsafe mode is enabled that doesn't require the backing files to&&&&exist. It merely changes the backing file reference in the COW image. This is&&&&useful for renaming or moving the backing file. The user is responsible to make&&&&sure that the new backing file has no changes compared to the old one, or&&&&corruption may occur.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qcow2: Add plausibility check for L1/L2 entries (Kevin Wolf) From: Kevin Wolf <kwolf@redhat.com>&&&&&&&&All L1 and L2 entries must point at the start of a cluster. If there is some&&&&offset into the cluster, the entry is corrupted.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7217 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," ram: Remove SaveVM Version 2 support It don't work.  It fails in this check&&&&&&&&        if (qemu_get_be32(f) != last_ram_offset)&&&&&&&&With 512MB of ram, values were for me:&&&&&&&&	v = 20c00000 last_ram_offset = 20840000&&&&&&&&Last time that some code changed that was this one.&&&&&&&&    commit 94a6b54fd6d2d3321066cb4db7abeeb417af9365&&&&    Implement dynamic guest ram allocation.&&&&    (I.e. it has been broken since at least April)&&&&&&&&Going back to the previous commit, ram load correctly, but vga screen gets&&&&corrupted and ide don't load correctly.  At this point I decide that removing&&&&support is the only viable thing.&&&&&&&&The last user of the ram_compress_* were RAM_SAVE_FLAG_FULL flag, but&&&&that flag was never ever been stored in an image. Mark the flag obsolete&&&&and remove the functions.&&&&&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Add save/restore support to the LSI logic SCSI device model. This patch requires ""Handle BH's queued by AIO completions in&&&&qemu_aio_flush()"" to work reliably.  The combination of those two&&&&patches survived 300+ migrations with heavy IO load running in the&&&&guest.&&&&&&&&Signed-off-by: Nolan Leake <nolan <at> sigbus.net>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, Avoid name clashes with symbols that leak from system headers Signed-off-by: malc <av1474@comtv.ru>&&&& 
1, vnc: rework VncState release workflow. Split socket closing and releasing of VncState into two steps.  First&&&&close the socket and set the variable to -1 to indicate shutdown in&&&&progress.  Do the actual release in a few places where we can be sure it&&&&doesn't cause trouble in form of use-after-free.  Add some checks for a&&&&valid socket handle to make sure we don't try to use the closed socket.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," Eliminate --disable-gfx-check and make VNC default when SDL not available  --disable-gfx-check predates VNC server support.  It made sense back then&&&&because the only thing you could do without SDL was use -nographic mode or&&&&similar tricks.  Since this is a very advanced mode of operation, gfx-check&&&&provided a good safety net for casual users.&&&&&&&&A casual user is very likely to use VNC to interact with a guest.  In fact, it's&&&&often frustrating to install QEMU on a server and have to specify&&&&disable-gfx-check when you only want to use VNC.&&&&&&&&This patch eliminates disable-gfx-check and makes SDL behave like every other&&&&optional dependency.  If SDL is not available, instead of failing ungracefully&&&&if no special options are specified, we default to -vnc localhost:0,to=99.&&&&When we do default to VNC, we also print a message to tell the user that we've&&&&done this include which port we're currently listening on.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Fix CVE-2008-0928 - insufficient block device address range checking (Anthony Liguori) Introduce a growable flag that's set by bdrv_file_open().  Block devices should&&&&never be growable, only files that are being used by block devices.&&&&&&&&I went through Fabrice's early comments about the patch that was first applied.&&&&While I disagree with that patch, I also disagree with Fabrice's suggestion.&&&&&&&&There's no good reason to do the checks in the block drivers themselves.  It&&&&just increases the possibility that this bug could show up again.  Since we're&&&&calling bdrv_getlength() to determine the length, we're giving the block drivers&&&&a chance to chime in and let us know what range is valid.&&&&&&&&Basically, this patch makes the BlockDriver API guarantee that all requests are&&&&within 0..bdrv_getlength() which to me seems like a Good Thing.&&&&&&&&What do others think?&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6677 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Change default werror semantics from ""report"" to ""enospc"" Practically speaking, ""report"" causes a lot of issues when encountering a host&&&&ENOSPC error.  Switch to ""enospc"" as the default werror semantics.  All host&&&&errors other than ENOSPC will be reported to the guest.  ENOSPC will cause the&&&&VM to stop.  Asynchronous notifications are needed to inform management tools&&&&that some action should be taken but stopping the VM is at least better than&&&&undefined behavior in the guest.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6655 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," fix signed/unsigned overflows in SCSI disk (Rik van Riel) Sector numbers can overflow on a virtual scsi disk of over 1TB&&&&in size.  Qemu's bdrv_read expects an int64_t, so fix the overflow&&&&by going to that data type.&&&&&&&&On large disks, we clip the capacity to 2TB instead of returning&&&&""capacity modulo 2TB"".&&&&&&&&Turn sector_count into an unsigned to prevent a signed/unsigned&&&&overflow with SCSI transfers larger than 2TB.  We're unlikely to&&&&ever hit this bug, but fixing it is just one line.&&&&&&&&Signed-off-by: Rik van Riel <riel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6467 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Change order of metadata update to prevent loosing guest data because of unexpected exit (Gleb Natapov) Currently the order is this (during cow since it's the interesting case):&&&&1. Decrement refcount of old clusters&&&&2. Increment refcount for newly allocated clusters&&&&3. Copy content of old sectors that will not be rewritten&&&&4. Update L2 table with pointers to new clusters&&&&5. Write guest data into new clusters (asynchronously)&&&&&&&&There are several problems with this order. The first one is that if qemu&&&&crashes (or killed or host reboots) after new clusters are linked into L2&&&&table but before user data is written there, then on the next reboot guest&&&&will find neither old data nor new one in those sectors and this is not&&&&what gust expects even when journaling file system is in use.  The other&&&&problem is that if qemu is killed between steps 1 and 4 then refcount&&&&of old cluster will be incorrect and may cause snapshot corruption.&&&&&&&&The patch change the order to be like this:&&&&1. Increment refcount for newly allocated clusters&&&&2. Write guest data into new clusters (asynchronously)&&&&3. Copy content of old sectors that were not rewritten&&&&4. Update L2 table with pointers to new clusters&&&&5. Decrement refcount of old clusters&&&&&&&&Unexpected crash may cause cluster leakage, but guest data should be safe.&&&&&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5861 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Don't try to select on an invalid VNC socket when init fails. Otherwise we get a segfault.&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5840 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," SH4: SCI improvement This patch simply implement one register of SH4's SCI := Serial Communication Interface.&&&&&&&&R2D evaluation board uses SCI for SPI connection.  So, Linux kernel for R2D with&&&&default configuration causes a QEMU assertion failure when it initializes SPI driver.&&&&This patch avoids it and reduces the kernel config modification work for QEMU.&&&&&&&&Completing SCI implementation task is left.  Other board support is desirable to confirm&&&&this task, which uses SCI for a serial terminal.&&&&&&&&(Shin-ichiro KAWASAKI)&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5939 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Fix alarm_timer race with select - v3 (Jan Kiszka) Changing the default IO timeout to 5 s (#5578) made a race visible&&&&between the alarm_timer and select() in main_loop_wait(): If the timer&&&&fired before select was able to block, the full select() timeout could&&&&have been applied instead of returning immediately. Since #5578, this&&&&causes heavy problems to the Musicpal board emulation with stalls up to&&&&5 s, but also with some older Linux guest kernels.&&&&&&&&The following patch introduces a pipe that is written to by&&&&host_alarm_handler and select()'ed in main_loop_wait(). This avoids&&&&prevents that select() blocks though a timer has fired and waits for&&&&processing.&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@web.de>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5633 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Make compatfd fallback more robust Be more friendly when signalfd() fails, and also add configure checks to detect&&&&that syscall(SYS_signalfd) actually works.  malc pointed out that some installs&&&&do not have /usr/include/linux headers that are in sync with the glibc headers&&&&so why SYS_signalfd is defined, it's #defined to _NR_signalfd which is not&&&&defined in the /usr/include/linux header.&&&&&&&&While this is a distro bug, it doesn't hurt to do a more thorough job in&&&&detection.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5334 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Make page_find() return 0 for too-large addresses (Eduardo Habkost) On some cases, such as under KVM, tb_invalidate_phys_page_range()&&&&may be called for large addresses, when qemu is configured to more than&&&&4GB of RAM.&&&&&&&&On these cases, qemu was crashing because it was using an index too&&&&large for l1_map[], that supports only 32-bit addresses when compiling&&&&without CONFIG_USER_ONLY.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5227 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Silence gcc warning about constant overflow git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5175 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Fix windows build Right now, the Windows build is broken because of NBD.  Using a mingw32 cross&&&&compiler is also badly broken.&&&&&&&&This patch fixes the Windows build by stubbing out NBD support until someone&&&&fixes it for Windows.  It also santizing the mingw32 cross compiler support&&&&by replacing the --enable-mingw32 option with a compiler check to determine&&&&if we're on windows or not.&&&&&&&&Also remove the weird SDL pseudo-detection for mingw32 using a cross compiler.&&&&The hardcoded sdl-config name is seemly arbitrary.  If you cross compiler SDL&&&&correctly and modify your PATH variable appropriately, it will Just Work when&&&&cross compiling.&&&&&&&&The audio driver detection is also broken for cross compiling so you have to&&&&specify the audio drivers explicitly for now.&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5046 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Cut the translation block after translating a break insn. This avoids an issue where QEMU finds an illegal CRIS insn while the guest is returning through a signal return trampoline. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3997 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1,  Fix a crash with monitor input arriving before readline_start has been called git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3749 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Parallel flash bugfixes: - always need to register flash area back to IO_MEM_ROMD at reset time - disabled buffered write as it's not actually supported - don't check flash time at registration time git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2678 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Fix off-by-one error git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2573 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Fix PCI config space overflow, by Herbert Xu. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@2238 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, packet fix for for netware 3.11 (initial patch by Mark Jonckheere) - security bug fix git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@1363 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, BSR/BSF undefined behaviour fix git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@809 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, vm86 emulation closer to Linux kernel code - added correct IRQ emulation for dosemu git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@136 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," i386: fix read/write cr with icount option Running Windows with icount causes a crash in instruction of write cr.&&&&This patch fixes it.&&&&&&&&Reading and writing cr cause an icount read because there are called&&&&cpu_get_apic_tpr and cpu_set_apic_tpr functions. So, there is need&&&&gen_io_start()/gen_io_end() calls.&&&&&&&&Signed-off-by: Mihail Abakumov <mikhail.abakumov@ispras.ru>&&&&Message-Id: <ffb376034ff184f2fcbe93d5317d9e76@ispras.ru>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," fw_cfg: fix memory corruption when all fw_cfg slots are used When all the fw_cfg slots are used, a write is made outside the&&&&bounds of the fw_cfg files array as part of the sort algorithm.&&&&&&&&Fix it by avoiding an unnecessary array element move.&&&&Fix also an assert while at it.&&&&&&&&Signed-off-by: Marcel Apfelbaum <marcel@redhat.com>&&&&Message-Id: <20180108215007.46471-1-marcel@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," readline: add a free function Fixes leaks such as:&&&&&&&&Direct leak of 2 byte(s) in 1 object(s) allocated from:&&&&    #0 0x7eff58beb850 in malloc (/lib64/libasan.so.4+0xde850)&&&&    #1 0x7eff57942f0c in g_malloc ../glib/gmem.c:94&&&&    #2 0x7eff579431cf in g_malloc_n ../glib/gmem.c:331&&&&    #3 0x7eff5795f6eb in g_strdup ../glib/gstrfuncs.c:363&&&&    #4 0x55db720f1d46 in readline_hist_add /home/elmarco/src/qq/util/readline.c:258&&&&    #5 0x55db720f2d34 in readline_handle_byte /home/elmarco/src/qq/util/readline.c:387&&&&    #6 0x55db71539d00 in monitor_read /home/elmarco/src/qq/monitor.c:3896&&&&    #7 0x55db71f9be35 in qemu_chr_be_write_impl /home/elmarco/src/qq/chardev/char.c:167&&&&    #8 0x55db71f9bed3 in qemu_chr_be_write /home/elmarco/src/qq/chardev/char.c:179&&&&    #9 0x55db71fa013c in fd_chr_read /home/elmarco/src/qq/chardev/char-fd.c:66&&&&    #10 0x55db71fe18a8 in qio_channel_fd_source_dispatch /home/elmarco/src/qq/io/channel-watch.c:84&&&&    #11 0x7eff5793a90b in g_main_dispatch ../glib/gmain.c:3182&&&&    #12 0x7eff5793b7ac in g_main_context_dispatch ../glib/gmain.c:3847&&&&    #13 0x55db720af3bd in glib_pollfds_poll /home/elmarco/src/qq/util/main-loop.c:214&&&&    #14 0x55db720af505 in os_host_main_loop_wait /home/elmarco/src/qq/util/main-loop.c:261&&&&    #15 0x55db720af6d6 in main_loop_wait /home/elmarco/src/qq/util/main-loop.c:515&&&&    #16 0x55db7184e0de in main_loop /home/elmarco/src/qq/vl.c:1995&&&&    #17 0x55db7185e956 in main /home/elmarco/src/qq/vl.c:4914&&&&    #18 0x7eff4ea17039 in __libc_start_main (/lib64/libc.so.6+0x21039)&&&&&&&&(while at it, use g_new0(ReadLineState), it's a bit easier to read)&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-Id: <20180104160523.22995-11-marcandre.lureau@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," sdhci: convert the DPRINT() calls into trace events zero-initialize ADMADescr 'dscr' in sdhci_do_adma() to avoid:&&&&&&&&  hw/sd/sdhci.c: In function 鈥榮dhci_do_adma鈥?&&&&  hw/sd/sdhci.c:714:29: error: 鈥榙scr.addr鈥?may be used uninitialized in this function [-Werror=maybe-uninitialized]&&&&             trace_sdhci_adma(""link"", s->admasysaddr);&&&&                             ^&&&&&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Acked-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 20180115182436.2066-9-f4bug@amsat.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, migration: Guard ram_bytes_remaining against early call Calling ram_bytes_remaining during the early part of setup is unsafe&&&&because the ram_state isn't yet initialised.&&&&&&&&This can happen in the sequence:&&&&   migrate&&&&   migrate_cancel&&&&   info migrate&&&&&&&&if the migrate sticks trying to connect (e.g. to an unresponsive&&&&destination due to the connect timeout).  Here 'info migrate' sees&&&&a state of CANCELLING and so assumes the migrate has partially happened.&&&&&&&&partial fix for:&&&&RH bz: https://bugzilla.redhat.com/show_bug.cgi?id=1525899&&&&Reported-by: Xianxian Wang <xianwang@redhat.com>&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
1, block/curl: fix minor memory leaks Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Reviewed-by: Richard W.M. Jones <rjones@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&& 
1," tpm-passthrough: workaround a possible race The TPM backend processing thread has common shared variable race&&&&issues. (they should not be so easy to reach since guest interaction&&&&with the device is slow compared to host emulation)&&&&&&&&An obvious one is setting op_cancelled from device thread after&&&&calling write(cancel_fd). The backend thread may return before the&&&&device thread has set the variable. Instead set it before&&&&cancellation. Even if the write() failed, the end result is command&&&&get possibly cancelled (even if cancellation came from external&&&&sources it doesn't matter much).&&&&&&&&It's worth to consider removing the backend processing thread for now.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&&Signed-off-by: Stefan Berger <stefanb@linux.vnet.ibm.com>&&&& "
1," block: Check for inserted BlockDriverState in blk_io_limits_disable() When you set I/O limits using block_set_io_throttle or the command&&&&line throttling.* options they are kept in the BlockBackend regardless&&&&of whether a BlockDriverState is attached to the backend or not.&&&&&&&&Therefore when removing the limits using blk_io_limits_disable() we&&&&need to check if there's a BDS before attempting to drain it, else it&&&&will crash QEMU. This can be reproduced very easily using HMP:&&&&&&&&     (qemu) drive_add 0 if=none,throttling.iops-total=5000&&&&     (qemu) drive_del none0&&&&&&&&Reported-by: sochin jiang <sochin.jiang@huawei.com>&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Message-id: 0d3a67ce8d948bb33e08672564714dcfb76a3d8c.1510339534.git.berto@igalia.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," nbd-client: Refuse read-only client with BDRV_O_RDWR The NBD spec says that clients should not try to write/trim to&&&&an export advertised as read-only by the server.  But we failed&&&&to check that, and would allow the block layer to use NBD with&&&&BDRV_O_RDWR even when the server is read-only, which meant we&&&&were depending on the server sending a proper EPERM failure for&&&&various commands, and also exposes a leaky abstraction: using&&&&qemu-io in read-write mode would succeed on 'w -z 0 0' because&&&&of local short-circuiting logic, but 'w 0 0' would send a&&&&request over the wire (where it then depends on the server, and&&&&fails at least for qemu-nbd but might pass for other NBD&&&&implementations).&&&&&&&&With this patch, a client MUST request read-only mode to access&&&&a server that is doing a read-only export, or else it will get&&&&a message like:&&&&&&&&can't open device nbd://localhost:10809/foo: request for write access conflicts with read-only export&&&&&&&&It is no longer possible to even attempt writes over the wire&&&&(including the corner case of 0-length writes), because the block&&&&layer enforces the explicit read-only request; this matches the&&&&behavior of qcow2 when backed by a read-only POSIX file.&&&&&&&&Fix several iotests to comply with the new behavior (since&&&&qemu-nbd of an internal snapshot, as well as nbd-server-add over QMP,&&&&default to a read-only export, we must tell blockdev-add/qemu-io to&&&&set up a read-only client).&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20171108215703.9295-3-eblake@redhat.com>&&&&Reviewed-by: Vladimir Sementsov-Ogievskiy <vsementsov@virtuozzo.com>&&&& "
1," vhost: fix error check in vhost_verify_ring_mappings() Since commit f1f9e6c5 ""vhost: adapt vhost_verify_ring_mappings() to&&&&virtio 1 ring layout"", we check the mapping of each part (descriptor&&&&table, available ring and used ring) of each virtqueue separately.&&&&&&&&The checking of a part is done by the vhost_verify_ring_part_mapping()&&&&function: it returns either 0 on success or a negative errno if the&&&&part cannot be mapped at the same place.&&&&&&&&Unfortunately, the vhost_verify_ring_mappings() function checks its&&&&return value the other way round. It means that we either:&&&&- only verify the descriptor table of the first virtqueue, and if it&&&&  is valid we ignore all the other mappings&&&&- or ignore all broken mappings until we reach a valid one&&&&&&&&ie, we only raise an error if all mappings are broken, and we consider&&&&all mappings are valid otherwise (false success), which is obviously&&&&wrong.&&&&&&&&This patch ensures that vhost_verify_ring_mappings() only returns&&&&success if ALL mappings are okay.&&&&&&&&Reported-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," nvic: Fix miscalculation of offsets into ITNS array This calculation of the first exception vector in&&&&the ITNS<n> register being accessed:&&&&        int startvec = 32 * (offset - 0x380) + NVIC_FIRST_IRQ;&&&&&&&&is incorrect, because offset is in bytes, so we only want&&&&to multiply by 8.&&&&&&&&Spotted by Coverity (CID 1381484, CID 1381488), though it is&&&&not correct that it actually overflows the buffer, because&&&&we have a 'startvec + i < s->num_irq' guard.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1507650856-11718-1-git-send-email-peter.maydell@linaro.org&&&& "
1, target/arm: Add v8M support to exception entry code Add support for v8M and in particular the security extension&&&&to the exception entry code. This requires changes to:&&&& * calculation of the exception-return magic LR value&&&& * push the callee-saves registers in certain cases&&&& * clear registers when taking non-secure exceptions to avoid&&&&   leaking information from the interrupted secure code&&&& * switch to the correct security state on entry&&&& * use the vector table for the security state we're targeting&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1506092407-26985-13-git-send-email-peter.maydell@linaro.org&&&& 
1," aio: fix assert when remove poll during destroy After iothread is enabled internally inside QEMU with GMainContext, we&&&&may encounter this warning when destroying the iothread:&&&&&&&&(qemu-system-x86_64:19925): GLib-CRITICAL **: g_source_remove_poll:&&&& assertion '!SOURCE_DESTROYED (source)' failed&&&&&&&&The problem is that g_source_remove_poll() does not allow to remove one&&&&source from array if the source is detached from its owner&&&&context. (peterx: which IMHO does not make much sense)&&&&&&&&Fix it on QEMU side by avoid calling g_source_remove_poll() if we know&&&&the object is during destruction, and we won't leak anything after all&&&&since the array will be gone soon cleanly even with that fd.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Message-id: 20170928025958.1420-6-peterx@redhat.com&&&&[peterx: write the commit message]&&&&Signed-off-by: Peter Xu <peterx@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," hw/isa/pc87312: Mark the device with user_creatable = false QEMU currently aborts if you try to use the device at the command&&&&line:&&&&&&&&$ ppc64-softmmu/qemu-system-ppc64 -S -machine prep -device pc87312&&&&Unexpected error in qemu_chr_fe_init() at chardev/char-fe.c:222:&&&&qemu-system-ppc64: -device pc87312: Device 'parallel0' is in use&&&&Aborted (core dumped)&&&&&&&&It uses parallel_hds in its realize function, so I can not be&&&&instantiated by the user again.&&&&&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&Reviewed-by: Herv茅 Poussineau <hpoussin@reactos.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," throttle: Assert that bkt->max is valid in throttle_compute_wait() If bkt->max == 0 and bkt->burst_length > 1 then we could have a&&&&division by 0 in throttle_do_compute_wait(). That configuration is&&&&however not permitted and is already detected by throttle_is_valid(),&&&&but let's assert it in throttle_compute_wait() to make it explicit.&&&&&&&&Found by Coverity (CID: 1381016).&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," slirp: Add explanation for hostfwd parsing failure e.g.&&&&./x86_64-softmmu/qemu-system-x86_64 -nographic -netdev 'user,id=vnet,hostfwd=:555.0.0.0:0-:22'&&&&qemu-system-x86_64: -netdev user,id=vnet,hostfwd=:555.0.0.0:0-:22: Invalid host forwarding rule ':555.0.0.0:0-:22' (Bad host address)&&&&&&&&Signed-off-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>&&&& "
1," mps2-an511: Fix wiring of UART overflow interrupt lines Fix an error that meant we were wiring every UART's overflow&&&&interrupts into the same inputs 0 and 1 of the OR gate,&&&&rather than giving each its own input.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Reviewed-by: Alistair Francis <alistair.francis@xilinx.com>&&&&Message-id: 1505232834-20890-1-git-send-email-peter.maydell@linaro.org&&&& "
1, vhost-user: disable the *broken* subprocess tests tests/vhost-user-test keeps failing on build-system since Aug 15:&&&&&&&&  ERROR:tests/vhost-user-test.c:835:test_flags_mismatch: child process (/i386/vhost-user/flags-mismatch/subprocess [4836]) failed unexpectedly&&&&...&&&&  ERROR:tests/vhost-user-test.c:807:test_connect_fail: child process (/x86_64/vhost-user/connect-fail/subprocess [58910]) failed unexpectedly&&&&&&&&Suggested-by: Peter Maydell <peter.maydell@linaro.org>&&&&Suggested-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Message-id: 20170905180602.28698-1-f4bug@amsat.org&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," target/arm: Tighten up Thumb decode where new v8M insns will be Tighten up the T32 decoder in the places where new v8M instructions&&&&will be:&&&& * TT/TTT/TTA/TTAT are in what was nominally LDREX/STREX r15, ...&&&&   which is UNPREDICTABLE:&&&&   make the UNPREDICTABLE behaviour be to UNDEF&&&& * BXNS/BLXNS are distinguished from BX/BLX via the low 3 bits,&&&&   which in previous architectural versions are SBZ:&&&&   enforce the SBZ via UNDEF rather than ignoring it, and move&&&&   the ""ARCH(5)"" UNDEF case up so we don't leak a TCG temporary&&&& * SG is in the encoding which would be LDRD/STRD with rn = r15;&&&&   this is UNPREDICTABLE and we currently UNDEF:&&&&   move this check further up the code so that we don't leak&&&&   TCG temporaries in the UNDEF case and have a better place&&&&   to put the SG decode.&&&&&&&&This means that if a v8M binary is accidentally run on v7M&&&&or if a test case hits something that we haven't implemented&&&&yet the behaviour will be obvious (UNDEF) rather than obscure&&&&(plough on treating it as a different instruction).&&&&&&&&In the process, add some comments about the instruction patterns&&&&at these points in the decode. Our Thumb and ARM decoders are&&&&very difficult to understand currently, but gradually adding&&&&comments like this should help to clarify what exactly has&&&&been decoded when.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&Reviewed-by: Richard Henderson <richard.henderson@linaro.org>&&&&Message-id: 1501692241-23310-5-git-send-email-peter.maydell@linaro.org&&&& "
1," qcow: Change signature of get_cluster_offset() The old signature has an ambiguous meaning for a return of 0:&&&&either no allocation was requested or necessary, or an error&&&&occurred (but any errno associated with the error is lost to&&&&the caller, which then has to assume EIO).&&&&&&&&Better is to follow the example of qcow2, by changing the&&&&signature to have a separate return value that cleanly&&&&distinguishes between failure and success, along with a&&&&parameter that cleanly holds a 64-bit value.  Then update all&&&&callers.&&&&&&&&While auditing that all return paths return a negative errno&&&&(rather than -1), I also simplified places where we can pass&&&&NULL rather than a local Error that just gets thrown away.&&&&&&&&Suggested-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," throttle: Update the throttle_fix_bucket() documentation The way the throttling algorithm works is that requests start being&&&&throttled once the bucket level exceeds the burst limit. When we get&&&&there the bucket leaks at the level set by the user (bkt->avg), and&&&&that leak rate is what prevents guest I/O from exceeding the desired&&&&limit.&&&&&&&&If we don't allow bursts (i.e. bkt->max == 0) then we can start&&&&throttling requests immediately. The problem with keeping the&&&&threshold at 0 is that it only allows one request at a time, and as&&&&soon as there's a bit of I/O from the guest every other request will&&&&be throttled and performance will suffer considerably. That can even&&&&make the guest unable to reach the throttle limit if that limit is&&&&high enough, and that happens regardless of the block scheduler used&&&&by the guest.&&&&&&&&Increasing that threshold gives flexibility to the guest, allowing it&&&&to perform short bursts of I/O before being throttled. Increasing the&&&&threshold too much does not make a difference in the long run (because&&&&it's the leak rate what defines the actual throughput) but it does&&&&allow the guest to perform longer initial bursts and exceed the&&&&throttle limit for a short while.&&&&&&&&A burst value of bkt->avg / 10 allows the guest to perform 100ms'&&&&worth of I/O at the target rate without being throttled.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: 31aae6645f0d1fbf3860fb2b528b757236f0c0a7.1503580370.git.berto@igalia.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," slirp: check len against dhcp options array end While parsing dhcp options string in 'dhcp_decode', if an options'&&&&length 'len' appeared towards the end of 'bp_vend' array, ensuing&&&&read could lead to an OOB memory access issue. Add check to avoid it.&&&&&&&&This is CVE-2017-11434.&&&&&&&&Reported-by: Reno Robert <renorobert@gmail.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Signed-off-by: Samuel Thibault <samuel.thibault@ens-lyon.org>&&&& "
1," Makefile: Let ""make check-help"" work without running ./configure Currently if you do ""make check-help"" in a fresh checkout, only an error&&&&is printed which is not nice:&&&&&&&&    $ make check-help V=1&&&&    cc -nostdlib  -o check-help.mo&&&&    cc: fatal error: no input files&&&&    compilation terminated.&&&&    rules.mak:115: recipe for target 'check-help.mo' failed&&&&    make: *** [check-help.mo] Error 1&&&&&&&&Move the config-host.mak condition into the body of&&&&tests/Makefile.include and always include the rule for check-help.&&&&&&&&Reported-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-Id: <20170810085025.14076-1-famz@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Tested-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&& "
1," block/vpc.c: Handle write failures in get_image_offset() Coverity (CID 1355236) points out that get_image_offset() doesn't check that&&&&it actually succeeded in writing the updated block bitmap to the file.&&&&Check the error return from bdrv_pwrite_sync() and propagate an error&&&&response back up to the function which calls get_image_offset() for&&&&a write so that it can return the error to its caller.&&&&&&&&get_sector_offset() is only used for reads, but we move it to the&&&&same API for consistency.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, docker: install clang since Shippable setup_ve() verify it is available Signed-off-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&& 
1," block: rip out all traces of password prompting Now that qcow & qcow2 are wired up to get encryption keys&&&&via the QCryptoSecret object, nothing is relying on the&&&&interactive prompting for passwords. All the code related&&&&to password prompting can thus be ripped out.&&&&&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170623162419.26068-17-berrange@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," qcow2: report encryption specific image information Currently 'qemu-img info' reports a simple ""encrypted: yes""&&&&field. This is not very useful now that qcow2 can support&&&&multiple encryption formats. Users want to know which format&&&&is in use and some data related to it.&&&&&&&&Wire up usage of the qcrypto_block_get_info() method so that&&&&'qemu-img info' can report about the encryption format&&&&and parameters in use&&&&&&&&  $ qemu-img create \&&&&      --object secret,id=sec0,data=123456 \&&&&      -o encrypt.format=luks,encrypt.key-secret=sec0 \&&&&      -f qcow2 demo.qcow2 1G&&&&  Formatting 'demo.qcow2', fmt=qcow2 size=1073741824 \&&&&  encryption=off encrypt.format=luks encrypt.key-secret=sec0 \&&&&  cluster_size=65536 lazy_refcounts=off refcount_bits=16&&&&&&&&  $ qemu-img info demo.qcow2&&&&  image: demo.qcow2&&&&  file format: qcow2&&&&  virtual size: 1.0G (1073741824 bytes)&&&&  disk size: 480K&&&&  encrypted: yes&&&&  cluster_size: 65536&&&&  Format specific information:&&&&      compat: 1.1&&&&      lazy refcounts: false&&&&      refcount bits: 16&&&&      encrypt:&&&&          ivgen alg: plain64&&&&          hash alg: sha256&&&&          cipher alg: aes-256&&&&          uuid: 3fa930c4-58c8-4ef7-b3c5-314bb5af21f3&&&&          format: luks&&&&          cipher mode: xts&&&&          slots:&&&&              [0]:&&&&                  active: true&&&&                  iters: 1839058&&&&                  key offset: 4096&&&&                  stripes: 4000&&&&              [1]:&&&&                  active: false&&&&                  key offset: 262144&&&&              [2]:&&&&                  active: false&&&&                  key offset: 520192&&&&              [3]:&&&&                  active: false&&&&                  key offset: 778240&&&&              [4]:&&&&                  active: false&&&&                  key offset: 1036288&&&&              [5]:&&&&                  active: false&&&&                  key offset: 1294336&&&&              [6]:&&&&                  active: false&&&&                  key offset: 1552384&&&&              [7]:&&&&                  active: false&&&&                  key offset: 1810432&&&&          payload offset: 2068480&&&&          master key iters: 438487&&&&      corrupt: false&&&&&&&&With the legacy ""AES"" encryption we just report the format&&&&name&&&&&&&&  $ qemu-img create \&&&&      --object secret,id=sec0,data=123456 \&&&&      -o encrypt.format=aes,encrypt.key-secret=sec0 \&&&&      -f qcow2 demo.qcow2 1G&&&&  Formatting 'demo.qcow2', fmt=qcow2 size=1073741824 \&&&&  encryption=off encrypt.format=aes encrypt.key-secret=sec0 \&&&&  cluster_size=65536 lazy_refcounts=off refcount_bits=16&&&&&&&&  $ ./qemu-img info demo.qcow2&&&&  image: demo.qcow2&&&&  file format: qcow2&&&&  virtual size: 1.0G (1073741824 bytes)&&&&  disk size: 196K&&&&  encrypted: yes&&&&  cluster_size: 65536&&&&  Format specific information:&&&&      compat: 1.1&&&&      lazy refcounts: false&&&&      refcount bits: 16&&&&      encrypt:&&&&          format: aes&&&&      corrupt: false&&&&&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 20170623162419.26068-20-berrange@redhat.com&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&& "
1," nbd: Fix regression on resiliency to port scan Back in qemu 2.5, qemu-nbd was immune to port probes (a transient&&&&server would not quit, regardless of how many probe connections&&&&came and went, until a connection actually negotiated).  But we&&&&broke that in commit ee7d7aa when removing the return value to&&&&nbd_client_new(), although that patch also introduced a bug causing&&&&an assertion failure on a client that fails negotiation.  We then&&&&made it worse during refactoring in commit 1a6245a (a segfault&&&&before we could even assert); the (masked) assertion was cleaned&&&&up in d3780c2 (still in 2.6), and just recently we finally fixed&&&&the segfault (""nbd: Fully intialize client in case of failed&&&&negotiation"").  But that still means that ever since we added&&&&TLS support to qemu-nbd, we have been vulnerable to an ill-timed&&&&port-scan being able to cause a denial of service by taking down&&&&qemu-nbd before a real client has a chance to connect.&&&&&&&&Since negotiation is now handled asynchronously via coroutines,&&&&we no longer have a synchronous point of return by re-adding a&&&&return value to nbd_client_new().  So this patch instead wires&&&&things up to pass the negotiation status through the close_fn&&&&callback function.&&&&&&&&Simple test across two terminals:&&&&$ qemu-nbd -f raw -p 30001 file&&&&$ nmap 127.0.0.1 -p 30001 && \&&&&  qemu-io -c 'r 0 512' -f raw nbd://localhost:30001&&&&&&&&Note that this patch does not change what constitutes successful&&&&negotiation (thus, a client must enter transmission phase before&&&&that client can be considered as a reason to terminate the server&&&&when the connection ends).  Perhaps we may want to tweak things&&&&in a later patch to also treat a client that uses NBD_OPT_ABORT&&&&as being a 'successful' negotiation (the client correctly talked&&&&the NBD protocol, and informed us it was not going to use our&&&&export after all), but that's a discussion for another day.&&&&&&&&Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1451614&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <20170608222617.20376-1-eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," blockdev: use drained_begin/end for qmp_block_resize Fixes: https://bugzilla.redhat.com/show_bug.cgi?id=1447551&&&&&&&&If one tries to issue a block_resize while a guest is busy&&&&accessing the disk, it is possible that qemu may deadlock&&&&when invoking aio_poll from both the main loop and the iothread.&&&&&&&&Replace another instance of bdrv_drain_all that doesn't&&&&quite belong.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Suggested-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," trace: disallow more than 10 arguments per trace event The UST trace backend can only cope with upto 10 arguments. To ensure we&&&&don't exceed the limit when UST is not compiled in, disallow more than&&&&10 arguments upfront.&&&&&&&&This prevents the case where:&&&&&&&&  commit 0fc8aec7de64f2bf83a274a2a38b938ce03425d2&&&&  Author: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&  Date:   Tue Apr 18 10:20:20 2017 +0800&&&&&&&&    COLO-compare: Optimize tcp compare trace event&&&&&&&&    Optimize two trace events as one, adjust print format make&&&&    it easy to read. rename trace_colo_compare_pkt_info_src/dst&&&&    to trace_colo_compare_tcp_info.&&&&&&&&regressed the fix done in&&&&&&&&  commit 2dfe5113b11ce0ddb08176ebb54ab7ac4104b413&&&&  Author: Alex Benn茅e <alex.bennee@linaro.org>&&&&  Date:   Fri Oct 28 14:25:59 2016 +0100&&&&&&&&    net: split colo_compare_pkt_info into two trace events&&&&&&&&    It seems there is a limit to the number of arguments a UST trace event&&&&    can take and at 11 the previous trace command broke the build. Split the&&&&    trace into a src pkt and dst pkt trace to fix this.&&&&&&&&    Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&    Message-id: 20161028132559.8324-1-alex.bennee@linaro.org&&&&    Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&    Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&&&&&Now we get an immediate fail even when UST is disabled:&&&&&&&&  GEN     net/trace.h&&&&Traceback (most recent call last):&&&&  File ""/home/berrange/src/virt/qemu/scripts/tracetool.py"", line 154, in <module>&&&&    main(sys.argv)&&&&  File ""/home/berrange/src/virt/qemu/scripts/tracetool.py"", line 145, in main&&&&    events.extend(tracetool.read_events(fh))&&&&  File ""/home/berrange/src/virt/qemu/scripts/tracetool/__init__.py"", line 307, in read_events&&&&    event = Event.build(line)&&&&  File ""/home/berrange/src/virt/qemu/scripts/tracetool/__init__.py"", line 244, in build&&&&    event = Event(name, props, fmt, args)&&&&  File ""/home/berrange/src/virt/qemu/scripts/tracetool/__init__.py"", line 196, in __init__&&&&    ""argument count"" % name)&&&&ValueError: Event 'colo_compare_tcp_info' has more than maximum permitted argument count&&&&Makefile:96: recipe for target 'net/trace.h-timestamp' failed&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 20170426153900.21066-1-berrange@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target/ppc: Implement H_REGISTER_PROCESS_TABLE H_CALL The H_REGISTER_PROCESS_TABLE H_CALL is used by a guest to indicate to the&&&&hypervisor where in memory its process table is and how translation should&&&&be performed using this process table.&&&&&&&&Provide the implementation of this H_CALL for a guest.&&&&&&&&We first check for invalid flags, then parse the flags to determine the&&&&operation, and then check the other parameters for valid values based on&&&&the operation (register new table/deregister table/maintain registration).&&&&The process table is then stored in the appropriate location and registered&&&&with the hypervisor (if running under KVM), and the LPCR_[UPRT/GTSE] bits&&&&are updated as required.&&&&&&&&Signed-off-by: Suraj Jitindar Singh <sjitindarsingh@gmail.com>&&&&Signed-off-by: Sam Bobroff <sam.bobroff@au1.ibm.com>&&&&[dwg: Correct missing prototype and uninitialized variable]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," virtio-scsi: Fix acquire/release in dataplane handlers After the AioContext lock push down, there is a race between&&&&virtio_scsi_dataplane_start and those ""assert(s->ctx &&&&&&s->dataplane_started)"", because the latter doesn't isn't wrapped in&&&&aio_context_acquire.&&&&&&&&Reproducer is simply booting a Fedora guest with an empty&&&&virtio-scsi-dataplane controller:&&&&&&&&    qemu-system-x86_64 \&&&&      -drive if=none,id=root,format=raw,file=Fedora-Cloud-Base-25-1.3.x86_64.raw \&&&&      -device virtio-scsi \&&&&      -device scsi-disk,drive=root,bootindex=1 \&&&&      -object iothread,id=io \&&&&      -device virtio-scsi-pci,iothread=io \&&&&      -net user,hostfwd=tcp::10022-:22 -net nic,model=virtio -m 2048 \&&&&      --enable-kvm&&&&&&&&Fix this by moving acquire/release pairs from virtio_scsi_handle_*_vq to&&&&their callers - and wrap the broken assertions in.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-Id: <20170317061447.16243-3-famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," test-keyval: Tweaks to improve list coverage We have a negative test case for a list index with leading zero.  Add&&&&positive ones.&&&&&&&&Tweak the test case for list index greater or equal the number of&&&&elements: test ""equal"" instead of ""greater"" to guard against&&&&off-by-one mistakes.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1490014548-15083-2-git-send-email-armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1, sparc/sparc64: grab BQL before calling cpu_check_irqs IRQ modification is part of device emulation and should be done while&&&&the BQL is held to prevent races when MTTCG is enabled. This adds&&&&assertions in the hw emulation layer and wraps the calls from helpers&&&&in the BQL.&&&&&&&&Reported-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&& 
1," keyval: Support lists Additionally permit non-negative integers as key components.  A&&&&dictionary's keys must either be all integers or none.  If all keys&&&&are integers, convert the dictionary to a list.  The set of keys must&&&&be [0,N].&&&&&&&&Examples:&&&&&&&&* list.1=goner,list.0=null,list.1=eins,list.2=zwei&&&&  is equivalent to JSON [ ""null"", ""eins"", ""zwei"" ]&&&&&&&&* a.b.c=1,a.b.0=2&&&&  is inconsistent: a.b.c clashes with a.b.0&&&&&&&&* list.0=null,list.2=eins,list.2=zwei&&&&  has a hole: list.1 is missing&&&&&&&&Similar design flaw as for objects: there is no way to denote an empty&&&&list.  While interpreting ""key absent"" as empty list seems natural&&&&(removing a list member from the input string works when there are&&&&multiple ones, so why not when there's just one), it doesn't work:&&&&""key absent"" already means ""optional list absent"", which isn't the&&&&same as ""empty list present"".&&&&&&&&Update the keyval object visitor to use this a.0 syntax in error&&&&messages rather than the usual a[0].&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1488317230-26248-25-git-send-email-armbru@redhat.com>&&&&[Off-by-one fix squashed in, as per Kevin's review]&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," colo-compare: kick compare thread to exit after some cleanup in finalization We should call g_main_loop_quit() to notify colo compare thread to&&&&exit, Or it will run in g_main_loop_run() forever.&&&&&&&&Besides, the finalizing process can't happen in context of colo thread,&&&&it is reasonable to remove the 'if (qemu_thread_is_self(&s->thread))'&&&&branch.&&&&&&&&Before compare thead exits, some cleanup works need to be&&&&done,  All unhandled packets need to be released and connection_track_table&&&&needs to be freed, or there will be memory leak.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Reviewed-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," tests: Cover input visit beyond end of list When you try to visit beyond the end of a list, the qobject input&&&&visitor crashes, and the string visitor screws returns garbage.  The&&&&generated list visits never go beyond the list end, but manual visits&&&&could.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1488544368-30622-27-git-send-email-armbru@redhat.com>&&&& "
1," tests: check path to avoid a failing qga/get-vcpus test The qga/get-vcpus test fails in a simple chroot environment, as&&&&used in an openSUSE Build Service local build, so first check&&&&that the sysfs based path exists in order to avoid calling this&&&&test in an environment where it won't work right.&&&&&&&&Signed-off-by: Bruce Rogers <brogers@suse.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1, tests: fix ipmi-kcs-test leak Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Philippe Mathieu-Daud茅 <f4bug@amsat.org>&&&& 
1, tests: fix vhost-user-test leaks Spotted by ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1, target/ppc: update overflow flags for add/sub * SO and OV reflects overflow of the 64-bit result in 64-bit mode and&&&&  overflow of the low-order 32-bit result in 32-bit mode&&&&&&&&* OV32 reflects overflow of the low-order 32-bit independent of the mode&&&&&&&&Signed-off-by: Nikunj A Dadhania <nikunj@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1," qmp: Clean up how we enforce capability negotiation To enforce capability negotiation before normal operation,&&&&handle_qmp_command() inspects every command before it's handed off to&&&&qmp_dispatch().  This is a bit of a layering violation, and results in&&&&duplicated code.&&&&&&&&Before capability negotiation (!cur_mon->in_command_mode), we fail&&&&commands other than ""qmp_capabilities"".  This is what enforces&&&&capability negotiation.&&&&&&&&Afterwards, we fail command ""qmp_capabilities"".&&&&&&&&Clean this up as follows.&&&&&&&&The obvious place to fail a command is the command itself, so move the&&&&""afterwards"" check to qmp_qmp_capabilities().&&&&&&&&We do the ""before"" check in every other command, but that would be&&&&bothersome.  Instead, start with an alternate list of commands that&&&&contains only ""qmp_capabilities"".  Switch to the full list in&&&&qmp_qmp_capabilities().&&&&&&&&Additionally, replace the generic human-readable error message for&&&&CommandNotFound by one that reminds the user to run qmp_capabilities.&&&&Without that, we'd regress commit 2d5a834.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1488544368-30622-8-git-send-email-armbru@redhat.com>&&&&[Mirco-optimization squashed in, commit message typo fixed]&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," virtio: add missing region cache init in virtio_load() Commit 97cd965c070152bc626c7507df9fb356bbe1cd81 (""virtio: use&&&&VRingMemoryRegionCaches for avail and used rings"") switched to a memory&&&&region cache to avoid repeated map/unmap operations.&&&&&&&&The virtio_load() process is a little tricky because vring addresses are&&&&serialized in two separate places.  VIRTIO 1.0 devices serialize desc&&&&and then a subsection with used and avail.  Legacy devices only&&&&serialize desc.&&&&&&&&Live migration of VIRTIO 1.0 devices fails on the destination host with:&&&&&&&&  VQ 0 size 0x80 < last_avail_idx 0x12f8 - used_idx 0x0&&&&  Failed to load virtio-blk:virtio&&&&  error while loading state for instance 0x0 of device '0000:00:04.0/virtio-blk'&&&&&&&&This happens because the memory region cache is only initialized after&&&&desc is loaded and not after the used and avail subsection is loaded.&&&&If the guest chose memory addresses that don't match the legacy ring&&&&layout then the wrong guest memory location is accessed.&&&&&&&&Wait until all ring addresses are known before trying to initialize the&&&&region cache.  Also clarify the incomplete comment about VIRTIO-1 ring&&&&address subsection.&&&&&&&&Cc: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Tested-by: Eric Auger <eric.auger@redhat.com>&&&& "
1," 9pfs: local: chmod: don't follow symlinks The local_chmod() callback is vulnerable to symlink attacks because it&&&&calls:&&&&&&&&(1) chmod() which follows symbolic links for all path elements&&&&(2) local_set_xattr()->setxattr() which follows symbolic links for all&&&&    path elements&&&&(3) local_set_mapped_file_attr() which calls in turn local_fopen() and&&&&    mkdir(), both functions following symbolic links for all path&&&&    elements but the rightmost one&&&&&&&&We would need fchmodat() to implement AT_SYMLINK_NOFOLLOW to fix (1). This&&&&isn't the case on linux unfortunately: the kernel doesn't even have a flags&&&&argument to the syscall :-\ It is impossible to fix it in userspace in&&&&a race-free manner. This patch hence converts local_chmod() to rely on&&&&open_nofollow() and fchmod(). This fixes the vulnerability but introduces&&&&a limitation: the target file must readable and/or writable for the call&&&&to openat() to succeed.&&&&&&&&It introduces a local_set_xattrat() replacement to local_set_xattr()&&&&based on fsetxattrat() to fix (2), and a local_set_mapped_file_attrat()&&&&replacement to local_set_mapped_file_attr() based on local_fopenat()&&&&and mkdirat() to fix (3). No effort is made to factor out code because&&&&both local_set_xattr() and local_set_mapped_file_attr() will be dropped&&&&when all users have been converted to use the ""at"" versions.&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, 9pfs: local: lsetxattr: don't follow symlinks The local_lsetxattr() callback is vulnerable to symlink attacks because&&&&it calls lsetxattr() which follows symbolic links in all path elements but&&&&the rightmost one.&&&&&&&&This patch introduces a helper to emulate the non-existing fsetxattrat()&&&&function: it is implemented with /proc/self/fd which provides a trusted&&&&path that can be safely passed to lsetxattr().&&&&&&&&local_lsetxattr() is converted to use this helper and opendir_nofollow().&&&&&&&&This partly fixes CVE-2016-9602.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," io: fully parse & validate HTTP headers for websocket protocol handshake The current websockets protocol handshake code is very relaxed, just&&&&doing crude string searching across the HTTP header data. This causes&&&&it to both reject valid connections and fail to reject invalid&&&&connections. For example, according to the RFC 6455 it:&&&&&&&& - MUST reject any method other than ""GET""&&&& - MUST reject any HTTP version less than ""HTTP/1.1""&&&& - MUST reject Connection header without ""Upgrade"" listed&&&& - MUST reject Upgrade header which is not 'websocket'&&&& - MUST reject missing Host header&&&& - MUST treat HTTP header names as case insensitive&&&&&&&&To do all this validation correctly requires that we fully parse the&&&&HTTP headers, populating a data structure containing the header&&&&fields.&&&&&&&&After this change, we also reject any path other than '/'&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," hw/ppc/spapr: Check for valid page size when hot plugging memory On POWER, the valid page sizes that the guest can use are bound&&&&to the CPU and not to the memory region. QEMU already has some&&&&fancy logic to find out the right maximum memory size to tell&&&&it to the guest during boot (see getrampagesize() in the file&&&&target/ppc/kvm.c for more information).&&&&However, once we're booted and the guest is using huge pages&&&&already, it is currently still possible to hot-plug memory regions&&&&that does not support huge pages - which of course does not work&&&&on POWER, since the guest thinks that it is possible to use huge&&&&pages everywhere. The KVM_RUN ioctl will then abort with -EFAULT,&&&&QEMU spills out a not very helpful error message together with&&&&a register dump and the user is annoyed that the VM unexpectedly&&&&died.&&&&To avoid this situation, we should check the page size of hot-plugged&&&&DIMMs to see whether it is possible to use it in the current VM.&&&&If it does not fit, we can print out a better error message and&&&&refuse to add it, so that the VM does not die unexpectely and the&&&&user has a second chance to plug a DIMM with a matching memory&&&&backend instead.&&&&&&&&Buglink: https://bugzilla.redhat.com/show_bug.cgi?id=1419466&&&&Signed-off-by: Thomas Huth <thuth@redhat.com>&&&&[dwg: Fix a build error on 32-bit builds with KVM]&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," armv7m: R14 should reset to 0xffffffff For M profile (unlike A profile) the reset value of R14 is specified&&&&as 0xffffffff.  (The rationale is that this is an illegal exception&&&&return value, so if guest code tries to return to it it will result&&&&in a helpful exception.)&&&&&&&&Registers r0 to r12 and the flags are architecturally UNKNOWN on&&&&reset, so we leave those at zero.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-id: 1485285380-10565-11-git-send-email-peter.maydell@linaro.org&&&& "
1," hw/scsi: Fix debug message of cdb structure in scsi-generic When running with debug enabled, the scsi-generic cdb that is&&&&dumped skips byte 0 of the command, which is the opcode.  This&&&&makes identifying which command is being issued/completed a&&&&little difficult.  Example:&&&&&&&&  0x00 0x00 0x01 0x00 0x00&&&&  scsi-generic: scsi_read_data 0x0&&&&  scsi-generic: Data ready tag=0x0 len=164&&&&  scsi-generic: scsi_read_data 0x0&&&&  scsi-generic: Command complete 0x0x10a42c60 tag=0x0 status=0&&&&&&&&Improve this by adding a message prior to the loop, similar to&&&&what exists for scsi-disk.  Clean up a few other messages to be&&&&more explicit of what is being represented.  Example:&&&&&&&&  scsi-generic: Command: data=0x12 0x00 0x00 0x01 0x00 0x00&&&&  scsi-generic: scsi_read_data tag=0x0&&&&  scsi-generic: Data ready tag=0x0 len=164&&&&  scsi-generic: scsi_read_data tag=0x0&&&&  scsi-generic: Command complete 0x0x10a452d0 tag=0x0 status=0&&&&&&&&Signed-off-by: Eric Farman <farman@linux.vnet.ibm.com>&&&&Message-Id: <20170120162527.66075-2-farman@linux.vnet.ibm.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," hw/isa/lpc_ich9: add broadcast SMI feature The generic edk2 SMM infrastructure prefers&&&&EFI_SMM_CONTROL2_PROTOCOL.Trigger() to inject an SMI on each processor. If&&&&Trigger() only brings the current processor into SMM, then edk2 handles it&&&&in the following ways:&&&&&&&&(1) If Trigger() is executed by the BSP (which is guaranteed before&&&&    ExitBootServices(), but is not necessarily true at runtime), then:&&&&&&&&    (a) If edk2 has been configured for ""traditional"" SMM synchronization,&&&&        then the BSP sends directed SMIs to the APs with APIC delivery,&&&&        bringing them into SMM individually. Then the BSP runs the SMI&&&&        handler / dispatcher.&&&&&&&&    (b) If edk2 has been configured for ""relaxed"" SMM synchronization,&&&&        then the APs that are not already in SMM are not brought in, and&&&&        the BSP runs the SMI handler / dispatcher.&&&&&&&&(2) If Trigger() is executed by an AP (which is possible after&&&&    ExitBootServices(), and can be forced e.g. by ""taskset -c 1&&&&    efibootmgr""), then the AP in question brings in the BSP with a&&&&    directed SMI, and the BSP runs the SMI handler / dispatcher.&&&&&&&&The smaller problem with (1a) and (2) is that the BSP and AP&&&&synchronization is slow. For example, the ""taskset -c 1 efibootmgr""&&&&command from (2) can take more than 3 seconds to complete, because&&&&efibootmgr accesses non-volatile UEFI variables intensively.&&&&&&&&The larger problem is that QEMU's current behavior diverges from the&&&&behavior usually seen on physical hardware, and that keeps exposing&&&&obscure corner cases, race conditions and other instabilities in edk2,&&&&which generally expects / prefers a software SMI to affect all CPUs at&&&&once.&&&&&&&&Therefore introduce the ""broadcast SMI"" feature that causes QEMU to inject&&&&the SMI on all VCPUs.&&&&&&&&While the original posting of this patch&&&&<http://lists.nongnu.org/archive/html/qemu-devel/2015-10/msg05658.html>&&&&only intended to speed up (2), based on our recent ""stress testing"" of SMM&&&&this patch actually provides functional improvements.&&&&&&&&Cc: ""Michael S. Tsirkin"" <mst@redhat.com>&&&&Cc: Gerd Hoffmann <kraxel@redhat.com>&&&&Cc: Igor Mammedov <imammedo@redhat.com>&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Message-Id: <20170126014416.11211-3-lersek@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," aio-posix: honor is_external in AioContext polling AioHandlers marked ->is_external must be skipped when aio_node_check()&&&&fails.  bdrv_drained_begin() needs this to prevent dataplane from&&&&submitting new I/O requests while another thread accesses the device and&&&&relies on it being quiesced.&&&&&&&&This patch fixes the following segfault:&&&&&&&&  Program terminated with signal SIGSEGV, Segmentation fault.&&&&  #0  0x00005577f6127dad in bdrv_io_plug (bs=0x5577f7ae52f0) at qemu/block/io.c:2650&&&&  2650            bdrv_io_plug(child->bs);&&&&  [Current thread is 1 (Thread 0x7ff5c4bd1c80 (LWP 10917))]&&&&  (gdb) bt&&&&  #0  0x00005577f6127dad in bdrv_io_plug (bs=0x5577f7ae52f0) at qemu/block/io.c:2650&&&&  #1  0x00005577f6114363 in blk_io_plug (blk=0x5577f7b8ba20) at qemu/block/block-backend.c:1561&&&&  #2  0x00005577f5d4091d in virtio_blk_handle_vq (s=0x5577f9ada030, vq=0x5577f9b3d2a0) at qemu/hw/block/virtio-blk.c:589&&&&  #3  0x00005577f5d4240d in virtio_blk_data_plane_handle_output (vdev=0x5577f9ada030, vq=0x5577f9b3d2a0) at qemu/hw/block/dataplane/virtio-blk.c:158&&&&  #4  0x00005577f5d88acd in virtio_queue_notify_aio_vq (vq=0x5577f9b3d2a0) at qemu/hw/virtio/virtio.c:1304&&&&  #5  0x00005577f5d8aaaf in virtio_queue_host_notifier_aio_poll (opaque=0x5577f9b3d308) at qemu/hw/virtio/virtio.c:2134&&&&  #6  0x00005577f60ca077 in run_poll_handlers_once (ctx=0x5577f79ddbb0) at qemu/aio-posix.c:493&&&&  #7  0x00005577f60ca268 in try_poll_mode (ctx=0x5577f79ddbb0, blocking=true) at qemu/aio-posix.c:569&&&&  #8  0x00005577f60ca331 in aio_poll (ctx=0x5577f79ddbb0, blocking=true) at qemu/aio-posix.c:601&&&&  #9  0x00005577f612722a in bdrv_flush (bs=0x5577f7c20970) at qemu/block/io.c:2403&&&&  #10 0x00005577f60c1b2d in bdrv_close (bs=0x5577f7c20970) at qemu/block.c:2322&&&&  #11 0x00005577f60c20e7 in bdrv_delete (bs=0x5577f7c20970) at qemu/block.c:2465&&&&  #12 0x00005577f60c3ecf in bdrv_unref (bs=0x5577f7c20970) at qemu/block.c:3425&&&&  #13 0x00005577f60bf951 in bdrv_root_unref_child (child=0x5577f7a2de70) at qemu/block.c:1361&&&&  #14 0x00005577f6112162 in blk_remove_bs (blk=0x5577f7b8ba20) at qemu/block/block-backend.c:491&&&&  #15 0x00005577f6111b1b in blk_remove_all_bs () at qemu/block/block-backend.c:245&&&&  #16 0x00005577f60c1db6 in bdrv_close_all () at qemu/block.c:2382&&&&  #17 0x00005577f5e60cca in main (argc=20, argv=0x7ffea6eb8398, envp=0x7ffea6eb8440) at qemu/vl.c:4684&&&&&&&&The key thing is that bdrv_close() uses bdrv_drained_begin() and&&&&virtio_queue_host_notifier_aio_poll() must not be called.&&&&&&&&Thanks to Fam Zheng <famz@redhat.com> for identifying the root cause of&&&&this crash.&&&&&&&&Reported-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Tested-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: 20170124095350.16679-1-stefanha@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," ppc: Validate compatibility modes when setting Current ppc_set_compat() will attempt to set any compatiblity mode&&&&specified, regardless of whether it's available on the CPU.  The caller is&&&&expected to make sure it is setting a possible mode, which is awkwward&&&&because most of the information to make that decision is at the CPU level.&&&&&&&&This begins to clean this up by introducing a ppc_check_compat() function&&&&which will determine if a given compatiblity mode is supported on a CPU&&&&(and also whether it lies within specified minimum and maximum compat&&&&levels, which will be useful later).  It also contains an assertion that&&&&the CPU has a ""virtual hypervisor""[1], that is, that the guest isn't&&&&permitted to execute hypervisor privilege code.  Without that, the guest&&&&would own the PCR and so could override any mode set here.  Only machine&&&&types which use a virtual hypervisor (i.e. 'pseries') should use&&&&ppc_check_compat().&&&&&&&&ppc_set_compat() is modified to validate the compatibility mode it is given&&&&and fail if it's not available on this CPU.&&&&&&&&[1] Or user-only mode, which also obviously doesn't allow access to the&&&&hypervisor privileged PCR.  We don't use that now, but could in future.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&& "
1," audio: ac97: add exit function Currently the ac97 device emulation doesn't have a exit function,&&&&hot unplug this device will leak some memory. Add a exit function to&&&&avoid this.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-id: 58520052.4825ed0a.27a71.6cae@mx.google.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," m25p80: don't let rogue SPI controllers cause buffer overruns In normal operation we should never attempt to put more&&&&data into the data[] array than it can hold. However if the&&&&SPI controller connected to us misbehaves then it can send&&&&us a sequence of commands that attempt this. Since the&&&&controller might be in the guest (if the hardware does SPI&&&&via bit-banging), catch the possible overrun conditions and&&&&reset the flash internal state, logging them as guest errors.&&&&&&&&Signed-off-by: Jean-Christophe Dubois <jcd@tribudubois.net>&&&&Message-id: 20170107111631.24444-1-jcd@tribudubois.net&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&[PMM: rewrote commit message to be more exact about when&&&& this can happen]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, target/xtensa: tests: fix timer tests Don't expect that CCOUNT increments are equal to the number of executed&&&&instructions. Verify that timer interrupt does not fire before the&&&&programmed CCOMPARE value and does fire after.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&& 
1," 9pfs: add cleanup operation in FileOperations Currently, the backend of VirtFS doesn't have a cleanup&&&&function. This will lead resource leak issues if the backed&&&&driver allocates resources. This patch addresses this issue.&&&&&&&&Signed-off-by: Li Qiang <liq3ea@gmail.com>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&& "
1," ipmi: fix qemu crash while migrating with ipmi Qemu crash in the source side while migrating, after starting ipmi service inside vm.&&&&&&&&./x86_64-softmmu/qemu-system-x86_64 --enable-kvm -smp 4 -m 4096 \&&&&-drive file=/work/suse/suse11_sp3_64_vt,format=raw,if=none,id=drive-virtio-disk0,cache=none \&&&&-device virtio-blk-pci,scsi=off,bus=pci.0,addr=0x5,drive=drive-virtio-disk0,id=virtio-disk0 \&&&&-vnc :99 -monitor vc -device ipmi-bmc-sim,id=bmc0 -device isa-ipmi-kcs,bmc=bmc0,ioport=0xca2&&&&&&&&Program received signal SIGSEGV, Segmentation fault.&&&&[Switching to Thread 0x7ffec4268700 (LWP 7657)]&&&&__memcpy_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2757&&&&(gdb) bt&&&& #0  __memcpy_ssse3_back () at ../sysdeps/x86_64/multiarch/memcpy-ssse3-back.S:2757&&&& #1  0x00005555559ef775 in memcpy (__len=3, __src=0xc1421c, __dest=<optimized out>)&&&&     at /usr/include/bits/string3.h:51&&&& #2  qemu_put_buffer (f=0x555557a97690, buf=0xc1421c <Address 0xc1421c out of bounds>, size=3)&&&&     at migration/qemu-file.c:346&&&& #3  0x00005555559eef66 in vmstate_save_state (f=f@entry=0x555557a97690,&&&&     vmsd=0x555555f8a5a0 <vmstate_ISAIPMIKCSDevice>, opaque=0x555557231160,&&&&     vmdesc=vmdesc@entry=0x55555798cc40) at migration/vmstate.c:333&&&& #4  0x00005555557cfe45 in vmstate_save (f=f@entry=0x555557a97690, se=se@entry=0x555557231de0,&&&&     vmdesc=vmdesc@entry=0x55555798cc40) at /mnt/sdb/zyy/qemu/migration/savevm.c:720&&&& #5  0x00005555557d2be7 in qemu_savevm_state_complete_precopy (f=0x555557a97690,&&&&     iterable_only=iterable_only@entry=false) at /mnt/sdb/zyy/qemu/migration/savevm.c:1128&&&& #6  0x00005555559ea102 in migration_completion (start_time=<synthetic pointer>,&&&&     old_vm_running=<synthetic pointer>, current_active_state=<optimized out>,&&&&     s=0x5555560eaa80 <current_migration.44078>) at migration/migration.c:1707&&&& #7  migration_thread (opaque=0x5555560eaa80 <current_migration.44078>) at migration/migration.c:1855&&&& #8  0x00007ffff3900dc5 in start_thread (arg=0x7ffec4268700) at pthread_create.c:308&&&& #9  0x00007fffefc6c71d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:113&&&&&&&&Signed-off-by: Zhuang Yanying <ann.zhuangyanying@huawei.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," raw_bsd: don't check size alignment when only offset is set We make sure that the size is aligned to sector length to prevent any&&&&round ups. Otherwise we could end up reading/writing data outside the&&&&area specified by user. This is only needed when user supplies the size&&&&option to avoid any surprises. It is not necessary when only offset is&&&&set.&&&&&&&&More over, the check made it difficult to use the offset option without&&&&size option. The check puts unneeded restriction on the offset which had&&&&to be aligned too. Because bdrv_getlength() returns aligned value having&&&&unaligned offset would make the check fail.&&&&&&&&Signed-off-by: Tom谩拧 Golembiovsk媒 <tgolembi@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, block/nbd: Fix the leaked visitor This patch frees the leaked visitor in nbd_refresh_filename() and uses&&&&visit_free() to fix it. The leak was introduced by the commit 491d6c7.&&&&&&&&Signed-off-by: Ashijeet Acharya <ashijeetacharya@gmail.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," vl: exit qemu on guest panic if -no-shutdown is not set For automated testing purposes it can be helpful to exit qemu&&&&(poweroff) when the guest panics. Make this the default unless&&&&-no-shutdown is specified.&&&&&&&&For internal-errors like errors from KVM_RUN the behaviour is&&&&not changed, in other words QEMU does not exit to allow debugging&&&&in the QEMU monitor.&&&&&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Message-Id: <1476775794-108012-1-git-send-email-borntraeger@de.ibm.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," nvdimm acpi: introduce fit buffer The buffer is used to save the FIT info for all the presented nvdimm&&&&devices which is updated after the nvdimm device is plugged or&&&&unplugged. In the later patch, it will be used to construct NVDIMM&&&&ACPI _FIT method which reflects the presented nvdimm devices after&&&&nvdimm hotplug&&&&&&&&As FIT buffer can not completely mapped into guest address space,&&&&OSPM will exit to QEMU multiple times, however, there is the race&&&&condition - FIT may be changed during these multiple exits, so that&&&&some rules are introduced:&&&&1) the user should hold the @lock to access the buffer and&&&&2) mark @dirty whenever the buffer is updated.&&&&&&&&@dirty is cleared for the first time OSPM gets fit buffer, if&&&&dirty is detected in the later access, OSPM will restart the&&&&access&&&&&&&&As fit should be updated after nvdimm device is successfully realized&&&&so that a new hotplug callback, post_hotplug, is introduced&&&&&&&&Signed-off-by: Xiao Guangrong <guangrong.xiao@linux.intel.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," 9pfs: fix integer overflow issue in xattr read/write The v9fs_xattr_read() and v9fs_xattr_write() are passed a guest&&&&originated offset: they must ensure this offset does not go beyond&&&&the size of the extended attribute that was set in v9fs_xattrcreate().&&&&Unfortunately, the current code implement these checks with unsafe&&&&calculations on 32 and 64 bit values, which may allow a malicious&&&&guest to cause OOB access anyway.&&&&&&&&Fix this by comparing the offset and the xattr size, which are&&&&both uint64_t, before trying to compute the effective number of bytes&&&&to read or write.&&&&&&&&Suggested-by: Greg Kurz <groug@kaod.org>&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Reviewed-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-By: Guido G眉nther <agx@sigxcpu.org>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&& "
1, net: split colo_compare_pkt_info into two trace events It seems there is a limit to the number of arguments a UST trace event&&&&can take and at 11 the previous trace command broke the build. Split the&&&&trace into a src pkt and dst pkt trace to fix this.&&&&&&&&Signed-off-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-id: 20161028132559.8324-1-alex.bennee@linaro.org&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," scripts/hxtool: fix undefined behavour of echo Avoid undefined behaviour of echo(1) with backslashes in arguments&&&&The behaviour is implementation-defined, different /bin/sh's behave&&&&differently.&&&&&&&&Signed-off-by: Daniel Shahaf <danielsh@apache.org>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1, net: eepro100: fix memory leak in device uninit The exit dispatch of eepro100 network card device doesn't free&&&&the 's->vmstate' field which was allocated in device realize thus&&&&leading a host memory leak. This patch avoid this.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& 
1," target-m68k: manage scaled index Scaled index is not supported by 68000, 68008, and 68010.&&&&&&&&    EA = (bd + PC) + Xn.SIZE*SCALE + od&&&&&&&&Ignore it:&&&&&&&&M68000 FAMILY PROGRAMMER鈥橲 REFERENCE MANUAL&&&&2.4 BRIEF EXTENSION WORD FORMAT COMPATIBILITY&&&&&&&&""If the MC68000 were to execute an instruction that&&&& encoded a scaling factor, the scaling factor would be&&&& ignored and would not access the desired memory address.&&&& The earlier microprocessors do not recognize the brief&&&& extension word formats implemented by newer processors.&&&& Although they can detect illegal instructions, they do not&&&& decode invalid encodings of the brief extension word formats&&&& as exceptions.""&&&&&&&&Signed-off-by: Laurent Vivier <laurent@vivier.eu>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
1," intel_iommu: redo configuraton check in realize * there no point in configuring the device if realization is going to&&&&  fail, so move the check to the beginning,&&&&* create a separate function for the check,&&&&* use error_setg() instead error_report().&&&&&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Peter Xu <peterx@redhat.com>&&&&Signed-off-by: Radim Kr膷m谩艡 <rkrcmar@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& "
1," 9pfs: fix potential host memory leak in v9fs_read In 9pfs read dispatch function, it doesn't free two QEMUIOVector&&&&object thus causing potential memory leak. This patch avoid this.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&& "
1," trace: move colo trace events to net/ sub-directory The colo patch series added various trace events to the top&&&&level trace-events file, despite the files using them being&&&&in a sub-dir.&&&&&&&&  commit 30656b097e9dd7978d3fe9416cb9f5a421a9e63e&&&&  Author: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&  Date:   Tue Sep 27 10:22:34 2016 +0800&&&&&&&&    filter-rewriter: rewrite tcp packet to keep secondary connection&&&&&&&&  commit f4b618360e5a81b097e2e35d52011bec3c63af68&&&&  Author: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&  Date:   Tue Sep 27 10:22:31 2016 +0800&&&&&&&&    colo-compare: add TCP, UDP, ICMP packet comparison&&&&&&&&    We add TCP,UDP,ICMP packet comparison to replace&&&&    IP packet comparison. This can increase the&&&&    accuracy of the package comparison.&&&&    Less checkpoint more efficiency.&&&&&&&&    Signed-off-by: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&    Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&    Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&    Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&&&&&  commit 0682e15b19b2f41c0568142b42518b9471168597&&&&  Author: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&  Date:   Tue Sep 27 10:22:30 2016 +0800&&&&&&&&    colo-compare: introduce packet comparison thread&&&&&&&&  commit 59509ec16b7ee92b3f8261c554023aa1d3169317&&&&  Author: Zhang Chen <zhangchen.fnst@cn.fujitsu.com>&&&&  Date:   Tue Sep 27 10:22:27 2016 +0800&&&&&&&&    net/colo.c: add colo.c to define and handle packet&&&&&&&&This moves all events into net/trace-events where they&&&&were supposed to live.&&&&&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-id: 1475588159-30598-2-git-send-email-berrange@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," target-ppc: fix invalid mask - cmpl, bctar cmpl:  invalid bit mask should be 0x00400001&&&&bctar: invalid bit mask should be 0x0000E000&&&&&&&&Signed-off-by: Avinesh Kumar <avinesku@linux.vnet.ibm.com>&&&&Signed-off-by: Rajalakshmi Srinivasaraghavan <raji@linux.vnet.ibm.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1, oslib-posix: add helpers for stack alloc and free the allocated stack will be adjusted to the minimum supported stack size&&&&by the OS and rounded up to be a multiple of the system pagesize.&&&&Additionally an architecture dependent guard page is added to the stack&&&&to catch stack overflows.&&&&&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," virtio-scsi: convert virtio_scsi_bad_req() to use virtio_error() The virtio_scsi_bad_req() function is called when a guest sends a&&&&request with missing or ill-sized headers. This generally happens&&&&when the virtio_scsi_parse_req() function returns an error.&&&&&&&&With this patch, virtio_scsi_bad_req() will mark the device as broken,&&&&detach the request from the virtqueue and free it, instead of forcing&&&&QEMU to exit.&&&&&&&&In nearly all locations where virtio_scsi_bad_req() is called, the only&&&&thing to do next is to return to the caller.&&&&&&&&The virtio_scsi_handle_cmd_req_prepare() function is an exception though.&&&&&&&&It is called in a loop by virtio_scsi_handle_cmd_vq() and passed requests&&&&freshly popped from a cmd virtqueue; virtio_scsi_handle_cmd_req_prepare()&&&&does some sanity checks on the request and returns a boolean flag to&&&&indicate whether the request should be queued or not. In the latter case,&&&&virtio_scsi_handle_cmd_req_prepare() has detected a non-fatal error and&&&&sent a response back to the guest.&&&&&&&&We have now a new condition to take into account: the device is broken&&&&and should stop all processing.&&&&&&&&The return value of virtio_scsi_handle_cmd_req_prepare() is hence changed&&&&to an int. A return value of zero means that the request should be queued.&&&&Other non-fatal error cases where the request shoudn't be queued  return&&&&a negative errno (values are vaguely inspired by the error condition, but&&&&the only goal here is to discriminate the case we're interested in).&&&&&&&&And finally, if virtio_scsi_bad_req() was called, -EINVAL is returned. In&&&&this case, virtio_scsi_handle_cmd_vq() detaches and frees already queued&&&&requests, instead of submitting them.&&&&&&&&Signed-off-by: Greg Kurz <groug@kaod.org>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," ppc: restrict the use of the rfi instruction Power ISA 2.x has deleted the rfi instruction and rfid shoud be used&&&&instead on cpus following this instruction set or later.&&&&&&&&This will raise an invalid exception when rfi is used on such&&&&processors: Book3S 64-bit processors.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Reviewed-by: David Gibson <david@gibson.dropbear.id.au>&&&&[clg: the required fix in openbios, commit b747b6acc272 ('ppc: use&&&&      rfid when running under a CPU from the 970 family.'), is now&&&&      merged in qemu under commit 5cebd885d0d2 ('Update OpenBIOS&&&&      images to b747b6a built from submodule.') ]&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Reviewed-by: Thomas Huth <thuth@redhat.com>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1, tests: fix check-qom-interface leaks Found thanks to ASAN.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& 
1," qemu-char: avoid segfault if user lacks of permisson of a given logfile Function qemu_chr_alloc returns NULL if it failed to open logfile by any reason,&&&&says no write permission. For backends tty, stdio and msmouse, They need to&&&&check this return value to avoid segfault in this case.&&&&&&&&Signed-off-by: Lin Ma <lma@suse.com>&&&&Cc: qemu-stable <qemu-stable@nongnu.org>&&&&Message-Id: <20160914062250.22226-1-lma@suse.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," usb:xhci:fix memory leak in usb_xhci_exit If the xhci uses msix, it doesn't free the corresponding&&&&memory, thus leading a memory leak. This patch avoid this.&&&&&&&&Signed-off-by: Li Qiang <liqiang6-s@360.cn>&&&&Message-id: 57d7d2e0.d4301c0a.d13e9.9a55@mx.google.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," target-i386: Fixed syscall posssible segfault In user-mode emulation env->idt.base memory is&&&&allocated in linux-user/main.c with&&&&size 8*512 = 4096 (for 64-bit).&&&&When fake interrupt EXCP_SYSCALL is thrown&&&&do_interrupt_user checks destination privilege level&&&&for this fake exception, and tries to read 4 bytes&&&&at address base + (256 * 2^4)=4096, that causes&&&&segfault.&&&&&&&&Privlege level was checked only for int's, so lets&&&&read dpl from memory only for this case.&&&&&&&&Signed-off-by: Stanislav Shmarov <snarpix@gmail.com>&&&&Message-Id: <1473773008-2588376-1-git-send-email-snarpix@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," test-logging: don't hard-code paths in /tmp Since f6880b7f [qemu-log: support simple pid substitution for logs],&&&&test-logging creates files with hard-coded names in /tmp. In the best&&&&case, this prevents multiple developers from running ""make check"" on&&&&the same machine. In the worst case, it allows for symlink attacks,&&&&enabling an attacker to overwrite files that are writable to the&&&&developer running ""make check"".&&&&&&&&Instead of hard-coding the paths, create a temporary directory using&&&&g_dir_make_tmp() and clean it up afterwards.&&&&&&&&Fixes: f6880b7f (""qemu-log: support simple pid substitution for logs"")&&&&Signed-off-by: Sascha Silbe <silbe@linux.vnet.ibm.com>&&&&Message-id: 1471545963-11720-3-git-send-email-silbe@linux.vnet.ibm.com&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, block/nbd: Use QemuOpts for runtime options Using QemuOpts will prevent qemu from crashing if the input options have&&&&not been validated (which is the case when they are specified on the&&&&command line or in a json: filename) and some have the wrong type.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1, macio: set res_count value to 0 after non-block ATAPI DMA transfers res_count should be set to the number of outstanding bytes after a DBDMA&&&&request. Unfortunately this wasn't being set to zero by the non-block&&&&transfer codepath meaning drivers that checked the descriptor result for&&&&such requests (e.g reading the CDROM TOC) would assume from a non-zero result&&&&that the transfer had failed.&&&&&&&&Signed-off-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& 
1," qdist: use g_renew and g_new instead of g_realloc and g_malloc. This is safer against overflow.  g_renew is available in all&&&&version of glib, while g_realloc_n is only available in 2.24.&&&&&&&&Signed-off-by: Emilio G. Cota <cota@braap.org>&&&&Message-Id: <1469459025-23606-3-git-send-email-cota@braap.org>&&&&[Rewritten to use g_new/g_renew. - Paolo]&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," Revert ""vhost-net: do not crash if backend is not present"" Now that get_vhost_net() returns non-null after a successful&&&&vhost_net_init(), we no longer need to check this case.&&&&&&&&This reverts commit ecd34898596c60f79886061618dd7e01001113ad.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, target-i386: Fix apic object leak when CPU is deleted Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&& 
1, s390x/pci: fix stpcifc_service_call Firstly the function misses dmaas checking. This patch adds it.&&&&&&&&Secondly the function uses s390_pci_find_dev_by_fh() to look up the&&&&zpci device. This may fail if the guest provides a valid and disabled&&&&fh but fh of the associated zpci device is enabled. Thus we use&&&&s390_pci_find_dev_by_idx() instead.&&&&&&&&Signed-off-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& 
1," s390x/pci: fix failures of dma map/unmap In commit d78c19b5cf4821d0c198f4132a085bdbf19dda4c, vfio code stores&&&&the IOMMU's offset_within_address_space and adjusts the IOVA before&&&&calling vfio_dma_map/vfio_dma_unmap. But s390_translate_iommu already&&&&considers the base address of an IOMMU memory region.&&&&&&&&Thus we use pal as the size and 0x0 as the base address to initialize&&&&IOMMU memory subregion.&&&&&&&&Signed-off-by: Yi Min Zhao <zyimin@linux.vnet.ibm.com>&&&&Reviewed-by: Pierre Morel <pmorel@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1, iscsi: fix assertion in is_sector_request_lun_aligned Commit 94d047a added an assertion the the request alignment check.&&&&This introduced 2 issues:&&&& a) A off-by-one error since a request of BDRV_REQUEST_MAX_SECTORS&&&&    is actually allowed.&&&& b) The bdrv_get_block_status call in the read path to check the allocation&&&&    status requests up to INT_MAX sectors which triggers the assertion.&&&&&&&&Fixes: 94d047a35bf663e28f8fef137544d8ea78165add&&&&Signed-off-by: Peter Lieven <pl@kamp.de>&&&&Message-Id: <1466414680-18383-1-git-send-email-pl@kamp.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," ppc: fix exception model for HV mode This properly implements LPES0 handling for HV vs. !HV mode and&&&&removes the unsupported LPES1. This has been removed from the specs&&&&since ISA v2.07.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&[clg: AIL implementation was fixed in commit 5c94b2a5e5ef. This patch&&&&      only contains the bits of the original patch related to LPES0&&&&      handling, adapted commit log.&&&&      fixed checkpatch.pl errors. ]&&&&Signed-off-by: C茅dric Le Goater <clg@kaod.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&& "
1," qapi: Change visit_type_FOO() to no longer return partial objects Returning a partial object on error is an invitation for a careless&&&&caller to leak memory.  We already fixed things in an earlier&&&&patch to guarantee NULL if visit_start fails (""qapi: Guarantee&&&&NULL obj on input visitor callback error""), but that does not&&&&help the case where visit_start succeeds but some other failure&&&&happens before visit_end, such that we leak a partially constructed&&&&object outside visit_type_FOO(). As no one outside the testsuite&&&&was actually relying on these semantics, it is cleaner to just&&&&document and guarantee that ALL pointer-based visit_type_FOO()&&&&functions always leave a safe value in *obj during an input visitor&&&&(either the new object on success, or NULL if an error is&&&&encountered), so callers can now unconditionally use&&&&qapi_free_FOO() to clean up regardless of whether an error occurred.&&&&&&&&The decision is done by adding visit_is_input(), then updating the&&&&generated code to check if additional cleanup is needed based on&&&&the type of visitor in use.&&&&&&&&Note that we still leave *obj unchanged after a scalar-based&&&&visit_type_FOO(); I did not feel like auditing all uses of&&&&visit_type_Enum() to see if the callers would tolerate a specific&&&&sentinel value (not to mention having to decide whether it would&&&&be better to use 0 or ENUM__MAX as that sentinel).&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1461879932-9020-25-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," nbd: Don't mishandle unaligned client requests The NBD protocol does not (yet) force any alignment constraints&&&&on clients.  Even though qemu NBD clients always send requests&&&&that are aligned to 512 bytes, we must be prepared for non-qemu&&&&clients that don't care about alignment (even if it means they&&&&are less efficient).  Our use of blk_read() and blk_write() was&&&&silently operating on the wrong file offsets when the client&&&&made an unaligned request, corrupting the client's data (but&&&&as the client already has control over the file we are serving,&&&&I don't think it is a security hole, per se, just a data&&&&corruption bug).&&&&&&&&Note that in the case of NBD_CMD_READ, an unaligned length could&&&&cause us to return up to 511 bytes of uninitialized trailing&&&&garbage from blk_try_blockalign() - hopefully nothing sensitive&&&&from the heap's prior usage is ever leaked in that manner.&&&&&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Tested-by: Kevin Wolf <kwolf@redhat.com>&&&&Message-id: 1461249750-31928-1-git-send-email-eblake@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, hostmem-file: plug a small leak Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1460566660-19241-1-git-send-email-marcandre.lureau@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& 
1," migration: add support for encrypting data with TLS This extends the migration_set_incoming_channel and&&&&migration_set_outgoing_channel methods so that they&&&&will automatically wrap the QIOChannel in a&&&&QIOChannelTLS instance if TLS credentials are configured&&&&in the migration parameters.&&&&&&&&This allows TLS to work for tcp, unix, fd and exec&&&&migration protocols. It does not (currently) work for&&&&RDMA since it does not use these APIs, but it is&&&&unlikely that TLS would be desired with RDMA anyway&&&&since it would degrade the performance to that seen&&&&with TCP defeating the purpose of using RDMA.&&&&&&&&On the target host, QEMU would be launched with a set&&&&of TLS credentials for a server endpoint&&&&&&&& $ qemu-system-x86_64 -monitor stdio -incoming defer \&&&&    -object tls-creds-x509,dir=/home/berrange/security/qemutls,endpoint=server,id=tls0 \&&&&    ...other args...&&&&&&&&To enable incoming TLS migration 2 monitor commands are&&&&then used&&&&&&&&  (qemu) migrate_set_str_parameter tls-creds tls0&&&&  (qemu) migrate_incoming tcp:myhostname:9000&&&&&&&&On the source host, QEMU is launched in a similar&&&&manner but using client endpoint credentials&&&&&&&& $ qemu-system-x86_64 -monitor stdio \&&&&    -object tls-creds-x509,dir=/home/berrange/security/qemutls,endpoint=client,id=tls0 \&&&&    ...other args...&&&&&&&&To enable outgoing TLS migration 2 monitor commands are&&&&then used&&&&&&&&  (qemu) migrate_set_str_parameter tls-creds tls0&&&&  (qemu) migrate tcp:otherhostname:9000&&&&&&&&Thanks to earlier improvements to error reporting,&&&&TLS errors can be seen 'info migrate' when doing a&&&&detached migration. For example:&&&&&&&&  (qemu) info migrate&&&&  capabilities: xbzrle: off rdma-pin-all: off auto-converge: off zero-blocks: off compress: off events: off x-postcopy-ram: off&&&&  Migration status: failed&&&&  total time: 0 milliseconds&&&&  error description: TLS handshake failed: The TLS connection was non-properly terminated.&&&&&&&&Or&&&&&&&&  (qemu) info migrate&&&&  capabilities: xbzrle: off rdma-pin-all: off auto-converge: off zero-blocks: off compress: off events: off x-postcopy-ram: off&&&&  Migration status: failed&&&&  total time: 0 milliseconds&&&&  error description: Certificate does not match the hostname localhost&&&&&&&&Reviewed-by: Dr. David Alan Gilbert <dgilbert@redhat.com>&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Message-Id: <1461751518-12128-27-git-send-email-berrange@redhat.com>&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
1," virtio-scsi: fix disabled mode Add two missing checks for s->dataplane_fenced.  In one case, QEMU&&&&would skip injecting an IRQ due to a write to an uninitialized&&&&EventNotifier's file descriptor.&&&&&&&&In the second case, the dataplane_disabled field was used by mistake;&&&&in fact after fixing this occurrence it is completely unused.&&&&&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, pc-bios/s390-ccw: virtio_panic -> panic This function has nothing to do with virtio.&&&&&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Reviewed-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Eugene (jno) Dvurechenski <jno@linux.vnet.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& 
1," ivshmem: Plug leaks on unplug, fix peer disconnect close_peer_eventfds() cleans up three things: ioeventfd triggers if&&&&they exist, eventfds, and the array to store them.&&&&&&&&Commit 98609cd (v1.2.0) fixed it not to clean up ioeventfd triggers&&&&when they don't exist (property ioeventfd=off, which is the default).&&&&Unfortunately, the fix also made it skip cleanup of the eventfds and&&&&the array then.  This is a memory and file descriptor leak on unplug.&&&&&&&&Additionally, the reset of nb_eventfds is skipped.  Doesn't matter on&&&&unplug.  On peer disconnect, however, this permanently wedges the&&&&interrupt vectors used for that peer's ID.  The eventfds stay behind,&&&&but aren't connected to a peer anymore.  When the ID gets recycled for&&&&a new peer, the new peer's eventfds get assigned to vectors after the&&&&old ones.  Commonly, the device's number of vectors matches the&&&&server's, so the new ones get dropped with a ""Too many eventfd&&&&received"" message.  Interrupts either don't work (common case) or go&&&&to the wrong vector.&&&&&&&&Fix by narrowing the conditional to just the ioeventfd trigger&&&&cleanup.&&&&&&&&While there, move the ""invalid"" peer check to the only caller where it&&&&can actually happen, and tighten it to reject own ID.&&&&&&&&Cc: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Message-Id: <1458066895-20632-25-git-send-email-armbru@redhat.com>&&&& "
1, block: Fix memory leak in hmp_drive_add_node() hmp_drive_add_node() leaked qdict in the error path when no node-name is&&&&specified.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& 
1," io: stronger check for support for IPv4/6 Instead of just checking for bind(), also check whether&&&&getaddrinfo can resolve IPv6 addresses. This catches&&&&failure when travis runs QEMU builds inside minimal&&&&docker containers&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&& "
1," migration (ordinary): move bdrv_invalidate_cache_all of of coroutine context There is a possibility to hit an assert in qcow2_get_specific_info that&&&&s->qcow_version is undefined. This happens when VM in starting from&&&&suspended state, i.e. it processes incoming migration, and in the same&&&&time 'info block' is called.&&&&&&&&The problem is that qcow2_invalidate_cache() closes the image and&&&&memset()s BDRVQcowState in the middle.&&&&&&&&The patch moves processing of bdrv_invalidate_cache_all out of&&&&coroutine context for standard migration to avoid that.&&&&&&&&Signed-off-by: Denis V. Lunev <den@openvz.org>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&CC: Paolo Bonzini <pbonzini@redhat.com>&&&&CC: Juan Quintela <quintela@redhat.com>&&&&CC: Amit Shah <amit.shah@redhat.com>&&&&Message-Id: <1456304019-10507-2-git-send-email-den@openvz.org>&&&&&&&&[Amit: Fix a use-after-free bug]&&&&&&&&Signed-off-by: Amit Shah <amit.shah@redhat.com>&&&& "
1," qga: fix off-by-one length check Laszlo Ersek said: ""The length check is off by one (in the safe direction); it&&&&should be (nchars >= 2). The processing should be active for the wide string&&&&L""\r\n"" -- resulting in the empty wide string --, I believe.""&&&&&&&&Reported-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," usb: add pid check at the first of uhci_handle_td() pid can be gotten from uhci device memory in uhci_handle_td(),&&&&so the guest can trigger assert qemu if we get an invalid pid.&&&&And the uhci spec 2.1.2 tells us The Host Controller sets Host&&&&Controller Process Error bit to 1 when it detects a fatal error&&&&and indicates that the Host Controller suffered a consistency&&&&check failure while processing a Transfer Descriptor. An example&&&&of a consistency check failure would be finding an illegal PID&&&&field while processing the packet header portion of the TD.&&&&When this error occurs, the Host Controller clears the Run/Stop&&&&bit in the Command register to prevent further schedule execution.&&&&&&&&We'd better to set UHCI_STS_HCPERR and kick an interrupt, check&&&&the pid value at the first of uhci_handle_td function.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=1070027&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Message-id: 1455867238-4720-1-git-send-email-arei.gonglei@huawei.com&&&&&&&&[ applied minor codestyle fix ]&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," usb: check USB configuration descriptor object When processing remote NDIS control message packets, the USB Net&&&&device emulator checks to see if the USB configuration descriptor&&&&object is of RNDIS type(2). But it does not check if it is null,&&&&which leads to a null dereference error. Add check to avoid it.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Message-id: 1455188480-14688-1-git-send-email-ppandit@redhat.com&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," libqos: remove some leaks qpci_device_find() returns allocated data, don't leak it.&&&&&&&&Signed-off-by: Marc-Andr茅 Lureau <marcandre.lureau@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1, nbd-server: do not exit on failed memory allocation The amount of memory allocated in nbd_co_receive_request is driven by the&&&&NBD client (possibly a virtual machine).  Parallel I/O can cause the&&&&server to allocate a large amount of memory; check for failures and&&&&return ENOMEM in that case.&&&&&&&&Cc: qemu-block@nongnu.org&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1, net/dump: fix nfds->filename leak Cc: Jason Wang <jasowang@redhat.com>&&&&Signed-off-by: Li Zhijian <lizhijian@cn.fujitsu.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& 
1," net: vmxnet3: avoid memory leakage in activate_device Vmxnet3 device emulator does not check if the device is active&&&&before activating it, also it did not free the transmit & receive&&&&buffers while deactivating the device, thus resulting in memory&&&&leakage on the host. This patch fixes both these issues to avoid&&&&host memory leakage.&&&&&&&&Reported-by: Qinghao Tang <luodalongde@gmail.com>&&&&Reviewed-by: Dmitry Fleytman <dmitry@daynix.com>&&&&Signed-off-by: Prasad J Pandit <pjp@fedoraproject.org>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& "
1," mirror: Error out when a BDS would get two BBs bdrv_replace_in_backing_chain() asserts that not both old and new&&&&BlockDdriverState have a BlockBackend attached to them because both&&&&would have to end up pointing to the new BDS and we don't support more&&&&than one BB per BDS yet.&&&&&&&&Before we can safely allow references to existing nodes as backing&&&&files, we need to make sure that even if a backing file has a BB on it,&&&&this doesn't crash qemu.&&&&&&&&There are probably also some cases with the 'replaces' option set where&&&&drive-mirror could fail this assertion today. They are fixed with this&&&&error check as well.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&& "
1, pcnet: fix rx buffer overflow(CVE-2015-7512) Backends could provide a packet whose length is greater than buffer&&&&size. Check for this and truncate the packet to avoid rx buffer&&&&overflow in this case.&&&&&&&&Cc: Prasad J Pandit <pjp@fedoraproject.org>&&&&Cc: qemu-stable@nongnu.org&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&& 
1," crypto: avoid two coverity false positive error reports In qcrypto_tls_creds_get_path() coverity complains that&&&&we are checking '*creds' for NULL, despite having&&&&dereferenced it previously. This is harmless bug due&&&&to fact that the trace call was too early. Moving it&&&&after the cleanup gets the desired semantics.&&&&&&&&In qcrypto_tls_creds_check_cert_key_purpose() coverity&&&&complains that we're passing a pointer to a previously&&&&free'd buffer into gnutls_x509_crt_get_key_purpose_oid()&&&&This is harmless because we're passing a size == 0, so&&&&gnutls won't access the buffer, but rather just report&&&&what size it needs to be. We can avoid it though by&&&&explicitly setting the buffer to NULL after free'ing&&&&it.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," raw-posix.c: Make GetBSDPath() handle caching options Add support for caching options that can be specified from the command&&&&line.&&&&&&&&The CD-ROM raw char device bypasses the host page cache and therefore&&&&has alignment requirements.  Alignment probing is necessary so only use&&&&the raw char device if BDRV_O_NOCACHE is set.&&&&&&&&This patch fixes -cdrom /dev/cdrom on Mac OS X hosts, where bdrv_read()&&&&used to fail due to misaligned requests during image format probing.&&&&&&&&Signed-off-by: John Arbuckle <programmingkidx@gmail.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," atapi: Prioritize unknown cmd error over BCL error If we don't know about the command at all, we need to prioritize&&&&that failure above the zero byte-count-limit failure.&&&&&&&&This fixes a failure in the sparc64 NetBSD 7.0 installer bootup.&&&&&&&&Reported-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Tested-by: Mark Cave-Ayland <mark.cave-ayland@ilande.co.uk>&&&&Message-id: 1447095959-10046-3-git-send-email-jsnow@redhat.com&&&& "
1, block: Add statistics for failed and invalid I/O operations This patch adds the block_acct_failed() and block_acct_invalid()&&&&functions to allow keeping track of failed and invalid I/O operations.&&&&&&&&The number of failed and invalid operations is exposed in&&&&BlockDeviceStats.&&&&&&&&We don't keep track of the time spent on invalid operations because&&&&they are cancelled immediately when they are started.&&&&&&&&Signed-off-by: Alberto Garcia <berto@igalia.com>&&&&Message-id: a7256ccb883a86356b1c6c46b5a29ed5448546a5.1446044837.git.berto@igalia.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," iotests: 124 - transactional failure test Use a transaction to request an incremental backup across two drives.&&&&Coerce one of the jobs to fail, and then re-run the transaction.&&&&&&&&Verify that no bitmap data was lost due to the partial transaction&&&&failure.&&&&&&&&To support the 'err-cancel' QMP argument name it's necessary for&&&&transaction_action() to convert underscores in Python argument names&&&&to hyphens for QMP argument names.&&&&&&&&Signed-off-by: John Snow <jsnow@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1446765200-3054-14-git-send-email-jsnow@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, qobject: Protect against use-after-free in qobject_decref() Adding an assertion to qobject_decref() will ensure that a&&&&programming error causing use-after-free will result in&&&&immediate failure (provided no other thread has started&&&&using the memory) instead of silently attempting to wrap&&&&refcnt around and leaving the problem to potentially bite&&&&later at a harder point to diagnose.&&&&&&&&Suggested-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Eric Blake <eblake@redhat.com>&&&&Message-Id: <1446791754-23823-4-git-send-email-eblake@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&& 
1," xen: Switch uses of xc_map_foreign_{pages,bulk} to use libxenforeignmemory API. In Xen 4.7 we are refactoring parts libxenctrl into a number of&&&&separate libraries which will provide backward and forward API and ABI&&&&compatiblity.&&&&&&&&One such library will be libxenforeignmemory which provides access to&&&&privileged foreign mappings and which will provide an interface&&&&equivalent to xc_map_foreign_{pages,bulk}.&&&&&&&&The new xenforeignmemory_map() function behaves like&&&&xc_map_foreign_pages() when the err argument is NULL and like&&&&xc_map_foreign_bulk() when err is non-NULL, which maps into the shim&&&&here onto checking err == NULL and calling the appropriate old&&&&function.&&&&&&&&Note that xenforeignmemory_map() takes the number of pages before the&&&&arrays themselves, in order to support potentially future use of&&&&variable-length-arrays in the prototype (in the future, when Xen's&&&&baseline toolchain requirements are new enough to ensure VLAs are&&&&supported).&&&&&&&&In preparation for adding support for libxenforeignmemory add support&&&&to the <=4.0 and <=4.6 compat code in xen_common.h to allow us to&&&&switch to using the new API. These shims will disappear for versions&&&&of Xen which include libxenforeignmemory.&&&&&&&&Since libxenforeignmemory will have its own handle type but for <= 4.6&&&&the functionality is provided by using a libxenctrl handle we&&&&introduce a new global xen_fmem alongside the existing xen_xc. In fact&&&&we make xen_fmem a pointer to the existing xen_xc, which then works&&&&correctly with both <=4.0 (xc handle is an int) and <=4.6 (xc handle&&&&is a pointer). In the latter case xen_fmem is actually a double&&&&indirect pointer, but it all falls out in the wash.&&&&&&&&Unlike libxenctrl libxenforeignmemory has an explicit unmap function,&&&&rather than just specifying that munmap should be used, so the unmap&&&&paths are updated to use xenforeignmemory_unmap, which is a shim for&&&&munmap on these versions of xen. The mappings in xen-hvm.c do not&&&&appear to be unmapped (which makes sense for a qemu-dm process)&&&&&&&&In fb_disconnect this results in a change from simply mmap over the&&&&existing mapping (with an implicit munmap) to expliclty unmapping with&&&&xenforeignmemory_unmap and then mapping the required anonymous memory&&&&in the same hole. I don't think this is a problem since any other&&&&thread which was racily touching this region would already be running&&&&the risk of hitting the mapping halfway through the call. If this is&&&&thought to be a problem then we could consider adding an extra API to&&&&the libxenforeignmemory interface to replace a foreign mapping with&&&&anonymous shared memory, but I'd prefer not to.&&&&&&&&Signed-off-by: Ian Campbell <ian.campbell@citrix.com>&&&&Reviewed-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Signed-off-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&& "
1," qga: Use g_new() & friends where that makes obvious sense g_new(T, n) is neater than g_malloc(sizeof(T) * n).  It's also safer,&&&&for two reasons.  One, it catches multiplication overflowing size_t.&&&&Two, it returns T * rather than void *, which lets the compiler catch&&&&more type errors.&&&&&&&&This commit only touches allocations with size arguments of the form&&&&sizeof(T).  Same Coccinelle semantic patch as in commit b45c03f.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&& "
1," fw_cfg: document fw_cfg_modify_iXX() update functions Document the behavior of fw_cfg_modify_iXX() for leak-less updating&&&&of integer-type blobs.&&&&&&&&Currently only fw_cfg_modify_i16() is coded, but 32- and 64-bit versions&&&&may be added later if necessary..&&&&&&&&Signed-off-by: Gabriel Somlo <somlo@cmu.edu>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," Revert ""qdev: Use qdev_get_device_class() for -device <type>,help"" This reverts commit 31bed5509dfcbdfc293154ce81086a4dbd7a80b6.&&&&&&&&The reverted commit changed qdev_device_help() to reject abstract&&&&devices and devices that have cannot_instantiate_with_device_add_yet&&&&set, to fix crash bugs like -device x86_64-cpu,help.&&&&&&&&Rejecting abstract devices makes sense: they're purely internal, and&&&&the implementation of the help feature can't cope with them.&&&&&&&&Rejecting non-pluggable devices makes less sense: even though you&&&&can't use them with -device, the help may still be useful elsewhere,&&&&for instance with -global.  This is a regression: -device FOO,help&&&&used to help even for FOO that aren't pluggable.&&&&&&&&The previous two commits fixed the crash bug at a lower layer, so&&&&reverting this one is now safe.  Fixes the -device FOO,help&&&&regression, except for the broken devices marked&&&&cannot_even_create_with_object_new_yet.  For those, the error message&&&&is improved.&&&&&&&&Example of a device where the regression is fixed:&&&&&&&&    $ qemu-system-x86_64 -device PIIX4_PM,help&&&&    PIIX4_PM.command_serr_enable=bool (on/off)&&&&    PIIX4_PM.multifunction=bool (on/off)&&&&    PIIX4_PM.rombar=uint32&&&&    PIIX4_PM.romfile=str&&&&    PIIX4_PM.addr=int32 (Slot and optional function number, example: 06.0 or 06)&&&&    PIIX4_PM.memory-hotplug-support=bool&&&&    PIIX4_PM.acpi-pci-hotplug-with-bridge-support=bool&&&&    PIIX4_PM.s4_val=uint8&&&&    PIIX4_PM.disable_s4=uint8&&&&    PIIX4_PM.disable_s3=uint8&&&&    PIIX4_PM.smb_io_base=uint32&&&&&&&&Example of a device where it isn't fixed:&&&&&&&&    $ qemu-system-x86_64 -device host-x86_64-cpu,help&&&&    Can't list properties of device 'host-x86_64-cpu'&&&&&&&&Both failed with ""Parameter 'driver' expects pluggable device type""&&&&before.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Message-Id: <1443689999-12182-11-git-send-email-armbru@redhat.com>&&&& "
1," exec: allocate PROT_NONE pages on top of RAM This inserts a read and write protected page between RAM and QEMU&&&&memory, for file-backend RAM.&&&&This makes it harder to exploit QEMU bugs resulting from buffer&&&&overflows in devices using variants of cpu_physical_memory_map,&&&&dma_memory_map etc.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&&&&&&&&& "
1," qemu-char: Use g_new() & friends where that makes obvious sense g_new(T, n) is neater than g_malloc(sizeof(T) * n).  It's also safer,&&&&for two reasons.  One, it catches multiplication overflowing size_t.&&&&Two, it returns T * rather than void *, which lets the compiler catch&&&&more type errors.&&&&&&&&This commit only touches allocations with size arguments of the form&&&&sizeof(T).  Same Coccinelle semantic patch as in commit b45c03f.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-Id: <1442231643-23630-1-git-send-email-armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," crypto: introduce new module for TLS x509 credentials Introduce a QCryptoTLSCredsX509 class which is used to&&&&manage x509 certificate TLS credentials. This will be&&&&the preferred credential type offering strong security&&&&characteristics&&&&&&&&Example CLI configuration:&&&&&&&& $QEMU -object tls-creds-x509,id=tls0,endpoint=server,\&&&&               dir=/path/to/creds/dir,verify-peer=yes&&&&&&&&The 'id' value in the -object args will be used to associate the&&&&credentials with the network services. For example, when the VNC&&&&server is later converted it would use&&&&&&&& $QEMU -object tls-creds-x509,id=tls0,.... \&&&&       -vnc 127.0.0.1:1,tls-creds=tls0&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," pci: Fix pci_device_iommu_address_space() bus propagation he current code walks up the bus tree for an iommu, however it passes&&&&to the iommu_fn() callback the bus/devfn of the immediate child of&&&&the level where the callback was found, rather than the original&&&&bus/devfn where the search started from.&&&&&&&&This prevents iommu's like POWER8 (and in fact also Q35) to properly&&&&provide an address space for a subset of devices that aren't immediate&&&&children of the iommu.&&&&&&&&PCIe carries the originator bdfn acccross to the iommu on all DMA&&&&transactions, so we must be able to properly identify devices at all&&&&levels.&&&&&&&&This changes the function pci_device_iommu_address_space() to pass&&&&the original pointers to the iommu_fn() callback instead.&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&&&&&&&&& "
1," rtl8139: check IP Header Length field (CVE-2015-5165) The IP Header Length field was only checked in the IP checksum case, but&&&&is used in other cases too.&&&&&&&&Reported-by: 鏈变笢娴?鍚矾) <donghai.zdh@alibaba-inc.com>&&&&Reviewed-by: Jason Wang <jasowang@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," acpi: avoid potential uninitialized access to cpu_hp_io_base When building QEMU with Mingw64 toolchain I see a warning&&&&&&&& CC    x86_64-softmmu/hw/i386/acpi-build.o&&&&  hw/i386/acpi-build.c: In function 'acpi_build':&&&&  hw/i386/acpi-build.c:1138:9: warning: 'pm.cpu_hp_io_base' may be used uninitialized in this function [-Wmaybe-uninitialized]&&&&           aml_append(crs,&&&&           ^&&&&  hw/i386/acpi-build.c:1666:16: note: 'pm.cpu_hp_io_base' was declared here&&&&       AcpiPmInfo pm;&&&&                  ^&&&&&&&&In acpi_get_pm_info() some of the fields are pre-initialized&&&&to 0, but this one was missed.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Reviewed-by: Igor Mammedov <imammedo@redhat.com>&&&& "
1, block: qemu-iotests - add check for multiplication overflow in vpc This checks that VPC is able to successfully fail (without segfault)&&&&on an image file with a max_table_entries that exceeds 0x40000000.&&&&&&&&This table entry is within the valid range for VPC (although too large&&&&for this sample image).&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," memory: fix refcount leak in memory_region_present memory_region_present() leaks a reference to a MemoryRegion in the&&&&case ""mr == container"".  While fixing it, avoid reference counting&&&&altogether for memory_region_present(), by using RCU only.&&&&&&&&The return value could in principle be already invalid immediately&&&&after memory_region_present returns, but presumably the caller knows&&&&that and it's using memory_region_present to probe for devices that&&&&are unpluggable, or something like that.  The RCU critical section&&&&is needed anyway, because it protects as->current_map.&&&&&&&&Reported-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," tci: Fix compile failure by including qemu-common.h Compilation of TCI was accidentally broken by the recent disassembler&&&&changes:&&&&&&&&  CC    x86_64-softmmu/arch_init.o&&&&In file included from target-i386/cpu-qom.h:23:0,&&&&                 from target-i386/cpu.h:986,&&&&                 from include/qemu-common.h:122,&&&&                 from include/disas/bfd.h:12,&&&&                 from disas/tci.c:20:&&&&include/qom/cpu.h:178:43: error: unknown type name 鈥榙isassemble_info鈥?&&&     void (*disas_set_info)(CPUState *cpu, disassemble_info *info);&&&&                                           ^&&&&include/qom/cpu.h:179:1: error:&&&&no semicolon at end of struct or union [-Werror]&&&& } CPUClass;&&&& ^&&&&cc1: all warnings being treated as errors&&&&&&&&The underlying cause of this is an include loop:&&&& bfd.h -> qemu-common.h -> target-arm/cpu.h ->  target-arm/cpu-qom.h&&&&  -> qom/cpu.h -> bfd.h&&&&&&&&which means that if bfd.h is included first then qom/cpu.h doesn't&&&&get the definition of the disassemble_info type that it wanted.&&&&The easiest fix for this is to include qemu-common.h from tci.c&&&&before including disas/bfd.h.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1, rdma: Fix qemu crash when IPv6 address is used for migration Qemu crashes when IPv6 address is specified for migration and access&&&&to any RDMA uverbs device available on the system is blocked using cgroups.&&&&Fix the crash by checking the return value of ibv_open_device routine.&&&&&&&&Signed-off-by: Meghana Cheripady <meghana.cheripady@avagotech.com>&&&&Signed-off-by: Padmanabh Ratnakar <padmanabh.ratnakar@avagotech.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& 
1," net/dump: Improve -net/host_net_add dump error reporting When -net dump fails, it first reports a specific error, then a&&&&generic one, like this:&&&&&&&&    $ qemu-system-x86_64 -net dump,id=foo,file=/eperm&&&&    qemu-system-x86_64: -net dump,id=foo,file=/eperm: -net dump: can't open /eperm&&&&    qemu-system-x86_64: -net dump,id=foo,file=/eperm: Device 'dump' could not be initialized&&&&&&&&Convert net_init_tap() to Error.  This suppresses the unwanted second&&&&message.&&&&&&&&Improve the error messages to include strerror(errno) where&&&&appropriate.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1431691143-1015-5-git-send-email-armbru@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," CVE-2015-1779: limit size of HTTP headers from websockets clients The VNC server websockets decoder will read and buffer data from&&&&websockets clients until it sees the end of the HTTP headers,&&&&as indicated by \r\n\r\n. In theory this allows a malicious to&&&&trick QEMU into consuming an arbitrary amount of RAM. In practice,&&&&because QEMU runs g_strstr_len() across the buffered header data,&&&&it will spend increasingly long burning CPU time searching for&&&&the substring match and less & less time reading data. So while&&&&this does cause arbitrary memory growth, the bigger problem is&&&&that QEMU will be burning 100% of available CPU time.&&&&&&&&A novnc websockets client typically sends headers of around&&&&512 bytes in length. As such it is reasonable to place a 4096&&&&byte limit on the amount of data buffered while searching for&&&&the end of HTTP headers.&&&&&&&&Signed-off-by: Daniel P. Berrange <berrange@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," rdma: Fix cleanup in error paths As part of commit e325b49a320b493cc5d69e263751ff716dc458fe,&&&&order in which resources are destroyed was changed for fixing&&&&a seg fault. Due to this change, CQ will never get destroyed as&&&&CQ should be destroyed after QP destruction. Seg fault is caused&&&&improper cleanup when connection fails. Fixing cleanup after&&&&connection failure and order in which resources are destroyed&&&&in qemu_rdma_cleanup() routine.&&&&&&&&Signed-off-by: Meghana Cheripady <meghana.cheripady@emulex.com>&&&&Signed-off-by: Padmanabh Ratnakar <padmanabh.ratnakar@emulex.com>&&&&Signed-off-by: Juan Quintela <quintela@redhat.com>&&&& "
1," virtio: Fix memory leaks reported by Coverity All four leaks are similar, so fix them in one patch.&&&&Success path was not doing memory free.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& "
1," scsi: Improve error reporting for invalid drive property When setting ""realized"" fails, scsi_bus_legacy_add_drive() passes the&&&&error to qerror_report_err(), then returns an unspecific ""Setting&&&&drive property failed"" error, which is reported further up the call&&&&chain.&&&&&&&&Example:&&&&&&&&    $ qemu-system-x86_64 -nodefaults -S -display none \&&&&    > -drive if=scsi,id=foo,file=tmp.qcow2 -global isa-fdc.driveA=foo&&&&    qemu-system-x86_64: -drive if=scsi,id=foo,file=tmp.qcow2: Property 'scsi-disk.drive' can't take value 'foo', it's in use&&&&    qemu-system-x86_64: Setting drive property failed&&&&    qemu-system-x86_64: Initialization of device lsi53c895a failed: Device initialization failed&&&&&&&&Clean up the obvious way: simply return the original error to the&&&&caller.  Gets rid of the second message in the above error cascade.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&&Message-Id: <1425925048-15482-4-git-send-email-armbru@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," coroutine: Fix use after free with qemu_coroutine_yield() Instead of using the same function for entering and exiting coroutines,&&&&and hoping that it doesn't add any functionality that hurts with the&&&&parameters used for exiting, we can just directly call into the real&&&&task switch in qemu_coroutine_switch().&&&&&&&&This fixes a use-after-free scenario where reentering a coroutine that&&&&has yielded still accesses the old parent coroutine (which may have&&&&meanwhile terminated) in the part of coroutine_swap() that follows&&&&qemu_coroutine_switch().&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," block: Switch to host monotonic clock for IO throttling Currently, throttle timers won't make any progress when VCPU is not&&&&running, which would stall the request queue in utils, qtest, vm&&&&suspending, and live migration, without special handling.&&&&&&&&Block jobs are confusingly inconsistent between with and without&&&&throttling: if user sets a bps limit, stops the vm, then start a block&&&&job, the block job will not make any progress; in contrary, if user&&&&unsets the bps limit, or if it's not set, the block job will run&&&&normally.&&&&&&&&After this patch, with the host clock, even if the VCPUs are stopped,&&&&the throttle queues will be processed.&&&&&&&&This patch also enables potential to add throttle to bdrv_drain_all.&&&&Currently all requests are drained immediately. In other words whenever&&&&it is called, IO throttling goes ineffective (examples: system reset,&&&&migration and many block job operations.). This is a loophole that guest&&&&could exploit. If we use the host clock, we can later just trust the&&&&nested poll. This could be done on top.&&&&&&&&Note that for qemu-iotests case 093, which uses qtest, we still keep vm&&&&clock so the script can control the clock stepping in order to be&&&&deterministic.&&&&&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Alberto Garcia <berto@igalia.com>&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Message-id: 1427268446-6426-1-git-send-email-famz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," ide/isa: Replace unchecked qdev_init() by qdev_init_nofail() isa_ide_init()'s callers don't check for failure.  isa_ide_init()&&&&looks like it could fail, but since isa_ide_realizefn() can't fail, it&&&&actually can't.  Replace its qdev_init() by qdev_init_nofail() to make&&&&it obvious.&&&&&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," leon3: Replace unchecked qdev_init() by qdev_init_nofail() grlib_irqmp_create(), grlib_gptimer_create() and&&&&grlib_apbuart_create() are helpers to create and realize GRLIB&&&&devices.  Their only caller leon3_generic_hw_init() doesn't check for&&&&failure.  Only the first can actually fail, and only when the caller&&&&fails to set up a pointer property, which is a programming error.&&&&&&&&Replace qdev_init() by qdev_init_nofail().&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Fabien Chouteau <chouteau@adacore.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1, vnc: fix coverity warning vnc_display_local_addr will not be called with an invalid display id.&&&&Add assert() to silence coverity warning about a null pointer dereference.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1, linux-user/elfload.c: Don't use _raw accessor functions The _raw accessor functions are an implementation detail that has&&&&leaked out to some callsites. Use get_user_u64() instead of ldq_raw().&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Message-id: 1421334118-3287-5-git-send-email-peter.maydell@linaro.org&&&& 
1, block/iscsi: fix uninitialized variable 'ret' was never initialized in the success path.&&&&&&&&Signed-off-by: Peter Wu <peter@lekensteyn.nl>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," target-arm/translate-a64: Fix wrong mmu_idx usage for LDT/STT The LDT/STT (load/store unprivileged) instruction decode was using&&&&the wrong MMU index value. This meant that instead of these insns&&&&being ""always access as if user-mode regardless of current privilege""&&&&they were ""always access as if kernel-mode regardless of current&&&&privilege"". This went unnoticed because AArch64 Linux doesn't use&&&&these instructions.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Greg Bellows <greg.bellows@linaro.org>&&&&Reviewed-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>&&&&---&&&&I'm not counting this as a security issue because I'm assuming&&&&nobody treats TCG guests as a security boundary (certainly I&&&&would not recommend doing so...)&&&& "
1," serial: only resample THR interrupt on rising edge of IER.THRI There is disagreement on whether LSR.THRE should be resampled when&&&&IER.THRI goes from 1 to 1.  Bochs only does it if IER.THRI goes from 0&&&&to 1; PCE does it even if IER.THRI is unchanged.  But the Windows driver&&&&seems to always go from 1 to 0 and back to 1, so do things in agreement&&&&with Bochs, because the handling of thr_ipending was reported in 2010&&&&(https://lists.gnu.org/archive/html/qemu-devel/2010-03/msg01914.html)&&&&as breaking DR-DOS Plus.&&&&&&&&Reported-by: Roy Tam <roytam@gmail.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," qcow2: Prevent numerical overflow In qcow2_alloc_cluster_offset(), *num is limited to&&&&INT_MAX >> BDRV_SECTOR_BITS by all callers. However, since remaining is&&&&of type uint64_t, we might as well cast *num to that type before&&&&performing the shift.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Fix for crash after migration in virtio-rng on bi-endian targets VirtIO devices now remember which endianness they're operating in in order&&&&to support targets which may have guests of either endianness, such as&&&&powerpc.  This endianness state is transferred in a subsection of the&&&&virtio device's information.&&&&&&&&With virtio-rng this can lead to an abort after a loadvm hitting the&&&&assert() in virtio_is_big_endian().  This can be reproduced by doing a&&&&migrate and load from file on a bi-endian target with a virtio-rng device.&&&&The actual guest state isn't particularly important to triggering this.&&&&&&&&The cause is that virtio_rng_load_device() calls virtio_rng_process() which&&&&accesses the ring and thus needs the endianness.  However,&&&&virtio_rng_process() is called via virtio_load() before it loads the&&&&subsections.  Essentially the ->load callback in VirtioDeviceClass should&&&&only be used for actually reading the device state from the stream, not for&&&&post-load re-initialization.&&&&&&&&This patch fixes the bug by moving the virtio_rng_process() after the call&&&&to virtio_load().  Better yet would be to convert virtio to use vmsd and&&&&have the virtio_rng_process() as a post_load callback, but that's a bigger&&&&project for another day.&&&&&&&&This is bugfix, and should be considered for the 2.2 branch.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Reviewed-by: Greg Kurz <gkurz@linux.vnet.ibm.com>&&&&Message-id: 1417067290-20715-1-git-send-email-david@gibson.dropbear.id.au&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," blockdev: acquire AioContext in eject, change, and block_passwd By acquiring the AioContext we avoid race conditions with the dataplane&&&&thread which may also be accessing the BlockDriverState.&&&&&&&&Fix up eject, change, and block_passwd in a single patch because&&&&qmp_eject() and qmp_change_blockdev() both call eject_device().  Also&&&&fix block_passwd while we're tackling a command that takes a block&&&&encryption password.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," cirrus: fix blit region check Issues:&&&& * Doesn't check pitches correctly in case it is negative.&&&& * Doesn't check width at all.&&&&&&&&Turn macro into functions while being at it, also factor out the check&&&&for one region which we then can simply call twice for src + dst.&&&&&&&&This is CVE-2014-8106.&&&&&&&&Reported-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1, virtio-net: fix unmap leak virtio_net_handle_ctrl() and other functions that process control vq&&&&request call iov_discard_front() which will shorten the iov. This will&&&&lead unmapping in virtqueue_push() leaks mapping.&&&&&&&&Fixes this by keeping the original iov untouched and using a temp variable&&&&in those functions.&&&&&&&&Cc: Wen Congyang <wency@cn.fujitsu.com>&&&&Cc: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Stefano Stabellini <stefano.stabellini@eu.citrix.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Message-id: 1417082643-23907-1-git-send-email-jasowang@redhat.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& 
1," target-mips: Correct the handling of writes to CP0.Status for MIPSr6 Correct these issues with the handling of CP0.Status for MIPSr6:&&&&&&&&* only ignore the bit pattern of 0b11 on writes to CP0.Status.KSU, that&&&&  is for processors that do implement Supervisor Mode, let the bit&&&&  pattern be written to CP0.Status.UM:R0 freely (of course the value&&&&  written to read-only CP0.Status.R0 will be discarded anyway); this is&&&&  in accordance to the relevant architecture specification[1],&&&&&&&&* check the newly written pattern rather than the current contents of&&&&  CP0.Status for the KSU bits being 0b11,&&&&&&&&* use meaningful macro names to refer to CP0.Status bits rather than&&&&  magic numbers.&&&&&&&&References:&&&&&&&&[1] ""MIPS Architecture For Programmers, Volume III: MIPS64 / microMIPS64&&&&    Privileged Resource Architecture"", MIPS Technologies, Inc., Document&&&&    Number: MD00091, Revision 6.00, March 31, 2014, Table 9.45 ""Status&&&&    Register Field Descriptions"", pp. 210-211.&&&&&&&&Signed-off-by: Maciej W. Rozycki <macro@codesourcery.com>&&&&Reviewed-by: Leon Alrae <leon.alrae@imgtec.com>&&&&Signed-off-by: Leon Alrae <leon.alrae@imgtec.com>&&&& "
1," pc: limit DIMM address and size to page aligned values When running in KVM mode, kvm_set_phys_mem() will silently&&&&fail if registered MemoryRegion address/size is not page&&&&aligned. Causing memory hotplug failure in guest.&&&&&&&&Mapping non aligned MemoryRegion in TCG mode 'works', but&&&&sane guest OS still expects page aligned memory module&&&&and fails to initialize it if it's not aligned.&&&&&&&&So do not allow non aligned (i.e. valid) address/size&&&&values for DIMM to avoid either KVM failure or guest&&&&issues caused by it.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, vnc: sanitize bits_per_pixel from the client bits_per_pixel that are less than 8 could result in accessing&&&&non-initialized buffers later in the code due to the expectation&&&&that bytes_per_pixel value that is used to initialize these buffers is&&&&never zero.&&&&&&&&To fix this check that bits_per_pixel from the client is one of the&&&&values that the rfb protocol specification allows.&&&&&&&&This is CVE-2014-7815.&&&&&&&&Signed-off-by: Petr Matousek <pmatouse@redhat.com>&&&&&&&&[ kraxel: apply codestyle fix ]&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1, virtio-scsi-dataplane: Add op blocker We need this to protect dataplane thread from race conditions with block&&&&jobs until the latter is made dataplane-safe.&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," s390x/kvm: propagate s390 cpu state to kvm Let QEMU propagate the cpu state to kvm. If kvm doesn't yet support it, it is&&&&silently ignored as kvm will still handle the cpu state itself in that case.&&&&&&&&The state is not synced back, thus kvm won't have a chance to actively modify&&&&the cpu state. To do so, control has to be given back to QEMU (which is already&&&&done so in all relevant cases).&&&&&&&&Setting of the cpu state can fail either because kvm doesn't support the&&&&interface yet, or because the state is invalid/not supported. Failed attempts&&&&will be traced&&&&&&&&Signed-off-by: David Hildenbrand <dahi@linux.vnet.ibm.com>&&&&Signed-off-by: Jens Freimann <jfrei@linux.vnet.ibm.com>&&&&Reviewed-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&CC: Andreas Faerber <afaerber@suse.de>&&&&Tested-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&&Signed-off-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&& "
1," qapi: Add corrupt field to ImageInfoSpecificQCow2 Just like lazy-refcounts, this field will be present iff the qcow2&&&&compat level is 1.1 (or probably any future revision).&&&&&&&&As expected, this breaks some tests due to the new field present in&&&&qemu-img info output; so fix their output accordingly.&&&&&&&&Suggested-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1412105489-7681-3-git-send-email-mreitz@redhat.com&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," monitor: Reset HMP mon->rs in CHR_EVENT_OPEN Commit cdaa86a54 (""Add G_IO_HUP handler for socket chardev"") exposed a bug in&&&&the way the HMP monitor handles its command buffer. When a client closes the&&&&connection to the monitor, tcp_chr_read() will detect the G_IO_HUP condition&&&&and call tcp_chr_disconnect() to close the server-side connection too. Due to&&&&the fact that monitor reads 1 byte at a time (for each tcp_chr_read()), the&&&&monitor readline state / buffers might contain junk (i.e. a half-finished&&&&command). Thus, without calling readline_restart() on mon->rs in&&&&CHR_EVENT_OPEN, future HMP commands will fail.&&&&&&&&Signed-off-by: Stratos Psomadakis <psomas@grnet.gr>&&&&Signed-off-by: Dimitris Aragiorgis <dimara@grnet.gr>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," qdev-monitor: fix segmentation fault on qdev_device_help() Normally, qmp_device_list_properties() may return NULL when&&&&a device haven't special properties excpet Object and DeviceState&&&&properties, such as virtio-balloon-device.&&&&&&&&We just need check local_err instead of prop_list.&&&&&&&&Example:&&&&&&&&Segmentation fault (core dumped)&&&&&&&&The backtrace as below:&&&&&&&&Program received signal SIGSEGV, Segmentation fault.&&&&0x00005555559af1a8 in error_get_pretty (err=0x0) at util/error.c:152&&&&152         return err->msg;&&&&(gdb) bt&&&&    func=0x55555574a6ca <device_help_func>, opaque=0x0, abort_on_failure=0) at util/qemu-option.c:1072&&&&&&&&Signed-off-by: Gonglei <arei.gonglei@huawei.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," async: aio_context_new(): Handle event_notifier_init failure On a system with a low limit of open files the initialization&&&&of the event notifier could fail and QEMU exits without printing any&&&&error information to the user.&&&&&&&&The problem can be easily reproduced by enforcing a low limit of open&&&&files and start QEMU with enough I/O threads to hit this limit.&&&&&&&&The same problem raises, without the creation of I/O threads, while&&&&QEMU initializes the main event loop by enforcing an even lower limit of&&&&open files.&&&&&&&&This commit adds an error message on failure:&&&&&&&& # qemu [...] -object iothread,id=iothread0 -object iothread,id=iothread1&&&& qemu: Failed to initialize event notifier: Too many open files in system&&&&&&&&Signed-off-by: Chrysostomos Nanakos <cnanakos@grnet.gr>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," vhost-scsi: init backend features earlier As vhost core can use backend_features during init, clear it earlier to&&&&avoid using uninitialized memory.&&&&This use would be harmless since vhost scsi ignores the result&&&&anyway, but initializing earlier will help prevent valgrind errors,&&&&and make scsi and net behave similarly.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Acked-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Acked-by: Jason Wang <jasowang@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1, fuzz: Add fuzzing functions for entries of refcount table and blocks Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Maria Kustova <maria.k@catit.be>&&&&Message-id: c9f4027b6f401c67e9d18f94aed29be445e81d48.1408450493.git.maria.k@catit.be&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," target-arm: Fix regression that disabled VFP for ARMv5 CPUs Commit 2c7ffc414 added support for honouring the CPACR coprocessor&&&&access control register bits which may disable access to VFP&&&&and Neon instructions. However it failed to account for the&&&&fact that the CPACR is only present starting from the ARMv6&&&&architecture version, so it accidentally disabled VFP completely&&&&for ARMv5 CPUs like the ARM926. Linux would detect this as&&&&""no VFP present"" and probably fall back to its own emulation,&&&&but other guest OSes might crash or misbehave.&&&&&&&&This fixes bug LP:1359930.&&&&&&&&Reported-by: Jakub Jermar <jakub@jermar.eu>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1408714940-7192-1-git-send-email-peter.maydell@linaro.org&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," block/quorum: add simple read pattern support This patch adds single read pattern to quorum driver and quorum vote is default&&&&pattern.&&&&&&&&For now we do a quorum vote on all the reads, it is designed for unreliable&&&&underlying storage such as non-redundant NFS to make sure data integrity at the&&&&cost of the read performance.&&&&&&&&For some use cases as following:&&&&&&&&        VM&&&&  --------------&&&&  |            |&&&&  v            v&&&&  A            B&&&&&&&&Both A and B has hardware raid storage to justify the data integrity on its own.&&&&So it would help performance if we do a single read instead of on all the nodes.&&&&Further, if we run VM on either of the storage node, we can make a local read&&&&request for better performance.&&&&&&&&This patch generalize the above 2 nodes case in the N nodes. That is,&&&&&&&&vm -> write to all the N nodes, read just one of them. If single read fails, we&&&&try to read next node in FIFO order specified by the startup command.&&&&&&&&The 2 nodes case is very similar to DRBD[1] though lack of auto-sync&&&&functionality in the single device/node failure for now. But compared with DRBD&&&&we still have some advantages over it:&&&&&&&&- Suppose we have 20 VMs running on one(assume A) of 2 nodes' DRBD backed&&&&storage. And if A crashes, we need to restart all the VMs on node B. But for&&&&practice case, we can't because B might not have enough resources to setup 20 VMs&&&&at once. So if we run our 20 VMs with quorum driver, and scatter the replicated&&&&images over the data center, we can very likely restart 20 VMs without any&&&&resource problem.&&&&&&&&After all, I think we can build a more powerful replicated image functionality&&&&on quorum and block jobs(block mirror) to meet various High Availibility needs.&&&&&&&&E.g, Enable single read pattern on 2 children,&&&&&&&&-drive driver=quorum,children.0.file.filename=0.qcow2,\&&&&children.1.file.filename=1.qcow2,read-pattern=fifo,vote-threshold=1&&&&&&&&[1] http://en.wikipedia.org/wiki/Distributed_Replicated_Block_Device&&&&&&&&[Dropped \n from an error_setg() error message&&&&--Stefan]&&&&&&&&Cc: Benoit Canet <benoit@irqsave.net>&&&&Cc: Eric Blake <eblake@redhat.com>&&&&Cc: Kevin Wolf <kwolf@redhat.com>&&&&Cc: Stefan Hajnoczi <stefanha@redhat.com>&&&&Signed-off-by: Liu Yuan <namei.unix@gmail.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," slirp/misc: Use the GLib memory allocation APIs Here we don't check the return value of malloc() which may fail.&&&&Use the g_new() instead, which will abort the program when&&&&there is not enough memory.&&&&&&&&Also, use g_strdup instead of strdup and remove the unnecessary&&&&strdup function.&&&&&&&&Signed-off-by: zhanghailiang <zhang.zhanghailiang@huawei.com>&&&&Reviewed-by: Alex Benn茅e <alex.bennee@linaro.org>&&&&Reviewed-by: Beno卯t Canet <benoit.canet@nodalink.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," block: iotest - update 084 to test static VDI image creation This updates the VDI corruption test to also test static VDI image&&&&creation, as well as the default dynamic image creation.&&&&&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Jeff Cody <jcody@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qemu-char: fix deadlock with ""-monitor pty"" qemu_chr_be_generic_open cannot be called with the write lock taken,&&&&because it calls client code that may call qemu_chr_fe_write.  This&&&&actually happens for the monitor:&&&&&&&&    0x00007ffff27dbf79 in __GI_raise (sig=sig@entry=6)&&&&    0x00007ffff27df388 in __GI_abort ()&&&&    0x00005555555ef489 in error_exit (err=<optimized out>, msg=msg@entry=0x5555559796d0 <__func__.5959> ""qemu_mutex_lock"")&&&&    0x00005555558f9080 in qemu_mutex_lock (mutex=mutex@entry=0x555556248a30)&&&&    0x0000555555713936 in qemu_chr_fe_write (s=0x555556248a30, buf=buf@entry=0x5555563d8870 ""QEMU 2.0.90 monitor - type 'help' for more information\r\n"", len=56)&&&&    0x00005555556217fd in monitor_flush_locked (mon=mon@entry=0x555556251fd0)&&&&    0x0000555555621a12 in monitor_flush_locked (mon=0x555556251fd0)&&&&    monitor_puts (mon=mon@entry=0x555556251fd0, str=0x55555634bfa7 """", str@entry=0x55555634bf70 ""QEMU 2.0.90 monitor - type 'help' for more information\n"")&&&&    0x0000555555624359 in monitor_vprintf (mon=0x555556251fd0, fmt=<optimized out>, ap=<optimized out>)&&&&    0x0000555555624414 in monitor_printf (mon=<optimized out>, fmt=fmt@entry=0x5555559105a0 ""QEMU %s monitor - type 'help' for more information\n"")&&&&    0x0000555555629806 in monitor_event (opaque=0x555556251fd0, event=<optimized out>)&&&&    0x000055555571343c in qemu_chr_be_generic_open (s=0x555556248a30)&&&&&&&&To avoid this, defer the call to an idle callback, which will be&&&&called as soon as the main loop is re-entered.  In order to simplify&&&&the cleanup and do it in one place only, change pty_chr_close to&&&&call pty_chr_state.&&&&&&&&To reproduce, run with ""-monitor pty"", then try to read from the&&&&slave /dev/pts/FOO that it creates.&&&&&&&&Fixes: 9005b2a7589540a3733b3abdcfbccfe7746cd1a1&&&&Reported-by: Li Liang <liangx.z.li@intel.com>&&&&Reviewed-by: Fam Zheng <famz@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," image-fuzzer: Reduce number of generator functions in __init__ Some issues can be found only when a fuzzed image has a partial structure,&&&&e.g. has L1/L2 tables but no refcount ones. Generation of an entirely&&&&defined image limits these cases. Now the Image constructor creates only&&&&a header and a backing file name (if any), other image elements are generated&&&&in the 'create_image' API.&&&&&&&&Signed-off-by: Maria Kustova <maria.k@catit.be>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, quorum: Add the rewrite-corrupted parameter to quorum On read operations when this parameter is set and some replicas are corrupted&&&&while quorum can be reached quorum will proceed to rewrite the correct version&&&&of the data to fix the corrupted replicas.&&&&&&&&This will shine with SSD where the FTL will remap the same block at another&&&&place on rewrite.&&&&&&&&Signed-off-by: Benoit Canet <benoit@irqsave.net>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," hw/arm/pxa2xx_gpio: Fix handling of GPSR/GPCR reads The PXA2xx GPIO GPSR and GPCR registers are write-only, with reads being&&&&undefined behaviour. Instead of having GPCR return 31337 and GPSR return&&&&the value last written, make both log the guest error and return 0.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&& "
1," pc-dimm: add busy address check and address auto-allocation - if 'addr' property is not specified on -device/device_add command,&&&&treat the default value as request for assigning PCDIMMDevice to&&&&the first free memory region.&&&&&&&&- if 'addr' is provided with -device/device_add command, attempt to&&&&use it or fail command if it's already occupied or falls inside&&&&of an existing PCDIMMDevice memory region.&&&&&&&&Note:&&&&GCompareFunc(a, b) used by g_slist_insert_sorted() returns 'gint',&&&&however it might be too small to fit difference between&&&&2 addresses. So use 128bit to calculate the difference and normalize&&&&result to -1/0/1 return values.&&&&&&&&Signed-off-by: Igor Mammedov <imammedo@redhat.com>&&&&Signed-off-by: Tang Chen <tangchen@cn.fujitsu.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Tested-by: Andrey Korolyov <andrey@xdel.ru>&&&&&&&&MST: commit log tweaks&&&& "
1," target-arm: Correct handling of UXN bit in ARMv8 LPAE page tables In v8 page tables bit 54 in the PTE is UXN in the EL0/EL1 translation regimes&&&&and XN elsewhere. In v7 the bit is always XN. Since we only emulate EL0/EL1 we&&&&can just treat this bit as UXN whenever we are in v8 mode.&&&&&&&&Also correctly extract the upper attributes from the PTE entry, the v8 version&&&&tried to avoid extracting the CONTIG bit and ended up with the upper bits being&&&&off-by-one. Instead behave the same as v7 and extract (but ignore) the CONTIG&&&&bit.&&&&&&&&This fixes ""Bad mode in Synchronous Abort handler detected, code 0x8400000f""&&&&seen when modprobing modules under Linux.&&&&&&&&Signed-off-by: Ian Campbell <ijc@hellion.org.uk>&&&&Cc: Peter Maydell <peter.maydell@linaro.org>&&&&Cc: Claudio Fontana <claudio.fontana@huawei.com>&&&&Cc: Rob Herring <robherring2@gmail.com>&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," bsd-user/mmap.c: Don't try to override g_malloc/g_free Trying to override the implementations of g_malloc and g_free is&&&&a really bad idea -- it means statically linked builds fail to&&&&link (because of the multiple definitions provided by this file&&&&and by glib), and non-statically linked builds segfault as soon&&&&as they try to do anything more complicated than printing the&&&&usage message. Remove these overridden versions and just use&&&&the glib ones.&&&&&&&&This is sufficient that bsd-user can run basic x86-64&&&&binaries on OpenBSD again; FreeBSD and NetBSD seem to have&&&&further issues.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Sean Bruno <sbruno@freebsd.org>&&&&Reviewed-by: Ed Maste <emaste@freebsd.org>&&&& "
1," target-ppc: Copy and split gen_spr_7xx() for 970 This stops using 7xx common SPRs init function and adds separate set&&&&of helpers for 970.&&&&&&&&This does not copy ICTC SPR as neither 970 manual nor PowerISA mention it.&&&&&&&&This defines 970/book3s PMU SPRs constants as they differs from the ones&&&&used for 7XX.&&&&&&&&This creates 2 helpers for PMU SPRs, one for supermode privileged SPRs and&&&&one for user privileged SPRs as ""sup"" versions can be shared across&&&&the family while ""user"" versions will behave different starting POWER8&&&&(which will be addressed later).&&&&&&&&This allows writing to Uxxxx SPRs from supermode. spr_write_ureg() is&&&&implemented for this as a copy of already existing spr_read_ureg().&&&&&&&&This allows writing to supervisor's SIAR - it used to be disabled&&&&when gen_spr_7xx() was used.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1, block/vvfat: Plug memory leak in check_directory_consistency() On error path.  Introduced in commit a046433a.  Spotted by Coverity.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," target-ppc: Add ""compat"" CPU option PowerISA defines a compatibility mode for server POWERPC CPUs which&&&&is supported by the PCR special register which is hypervisor privileged.&&&&To support this mode for guests, SPAPR defines a set of virtual PVRs,&&&&one per PowerISA spec version. When a hypervisor needs a guest to work in&&&&a compatibility mode, it puts a virtual PVR value into @cpu-version&&&&property of a CPU node.&&&&&&&&This introduces a ""compat"" CPU option which defines maximal compatibility&&&&mode enabled. The supported modes are power6/power7/power8.&&&&&&&&This does not change the existing behaviour, new property will be used&&&&by next patches.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," tcg: Use ""unspecified behavior"" for shifts Change the definition such that shifts are not allowed to crash&&&&for any input.&&&&&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
1," libcacard: fix wrong array expansion logic The currrent code in libcacard/vcard_emul_nss.c:vcard_emul_options()&&&&has a weird bug in variable usage around expanding opts->vreader&&&&array.&&&&&&&&There's a helper variable, vreaderOpt, which is first needlessly&&&&initialized to NULL, next, conditionally, only we have to expand&&&&opts->vreader, receives array expansion from g_renew(), and next,&&&&even if we don't actually perform expansion, the value of this&&&&variable is assigned to the actual array, opts->vreader, which&&&&was supposed to be expanded.&&&&&&&&So, since we expand the array by READER_STEP increments, only&&&&once in READER_STEP (=4) the code will work, in other 3/4 times&&&&it will fail badly.&&&&&&&&Fix this by not using this temp variable when expanding the&&&&array, and by dropping the useless =NULL initializer too -&&&&if it wasn't in place initially, compiler would have warned&&&&us about this problem at the beginning.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&& "
1," nbd: Use return values instead of error_is_set(errp) Using error_is_set(errp) to check whether a function call failed is&&&&fragile: it breaks when errp is null.  Check perfectly suitable return&&&&values instead when possible.  errp can't be null there now, but this&&&&is more robust and more obviously correct&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1, linux-user: fix getrusage and wait4 failures with invalid rusage struct Implementations of system calls getrusage and wait4 have not previously&&&&handled correctly cases when incorrect address of struct rusage is&&&&passed.&&&&This change makes sure return values are correctly set for these cases.&&&&&&&&Signed-off-by: Petar Jovanovic <petar.jovanovic@imgtec.com>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& 
1, target-arm: Implement AArch64 EL1 exception handling Implement exception handling for AArch64 EL1. Exceptions from AArch64 or&&&&AArch32 EL0 are supported.&&&&&&&&Signed-off-by: Rob Herring <rob.herring@linaro.org>&&&&[PMM: fixed minor style nits; updated to match changes in&&&& previous patches; added some of the simpler cases of&&&& illegal-exception-return support]&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Peter Crosthwaite <peter.crosthwaite@xilinx.com>&&&& 
1, qcow2: Fix types in qcow2_alloc_clusters and alloc_clusters_noref In order to avoid integer overflows.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& 
1," Revert ""qtest: Fix crash if SIGABRT during qtest_init()"" It turns out there are test cases that use multiple libqtest instances.&&&&We cannot use a global qtest instance in the SIGABRT handler.&&&&&&&&This reverts commit cb201b4872f16dfbce63f8648b2584631e2e965f.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Marcel Apfelbaum <marcel.a@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," configure: Make stack-protector test check both compile and link Since we use the -fstack-protector argument at both compile and&&&&link time in the build, we must check that it works with both&&&&a compile and a link:&&&& * MacOSX only fails in the compile step, not linking&&&& * some gcc cross environments only fail at the link stage (if they&&&&   require a libssp and it's not present for some reason)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1397232832-32301-1-git-send-email-peter.maydell@linaro.org&&&&Tested-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&& "
1," linux-user: Don't return uninitialized value for atomic_barrier syscall QEMU's implementation of the m68k atomic_barrier syscall, like the kernel's,&&&&is just a no-op. However we still need to return a result code from it.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Riku Voipio <riku.voipio@linaro.org>&&&& "
1," pl011: fix UARTRSR accesses corrupting the UARTCR value Offset 4 is UARTRSR/UARTECR, not the UARTCR. The UARTCR would be&&&&corrupted if the UARTRSR is ever written. Fix by implementing a correct&&&&model of the UARTRSR/UARTECR register. Reads of this register simply&&&&reflect the error bits in data register. Only breaks can be triggered in&&&&QEMU. With the pl011_can_receive function, we effectively have flow&&&&control between the host and the model. Framing and parity errors simply&&&&don't make sense in the model and will never occur.&&&&&&&&Signed-off-by: Rob Herring <rob.herring@linaro.org>&&&&Reviewed-by: Peter Maydell <peter.maydell@linaro.org>&&&&Message-id: 1395166721-15716-3-git-send-email-robherring2@gmail.com&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&& "
1," target-lm32: kill cpu_abort() calls Instead of killing QEMU, translate instructions which are not available on&&&&the CPU model as a noop and issue a log message at translation time.&&&&&&&&On the real hardware CPU unknown opcodes results in undefined behaviour.&&&&&&&&These changes prepare the removal of CPULM32State from DisasContext.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&&Reviewed-by: Andreas F盲rber <afaerber@suse.de>&&&& "
1," blockdev: Fail blockdev-add with encrypted images Encrypted images need a password before they can be used, and we don't&&&&want blockdev-add to create BDSes that aren't fully initialised. So for&&&&now simply forbid encrypted images; we can come back to it later if we&&&&need the functionality.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," elf-loader: add more return codes The existing load_elf() just returns -1 if it fails to load ELF. However&&&&it could be smarter than this and tell more about the failure such as&&&&wrong endianness or incompatible platform.&&&&&&&&This adds additional return codes for wrong architecture, wrong&&&&endianness and if the image is not ELF at all.&&&&&&&&This adds a load_elf_strerror() helper to convert return codes into&&&&string messages.&&&&&&&&This fixes handling of what load_elf() returns for s390x, other&&&&callers just check the return value for <0 and this remains unchanged.&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," s390x/ipl: Fix crash of ELF images with arbitrary entry points When loading S390 kernels, the current code expects an ELF file with the&&&&start address 0x10000. Other ELF files cause a segmentation fault. To avoid&&&&these crashes, we should get the start address from the ELF file instead&&&&of always using a hard-coded address.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Acked-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
1," s390x/virtio-hcall: Specification exception for illegal subcodes So far, the DIAG 500 hypervisor call was only setting -EINVAL in&&&&R2 when a guest tried to call this function with an illegal subcode.&&&&This patch now changes the behavior so that a specification exception&&&&is thrown instead, since this is the common behavior of other DIAG&&&&functions (and other CPU instructions) when being called with illegal&&&&parameters.&&&&&&&&Signed-off-by: Thomas Huth <thuth@linux.vnet.ibm.com>&&&&Reviewed-by: Cornelia Huck <cornelia.huck@de.ibm.com>&&&&Signed-off-by: Christian Borntraeger <borntraeger@de.ibm.com>&&&& "
1," target-lm32: stop VM on illegal or unknown instruction Instead of translating the instruction to a no-op, pause the VM and display&&&&a message to the user.&&&&&&&&As a side effect, this also works for instructions where the operands are&&&&only known at runtime.&&&&&&&&Signed-off-by: Michael Walle <michael@walle.cc>&&&& "
1," hw/9pfs: fix P9_STATS_GEN handling Currently we fail getattr request altogether if we can't read&&&&P9_STATS_GEN for some reason. It breaks valid use cases:&&&&&&&&E.g let's assume we have non-readable directory with execution bit set&&&&on host and we export it to client over 9p On host we can chdir into&&&&directory, but not open directory on read and list content.&&&&&&&&But if client will try to call getattr (as part of chdir(2)) for the&&&&directory it will fail with -EACCES. It happens because we try to open&&&&the directory on read to call ioctl(FS_IOC_GETVERSION), it fails and we&&&&return the error code to client.&&&&&&&&It's excessive. The solution is to make P9_STATS_GEN failure non-fatal&&&&for getattr request. Just don't set P9_STATS_GEN flag in result mask on&&&&failure.&&&&&&&&Signed-off-by: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& "
1," drive mirror:fix memory leak In the function mirror_iteration() -> qemu_iovec_init(),&&&&it allocates memory for op->qiov.iov, when the write request calls back,&&&&but in the function mirror_iteration_done(), it only frees the op,&&&&not free the op->qiov.iov, so this causes memory leak.&&&&&&&&It should use qemu_iovec_destroy() to free op->qiov.&&&&&&&&Signed-off-by: Zhang Min <rudy.zhangmin@huawei.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," softfloat: Only raise Invalid when conversions to int are out of range We implement a number of float-to-integer conversions using conversion&&&&to an integer type with a wider range and then a check against the&&&&narrower range we are actually converting to. If we find the result to&&&&be out of range we correctly raise the Invalid exception, but we must&&&&also suppress other exceptions which might have been raised by the&&&&conversion function we called.&&&&&&&&This won't throw away exceptions we should have preserved, because for&&&&the 'core' exception flags the IEEE spec mandates that the only valid&&&&combinations of exception that can be raised by a single operation are&&&&Inexact + Overflow and Inexact + Underflow. For the non-IEEE softfloat&&&&flag for input denormals, we can guarantee that that flag won't have&&&&been set for out of range float-to-int conversions because a squashed&&&&denormal by definition goes to plus or minus zero, which is always in&&&&range after conversion to integer zero.&&&&&&&&This bug has been fixed for some of the float-to-int conversion routines&&&&by previous patches; fix it for the remaining functions as well, so&&&&that they all restore the pre-conversion status flags prior to raising&&&&Invalid.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Reviewed-by: Richard Henderson <rth@twiddle.net>&&&& "
1," Python-lang gdb script to extract x86_64 guest vmcore from qemu coredump When qemu dies unexpectedly, for example in response to an explicit&&&&abort() call, or (more importantly) when an external signal is delivered&&&&to it that results in a coredump, sometimes it is useful to extract the&&&&guest vmcore from the qemu process' memory image. The guest vmcore might&&&&help understand an emulation problem in qemu, or help debug the guest.&&&&&&&&This script reimplements (and cuts many features of) the&&&&qmp_dump_guest_memory() command in gdb/Python,&&&&&&&&  https://sourceware.org/gdb/current/onlinedocs/gdb/Python-API.html&&&&&&&&working off the saved memory image of the qemu process. The docstring in&&&&the patch (serving as gdb help text) describes the limitations relative to&&&&the QMP command.&&&&&&&&Dependencies of qmp_dump_guest_memory() have been reimplemented as needed.&&&&I sought to follow the general structure, sticking to original function&&&&names where possible. However, keeping it simple prevailed in some places.&&&&&&&&The patch has been tested with a 4 VCPU, 768 MB, RHEL-6.4&&&&(2.6.32-358.el6.x86_64) guest:&&&&&&&&- The script printed&&&&&&&&> guest RAM blocks:&&&&> target_start     target_end       host_addr        message count&&&&> ---------------- ---------------- ---------------- ------- -----&&&&> 0000000000000000 00000000000a0000 00007f95d0000000 added       1&&&&> 00000000000a0000 00000000000b0000 00007f960ac00000 added       2&&&&> 00000000000c0000 00000000000ca000 00007f95d00c0000 added       3&&&&> 00000000000ca000 00000000000cd000 00007f95d00ca000 joined      3&&&&> 00000000000cd000 00000000000d0000 00007f95d00cd000 joined      3&&&&> 00000000000d0000 00000000000f0000 00007f95d00d0000 joined      3&&&&> 00000000000f0000 0000000000100000 00007f95d00f0000 joined      3&&&&> 0000000000100000 0000000030000000 00007f95d0100000 joined      3&&&&> 00000000fc000000 00000000fc800000 00007f960ac00000 added       4&&&&> 00000000fffe0000 0000000100000000 00007f9618800000 added       5&&&&> dumping range at 00007f95d0000000 for length 00000000000a0000&&&&> dumping range at 00007f960ac00000 for length 0000000000010000&&&&> dumping range at 00007f95d00c0000 for length 000000002ff40000&&&&> dumping range at 00007f960ac00000 for length 0000000000800000&&&&> dumping range at 00007f9618800000 for length 0000000000020000&&&&&&&&- The vmcore was checked with ""readelf"", comparing the results against a&&&&  vmcore written by qmp_dump_guest_memory():&&&&&&&&> --- theirs      2013-09-12 17:38:59.797289404 +0200&&&&> +++ mine        2013-09-12 17:39:03.820289404 +0200&&&&> @@ -27,16 +27,16 @@&&&&>    Type           Offset             VirtAddr           PhysAddr&&&&>                   FileSiz            MemSiz              Flags  Align&&&&>    NOTE           0x0000000000000190 0x0000000000000000 0x0000000000000000&&&&> -                 0x0000000000000ca0 0x0000000000000ca0         0&&&&> -  LOAD           0x0000000000000e30 0x0000000000000000 0x0000000000000000&&&&> +                 0x000000000000001c 0x000000000000001c         0&&&&> +  LOAD           0x00000000000001ac 0x0000000000000000 0x0000000000000000&&&&>                   0x00000000000a0000 0x00000000000a0000         0&&&&> -  LOAD           0x00000000000a0e30 0x0000000000000000 0x00000000000a0000&&&&> +  LOAD           0x00000000000a01ac 0x0000000000000000 0x00000000000a0000&&&&>                   0x0000000000010000 0x0000000000010000         0&&&&> -  LOAD           0x00000000000b0e30 0x0000000000000000 0x00000000000c0000&&&&> +  LOAD           0x00000000000b01ac 0x0000000000000000 0x00000000000c0000&&&&>                   0x000000002ff40000 0x000000002ff40000         0&&&&> -  LOAD           0x000000002fff0e30 0x0000000000000000 0x00000000fc000000&&&&> +  LOAD           0x000000002fff01ac 0x0000000000000000 0x00000000fc000000&&&&>                   0x0000000000800000 0x0000000000800000         0&&&&> -  LOAD           0x00000000307f0e30 0x0000000000000000 0x00000000fffe0000&&&&> +  LOAD           0x00000000307f01ac 0x0000000000000000 0x00000000fffe0000&&&&>                   0x0000000000020000 0x0000000000020000         0&&&&>&&&&>  There is no dynamic section in this file.&&&&> @@ -47,13 +47,6 @@&&&&>&&&&>  No version information found in this file.&&&&>&&&&> -Notes at offset 0x00000190 with length 0x00000ca0:&&&&> +Notes at offset 0x00000190 with length 0x0000001c:&&&&>    Owner                Data size       Description&&&&> -  CORE         0x00000150      NT_PRSTATUS (prstatus structure)&&&&> -  CORE         0x00000150      NT_PRSTATUS (prstatus structure)&&&&> -  CORE         0x00000150      NT_PRSTATUS (prstatus structure)&&&&> -  CORE         0x00000150      NT_PRSTATUS (prstatus structure)&&&&> -  QEMU         0x000001b0      Unknown note type: (0x00000000)&&&&> -  QEMU         0x000001b0      Unknown note type: (0x00000000)&&&&> -  QEMU         0x000001b0      Unknown note type: (0x00000000)&&&&> -  QEMU         0x000001b0      Unknown note type: (0x00000000)&&&&> +  NONE         0x00000005      Unknown note type: (0x00000000)&&&&&&&&- The vmcore was checked with ""crash"" too, again comparing the results&&&&  against a vmcore written by qmp_dump_guest_memory():&&&&&&&&> --- guest.vmcore.log2   2013-09-12 17:52:27.074289201 +0200&&&&> +++ example.dump.log2   2013-09-12 17:52:15.904289203 +0200&&&&> @@ -22,11 +22,11 @@&&&&>  This GDB was configured as ""x86_64-unknown-linux-gnu""...&&&&>&&&&>       KERNEL: /usr/lib/debug/lib/modules/2.6.32-358.el6.x86_64/vmlinux&&&&> -    DUMPFILE: /home/lacos/tmp/guest.vmcore&&&&> +    DUMPFILE: /home/lacos/tmp/example.dump&&&&>          CPUS: 4&&&&> -        DATE: Thu Sep 12 17:16:11 2013&&&&> -      UPTIME: 00:01:09&&&&> -LOAD AVERAGE: 0.07, 0.03, 0.00&&&&> +        DATE: Thu Sep 12 17:17:41 2013&&&&> +      UPTIME: 00:00:38&&&&> +LOAD AVERAGE: 0.18, 0.05, 0.01&&&&>         TASKS: 130&&&&>      NODENAME: localhost.localdomain&&&&>       RELEASE: 2.6.32-358.el6.x86_64&&&&> @@ -38,12 +38,12 @@&&&&>       COMMAND: ""swapper""&&&&>          TASK: ffffffff81a8d020  (1 of 4)  [THREAD_INFO: ffffffff81a00000]&&&&>           CPU: 0&&&&> -       STATE: TASK_RUNNING (PANIC)&&&&> +       STATE: TASK_RUNNING (ACTIVE)&&&&> +     WARNING: panic task not found&&&&>&&&&>  crash> bt&&&&>  PID: 0      TASK: ffffffff81a8d020  CPU: 0   COMMAND: ""swapper""&&&&> - #0 [ffffffff81a01ed0] default_idle at ffffffff8101495d&&&&> - #1 [ffffffff81a01ef0] cpu_idle at ffffffff81009fc6&&&&> + #0 [ffffffff81a01ef0] cpu_idle at ffffffff81009fc6&&&&>  crash> task ffffffff81a8d020&&&&>  PID: 0      TASK: ffffffff81a8d020  CPU: 0   COMMAND: ""swapper""&&&&>  struct task_struct {&&&&> @@ -75,7 +75,7 @@&&&&>        prev = 0xffffffff81a8d080&&&&>      },&&&&>      on_rq = 0,&&&&> -    exec_start = 8618466836,&&&&> +    exec_start = 7469214014,&&&&>      sum_exec_runtime = 0,&&&&>      vruntime = 0,&&&&>      prev_sum_exec_runtime = 0,&&&&> @@ -149,7 +149,7 @@&&&&>    },&&&&>    tasks = {&&&&>      next = 0xffff88002d621948,&&&&> -    prev = 0xffff880029618f28&&&&> +    prev = 0xffff880023b74488&&&&>    },&&&&>    pushable_tasks = {&&&&>      prio = 140,&&&&> @@ -165,7 +165,7 @@&&&&>      }&&&&>    },&&&&>    mm = 0x0,&&&&> -  active_mm = 0xffff88002929b780,&&&&> +  active_mm = 0xffff8800297eb980,&&&&>    exit_state = 0,&&&&>    exit_code = 0,&&&&>    exit_signal = 0,&&&&> @@ -177,7 +177,7 @@&&&&>    sched_reset_on_fork = 0,&&&&>    pid = 0,&&&&>    tgid = 0,&&&&> -  stack_canary = 2483693585637059287,&&&&> +  stack_canary = 7266362296181431986,&&&&>    real_parent = 0xffffffff81a8d020,&&&&>    parent = 0xffffffff81a8d020,&&&&>    children = {&&&&> @@ -224,14 +224,14 @@&&&&>    set_child_tid = 0x0,&&&&>    clear_child_tid = 0x0,&&&&>    utime = 0,&&&&> -  stime = 3,&&&&> +  stime = 2,&&&&>    utimescaled = 0,&&&&> -  stimescaled = 3,&&&&> +  stimescaled = 2,&&&&>    gtime = 0,&&&&>    prev_utime = 0,&&&&>    prev_stime = 0,&&&&>    nvcsw = 0,&&&&> -  nivcsw = 1000,&&&&> +  nivcsw = 1764,&&&&>    start_time = {&&&&>      tv_sec = 0,&&&&>      tv_nsec = 0&&&&&&&&- <name_dropping>I asked for Dave Anderson's help with verifying the&&&&  extracted vmcore, and his comments make me "
1," i440fx-test: verify firmware under 4G and 1M, both -bios and -pflash Check whether the firmware is not hidden by other memory regions.&&&&&&&&Qemu is started in paused mode: it shouldn't try to interpret generated&&&&garbage.&&&&&&&&Signed-off-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," virtio-scsi: switch exit callback to VirtioDeviceClass This ensures hot-unplug is handled properly by the proxy, and avoids&&&&leaking bus_name which is freed by virtio_device_exit.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Acked-by: Andreas Faerber <afaerber@suse.de>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," tcg-s390: Use qemu_getauxval in query_facilities No need to set up a SIGILL signal handler for detection anymore.&&&&&&&&Remove a ton of sanity checks that must be true, given that we're&&&&requiring a 64-bit build (the note about 31-bit KVM is satisfied&&&&by configuring with TCI).&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& "
1," COW: Extend checking allocated bits to beyond one sector cow_co_is_allocated() only checks one sector's worth of allocated bits&&&&before returning. This is allowed but (slightly) inefficient, so extend&&&&it to check all of the file's metadata sectors.&&&&&&&&Signed-off-by: Charlie Shepherd <charlie@ctshepherd.com>&&&&Reviewed-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&&&&&[kwolf: silenced compiler warning (-Wmaybe-uninitialized for changed)]&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," pc: get rid of builtin pvpanic for ""-M pc-1.5"" This causes two slight backwards-incompatibilities between ""-M pc-1.5""&&&&and 1.5's ""-M pc"":&&&&&&&&(1) a fw_cfg file is removed with this patch.  This is only a problem&&&&if migration stops the virtual machine exactly during fw_cfg enumeration.&&&&&&&&(2) after migration, a VM created without an explicit ""-device pvpanic""&&&&will stop reporting panics to management.&&&&&&&&The first problem only occurs if migration is done at a very, very&&&&early point (and I'm not sure it can happen in practice for reasonable-size&&&&VMs, since it will likely take more time to send the RAM to destination,&&&&than it will take for BIOS to scan fw_cfg).&&&&&&&&The second problem only occurs if the guest panics _and_ has a guest&&&&driver _and_ management knows to look at the crash event, so it is&&&&mostly theoretical at this point in time.&&&&&&&&Thus keep the code simple, and pretend it was never broken.&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," blockdev-test: add test case for drive_add duplicate IDs The following should work:&&&&&&&&  (qemu) drive_add if=none,id=drive0&&&&  (qemu) drive_del drive0&&&&  (qemu) drive_add if=none,id=drive0&&&&&&&&Previous versions of QEMU produced a duplicate ID error because&&&&drive_add leaked the options.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&& "
1," exec: Fix bounce buffer allocation in address_space_map() This fixes a regression introduced by commit e3127ae0c, which kept the&&&&allocation size of the bounce buffer limited to one page in order to&&&&avoid unbounded allocations (as explained in the commit message of&&&&6d16c2f88), but broke the reporting of the shortened bounce buffer to&&&&the caller. The caller therefore assumes that the full requested size&&&&was provided and causes memory corruption when writing beyond the end of&&&&the actually allocated buffer.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, qdev-monitor: Unref device when device_add fails qdev_device_add() leaks the created device upon failure.  I suspect this&&&&problem crept in because qdev_free() unparents the device but does not&&&&drop a reference - confusing name.&&&&&&&&Cc: qemu-stable@nongnu.org&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&& 
1," block: Don't copy backing file name on error bdrv_open_backing_file() tries to copy the backing file name using&&&&pstrcpy directly after calling bdrv_open() to open the backing file&&&&without checking whether that was actually successful. If it was not,&&&&ps->backing_hd->file will probably be NULL and qemu will crash.&&&&&&&&Fix this by moving pstrcpy after checking whether bdrv_open() succeeded.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Reviewed-by: Benoit Canet <benoit@irqsave.net>&&&&Reviewed-by: Amos Kong <kongjianjun@gmail.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," pseries: Update SLOF firmware image This has reworked USB OHCI and adds support of USB EHCI,&&&&VIRTIO-SCSI and various fixes (IBM VSCSI, VGA and more).&&&&&&&&The full list of fixes is:&&&&*  usb-ohci: Convert td-phys every time to td-virt&&&&*  usb-storage: Fix cbwflags field&&&&*  Add -fno-strict-aliasing in global CFLAGS&&&&*  usb: fix various issues found with js2x&&&&*  Move hex64-{decode,encode}-unit to node.fs&&&&*  usb: Use separate in-memory endian swap&&&&*  usb-ohci: collect TDs from done list&&&&*  js2x: more fixes&&&&*  js2x: Fix build of takeover image&&&&*  js2x: use new usb stack&&&&*  usb-ohci: Use proper memory barriers always&&&&*  usb: Fix a couple of warnings&&&&*  Fix $cat-instance-unit&&&&*  Cache phandle of /chosen&&&&*  Use root.fs on qemu as well&&&&*  usb-ehci: Add ehci handshake&&&&*  usb: add mb for write accessors&&&&*  usb-ohci: add missing memory barriers&&&&*  usb-ohci: suspend the controller in exit code path&&&&*  usb-ohci: Add a reset when closing the OHCI&&&&*  usb: Use proper accessors for MMIO and separate in-memory endian swap&&&&*  Use a global definition of sync() and mb()&&&&*  net-snk: Remove exception handling&&&&*  usb: unmap buffers&&&&*  slof: call quiesce on closing of stdin&&&&*  usb-kbd: accept ""s"" to drop to OF prompt&&&&*  USB storage driver&&&&*  usb-ohci: add Bulk transfer support&&&&*  usb-ehci: Add bulk support&&&&*  usb-core: add usb bulk support&&&&*  USB generic hub device driver&&&&*  usb-ehci: setup new device&&&&*  usb-ehci: Check ehci ports&&&&*  usb-ehci: initialize controller&&&&*  USB keyboard driver&&&&*  usb-core: setup new device&&&&*  usb-core: create dev pool allocation&&&&*  usb-ohci: implement ohci send control&&&&*  usb-core: usb send control&&&&*  usb-core: implement usb_{get,put}_pipe routines&&&&*  usb-ohci: allocate pipe pool&&&&*  usb-ohci: reset, init and check-ports&&&&*  Add standard header stdbool.h&&&&*  usb-slof: forth support routines for C&&&&*  usb-ehci: Add USB EHCI skeleton&&&&*  usb-core: Add register accessor functions&&&&*  Use __builtin_bswap routines for endianness swapping&&&&*  usb-core: hcd registration and query routines&&&&*  usb-core: adding generic dev-hci.fs&&&&*  usb-core: registration and makefiles&&&&*  Add new USB code&&&&*  Remove old usb code&&&&*  vga: fix hcall-invert-screen and hcall-blink-screen&&&&*  Enumerate disk/cdrom aliases for multiple disks or cdroms&&&&*  scsi: unify scsi probing code&&&&*  vscsi: generalizing probe code&&&&*  virtio-scsi: iterate through targets&&&&*  scsi: unify and use make-disk-alias&&&&*  nvram: remove unnecessary prints&&&&*  Add hack to client interface finddevice of ""/memory""&&&&*  scsi: Fix cdrom boot crash when no medium present&&&&*  Look for /memory@0, not just /memory&&&&*  Fix instance>qname crashing when displaying instance arguments&&&&*  Fix js2x build&&&&*  scsi-disk: Bound check read-blocks&&&&*  Fix off by one error in scsi-disk get-capacity&&&&*  scsi: fix report-luns handling&&&&*  SLOF: virtio-scsi block driver code&&&&*  scsi: Move bits of vio-vscsi.fs to a common helpers file&&&&*  scsi: Move scsi-disk.fs to a generic place&&&&*  SLOF: virtio-scsi helper routines&&&&*  SLOF: virtio-scsi - add pci device file&&&&*  iso9660: Don't constantly reallocate the read buffer&&&&*  vscsi: Sanitize interface between scsi-disk.fs and vio-vscsi.fs&&&&*  vio-vscsi: Rework vio-vscsi support&&&&*  virtio: Add a virtio-set-qaddr helper&&&&*  disk-label: Allocate 4096 bytes for 4k block devices&&&&*  disk-label: Increase the max size of the PReP boot partition&&&&*  Make load-base a real environment variable&&&&*  vio-vscsi: Switch to using a wildcard ""disk"" node and make scsi-disk generic&&&&*  Fix disk-label package to use proper instance path&&&&*  Increase size of catpad&&&&*  Fix instance>path to contain unit address for wildcard nodes&&&&*  Fix handling of wildcard nodes in open-dev&&&&*  vio-vscsi: Get CRQ on open and release on close&&&&&&&&Signed-off-by: Alexey Kardashevskiy <aik@ozlabs.ru>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," qemu-iotests: Correct 026 output Because l2_allocate now frees the unused L2 cluster on error, the&&&&according test cases in 026 don't result in one leaked cluster anymore.&&&&&&&&Signed-off-by: Max Reitz <mreitz@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," update seabios from 1.7.2.2 to 1.7.3.2 'git shortlog d4f7d90f..ece025f5' says:&&&&&&&&Alex Williamson (4):&&&&      seabios q35: Enable all PIRQn IRQs at startup&&&&      seabios q35: Add new PCI slot to irq routing function&&&&      seabios: Add a dummy PCI slot to irq mapping function&&&&      pciinit: Enable default VGA device&&&&&&&&Asias He (2):&&&&      virtio-scsi: Set _DRIVER_OK flag before scsi target scanning&&&&      virtio-scsi: Pack struct virtio_scsi_{req_cmd,resp_cmd}&&&&&&&&Avik Sil (1):&&&&      USB-EHCI: Fix null pointer assignment&&&&&&&&Christian Gmeiner (5):&&&&      geodevga: fix errors in geode_fp_* functions&&&&      geodevga: move framebuffer setup&&&&      geodevga: move output setup to own function&&&&      geodevga: add debug to msr functions&&&&      geodevga: fix wrong define name&&&&&&&&David Woodhouse (26):&&&&      Add macros for pushing and popping struct bregs&&&&      Clean up #if in pirtable.c. CONFIG_PIRTABLE can't be set if CONFIG_COREBOOT is&&&&      post: Export functions which will be used individually by CSM&&&&      Export callrom() for CSM to use&&&&      Export copy_smbios() from biostables.c&&&&      Import LegacyBios.h from OVMF&&&&      Complete and checksum EFI_COMPATIBILITY16_TABLE at build time&&&&      Add pic_save_mask() and pic_restore_mask() functions&&&&      Add CSM support&&&&      Add README.CSM&&&&      Add find_pmtimer() function&&&&      Enable PMTIMER for CSM build&&&&      Fix rom_reserve()/rom_confirm() for CSM oprom dispatch&&&&      Don't calibrate TSC if PMTIMER is already set up&&&&      Move find_pmtimer() to ACPI table setup where it logically belongs&&&&      Use find_pmtimer() after copying Xen ACPI tables&&&&      Use find_pmtimer() after copying coreboot ACPI tables&&&&      Unify return path for CSM to go via csm_return()&&&&      Make CONFIG_OPTIONROMS_DEPLOYED depend on CONFIG_QEMU&&&&      Implement !CONFIG_OPTIONROMS support for CSM&&&&      Implement !CONFIG_BOOT for CSM&&&&      Enable VGA output when settings bochs-specific mode&&&&      Disable CONFIG_THREAD_OPTIONROMS for CSM build&&&&      Fix return type of le64_to_cpu() and be64_to_cpu()&&&&      Rename find_pmtimer() to find_acpi_features()&&&&      Add acpi_reboot() reset method using RESET_REG&&&&&&&&Gerd Hoffmann (6):&&&&      config: allow DEBUG_IO for !QEMU&&&&      coreboot: add qemu detection&&&&      tweak coreboot qemu detection&&&&      apm: fix shutdown&&&&      ahci: add missing check for allocation failure&&&&      fix buildversion.sh&&&&&&&&Hu Tao (1):&&&&      Add pvpanic device driver&&&&&&&&Kevin O'Connor (101):&&&&      pmm: Use 'struct segoff_s' in pmm header.&&&&      Minor: Update README - variable changes are now reset on soft-reboots.&&&&      Normalize POST initialization function name suffixes.&&&&      POST: Reorganize post init functions for better grouping and reusability.&&&&      Fix rebase error in commit 8a0a972f that broke LOWMEM variables.&&&&      Support calling a function other than maininit() from reloc_preinit().&&&&      Ensure exported symbols are visible in the final link&&&&      POST: Move QEMU specific ramsize and BIOS table setup to paravirt.c.&&&&      POST: Reorganize post entry and ""preinit"" functions.&&&&      POST: Move cpu caching and dma setup to platform_hardware_setup().&&&&      Undo incorrect assumptions about Xen in commit 6ca0460f.&&&&      Determine century during init and store in VARLOW mem during runtime.&&&&      No need to check both CONFIG_THREADS and CONFIG_THREAD_OPTIONROMS.&&&&      Add runningOnQEMU() and runningOnXen() for runtime platform detection.&&&&      Consistently use CONFIG_COREBOOT, CONFIG_QEMU, and runningOnXen().&&&&      Convert kvm_para_available() to runningOnKVM().&&&&      Minor - move definitions to paravirt.c from paravirt.h.&&&&      Only perform SMP setup on QEMU.&&&&      Start device_hardware_setup in mainint even with CONFIG_THREAD_OPTIONROMS.&&&&      The mathcp setup touches the PIC and thus move to the ""setup"" phase.&&&&      Update tools/acpi_extract.py to handle iasl 20130117 release.&&&&      Support skipping content when reading from QEMU fw_cfg romfile entries.&&&&      Convert fw_cfg ACPI entries into romfile entries.&&&&      Convert fw_cfg SMBIOS entries into romfile entries.&&&&      Convert basic integer fw_cfg entries into romfile entries.&&&&      Convert fw_cfg NUMA entries into a romfile entry.&&&&      Process fw_cfg e820 entries during the fw_cfg setup stage.&&&&      Integrate qemu_cfg_preinit() into qemu_romfile_init().&&&&      Group QEMU platform setup together and move to paravirt.c.&&&&      vgabios: Bochs/QEMU vgabios support should depend on CONFIG_QEMU.&&&&      Warn on unaligned PCI ROM structure in option roms.&&&&      Fix Makefile - don't reference ""out/"" directly, instead use ""$(OUT)"".&&&&      build: Don't require $(OUT) to be a sub-directory of the main directory.&&&&      Rename rom_get_top() to rom_get_max().&&&&      Report on f-segment UMB ram also.&&&&      Clarify build generated ""zone low"" values.&&&&      Verify CC is valid during build tests.&&&&      Disable handle_post() on CSM builds.&&&&      Remove unnecessary ""export"" declarations from assembler functions.&&&&      Minor assembler enhancements to __csm_return.&&&&      Introduce VARFSEG for variables that will reside in the f-segment.&&&&      Convert VAR16VISIBLE, VAR16EXPORT, and VAR32VISIBLE to VARFSEG.&&&&      Don't relocate ""varlow"" variable references at runtime.&&&&      Move malloc's ZoneFSeg and ZoneLow setup to malloc_init.&&&&      Calculate ""RamSize"" needed by 16bit interface dynamically.&&&&      Eliminate separate BiosTableSpace[] space for f-segment allocations.&&&&      Use CONFIG_ prefix for Kconfig variables; use BUILD_ for others.&&&&      Try to detect an unsuccessful hard-reboot to prevent soft-reboot loops.&&&&      Minor - fix confusing final_sec32low_start name in layoutrom.py.&&&&      Minor - introduce numeric defines for the IVT offset of hw irqs.&&&&      Separate out 16bit PCI-BIOS entry point from regular int 0x1a entry point.&&&&      Support using the ""extra stack"" for all 16bit irq entry points.&&&&      Minor - improve comments and grouping of handle_08().&&&&      floppy: Introduce 'struct floppy_pio_s' for floppy PIO ops.&&&&      floppy: Cleanup floppy irq wait handling.&&&&      floppy: Clean up Check Interrupt Status code.&&&&      floppy: Move recalibration and results parsing to floppy_cmd().&&&&      floppy: Improve floppy_pio() error checking.&&&&      floppy: Implement media format sensing.&&&&      floppy: Actually do controller reset in floppy_reset().&&&&      Minor - note that passing QEMU config via cmos is deprecated.&&&&      Cache boot-fail-wait to avoid romfile access after POST.&&&&      Rename src/ssdt-susp.dsl to src/ssdt-misc.dsl.&&&&      acpi: Eliminate BDAT parameter passing to DSDT code.&&&&      Add additional dependency checks to Makefile.&&&&      Don't use __FILE__ in virtio-ring.c.&&&&      shadow: Don't use PCIDevices list in make_bios_readonly().&&&&      smm: Don't use PCIDevices list in smm_setup().&&&&      Add VARVERIFY32INIT attribute for variables only available during ""init"".&&&&      Use VARVERIFY32INIT on global variables that point to ""tmp"" memory.&&&&      vgabios: Fix stdvga_perform_gray_scale_summing().&&&&      vgabios: Fix cirrus memory clear on mode switch.&&&&      Minor - add missing newline to floppy debug statement.&&&&      Fix bug in NUMA node setup - don't create SRAT if NUMA not present.&&&&      Update README - copy *.aml files for QEMU.&&&&      Add dependencies to vgafixup.py and buildversion.sh scripts.&&&&      Set ZF prior to keyboard read call in check_for_keystroke().&&&&      mptable: Don't describe pci-to-pci bridges.&&&&      mptable: Use same PCI irqs as ACPI code.&&&&      Cleanup QEMU_CFG_NUMA fw_cfg processing - split into two romfile entries.&&&&      Use container_of on romfile entries.&&&&      acpi: Move ACPI table definitions from acpi.c to acpi.h.&&&&      acpi: Remove dead code with descriptions of bit flags.&&&&      acpi: Use cpu_to_leXX() consistently.&&&&      Minor - explicitly close fil"
1," mips_malta: do not raise exceptions when accessing invalid memory Since commit c658b94f6e8c206c59d02aa6fbac285b86b53d2c, MIPS raises&&&&exceptions when accessing invalid memory. This is not the correct&&&&behaviour for MIPS Malta Core LV, as the GT-64120A system controller&&&&just ignore undecoded access. This feature is used by the Linux kernel&&&&to probe for some devices.&&&&&&&&Emulate the correct behaviour in QEMU by adding an empty slot covering&&&&the entire memory space decoded by the GT-64120A.&&&&&&&&Tested-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, hw/9pfs: Fix potential memory leak and avoid reuse of freed memory The leak was reported by cppcheck.&&&&&&&&Function proxy_init also calls g_free for ctx->fs_root.&&&&Avoid reuse of this memory by setting ctx->fs_root to NULL.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Reviewed-by: M. Mohan Kumar <mohan@in.ibm.com>&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& 
1," block: fix vvfat error path for enable_write_target s->qcow and s->qcow_filename are allocated but not freed on error. Fix the&&&&possible leaks, remove unnecessary check for bdrv_new(), propagate ret code of&&&&bdrv_create() and also the one of enable_write_target().&&&&&&&&Signed-off-by: Fam Zheng <famz@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," net: add support of mac-programming over macvtap in QEMU side Currently macvtap based macvlan device is working in promiscuous&&&&mode, we want to implement mac-programming over macvtap through&&&&Libvirt for better performance.&&&&&&&&Design:&&&& QEMU notifies Libvirt when rx-filter config is changed in guest,&&&& then Libvirt query the rx-filter information by a monitor command,&&&& and sync the change to macvtap device. Related rx-filter config&&&& of the nic contains main mac, rx-mode items and vlan table.&&&&&&&&This patch adds a QMP event to notify management of rx-filter change,&&&&and adds a monitor command for management to query rx-filter&&&&information.&&&&&&&&Test:&&&& If we repeatedly add/remove vlan, and change macaddr of vlan&&&& interfaces in guest by a loop script.&&&&&&&&Result:&&&& The events will flood the QMP client(management), management takes&&&& too much resource to process the events.&&&&&&&& Event_throttle API (set rate to 1 ms) can avoid the events to flood&&&& QMP client, but it could cause an unexpected delay (~1ms), guests&&&& guests normally expect rx-filter updates immediately.&&&&&&&& So we use a flag for each nic to avoid events flooding, the event&&&& is emitted once until the query command is executed. The flag&&&& implementation could not introduce unexpected delay.&&&&&&&&There maybe exist an uncontrollable delay if we let Libvirt do the&&&&real change, guests normally expect rx-filter updates immediately.&&&&But it's another separate issue, we can investigate it when the&&&&work in Libvirt side is done.&&&&&&&&Michael S. Tsirkin: tweaked to enable events on start&&&&Michael S. Tsirkin: fixed not to crash when no id&&&&Michael S. Tsirkin: fold in patch:&&&&   ""additional fixes for mac-programming feature""&&&&Amos Kong: always notify QMP client if mactable is changed&&&&Amos Kong: return NULL list if no net client supports rx-filter query&&&&&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Amos Kong <akong@redhat.com>&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&& "
1," qemu-option: Fix qemu_opts_set_defaults() for corner cases Commit 4f6dd9a changed the initialization of opts in opts_parse() to&&&&this:&&&&&&&&    if (defaults) {&&&&        if (!id && !QTAILQ_EMPTY(&list->head)) {&&&&            opts = qemu_opts_find(list, NULL);&&&&        } else {&&&&            opts = qemu_opts_create(list, id, 0);&&&&        }&&&&    } else {&&&&        opts = qemu_opts_create(list, id, 1);&&&&    }&&&&&&&&Same as before for !defaults.&&&&&&&&If defaults is true, and params has no ID, and options exist, we use&&&&the first assignment.  It sets opts to null if all options have an ID.&&&&opts_parse() then returns null.  qemu_opts_set_defaults() asserts the&&&&value is non-null.  It's the only caller that passes true for&&&&defaults.&&&&&&&&To reproduce, try ""-M xenpv -machine id=foo"" (yes, ""id=foo"" is silly,&&&&but it shouldn't crash).&&&&&&&&I believe the function attempts to do the following:&&&&&&&&    If options don't yet exist, create new options&&&&    Else, if defaults, modify the existing options&&&&    Else, if list->merge_lists, modify the existing options&&&&    Else, fail&&&&&&&&A straightforward call of qemu_opts_create() does exactly that.&&&&&&&&Cc: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: 1372943363-24081-3-git-send-email-armbru@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," virtio-rng: Fix crash with non-default backend 'default_backend' isn't always set, but 'rng' is, so use that.&&&&&&&&$ ./x86_64-softmmu/qemu-system-x86_64 -object rng-random,id=rng0,filename=/dev/random -device virtio-rng-pci,rng=rng0&&&&Segmentation fault (core dumped)&&&&&&&&Regressed with virtio refactoring in 59ccd20a9ac719cff82180429458728f03ec612f&&&&&&&&CC: qemu-stable@nongnu.org&&&&Signed-off-by: Cole Robinson <crobinso@redhat.com>&&&&Acked-by: Amit Shah <amit.shah@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Tested-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Message-id: bf4505014a0a941dbd3c62068f3cf2c496b69e6a.1370023944.git.crobinso@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," tests: set MALLOC_PERTURB_ to expose memory bugs glibc wipes malloc(3) memory when the MALLOC_PERTURB_ environment&&&&variable is set.  The value of the environment variable determines the&&&&bit pattern used to wipe memory.  For more information, see&&&&http://udrepper.livejournal.com/11429.html.&&&&&&&&Set MALLOC_PERTURB_ for gtester and qemu-iotests.  Note we pick a random&&&&value from 1 to 255 to expose more bugs.  If you need to reproduce a&&&&crash use 'show environment' in gdb to extract the MALLOC_PERTURB_&&&&value from a core dump.&&&&&&&&Both make check and qemu-iotests pass with MALLOC_PERTURB_ enabled.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Message-id: 1369661331-28041-1-git-send-email-stefanha@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," blockdev: reset werror/rerror on drive_del Paolo Bonzini <pbonzini@redhat.com> suggested the following test case:&&&&&&&&1. Launch a guest and wait at the GRUB boot menu:&&&&&&&&  qemu-system-x86_64 -enable-kvm -m 1024 \&&&&   -drive if=none,cache=none,file=test.img,id=foo,werror=stop,rerror=stop&&&&   -device virtio-blk-pci,drive=foo,id=virtio0,addr=4&&&&&&&&2. Hot unplug the device:&&&&&&&&  (qemu) drive_del foo&&&&&&&&3. Select the first boot menu entry&&&&&&&&Without this patch the guest pauses due to ENOMEDIUM.  The guest is&&&&stuck in a continuous pause loop since the I/O request is retried and&&&&fails immediately again when the guest is resumed.&&&&&&&&With this patch the error is reported to the guest.&&&&&&&&Note that this scenario actually happens sometimes during libvirt disk&&&&hot unplug, where device_del is followed by drive_del.  I/O may still be&&&&submitted to the drive after drive_del if the guest does not process the&&&&PCI hot unplug notification.&&&&&&&&Reported-by: Dafna Ron <dron@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, qapi: add native list coverage for QMP input visitor tests This exercises schema-generated visitors for native list types and does&&&&some sanity checking on validity of deserialized data.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Amos Kong <akong@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
1, json-parser: fix handling of large whole number values Currently our JSON parser assumes that numbers lacking a fractional&&&&value are integers and attempts to store them as QInt/int64 values. This&&&&breaks in the case where the number overflows/underflows int64 values (which&&&&is still valid JSON)&&&&&&&&Fix this by detecting such cases and using a QFloat to store the value&&&&instead.&&&&&&&&Signed-off-by: Michael Roth <mdroth@linux.vnet.ibm.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Reviewed-by: Amos Kong <akong@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& 
1, virtio-net: count VIRTIO_NET_F_MAC when calculating config_len Commit 14f9b664 (hw/virtio-net.c: set config size using host features) tries to&&&&calculate config size based on the host features. But it forgets the&&&&VIRTIO_NET_F_MAC were always set for qemu later. This will lead a zero config&&&&len for virtio-net device when both VIRTIO_NET_F_STATUS and VIRTIO_NET_F_MQ were&&&&disabled form command line. Then qemu will crash when user tries to read the&&&&config of virtio-net.&&&&&&&&Fix this by counting VIRTIO_NET_F_MAC and make sure the config at least contains&&&&the mac address.&&&&&&&&Cc: Jesse Larrew <jlarrew@linux.vnet.ibm.com>&&&&Signed-off-by: Jason Wang <jasowang@redhat.com>&&&&Reviewed-by: Michael S. Tsirkin <mst@redhat.com>&&&&Acked-by: Michael S. Tsirkin <mst@redhat.com>&&&&Message-id: 1366874814-2658-1-git-send-email-jasowang@redhat.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, add a new qevent: QEVENT_GUEST_PANICKED This event will be emited when qemu detects guest panic.&&&&&&&&Signed-off-by: Wen Congyang <wency@cn.fujitsu.com>&&&&Signed-off-by: Hu Tao <hutao@cn.fujitsu.com>&&&&Reviewed-by: Markus Armbruster <armbru@redhat.com>&&&&Message-id: cf0bc45ecf9ecd3699bc72dc39f8cbab8ed79d8c.1366945969.git.hutao@cn.fujitsu.com&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," monitor: fix the wrong order of releasing keys (qemu) sendkey ctrl_r-scroll_lock-scroll_lock&&&&&&&&Executing this command could not let Windows guest panic, it caused by&&&&the wrong order of releasing keys. This problem was introduced by&&&&commit e4c8f004c55d9da3eae3e14df740238bf805b5d6.&&&&&&&&The right release order should be starting from last item.&&&&&&&&Signed-off-by: Amos Kong <akong@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," qemu-socket: set passed fd non-blocking in socket_connect() socket_connect() sets non-blocking on TCP or UNIX domain sockets if a&&&&callback function is passed.  Do the same for file descriptor passing,&&&&otherwise we could unexpectedly be using a blocking file descriptor.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Luiz Capitulino <lcapitulino@redhat.com>&&&& "
1," qdev: Fix qdev_try_create() semantics Since QOM'ification, qdev_try_create() uses object_new() internally,&&&&which asserts ""type != NULL"" when the type is not registered.&&&&This was revealed by the combination of kvmclock's kvm_enabled() check&&&&and early QOM type registration.&&&&&&&&Check whether the class exists before calling object_new(), so that&&&&the caller (e.g., qdev_create) can fail gracefully, telling us which&&&&device could not be created.&&&&&&&&Signed-off-by: Andreas F盲rber <afaerber@suse.de>&&&&Cc: Anthony Liguori <aliguori@codemonkey.ws>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," vl.c: Fix off-by-one bug when handling ""-numa node"" argument The numa_add() code was unconditionally adding 1 to the get_opt_name()&&&&return value, making it point after the end of the string if no ','&&&&separator is present.&&&&&&&&Example of weird behavior caused by the bug:&&&&&&&&  $ qemu-img create -f qcow2 this-file-image-has,cpus=5,mem=1000,in-its-name.qcow2 5G&&&&  Formatting 'this-file-image-has,cpus=5,mem=1000,in-its-name.qcow2', fmt=qcow2 size=5368709120 encryption=off cluster_size=65536&&&&  $ ./x86_64-softmmu/qemu-system-x86_64 -S -monitor stdio -numa node 'this-file-image-has,cpus=5,mem=1000,in-its-name.qcow2'&&&&  QEMU 1.3.50 monitor - type 'help' for more information&&&&  (qemu) info numa&&&&  1 nodes&&&&  node 0 cpus: 0&&&&  node 0 size: 1000 MB&&&&  (qemu)&&&&&&&&This changes the code to nove the pointer only if ',' is found.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," cutils: unsigned int parsing functions There are lots of duplicate parsing code using strto*() in QEMU, and&&&&most of that code is broken in one way or another. Even the visitors&&&&code have duplicate integer parsing code[1]. This introduces functions&&&&to help parsing unsigned int values: parse_uint() and parse_uint_full().&&&&&&&&Parsing functions for signed ints and floats will be submitted later.&&&&&&&&parse_uint_full() has all the checks made by opts_type_uint64() at&&&&opts-visitor.c:&&&&&&&& - Check for NULL (returns -EINVAL)&&&& - Check for negative numbers (returns -EINVAL)&&&& - Check for empty string (returns -EINVAL)&&&& - Check for overflow or other errno values set by strtoll() (returns&&&&   -errno)&&&& - Check for end of string (reject invalid characters after number)&&&&   (returns -EINVAL)&&&&&&&&parse_uint() does everything above except checking for the end of the&&&&string, so callers can continue parsing the remainder of string after&&&&the number.&&&&&&&&Unit tests included.&&&&&&&&[1] string-input-visitor.c:parse_int() could use the same parsing code&&&&    used by opts-visitor.c:opts_type_int(), instead of duplicating that&&&&    logic.&&&&&&&&Signed-off-by: Eduardo Habkost <ehabkost@redhat.com>&&&&Reviewed-by: Eric Blake <eblake@redhat.com>&&&&Reviewed-by: Laszlo Ersek <lersek@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," dmg: Fix bdrv_open() error handling Return -errno instead of -1 on errors and add error checks in some&&&&places that didn't have one. Passing things by reference requires more&&&&correct typing, replaced a few off_ts therefore - with a 32-bit off_t&&&&this is even a fix for truncation bugs.&&&&&&&&While touching the code, fix even some more memory leaks than in the&&&&other drivers...&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@redhat.com>&&&& "
1," qxl: call dpy_gfx_resize when entering vga mode When entering vga mode the display size likely changes,&&&&notify all displaychangelisteners about this.&&&&&&&&Probably went unnoticed for a while as one if the first&&&&things the guest does after leaving qxl native mode and&&&&entering qxl vga mode is to set the vga video mode.  But&&&&there is still a small window where qemu can operate on&&&&stale data, leading to crashes now and then.&&&&&&&&https://bugzilla.redhat.com/show_bug.cgi?id=865767&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," ide: Fix error messages from static code analysis (no real error) Report from smatch:&&&&hw/ide/core.c:1472 ide_exec_cmd(423) error: buffer overflow 'smart_attributes' 8 <= 29&&&&hw/ide/core.c:1474 ide_exec_cmd(425) error: buffer overflow 'smart_attributes' 8 <= 29&&&&hw/ide/core.c:1475 ide_exec_cmd(426) error: buffer overflow 'smart_attributes' 8 <= 29&&&&...&&&&&&&&The upper limit of 30 was never reached because both for loops terminated&&&&when 'smart_attributes' reached end of list, so there was no real buffer&&&&overflow.&&&&&&&&Nevertheless, changing the code not only fixes the error report, but also&&&&reduces the size of smart_attributes and simplifies the for loops.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," ehci: Validate qh is not changed unexpectedly by the guest -combine the qh check with the check for devaddr changes&&&&-also ensure that p gets set to NULL when the queue gets cancelled on&&&& devaddr change, which was not done properly before this patch&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&& "
1," vga: add some optional CGA compatibility hacks This patch adds some optional compatibility hacks (default&&&&disabled) to allow Microport UNIX to function under qemu.&&&&&&&&I've tried to structure it to be easy to add more hacks for other&&&&old CGA programs, if anyone ever needs them.&&&&&&&&Microport UNIX System V/386 v 2.1 (ca 1987) tries to program&&&&the CGA registers directly with neither the assistance of BIOS, nor&&&&with proper handling of EGA/VGA-only registers.  Note that it didn't&&&&work on real VGA hardware, either (although in that case, the most&&&&obvious problems seemed to be out-of-range hsync and/or vsync&&&&signalling, rather than the issues in this patch).&&&&&&&&Eventually real MDA and/or CGA support might provide an alternative to&&&&this patch, although a hybrid approach like this patch might still&&&&be useful in marginal cases.&&&&&&&&Signed-off-by: Matthew Ogilvie <mmogilvi_qemu@miniinfo.net>&&&&Signed-off-by: malc <av1474@comtv.ru>&&&& "
1, fsdev: Fix parameter parsing for proxy helper This fixes a crash when using sockfd with proxy FsDriver&&&&&&&&Signed-off-by: M. Mohan Kumar <mohan@in.ibm.com>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&& 
1," pseries: Update SLOF This patch updates the SLOF version, introducing a number of fixes:&&&& * add proper graphics support&&&& * fix bugs with graphical terminal under grub2&&&& * fix bugs in handling of 64-bit unit addresses&&&& * fix VSCSI representation to be closer to PowerVM&&&& * fix bugs which caused grub2 to crash&&&&&&&&Signed-off-by: Benjamin Herrenschmidt <benh@kernel.crashing.org>&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," configure: Check for -Werror causing failures when compiling tests Add support for checking whether test case code can compile without&&&&warnings, by recompiling each successful test with -Werror. If the&&&&-Werror version doesn't pass, we bail out. This gives us the same&&&&level of visibility of warnings in test code as --enable-werror&&&&provides for the main compile.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1," ahci: Fix sglist memleak in ahci_dma_rw_buf() I noticed that in hw/ide/ahci:ahci_dma_rw_buf() we do not free the sglist. Thus,&&&&I've added a call to qemu_sglist_destroy() to fix this memory leak.&&&&&&&&In addition, I've adeed a call in qemu_sglist_destroy() to 0 all of the sglist&&&&fields, in case there is some other codepath that tries to free the sglist.&&&&&&&&Signed-off-by: Jason Baron <jbaron@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, alpha-linux-user: Fix a3 error return with v0 error bypass. We were failing to initialize a3 for syscalls that bypass the&&&&negative return value error check.&&&&&&&&Signed-off-by: Richard Henderson <rth@twiddle.net>&&&& 
1, ehci: fix td writeback Only write back the dwords the hc is supposed to update.  Should not&&&&make a difference in theory as the guest must not touch the td while&&&&it is active to avoid races.  But it is still more correct.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," block: simplify path_is_absolute On Windows, all the logic is already in is_windows_drive and&&&&is_windows_drive_prefix.  On POSIX, there is no need to look&&&&out for colons.&&&&&&&&The win32 code changes the behaviour in some cases, we could have&&&&something like ""d:foo.img"". The old code would treat it as relative&&&&path, the new one as absolute. Now the path is absolute, because to&&&&go from c:/program files/blah to d:foo.img you cannot say c:/program&&&&files/blah/d:foo.img.  You have to say d:foo.img.  But you could also&&&&say it's relative because (I think, at least it was like that in DOS&&&&15 years ago) d:foo.img is relative to the current path of drive D.&&&&Considering how path_is_absolute is used by path_combine, I think it's&&&&better to treat it as absolute.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, scsi: remove useless debug messages Optional inquiry information is declared obsolete in the latest versions&&&&of the standard; invalid CDBs or unsupported VPD pages are supported&&&&can be diagnosed with trace_scsi_inquiry.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& 
1," rename qemu_sendv to iov_send, change proto and move declarations to iov.h Rename arguments and use size_t for sizes instead of int,&&&&from&&&& int&&&& qemu_sendv(int sockfd, struct iovec *iov,&&&&            int len, int iov_offset)&&&&to&&&& ssize_t&&&& iov_send(int sockfd, struct iovec *iov,&&&&          size_t offset, size_t bytes)&&&&&&&&The main motivation was to make it clear that length&&&&and offset are in _bytes_, not in iov elements: it was&&&&very confusing before, because all standard functions&&&&which deals with iovecs expects number of iovs, not&&&&bytes, even the fact that struct iovec has iov_len and&&&&iov_ prefix does not help.  With ""bytes"" and ""offset"",&&&&especially since they're now size_t, it is much more&&&&explicit.  Also change the return type to be ssize_t&&&&instead of int.&&&&&&&&This also changes it to match other iov-related functons,&&&&but not _quite_: there's still no argument indicating&&&&where iovec ends, ie, no iov_cnt parameter as used&&&&in iov_size() and friends.  If will be added in subsequent&&&&patch/rewrite.&&&&&&&&All callers of qemu_sendv() and qemu_recvv() and&&&&related, like qemu_co_sendv() and qemu_co_recvv(),&&&&were checked to verify that it is safe to use unsigned&&&&datatype instead of int.&&&&&&&&Note that the order of arguments is changed to: offset&&&&and bytes (len and iov_offset) are swapped with each&&&&other.  This is to make them consistent with very similar&&&&functions from qemu_iovec family, where offset always&&&&follows qiov, to mean the place in it to start from.&&&&&&&&Signed-off-by: Michael Tokarev <mjt@tls.msk.ru>&&&& "
1," qemu-timer: Fix limits for w32 mmtimer timeSetEvent only accepts delays in the range which is returned by&&&&timeGetDevCaps.&&&&&&&&The lower limit is typically 1 (= 1 ms), so the constant value of 1&&&&in the old code usually worked.&&&&&&&&The upper limit can be as low as 10000 ms, so the latest changes in&&&&QEMU's timer handling which introduced timeout values above that limit&&&&could result in failures of timeSetEvent when the timer was re-armed.&&&&&&&&Signed-off-by: Stefan Weil <sw@weilnetz.de>&&&& "
1," nbd: consistently use ssize_t GCC (pedantically, but correctly) considers that a negative ssize_t may&&&&become positive when casted to int.  This may cause uninitialized variable&&&&warnings when a function returns such a negative ssize_t and is inlined.&&&&Propagate ssize_t return types to avoid this.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&& "
1," usb-ehci: Drop cached qhs when the doorbell gets rung The purpose of the IAAD bit / the doorbell is to make the ehci controller&&&&forget about cached qhs, this is mainly used when cancelling transactions,&&&&the qh is unlinked from the async schedule and then the doorbell gets rung,&&&&once the doorbell is acked by the controller the hcd knows that the qh is&&&&no longer in use and that it can do something else with the memory, such&&&&as re-use it for a new qh! But we keep our struct representing this qh around&&&&for circa 250 ms. This allows for a (mightily large) race window where the&&&&following could happen:&&&&-hcd submits a qh at address 0xdeadbeef&&&&-our ehci code sees the qh, sends a request to a usb-device, gets a result&&&& of USB_RET_ASYNC, sets the async_state of the qh to EHCI_ASYNC_INFLIGHT&&&&-hcd unlinks the qh at address 0xdeadbeef&&&&-hcd rings the doorbell, wait for us to ack it&&&&-hcd re-uses the qh at address 0xdeadbeef&&&&-our ehci code sees the qh, looks in the async_queue, sees there already is&&&& a qh at address 0xdeadbeef there with async_state of EHCI_ASYNC_INFLIGHT,&&&& does nothing&&&&-the *original* (which the hcd thinks it has cancelled) transaction finishes&&&&-our ehci code sees the qh on yet another pass through the async list,&&&& looks in the async_queue, sees there already is a qh at address 0xdeadbeef&&&& there with async_state of EHCI_ASYNC_COMPLETED, and finished the transaction&&&& with the results of the *original* transaction.&&&&&&&&Not good (tm), this patch fixes this race by removing all qhs which have not&&&&been seen during the last cycle through the async list immidiately when the&&&&doorbell is rung.&&&&&&&&Note this patch does not fix any actually observed problem, but upon&&&&reading of the EHCI spec it became apparent to me that the above race could&&&&happen and the usb-ehci behavior from before this patch is not good.&&&&&&&&Signed-off-by: Hans de Goede <hdegoede@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1," sdl: remove NULL check, g_malloc0 can't fail Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& "
1, usb-ehci: sanity-check iso xfers This patch adds a sanity check to itd processing to make sure the&&&&endpoint addressed by the guest is actually an iso endpoint.  Also&&&&verify that usb drivers don't return USB_RET_ASYNC which is illegal for&&&&iso xfers.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," g_thread_init users: don't call it if glib >= 2.31 since commit f9b29ca03 included in release 2.31 (docs below say 2.32 but&&&&that is not correct) and onwards g_thread_init is deprecated and calling&&&&it is not required:&&&&&&&& http://developer.gnome.org/glib/unstable/glib-Deprecated-Thread-APIs.html#g-thread-init&&&&&&&& g_thread_init has been deprecated since version 2.32 and should not be&&&& used in newly-written code. This function is no longer necessary. The&&&& GLib threading system is automatically initialized at the start of your&&&& program.&&&&&&&&Fixes bulid failure when warnings are treated as errors on fedora 17.&&&&&&&&I only tested the change to vl.c, and copy pasted to the two other&&&&locations (couldn't decide if a wrapper for calling g_thread_init is&&&&uglier).&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, cow: convert to .bdrv_co_is_allocated() The cow block driver does not keep internal state for cluster lookups.&&&&This means it is safe to perform cluster lookups in coroutine context&&&&without risk of race conditions that corrupt internal state.&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& 
1," x86/cpuid: Tighten parsing of tsc_freq=FREQ cpu_x86_find_by_name() uses strtosz_suffix_unit(), but screws up the&&&&error checking.  It detects some failures, but not all.  Undetected&&&&failures result in a zero tsc_khz value (error value -1 divided by&&&&1000), which means ""no tsc_freq set"".&&&&&&&&To reproduce, try ""-cpu qemu64,tsc_freq=9999999T"".&&&&strtosz_suffix_unit() fails, because the value overflows int64_t,&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qemu-img: Tighten parsing of size arguments strtosz_suffix() fails unless the size is followed by 0, whitespace or&&&&','.  Useless here, because we need to fail for any junk following the&&&&size, even if it starts with whitespace or ','.  Check manually.&&&&Things like ""qemu-img create xxx 1024,"" and ""qemu-img convert -S '1024&&&&junk'"" are now caught.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," hw/pc.c: Fix use-while-uninitialized of fd_type[] Fix a use-while-uninitialized of the fd_type[] array (introduced&&&&in commit 34d4260e1, noticed by Coverity). This is more theoretical&&&&than practical, since it's quite hard to get here with floppy==NULL&&&&(the qdev_try_create() of the isa-fdc device has to fail).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1, hw/lan9118.c: Add missing 'break' to fix buffer overrun Add a missing 'break' statement to fix a buffer overrun when&&&&executing the EEPROM write-all command. Spotted by Coverity&&&&(see bug 887883).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& 
1," pseries: Update SLOF firmware image This patch updates the SLOF submodule and precompiled image.  The new&&&&SLOF versions contains two changes of note:&&&&&&&& * The previous SLOF has a bug in SCSI condition handling that was&&&&   exposed by recent updates to qemu's SCSI emulation.  This update&&&&   fixes the bug.&&&&&&&& * The previous SLOF has a bug in its addressing of SCSI devices,&&&&   which can be exposed under certain conditions.  The new SLOF also&&&&   fixes this.&&&&&&&&Signed-off-by: David Gibson <david@gibson.dropbear.id.au>&&&&Signed-off-by: Alexander Graf <agraf@suse.de>&&&& "
1," Add support for net bridge The most common use of -net tap is to connect a tap device to a bridge.  This&&&&requires the use of a script and running qemu as root in order to allocate a&&&&tap device to pass to the script.&&&&&&&&This model is great for portability and flexibility but it's incredibly&&&&difficult to eliminate the need to run qemu as root.  The only really viable&&&&mechanism is to use tunctl to create a tap device, attach it to a bridge as&&&&root, and then hand that tap device to qemu.  The problem with this mechanism&&&&is that it requires administrator intervention whenever a user wants to create&&&&a guest.&&&&&&&&By essentially writing a helper that implements the most common qemu-ifup&&&&script that can be safely given cap_net_admin, we can dramatically simplify&&&&things for non-privileged users.  We still support existing -net tap options&&&&as a mechanism for advanced users and backwards compatibility.&&&&&&&&Currently, this is very Linux centric but there's really no reason why it&&&&couldn't be extended for other Unixes.&&&&&&&&A typical invocation would be similar to one of the following:&&&&&&&&  qemu linux.img -net bridge -net nic,model=virtio&&&&&&&&  qemu linux.img -net tap,helper=""/usr/local/libexec/qemu-bridge-helper""&&&&                 -net nic,model=virtio&&&&&&&&  qemu linux.img -netdev bridge,id=hn0&&&&                 -device virtio-net-pci,netdev=hn0,id=nic1&&&&&&&&  qemu linux.img -netdev tap,helper=""/usr/local/libexec/qemu-bridge-helper"",id=hn0&&&&                 -device virtio-net-pci,netdev=hn0,id=nic1&&&&&&&&The default bridge that we attach to is br0.  The thinking is that a distro&&&&could preconfigure such an interface to allow out-of-the-box bridged networking.&&&&&&&&Alternatively, if a user wants to use a different bridge, a typical invocation&&&&would be simliar to one of the following:&&&&&&&&  qemu linux.img -net bridge,br=qemubr0 -net nic,model=virtio&&&&&&&&  qemu linux.img -net tap,helper=""/usr/local/libexec/qemu-bridge-helper --br=qemubr0""&&&&                 -net nic,model=virtio&&&&&&&&  qemu linux.img -netdev bridge,br=qemubr0,id=hn0&&&&                 -device virtio-net-pci,netdev=hn0,id=nic1&&&&&&&&  qemu linux.img -netdev tap,helper=""/usr/local/libexec/qemu-bridge-helper --br=qemubr0"",id=hn0&&&&                 -device virtio-net-pci,netdev=hn0,id=nic1&&&&&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&Signed-off-by: Richa Marwaha <rmarwah@linux.vnet.ibm.com>&&&&Signed-off-by: Corey Bryant <coreyb@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," kvm_init didn't set return value after create vm failed And kvm_ioctl(s, KVM_CREATE_VM, 0)'s return value can be < -1,&&&&so change the check of vmfd at label 'err'.&&&&&&&&Signed-off-by: Xu He Jie <xuhj@linux.vnet.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, target-xtensa: mark reserved and TBD opcodes Reserved opcodes must generate illegal instruction exception. Usually&&&&they signal emulation quality problems.&&&&Not implemented opcodes are good to see.&&&&&&&&Signed-off-by: Max Filippov <jcmvbkbc@gmail.com>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1, fw_cfg: fix crash if FW_CFG_WRITE_CHANNEL is used incorrectly Avoid a crash if the guest combines FW_CFG_WRITE_CHANNEL with&&&&a wrong value.&&&&&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," Don't use g_thread_get_initialized. Initialize glib threads unconditionally in main() instead&&&&of using g_thread_get_initialized in the 9p code.&&&&&&&&Fixes a build failure on RHEL-5, which ships glib 2.12.&&&&g_thread_get_initialized was added in 2.20.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, tcg/mips: Fix regression caused by typo (copy + paste bug) cppcheck reports an error:&&&&qemu/tcg/mips/tcg-target.c:1487: error: Invalid number of character (()&&&&&&&&The unpatched code won't compile on mips hosts starting with commit&&&&cea5f9a28faa528b6b1b117c9ab2d8828f473fef.&&&&&&&&Cc: Blue Swirl <blauwirbel@gmail.com>&&&&Signed-off-by: Stefan Weil <weil@mail.berlios.de>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& 
1," exec-all.h: Make MAX_OP_PER_INSTR large enough for target-arm's uses The target-arm frontend's worst-case TCG ops per instr is 194 (and in&&&&general many of the ""load multiple registers"" ARM instructions generate&&&&more than 100 TCG ops). Raise MAX_OP_PER_INSTR accordingly to avoid&&&&possible buffer overruns.&&&&&&&&Since it doesn't make any sense for the ""64 bit guest on 32 bit host""&&&&case to have a smaller limit than the normal case, we collapse the&&&&two cases back into each other again.&&&&&&&&(This increase costs us about 14K in extra static buffer space and&&&&21K of extra margin at the end of a 32MB codegen buffer.)&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1, spice: drop obsolete iothread locking We don't use qemu internals from spice server context any more.&&&&Thus we don't also need to grab the iothread mutex from spice&&&&server context.  And we don't have to temporarely release the&&&&lock to avoid deadlocks.  Drop all the calls.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&& 
1," enable vm_clock to ""warp"" in the iothread+icount case The previous patch however is not enough, because if the virtual CPU&&&&goes to sleep waiting for a future timer interrupt to wake it up, qemu&&&&deadlocks.  The timer interrupt never comes because time is driven by&&&&icount, but the vCPU doesn't run any insns.&&&&&&&&You could say that VCPUs should never go to sleep in icount&&&&mode if there is a pending vm_clock timer; rather time should&&&&just warp to the next vm_clock event with no sleep ever taking place.&&&&Even better, you can sleep for some time related to the&&&&time left until the next event, to avoid that the warps are too visible&&&&externally; for example, you could be sending network packets continously&&&&instead of every 100ms.&&&&&&&&This is what this patch implements.  qemu_clock_warp is called: 1)&&&&whenever a vm_clock timer is adjusted, to ensure the warp_timer is&&&&synchronized; 2) at strategic points in the CPU thread, to make sure&&&&the insn counter is synchronized before the CPU starts running.&&&&In any case, the warp_timer is disabled while the CPU is running,&&&&because the insn counter will then be making progress on its own.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Tested-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&& "
1," ccid: add ccid-card-emulated device This devices uses libcacard (internal) to emulate a smartcard conforming&&&&to the CAC standard. It attaches to the usb-ccid bus. Usage instructions&&&&(example command lines) are in the following patch in docs/ccid.txt. It&&&&uses libcacard which uses nss, so it can work with both hw cards and&&&&certificates (files).&&&&&&&&Signed-off-by: Alon Levy <alevy@redhat.com>&&&&&&&&---&&&&&&&&changes from v20->v21: (Jes Sorenson review)&&&& * cosmetics&&&& * use qemu-thread and qemu_malloc/qemu_free&&&&&&&&changes from v19->v20:&&&& * checkpatch.pl&&&&&&&&changes from v18->v19:&&&& * add qdev.desc&&&& * backend: drop the enumeration property, back to using a string one.&&&&&&&&changes from v16->v17:&&&& * use PROP_TYPE_ENUM for backend&&&&&&&&changes from v15->v16:&&&& * fix error reporting in initfn&&&& * bump copyright year&&&& * update copyright license&&&&&&&&changes from v1:&&&& * remove stale comments, use only c-style comments&&&& * bugfix, forgot to set recv_len&&&& * change reader name to 'Virtual Reader'&&&& "
1, rtl8139: use TARGET_FMT_plx in debug messages Prevents a compilation failure when DEBUG_RTL8139 is defined:&&&&&&&&CC    libhw32/rtl8139.o&&&&cc1: warnings being treated as errors&&&&hw/rtl8139.c: In function 鈥榬tl8139_cplus_transmit_one鈥?&&&&hw/rtl8139.c:1960: error: format 鈥?8lx鈥?expects type 鈥榣ong unsigned int鈥? but argument 5 has type 鈥榯arget_phys_addr_t鈥?&&&make[1]: *** [rtl8139.o] Error 1&&&&&&&&Signed-off-by: Benjamin Poirier <benjamin.poirier@gmail.com>&&&&Cc: Igor V. Kovalenko <igor.v.kovalenko@gmail.com>&&&&Reviewed-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1, vl.c: Fix compilation failure if CONFIG_SDL isn't defined Fix a compilation failure if CONFIG_SDL isn't defined (gcc complained&&&&that the label 'invalid_display' wasn't used).&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1, target-arm: Use TCG temporary leak debugging facilities Use the new TCG temporary leak debugging facilities to&&&&check that each ARM instruction does not leak temporaries.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," simpletrace: Thread-safe tracing Trace events outside the global mutex cannot be used with the simple&&&&trace backend since it is not thread-safe.  There is no check to prevent&&&&them being enabled so people sometimes learn this the hard way.&&&&&&&&This patch restructures the simple trace backend with a ring buffer&&&&suitable for multiple concurrent writers.  A writeout thread empties the&&&&trace buffer when threshold fill levels are reached.  Should the&&&&writeout thread be unable to keep up with trace generation, records will&&&&simply be dropped.&&&&&&&&Each time events are dropped a special record is written to the trace&&&&file indicating how many events were dropped.  The event ID is&&&&0xfffffffffffffffe and its signature is dropped(uint32_t count).&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&& "
1," vnc: fix a memory leak in threaded vnc server VncJobQueue's buffer is intended to be used for&&&&as the output buffer for all operations in this queue,&&&&but unfortunatly.&&&&&&&&vnc_async_encoding_start() is in charge of setting this&&&&buffer as the current output buffer, but&&&&vnc_async_encoding_end() was not writting the changes back&&&&to VncJobQueue, resulting in a big and ugly memleak.&&&&&&&&Signed-off-by: Corentin Chary <corentincj@iksaif.net>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qemu-char: Check for missing backend name Check if the backend option is missing before searching the backend&&&&table.  This fixes a NULL pointer dereference when QEMU is invoked with&&&&the following invalid command-line:&&&&&&&&  $ qemu -chardev id=foo,path=/tmp/socket&&&&&&&&Previously QEMU would segfault, now it produces this error message:&&&&&&&&  chardev: ""foo"" missing backend&&&&&&&&Signed-off-by: Stefan Hajnoczi <stefanha@linux.vnet.ibm.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," fix QemuOpts leak Now that no backend's open function saves the passed QemuOpts, fix a leak&&&&in the qemu_chr_open backwards-compatible parser.&&&&&&&&Signed-off-by: Paolo Bonzini <pbonzini@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," Avoid divide by zero when there is no block device to migrate When block migration is requested and no read-write block device is&&&&present, a divide by zero exception is triggered because&&&&total_sector_sum equals zero.&&&&&&&&Signed-off-by: Pierre Riteau <Pierre.Riteau@irisa.fr>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," Stop current VCPU on synchronous reset requests If some I/O operation ends up calling qemu_system_reset_request in VCPU&&&&context, we record this and inform the io-thread, but we do not&&&&terminate the VCPU loop. This can lead to fairly unexpected behavior if&&&&the triggering reset operation is supposed to work synchronously.&&&&&&&&Fix this for TCG (when run in deterministic I/O mode) by setting the&&&&VCPU on stop and issuing a cpu_exit. KVM requires some more work on its&&&&VCPU loop.&&&&&&&&[ ported from qemu-kvm ]&&&&&&&&Signed-off-by: Jan Kiszka <jan.kiszka@siemens.com>&&&&Signed-off-by: Marcelo Tosatti <mtosatti@redhat.com>&&&& "
1," cirrus_vga: fix division by 0 for color expansion rop Commit d85d0d3883f5a567fa2969a0396e42e0a662b3fa introduces a regression&&&&with Windows ME that leads to a division by 0 and a crash.&&&&&&&&It uses the color expansion rop with the source pitch set to 0. This is&&&&something allowed, as the manual explicitely says ""When the source of&&&&color-expand data is display memory, the source pitch is ignored."".&&&&&&&&This patch fixes this regression by computing sx, sy and others&&&&variables only if they are going to be used later, that is for a plain&&&&copy ROP. It basically consists in moving code.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," target-sparc: fix udiv(cc) and sdiv(cc) Since commit 5a4bb580cdb10b066f9fd67658b31cac4a4ea5e5, Xorg crashes on&&&&a Debian Etch image. The commit itself is fine, but it triggers a bug&&&&due to wrong computation of flags for udiv(cc) and sdiv(cc).&&&&&&&&This patch only compute cc_src2 for the cc version of udiv/sdiv. It&&&&also moves the update of cc_dst and cc_op to the helper, as it is&&&&faster doing it here when there is already an helper.&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Blue Swirl <blauwirbel@gmail.com>&&&& "
1, target-arm: Set privileged bit in TB flags correctly for M profile M profile ARM cores don't have a CPSR mode field. Set the bit in the&&&&TB flags that indicates non-user mode correctly for these cores.&&&&&&&&Signed-off-by: Peter Maydell <peter.maydell@linaro.org>&&&&Reviewed-by: Aurelien Jarno <aurelien@aurel32.net>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& 
1," [virto-9p] Implement TLOCK Synopsis&&&&&&&&    size[4] TLock tag[2] fid[4] flock[n]&&&&    size[4] RLock tag[2] status[1]&&&&&&&&Description&&&&&&&&Tlock is used to acquire/release byte range posix locks on a file&&&&identified by given fid. The reply contains status of the lock request&&&&&&&&    flock structure:&&&&        type[1] - Type of lock: F_RDLCK, F_WRLCK, F_UNLCK&&&&        flags[4] - Flags could be either of&&&&          P9_LOCK_FLAGS_BLOCK(1) - Blocked lock request, if there is a&&&&            conflicting lock exists, wait for that lock to be released.&&&&          P9_LOCK_FLAGS_RECLAIM(2) - Reclaim lock request, used when client is&&&&            trying to reclaim a lock after a server restrart (due to crash)&&&&        start[8] - Starting offset for lock&&&&        length[8] - Number of bytes to lock&&&&          If length is 0, lock all bytes starting at the location 'start'&&&&          through to the end of file&&&&        pid[4] - PID of the process that wants to take lock&&&&        client_id[4] - Unique client id&&&&&&&&        status[1] - Status of the lock request, can be&&&&          P9_LOCK_SUCCESS(0), P9_LOCK_BLOCKED(1), P9_LOCK_ERROR(2) or&&&&          P9_LOCK_GRACE(3)&&&&          P9_LOCK_SUCCESS - Request was successful&&&&          P9_LOCK_BLOCKED - A conflicting lock is held by another process&&&&          P9_LOCK_ERROR - Error while processing the lock request&&&&          P9_LOCK_GRACE - Server is in grace period, it can't accept new lock&&&&                requests in this period (except locks with&&&&                P9_LOCK_FLAGS_RECLAIM flag set)&&&&&&&&Signed-off-by: M. Mohan Kumar <mohan@in.ibm.com>&&&&Signed-off-by: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>&&&&Signed-off-by: Venkateswararao Jujjuri <jvrao@linux.vnet.ibm.com>&&&& "
1," virtio-pci: Check for virtio_blk_init() failure It can't actually fail now, but the next commit will change that.&&&&&&&&s390_virtio_blk_init() already checks for failure, but&&&&virtio_blk_init_pci() doesn't.  Fix that.&&&&&&&&Signed-off-by: Markus Armbruster <armbru@redhat.com>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," qdev-properties: Fix (u)intXX parsers scanf calls must not use PRI constants, they have probably the wrong size and&&&&corrupt memory. We could replace them by SCN ones, but strtol is simpler than&&&&scanf here anyway. While at it, also fix the parsers to reject garbage after&&&&the number (""4096xyz"" was accepted before).&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Richard Henderson <rth@redhat.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1," block: fix sector comparism in multiwrite_req_compare The difference between the start sectors of two requests can be larger&&&&than the size of the ""int"" type, which can lead to a not correctly&&&&sorted multiwrite array and thus spurious I/O errors and filesystem&&&&corruption due to incorrect request merges.&&&&&&&&So instead of doing the cute sector arithmetics trick spell out the&&&&exact comparisms.&&&&&&&&Spotted by Kevin Wolf based on a testcase from Michael Tokarev.&&&&&&&&Signed-off-by: Christoph Hellwig <hch@lst.de>&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&& "
1," target-i386: fix crash on x86 32bit linux host with hw breakpoint exceptions If you make use of hw breakpoints on a 32bit x86 linux host, qemu&&&&will segmentation fault when processing the exception.&&&&&&&&The problem is that the value of env is stored in $ebp in the op_helper&&&&raise_exception() function, and it can have the wrong value when&&&&calling it from non generated code.&&&&&&&&It is possible to work around the problem by restoring the value of&&&&env before calling raise_exception() using a new helper function that&&&&takes (CPUState *) as one of the arguments.&&&&&&&&Signed-off-by: Jason Wessel <jason.wessel@windriver.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, virtio-net: fix network stall under load Fix a race condition where qemu finds that there are not enough virtio&&&&ring buffers available and the guest make more buffers available before&&&&qemu can enable notifications.&&&&&&&&Signed-off-by: Tom Lendacky <toml@us.ibm.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," block/raw-posix: Abort on pread beyond end of non-growable file This shouldn't happen under any normal circumstances. However, it looks like&&&&it's possible to achieve this with corrupted images. Without this patch&&&&raw_pread is hanging in an endless loop in such cases.&&&&&&&&The patch is not affecting growable files, for which such reads happen in&&&&normal use cases. raw_pread_aligned already handles these cases and won't&&&&return zero in the first place.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, vmware_vga: Check cursor dimensions passed from guest to avoid buffer overflow Check that the cursor dimensions passed from the guest for the&&&&DEFINE_CURSOR command don't overflow the available space in the&&&&cursor.image[] or cursor.mask[] arrays before copying data from the&&&&guest into those arrays.&&&&&&&&Signed-off-by: Roland Dreier <rolandd@cisco.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," block: Introduce BDRV_O_NO_BACKING If an image references a backing file that doesn't exist, qemu-img info fails&&&&to open this image. Exactly in this case the info would be valuable, though:&&&&the user might want to find out which file is missing.&&&&&&&&This patch introduces a BDRV_O_NO_BACKING flag to ignore the backing file when&&&&opening the image. qemu-img info is the first user and provides info now even&&&&if the backing file is invalid.&&&&&&&&Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, qemu-io: Fix memory leak Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," osdep: Fix runtime failure on older Linux kernels If QEMU finds newer kernel header files on compilation time, it will use&&&&advertised features like pipe2 or SOCK_CLOEXEC by just doing a compile test.&&&&If later the executables are executed on an older kernel (<2.6.27,&&&&like Xen Dom0 2.6.18), then QEMU will fail on opening sockets and creating&&&&pipes and returns the rather unspecific ""qemu_init_main_loop failed"".&&&&This patch fixes this by checking the return values of these calls&&&&for EINVAL and ENOSYS and falling back to the older versions automatically.&&&&&&&&Signed-off-by: Andre Przywara <andre.przywara@amd.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&& "
1, qemu-img: Fix memory leak Signed-off-by: Kevin Wolf <kwolf@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," virtio: verify features on load migrating between hosts which have different features&&&&might break silently, if the migration destination&&&&does not support some features supported by source.&&&&&&&&Prevent this from happening by comparing acked feature&&&&bits with the mask supported by the device.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," net: use qemu_send_packet_raw() in qemu_announce_self() Use qemu_send_packet_raw to send gratuitous arp. This will ensure that&&&&vnet header is handled properly.&&&&&&&&Also, avoid sending the gratuitous packet to the guest. There doesn't&&&&appear to be any reason for doing that and the code will currently just&&&&crash if the NIC is not associated with a vlan.&&&&&&&&Signed-off-by: Gleb Natapov <gleb@redhat.com>&&&&Signed-off-by: Mark McLoughlin <markmc@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," hotplug: more fixes for scsi disk hotplug. Changes:&&&& - create common scsi_hot_add function for adding a scsi disk to&&&&   a adapter.&&&& - Add sanity checks.  You can't drive_add disks to the VGA any more.&&&& - Ignore the unit value calculated by drive_init, add a comment&&&&   explaining why.  Review the patch to find the details ;)&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," qemu/pci: clarify pci config load routine PCI load routine has to be called with size equal to 256 (otherwise it&&&&will crash in weird ways).  So assert this, making code clearer.&&&&Also avoid dynamically sized array on stack - good for portability.&&&&&&&&Signed-off-by: Michael S. Tsirkin <mst@redhat.com>&&&&Cc: Juan Quintela <quintela@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1," fix segfault in setting migration speed Hi,&&&&&&&&Whoever wrote this migrate_set_speed function is totally stupid.&&&&&&&&Any failed or completed migration keeps its state to allow probing of&&&&migration data, but has no associated file anymore. It is, thus,&&&&possible to crash qemu by calling migrate_set_speed after a migration&&&&is finished (or failed, or cancelled), but before another one starts.&&&&&&&&This patch fixes it.&&&&&&&&Signed-off-by: Glauber Costa <glommer@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& "
1, cpu_unregister_map_client: fix memory leak. fix memory leak in cpu_unregister_map_client() and cpu_notify_map_clients().&&&&&&&&Signed-off-by: Isaku Yamahata <yamahata@valinux.co.jp>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&& 
1," Fix crash on resolution change -> screen dump -> vga redraw (Avi Kivity) The vga screen dump function updates last_width and last_height,&&&&but does not change the DisplaySurface that these variables describe.&&&&A consequent vga_draw_graphic() will therefore fail to resize the&&&&surface and crash.&&&&&&&&Fix by invalidating the display state after a screen dump, forcing&&&&vga_draw_graphic() to reallocate the DisplaySurface.&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@7026 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," vnc: cleanup surface handling, fix screen corruption bug. (Gerd Hoffmann) This patch killes the old_data hack in the qemu server and replaces&&&&it with a clean separation of the guest-visible display surface and&&&&the vnc server display surface.  Both guest and server surface have&&&&their own dirty bitmap for tracking screen updates.&&&&&&&&Workflow is this:&&&&&&&&(1) The guest writes to the guest surface.  With shared buffers being&&&&    active the guest writes are directly visible to the vnc server code.&&&&    Note that this may happen in parallel to the vnc server code running&&&&    (today only in xenfb, once we have vcpu threads in qemu also for&&&&    other display adapters).&&&&&&&&(2) vnc_update() callback tags the specified area in the guest dirty&&&&    map.&&&&&&&&(3) vnc_update_client() will first walk through the guest dirty map.  It&&&&    will compare guest and server surface for all regions tagged dirty&&&&    and in case the screen content really did change the server surface&&&&    and dirty map are updated.&&&&    Note: old code used old_data in a simliar way, so this does *not*&&&&    introduce an extra memcpy.&&&&&&&&(4) Then vnc_update_cient() will send the updates to the vnc client&&&&    using the server surface and dirty map.&&&&    Note: old code used the guest-visible surface instead, causing&&&&    screen corruption in case of guest screen updates running in&&&&    parallel.&&&&&&&&The separate dirty bitmap also has the nice effect that forced screen&&&&updates can be done cleanly by simply tagging the area in both guest and&&&&server dirty map.  The old, hackish way was memset(old_data, 42, size)&&&&to trick the code checking for screen changes.&&&&&&&&Signed-off-by: Gerd Hoffmann <kraxel@redhat.com>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6860 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," MTRR support on x86 (Carl-Daniel Hailfinger) The current codebase ignores MTRR (Memory Type Range Register)&&&&configuration writes and reads because Qemu does not implement caching.&&&&All BIOS/firmware in know of for x86 do implement a mode called&&&&Cache-as-RAM (CAR) which locks down the CPU cache lines and uses the CPU&&&&cache like RAM before RAM is enabled. Qemu assumes RAM is accessible&&&&from the start, but it would be nice to be able to run real&&&&BIOS/firmware in Qemu. For that, we need CAR support and for CAR support&&&&we have to support MTRRs.&&&&&&&&This patch is a first step in that direction. MTRRs are MSRs supported&&&&by all recent x86 CPUs, even old i586. Besides influencing cache, the&&&&MTRRs can be written and read back, so discarding MTRR writes violates&&&&the expectations of existing code out there.&&&&&&&&An added benefit of this patch is that it fixes the following Linux&&&&kernel error message present in recent kernels (provided the BIOS has&&&&the recent MTRR patches applied):&&&& ------------[ cut here ]------------&&&&WARNING: at arch/x86/kernel/cpu/mtrr/main.c:1500 mtrr_trim_uncached_memory+0x382/0x384()&&&&WARNING: strange, CPU MTRRs all blank?&&&&Modules linked in:&&&&Supported: Yes&&&&Pid: 0, comm: swapper Not tainted 2.6.27.7-9-default #1&&&& [<c0106570>] dump_trace+0x6b/0x249&&&& [<c01070a5>] show_trace+0x20/0x39&&&& [<c0343c02>] dump_stack+0x71/0x76&&&& [<c012acb2>] warn_slowpath+0x6f/0x90&&&& [<c0542f8f>] mtrr_trim_uncached_memory+0x382/0x384&&&& [<c053f24d>] setup_arch+0x40d/0x639&&&& [<c053a6ac>] start_kernel+0x6b/0x31f&&&& =======================&&&& ---[ end trace 4eaa2a86a8e2da22 ]---&&&&&&&&Handle common x86 MTRR reads and writes, but don't act on them.&&&&&&&&Signed-off-by: Carl-Daniel Hailfinger <c-d.hailfinger.devel.2006@gmx.net>&&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6449 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Add cirrus reset handler The vga reset handler overwrites some cirrus registers, causing reboots&&&&to corrupt cirrus state to the point that guests can only bring up 640x480&&&&resolutions.&&&&&&&&Fix by adding a dedicated cirrus reset handler (which calls the common vga&&&&handler).&&&&&&&&Signed-off-by: Avi Kivity <avi@redhat.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6191 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Fix and rearrange 'tarbin' Makefile rule This patch fixes the 'tarbin' Makefile rule (which was broken due to&&&&a missing '\' for line-continuation), and also rearranges that rule to&&&&match the ordering that is used in the configure script, so that the&&&&list can be checked more easily, to avoid conflicts, etc.&&&&&&&&Signed-off-by: Stuart Brady <stuart.brady@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@6149 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, target-alpha: fix termbits and target IOC macros This patch fixes the two following problems for Alpha linux-user:&&&&   - termbits.h is incorrectly using host IOC macros and structures&&&&   - IOC bitfields sizes are incorrectly set&&&&&&&&This patch corrects the ioctl TCGETS done by isatty function call&&&&on Alpha (when running SPEC crafty for instance).&&&&&&&&Signed-off-by: Laurent Desnogues <laurent.desnogues@gmail.com>&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5704 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, fix off-by-one generating vmdk backing files (Avi Kivity) Signed-off-by: Avi Kivity <avi@redhat.com> &&&&Signed-off-by: Anthony Liguori <aliguori@us.ibm.com>&&&&&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5567 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, CRIS: Plug a few temp leaks. Signed-off-by: Edgar E. Iglesias <edgar.iglesias@gmail.com>&&&&&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5554 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Fix alignment problem with some 64bit load/store instructions LD/STD/LWA require displacement to be multiple of 4, provide&&&&tcg_out_ldsta which checks the supplied displacement and falls&&&&back on indexed variant when the check fails. All uses of&&&&LD/STD/LWA outside of tcg_out_ldst appear to be safe.&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5670 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Add image format option for USB mass-storage devices (fix CVE-2008-1945)&&&&&&&&Signed-off-by: Aurelien Jarno <aurelien@aurel32.net>&&&&&&&&git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@5059 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Fix usage of the -1 constant in the PowerPC target code: fix invalid size casts and/or sign-extensions. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3626 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," PowerPC MMU and exception fixes: * PowerPC 601 (and probably POWER/POWER2) uses a different BAT format than   later PowerPC implementation. * Bugfix in BATs check: must not stop after 4 BATs when more are provided. * Enable POWER 'rac' instruction. * Fix exception prefix for all supported PowerPC implementations. * Fix exceptions, MMU model and bus model for PowerPC 601 & 620. * Enable PowerPC 620 as it could mostly boot a PreP target. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3518 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1, Bugfix: PowerPC 64 slbia never invalidates the first segment entry. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3445 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1, Remove synonymous in PowerPC MSR bits definitions. Fix MSR EP bit buggy definition. Remove unuseful MSR flags. Fix MSR bits and flags definitions for most supported PowerPC implementations. Add MSR definitions/flags constistency checks and optional dump. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3354 c046a42c-6fe2-441c-8c8c-71466251a162&&&& 
1," Fix crash in set registers in PPC gdb-stub, by Jason Wessel. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3079 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," Fix division by zero handling, by Joris van Rantwijk. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3012 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
1," EFAULT - verify pages are in cache and are read/write, by Thayne Harbaugh. git-svn-id: svn://svn.savannah.nongnu.org/qemu/trunk@3506 c046a42c-6fe2-441c-8c8c-71466251a162&&&& "
