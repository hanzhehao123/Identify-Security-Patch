diff --git a/target/arm/translate-a64.c b/target/arm/translate-a64.c
index 95c2853f39..d6906d9012 100644
--- a/target/arm/translate-a64.c
+++ b/target/arm/translate-a64.c
@@ -6501,7 +6501,8 @@ static void disas_fp_1src(DisasContext *s, uint32_t insn)
     int rd = extract32(insn, 0, 5);
 
     if (mos) {
-        goto do_unallocated;
+        unallocated_encoding(s);
+        return;
     }
 
     switch (opcode) {
@@ -6510,7 +6511,8 @@ static void disas_fp_1src(DisasContext *s, uint32_t insn)
         /* FCVT between half, single and double precision */
         int dtype = extract32(opcode, 0, 2);
         if (type == 2 || dtype == type) {
-            goto do_unallocated;
+            unallocated_encoding(s);
+            return;
         }
         if (!fp_access_check(s)) {
             return;
@@ -6522,7 +6524,8 @@ static void disas_fp_1src(DisasContext *s, uint32_t insn)
 
     case 0x10 ... 0x13: /* FRINT{32,64}{X,Z} */
         if (type > 1 || !dc_isar_feature(aa64_frint, s)) {
-            goto do_unallocated;
+            unallocated_encoding(s);
+            return;
         }
         /* fall through */
     case 0x0 ... 0x3:
@@ -6544,7 +6547,8 @@ static void disas_fp_1src(DisasContext *s, uint32_t insn)
             break;
         case 3:
             if (!dc_isar_feature(aa64_fp16, s)) {
-                goto do_unallocated;
+                unallocated_encoding(s);
+                return;
             }
 
             if (!fp_access_check(s)) {
@@ -6553,12 +6557,11 @@ static void disas_fp_1src(DisasContext *s, uint32_t insn)
             handle_fp_1src_half(s, opcode, rd, rn);
             break;
         default:
-            goto do_unallocated;
+            unallocated_encoding(s);
         }
         break;
 
     default:
-    do_unallocated:
         unallocated_encoding(s);
         break;
     }