diff --git a/scripts/qmp/qom-fuse b/scripts/qmp/qom-fuse
index 1fb3008a16..805e99c8ec 100755
--- a/scripts/qmp/qom-fuse
+++ b/scripts/qmp/qom-fuse
@@ -1,19 +1,7 @@
 #!/usr/bin/env python3
-"""
-QEMU Object Model FUSE filesystem tool
-
-This script offers a simple FUSE filesystem within which the QOM tree
-may be browsed, queried and edited using traditional shell tooling.
-
-This script requires the 'fusepy' python package.
-
-ENV:
-    QMP_SOCKET: Path to the QMP server socket
-
-Usage:
-    qom-fuse /mount/to/here
-"""
 ##
+# QEMU Object Model test tools
+#
 # Copyright IBM, Corp. 2012
 # Copyright (C) 2020 Red Hat, Inc.
 #
@@ -42,7 +30,6 @@ fuse.fuse_python_api = (0, 2)
 
 
 class QOMFS(Operations):
-    """QOMFS implements fuse.Operations to provide a QOM filesystem."""
     def __init__(self, qmp):
         self.qmp = qmp
         self.qmp.connect()
@@ -50,7 +37,6 @@ class QOMFS(Operations):
         self.ino_count = 1
 
     def get_ino(self, path):
-        """Get an inode number for a given QOM path."""
         if path in self.ino_map:
             return self.ino_map[path]
         self.ino_map[path] = self.ino_count
@@ -58,7 +44,6 @@ class QOMFS(Operations):
         return self.ino_map[path]
 
     def is_object(self, path):
-        """Is the given QOM path an object?"""
         try:
             self.qmp.command('qom-list', path=path)
             return True
@@ -66,7 +51,6 @@ class QOMFS(Operations):
             return False
 
     def is_property(self, path):
-        """Is the given QOM path a property?"""
         path, prop = path.rsplit('/', 1)
         if path == '':
             path = '/'
@@ -79,7 +63,6 @@ class QOMFS(Operations):
             return False
 
     def is_link(self, path):
-        """Is the given QOM path a link?"""
         path, prop = path.rsplit('/', 1)
         if path == '':
             path = '/'