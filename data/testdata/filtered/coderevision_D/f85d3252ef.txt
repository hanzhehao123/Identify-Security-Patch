diff --git a/scripts/qmp/qemu-ga-client b/scripts/qmp/qemu-ga-client
index ece9f74fa8..e81937e0ea 100755
--- a/scripts/qmp/qemu-ga-client
+++ b/scripts/qmp/qemu-ga-client
@@ -40,7 +40,6 @@ See also: https://wiki.qemu.org/Features/QAPI/GuestAgent
 
 import argparse
 import base64
-import errno
 import os
 import random
 import sys
@@ -50,13 +49,6 @@ sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..', 'python'))
 from qemu import qmp
 
 
-# This script has not seen many patches or careful attention in quite
-# some time. If you would like to improve it, please review the design
-# carefully and add docstrings at that point in time. Until then:
-
-# pylint: disable=missing-docstring
-
-
 class QemuGuestAgent(qmp.QEMUMonitorProtocol):
     def __getattr__(self, name):
         def wrapper(**kwds):
@@ -112,8 +104,7 @@ class QemuGuestAgentClient:
 
         return '\n'.join(msgs)
 
-    @classmethod
-    def __gen_ipv4_netmask(cls, prefixlen):
+    def __gen_ipv4_netmask(self, prefixlen):
         mask = int('1' * prefixlen + '0' * (32 - prefixlen), 2)
         return '.'.join([str(mask >> 24),
                          str((mask >> 16) & 0xff),
@@ -216,12 +207,10 @@ def _cmd_fstrim(client, args):
 
 
 def _cmd_ifconfig(client, args):
-    assert not args
     print(client.ifconfig())
 
 
 def _cmd_info(client, args):
-    assert not args
     print(client.info())
 
 
@@ -250,7 +239,6 @@ def _cmd_suspend(client, args):
 
 
 def _cmd_shutdown(client, args):
-    assert not args
     client.shutdown()
 
 
@@ -258,12 +246,10 @@ _cmd_powerdown = _cmd_shutdown
 
 
 def _cmd_halt(client, args):
-    assert not args
     client.shutdown('halt')
 
 
 def _cmd_reboot(client, args):
-    assert not args
     client.shutdown('reboot')
 
 
@@ -283,6 +269,8 @@ def send_command(address, cmd, args):
     try:
         client = QemuGuestAgentClient(address)
     except OSError as err:
+        import errno
+
         print(err)
         if err.errno == errno.ECONNREFUSED:
             print('Hint: qemu is not running?')