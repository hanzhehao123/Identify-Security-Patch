diff --git a/tests/qtest/virtio-scsi-test.c b/tests/qtest/virtio-scsi-test.c
index 8ceb12aacd..1b7ecc1c8f 100644
--- a/tests/qtest/virtio-scsi-test.c
+++ b/tests/qtest/virtio-scsi-test.c
@@ -200,42 +200,6 @@ static void test_unaligned_write_same(void *obj, void *data,
     qvirtio_scsi_pci_free(vs);
 }
 
-/* Test UNMAP with a large LBA, issue #345 */
-static void test_unmap_large_lba(void *obj, void *data,
-                                      QGuestAllocator *t_alloc)
-{
-    QVirtioSCSI *scsi = obj;
-    QVirtioSCSIQueues *vs;
-    const uint8_t unmap[VIRTIO_SCSI_CDB_SIZE] = {
-        0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00
-    };
-
-    /*
-     * Default null-co device size is 2**30
-     * LBA 0x7fff is ~ 1/8 into device, with 4k blocks
-     * if check_lba_range incorrectly using 512 bytes, will trigger sense error
-     */
-    uint8_t unmap_params[0x18] = {
-        0x00, 0x16, /* unmap data length */
-        0x00, 0x10, /* unmap block descriptor data length */
-        0x00, 0x00, 0x00, 0x00, /* reserved */
-        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, /* LBA */
-        0x00, 0x00, 0x03, 0xff, /* sector count */
-        0x00, 0x00, 0x00, 0x00, /* reserved */
-    };
-    struct virtio_scsi_cmd_resp resp;
-
-    alloc = t_alloc;
-    vs = qvirtio_scsi_init(scsi->vdev);
-
-    virtio_scsi_do_command(vs, unmap, NULL, 0, unmap_params,
-                           sizeof(unmap_params), &resp);
-    g_assert_cmphex(resp.response, ==, 0);
-    g_assert_cmphex(resp.status, !=, CHECK_CONDITION);
-
-    qvirtio_scsi_pci_free(vs);
-}
-
 static void test_write_to_cdrom(void *obj, void *data,
                                 QGuestAllocator *t_alloc)
 {
@@ -329,17 +293,6 @@ static void *virtio_scsi_setup(GString *cmd_line, void *arg)
     return arg;
 }
 
-static void *virtio_scsi_setup_4k(GString *cmd_line, void *arg)
-{
-    g_string_append(cmd_line,
-                    " -drive file=blkdebug::null-co://,"
-                    "file.image.read-zeroes=on,"
-                    "if=none,id=dr1,format=raw "
-                    "-device scsi-hd,drive=dr1,lun=0,scsi-id=1"
-                    ",logical_block_size=4k,physical_block_size=4k");
-    return arg;
-}
-
 static void *virtio_scsi_setup_cd(GString *cmd_line, void *arg)
 {
     g_string_append(cmd_line,
@@ -370,10 +323,6 @@ static void register_virtio_scsi_test(void)
     qos_add_test("unaligned-write-same", "virtio-scsi",
                  test_unaligned_write_same, &opts);
 
-    opts.before = virtio_scsi_setup_4k;
-    qos_add_test("large-lba-unmap", "virtio-scsi",
-                 test_unmap_large_lba, &opts);
-
     opts.before = virtio_scsi_setup_cd;
     qos_add_test("write-to-cdrom", "virtio-scsi", test_write_to_cdrom, &opts);
 