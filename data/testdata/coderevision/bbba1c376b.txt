diff --git a/block/nbd.c b/block/nbd.c
index 01d2c2efad..f4b3407587 100644
--- a/block/nbd.c
+++ b/block/nbd.c
@@ -152,12 +152,8 @@ static void nbd_co_establish_connection_cancel(BlockDriverState *bs,
 static int nbd_client_handshake(BlockDriverState *bs, Error **errp);
 static void nbd_yank(void *opaque);
 
-static void nbd_clear_bdrvstate(BlockDriverState *bs)
+static void nbd_clear_bdrvstate(BDRVNBDState *s)
 {
-    BDRVNBDState *s = (BDRVNBDState *)bs->opaque;
-
-    yank_unregister_instance(BLOCKDEV_YANK_INSTANCE(bs->node_name));
-
     object_unref(OBJECT(s->tlscreds));
     qapi_free_SocketAddress(s->saddr);
     s->saddr = NULL;
@@ -2279,6 +2275,9 @@ static int nbd_process_options(BlockDriverState *bs, QDict *options,
     ret = 0;
 
  error:
+    if (ret < 0) {
+        nbd_clear_bdrvstate(s);
+    }
     qemu_opts_del(opts);
     return ret;
 }
@@ -2289,6 +2288,11 @@ static int nbd_open(BlockDriverState *bs, QDict *options, int flags,
     int ret;
     BDRVNBDState *s = (BDRVNBDState *)bs->opaque;
 
+    ret = nbd_process_options(bs, options, errp);
+    if (ret < 0) {
+        return ret;
+    }
+
     s->bs = bs;
     qemu_co_mutex_init(&s->send_mutex);
     qemu_co_queue_init(&s->free_sema);
@@ -2297,23 +2301,20 @@ static int nbd_open(BlockDriverState *bs, QDict *options, int flags,
         return -EEXIST;
     }
 
-    ret = nbd_process_options(bs, options, errp);
-    if (ret < 0) {
-        goto fail;
-    }
-
     /*
      * establish TCP connection, return error if it fails
      * TODO: Configurable retry-until-timeout behaviour.
      */
     if (nbd_establish_connection(bs, s->saddr, errp) < 0) {
-        ret = -ECONNREFUSED;
-        goto fail;
+        yank_unregister_instance(BLOCKDEV_YANK_INSTANCE(bs->node_name));
+        return -ECONNREFUSED;
     }
 
     ret = nbd_client_handshake(bs, errp);
     if (ret < 0) {
-        goto fail;
+        yank_unregister_instance(BLOCKDEV_YANK_INSTANCE(bs->node_name));
+        nbd_clear_bdrvstate(s);
+        return ret;
     }
     /* successfully connected */
     s->state = NBD_CLIENT_CONNECTED;
@@ -2325,10 +2326,6 @@ static int nbd_open(BlockDriverState *bs, QDict *options, int flags,
     aio_co_schedule(bdrv_get_aio_context(bs), s->connection_co);
 
     return 0;
-
-fail:
-    nbd_clear_bdrvstate(bs);
-    return ret;
 }
 
 static int nbd_co_flush(BlockDriverState *bs)
@@ -2372,8 +2369,11 @@ static void nbd_refresh_limits(BlockDriverState *bs, Error **errp)
 
 static void nbd_close(BlockDriverState *bs)
 {
+    BDRVNBDState *s = bs->opaque;
+
     nbd_client_close(bs);
-    nbd_clear_bdrvstate(bs);
+    yank_unregister_instance(BLOCKDEV_YANK_INSTANCE(bs->node_name));
+    nbd_clear_bdrvstate(s);
 }
 
 /*