diff --git a/target/arm/cpu.h b/target/arm/cpu.h
index df2f189c49..f1bd7d787c 100644
--- a/target/arm/cpu.h
+++ b/target/arm/cpu.h
@@ -564,7 +564,6 @@ typedef struct CPUARMState {
         uint32_t cpacr[M_REG_NUM_BANKS];
         uint32_t nsacr;
         int ltpsize;
-        uint32_t vpr;
     } v7m;
 
     /* Information associated with an exception about to be taken:
@@ -1762,11 +1761,6 @@ FIELD(V7M_FPCCR, ASPEN, 31, 1)
      R_V7M_FPCCR_UFRDY_MASK |                   \
      R_V7M_FPCCR_ASPEN_MASK)
 
-/* v7M VPR bits */
-FIELD(V7M_VPR, P0, 0, 16)
-FIELD(V7M_VPR, MASK01, 16, 4)
-FIELD(V7M_VPR, MASK23, 20, 4)
-
 /*
  * System register ID fields.
  */
diff --git a/target/arm/machine.c b/target/arm/machine.c
index 62a71a3b64..6ad1d306b1 100644
--- a/target/arm/machine.c
+++ b/target/arm/machine.c
@@ -318,24 +318,6 @@ static const VMStateDescription vmstate_m_fp = {
     }
 };
 
-static bool mve_needed(void *opaque)
-{
-    ARMCPU *cpu = opaque;
-
-    return cpu_isar_feature(aa32_mve, cpu);
-}
-
-static const VMStateDescription vmstate_m_mve = {
-    .name = "cpu/m/mve",
-    .version_id = 1,
-    .minimum_version_id = 1,
-    .needed = mve_needed,
-    .fields = (VMStateField[]) {
-        VMSTATE_UINT32(env.v7m.vpr, ARMCPU),
-        VMSTATE_END_OF_LIST()
-    },
-};
-
 static const VMStateDescription vmstate_m = {
     .name = "cpu/m",
     .version_id = 4,
@@ -362,7 +344,6 @@ static const VMStateDescription vmstate_m = {
         &vmstate_m_other_sp,
         &vmstate_m_v8m,
         &vmstate_m_fp,
-        &vmstate_m_mve,
         NULL
     }
 };
diff --git a/target/arm/translate-vfp.c b/target/arm/translate-vfp.c
index 2316e105ac..791c4f5f70 100644
--- a/target/arm/translate-vfp.c
+++ b/target/arm/translate-vfp.c
@@ -703,12 +703,6 @@ static FPSysRegCheckResult fp_sysreg_checks(DisasContext *s, int regno)
             return FPSysRegCheckFailed;
         }
         break;
-    case ARM_VFP_VPR:
-    case ARM_VFP_P0:
-        if (!dc_isar_feature(aa32_mve, s)) {
-            return FPSysRegCheckFailed;
-        }
-        break;
     default:
         return FPSysRegCheckFailed;
     }
@@ -823,25 +817,6 @@ static bool gen_M_fp_sysreg_write(DisasContext *s, int regno,
         tcg_temp_free_i32(sfpa);
         break;
     }
-    case ARM_VFP_VPR:
-        /* Behaves as NOP if not privileged */
-        if (IS_USER(s)) {
-            break;
-        }
-        tmp = loadfn(s, opaque);
-        store_cpu_field(tmp, v7m.vpr);
-        break;
-    case ARM_VFP_P0:
-    {
-        TCGv_i32 vpr;
-        tmp = loadfn(s, opaque);
-        vpr = load_cpu_field(v7m.vpr);
-        tcg_gen_deposit_i32(vpr, vpr, tmp,
-                            R_V7M_VPR_P0_SHIFT, R_V7M_VPR_P0_LENGTH);
-        store_cpu_field(vpr, v7m.vpr);
-        tcg_temp_free_i32(tmp);
-        break;
-    }
     default:
         g_assert_not_reached();
     }
@@ -960,19 +935,6 @@ static bool gen_M_fp_sysreg_read(DisasContext *s, int regno,
         tcg_temp_free_i32(fpscr);
         break;
     }
-    case ARM_VFP_VPR:
-        /* Behaves as NOP if not privileged */
-        if (IS_USER(s)) {
-            break;
-        }
-        tmp = load_cpu_field(v7m.vpr);
-        storefn(s, opaque, tmp);
-        break;
-    case ARM_VFP_P0:
-        tmp = load_cpu_field(v7m.vpr);
-        tcg_gen_extract_i32(tmp, tmp, R_V7M_VPR_P0_SHIFT, R_V7M_VPR_P0_LENGTH);
-        storefn(s, opaque, tmp);
-        break;
     default:
         g_assert_not_reached();
     }