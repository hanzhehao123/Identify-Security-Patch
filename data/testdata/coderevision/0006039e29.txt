diff --git a/tcg/arm/tcg-target.c.inc b/tcg/arm/tcg-target.c.inc
index f4c9cb8f9f..d0af654c65 100644
--- a/tcg/arm/tcg-target.c.inc
+++ b/tcg/arm/tcg-target.c.inc
@@ -2970,8 +2970,6 @@ int tcg_can_emit_vec_op(TCGOpcode opc, TCGType type, unsigned vece)
     case INDEX_op_shrv_vec:
     case INDEX_op_sarv_vec:
     case INDEX_op_rotli_vec:
-    case INDEX_op_rotlv_vec:
-    case INDEX_op_rotrv_vec:
         return -1;
     default:
         return 0;
@@ -2982,7 +2980,7 @@ void tcg_expand_vec_op(TCGOpcode opc, TCGType type, unsigned vece,
                        TCGArg a0, ...)
 {
     va_list va;
-    TCGv_vec v0, v1, v2, t1, t2, c1;
+    TCGv_vec v0, v1, v2, t1;
     TCGArg a2;
 
     va_start(va, a0);
@@ -3027,37 +3025,6 @@ void tcg_expand_vec_op(TCGOpcode opc, TCGType type, unsigned vece,
         tcg_temp_free_vec(t1);
         break;
 
-    case INDEX_op_rotlv_vec:
-        v2 = temp_tcgv_vec(arg_temp(a2));
-        t1 = tcg_temp_new_vec(type);
-        c1 = tcg_constant_vec(type, vece, 8 << vece);
-        tcg_gen_sub_vec(vece, t1, v2, c1);
-        /* Right shifts are negative left shifts for NEON.  */
-        vec_gen_3(INDEX_op_arm_ushl_vec, type, vece, tcgv_vec_arg(t1),
-                  tcgv_vec_arg(v1), tcgv_vec_arg(t1));
-        vec_gen_3(INDEX_op_arm_ushl_vec, type, vece, tcgv_vec_arg(v0),
-                  tcgv_vec_arg(v1), tcgv_vec_arg(v2));
-        tcg_gen_or_vec(vece, v0, v0, t1);
-        tcg_temp_free_vec(t1);
-        break;
-
-    case INDEX_op_rotrv_vec:
-        v2 = temp_tcgv_vec(arg_temp(a2));
-        t1 = tcg_temp_new_vec(type);
-        t2 = tcg_temp_new_vec(type);
-        c1 = tcg_constant_vec(type, vece, 8 << vece);
-        tcg_gen_neg_vec(vece, t1, v2);
-        tcg_gen_sub_vec(vece, t2, c1, v2);
-        /* Right shifts are negative left shifts for NEON.  */
-        vec_gen_3(INDEX_op_arm_ushl_vec, type, vece, tcgv_vec_arg(t1),
-                  tcgv_vec_arg(v1), tcgv_vec_arg(t1));
-        vec_gen_3(INDEX_op_arm_ushl_vec, type, vece, tcgv_vec_arg(t2),
-                  tcgv_vec_arg(v1), tcgv_vec_arg(t2));
-        tcg_gen_or_vec(vece, v0, t1, t2);
-        tcg_temp_free_vec(t1);
-        tcg_temp_free_vec(t2);
-        break;
-
     default:
         g_assert_not_reached();
     }