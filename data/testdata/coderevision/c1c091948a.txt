diff --git a/tcg/tcg.c b/tcg/tcg.c
index bdeea18234..52e858523c 100644
--- a/tcg/tcg.c
+++ b/tcg/tcg.c
@@ -3015,38 +3015,17 @@ static void check_regs(TCGContext *s)
 
 static void temp_allocate_frame(TCGContext *s, TCGTemp *ts)
 {
-    intptr_t off, size, align;
-
-    switch (ts->type) {
-    case TCG_TYPE_I32:
-        size = align = 4;
-        break;
-    case TCG_TYPE_I64:
-    case TCG_TYPE_V64:
-        size = align = 8;
-        break;
-    case TCG_TYPE_V128:
-        size = align = 16;
-        break;
-    case TCG_TYPE_V256:
-        /* Note that we do not require aligned storage for V256. */
-        size = 32, align = 16;
-        break;
-    default:
-        g_assert_not_reached();
+    if (s->current_frame_offset + (tcg_target_long)sizeof(tcg_target_long) >
+        s->frame_end) {
+        tcg_abort();
     }
-
-    assert(align <= TCG_TARGET_STACK_ALIGN);
-    off = ROUND_UP(s->current_frame_offset, align);
-    assert(off + size <= s->frame_end);
-    s->current_frame_offset = off + size;
-
-    ts->mem_offset = off;
+    ts->mem_offset = s->current_frame_offset;
 #if defined(__sparc__)
     ts->mem_offset += TCG_TARGET_STACK_BIAS;
 #endif
     ts->mem_base = s->frame_temp;
     ts->mem_allocated = 1;
+    s->current_frame_offset += sizeof(tcg_target_long);
 }
 
 static void temp_load(TCGContext *, TCGTemp *, TCGRegSet, TCGRegSet, TCGRegSet);