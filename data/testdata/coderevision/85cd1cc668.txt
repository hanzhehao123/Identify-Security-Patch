diff --git a/migration/savevm.c b/migration/savevm.c
index 72848b946c..52e2d72e4b 100644
--- a/migration/savevm.c
+++ b/migration/savevm.c
@@ -2775,7 +2775,8 @@ bool save_snapshot(const char *name, bool overwrite, const char *vmstate,
     QEMUFile *f;
     int saved_vm_running;
     uint64_t vm_state_size;
-    g_autoptr(GDateTime) now = g_date_time_new_now_local();
+    qemu_timeval tv;
+    struct tm tm;
     AioContext *aio_context;
 
     if (migration_is_blocked(errp)) {
@@ -2835,8 +2836,9 @@ bool save_snapshot(const char *name, bool overwrite, const char *vmstate,
     memset(sn, 0, sizeof(*sn));
 
     /* fill auxiliary fields */
-    sn->date_sec = g_date_time_to_unix(now);
-    sn->date_nsec = g_date_time_get_microsecond(now) * 1000;
+    qemu_gettimeofday(&tv);
+    sn->date_sec = tv.tv_sec;
+    sn->date_nsec = tv.tv_usec * 1000;
     sn->vm_clock_nsec = qemu_clock_get_ns(QEMU_CLOCK_VIRTUAL);
     if (replay_mode != REPLAY_MODE_NONE) {
         sn->icount = replay_get_current_icount();
@@ -2847,8 +2849,9 @@ bool save_snapshot(const char *name, bool overwrite, const char *vmstate,
     if (name) {
         pstrcpy(sn->name, sizeof(sn->name), name);
     } else {
-        g_autofree char *autoname = g_date_time_format(now,  "vm-%Y%m%d%H%M%S");
-        pstrcpy(sn->name, sizeof(sn->name), autoname);
+        /* cast below needed for OpenBSD where tv_sec is still 'long' */
+        localtime_r((const time_t *)&tv.tv_sec, &tm);
+        strftime(sn->name, sizeof(sn->name), "vm-%Y%m%d%H%M%S", &tm);
     }
 
     /* save the VM state */