diff --git a/block/nbd.c b/block/nbd.c
index bf2e939314..8caeafc8d3 100644
--- a/block/nbd.c
+++ b/block/nbd.c
@@ -364,7 +364,7 @@ static int coroutine_fn nbd_co_do_establish_connection(BlockDriverState *bs,
 
     assert(!s->ioc);
 
-    s->ioc = nbd_co_establish_connection(s->conn, &s->info, true, errp);
+    s->ioc = nbd_co_establish_connection(s->conn, &s->info, errp);
     if (!s->ioc) {
         return -ECONNREFUSED;
     }
diff --git a/include/block/nbd.h b/include/block/nbd.h
index 78d101b774..10c8a0bcca 100644
--- a/include/block/nbd.h
+++ b/include/block/nbd.h
@@ -420,7 +420,7 @@ void nbd_client_connection_release(NBDClientConnection *conn);
 
 QIOChannel *coroutine_fn
 nbd_co_establish_connection(NBDClientConnection *conn, NBDExportInfo *info,
-                            bool blocking, Error **errp);
+                            Error **errp);
 
 void coroutine_fn nbd_co_establish_connection_cancel(NBDClientConnection *conn);
 
diff --git a/nbd/client-connection.c b/nbd/client-connection.c
index 7123b1e189..955edafb7c 100644
--- a/nbd/client-connection.c
+++ b/nbd/client-connection.c
@@ -266,8 +266,6 @@ void nbd_client_connection_release(NBDClientConnection *conn)
  *   otherwise the thread is not running, so start a thread and wait for
  *     completion
  *
- * If @blocking is false, don't wait for the thread, return immediately.
- *
  * If @info is not NULL, also do nbd-negotiation after successful connection.
  * In this case info is used only as out parameter, and is fully initialized by
  * nbd_co_establish_connection(). "IN" fields of info as well as related only to
@@ -276,7 +274,7 @@ void nbd_client_connection_release(NBDClientConnection *conn)
  */
 QIOChannel *coroutine_fn
 nbd_co_establish_connection(NBDClientConnection *conn, NBDExportInfo *info,
-                            bool blocking, Error **errp)
+                            Error **errp)
 {
     QemuThread thread;
 
@@ -317,10 +315,6 @@ nbd_co_establish_connection(NBDClientConnection *conn, NBDExportInfo *info,
                                connect_thread_func, conn, QEMU_THREAD_DETACHED);
         }
 
-        if (!blocking) {
-            return NULL;
-        }
-
         conn->wait_co = qemu_coroutine_self();
     }
 